---
source: src/gnuv2_demangle/tests/snapshots.rs
expression: "demangle_lines(contents, &config)"
---
[
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortGetEnemWork(void)",
    ),
    Ok(
        "ChrSortGetFlyWork(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DbFurnPreGetObjNum(int)",
    ),
    Ok(
        "DbFurnPreGetObjName(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "FurnCtlGetFreeSpace(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlGetNext(void)",
    ),
    Ok(
        "FurnCtlDeleteFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlCheckFileType(int *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to FurnCtlCheckKakuType(char *, char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnLoadGetKeyPtr(char const *)",
    ),
    Ok(
        "FurnLoadGetKeyLabel(char const *)",
    ),
    Ok(
        "FurnLoadRegistDoor(void *)",
    ),
    Ok(
        "FurnLoadRegistObj(void *)",
    ),
    Ok(
        "FurnLoadRegistPut(void *)",
    ),
    Ok(
        "FurnLoadCallFunc(int, int, void (*)(void *))",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IngameSceneRoomLoadCheck(int)",
    ),
    Ok(
        "IngameSceneLoadRoom(INGAME_SCENE_CTRL *)",
    ),
    Ok(
        "IngameSceneDrawRoomInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "MapAnimGetCtlPtr(unsigned int *, float (*)[4][4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapAnimGetFreeCtlEx(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapAnimGetFreeCtl(void)",
    ),
    Ok(
        "MapAnimGetCtlArea(int)",
    ),
    Ok(
        "MapAnimGetUseHeader(int)",
    ),
    Ok(
        "MapAnimOne(int, float (*)[4], int)",
    ),
    Ok(
        "MapManimGetFreeMatrix(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapManimDeleteMatrix(MAPMANIM_MATRIX *)",
    ),
    Ok(
        "MapManimGetMatrixNumSgd(char *)",
    ),
    Ok(
        "MapManimGetHeadPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapManimGetFreeSpace(int)",
    ),
    Ok(
        "MapManimAddMatrix(MAPMANIM_HEAD *)",
    ),
    Ok(
        "MapManimSetAnimSub(int, int, char *, char *, int *, float *, float *, int, int)",
    ),
    Ok(
        "MapManimSetMatrixSgdOneSub(SGDFILEHEADER *, MAPMANIM_HEAD *)",
    ),
    Ok(
        "MapManimSetMatrixSgdOne(MAPMANIM_HEAD *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapAnimCheckPlay(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorCheckID(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorSetHitFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorAnimGetID4TypeLabel(int)",
    ),
    Ok(
        "MapDoorAnimSetPos(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorAnim(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapDoorGetDatListPtr(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapDrawDeleteHit(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapDrawCalcRoomCoord(void *, float const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapFogGetRegStat(int, MB_OUT_RECT *)",
    ),
    Ok(
        "MapFogGetRegDat(int, float const *, int)",
    ),
    Ok(
        "MapFogUpdate(int, float const *)",
    ),
    Ok(
        "MapFogGetNewDat(int, int, float const *)",
    ),
    Ok(
        "MapFogAnimNowDat(int, int, float const *)",
    ),
    Ok(
        "MapFogSetNowDat(int, int, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitGetFreeArea(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapHitDoorZ",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLBuffGetSpace(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapLigtPreRenderOne(int, char *)",
    ),
    Ok(
        "MapLightPreRenderType(int, int, int)",
    ),
    Ok(
        "MapLightGetPower(G3DLIGHT *, float *)",
    ),
    Ok(
        "MapLightSetSortDat(int, int, int, float *, MAP_LIGHT_SORT *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "MapLightMakeDualSub(MAP_LIGHT_DAT *, GRA3DLIGHTDATA *, GRA3DLIGHTDATA *, int, int, float *)",
    ),
    Ok(
        "MapLightClearPointDirection(GRA3DLIGHTDATA *)",
    ),
    Ok(
        "MapLightCheckDirectLight(GRA3DLIGHTDATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapMeiAnimLight(GRA3DLIGHTDATA *, GRA3DLIGHTDATA *, int)",
    ),
    Ok(
        "MapMeiAnimFrame(MAPMEI_HEAD *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapLightPower",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadCheckFreeAreaLabelID(int)",
    ),
    Ok(
        "MapLoadCheckSwitch(int, int)",
    ),
    Ok(
        "MapLoadRegistReq(int, char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapLoadCallFurn(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapLoadGetLabel(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjSetEffect(int, int, int, float *, float *)",
    ),
    Ok(
        "MapObjDeleteEffect(int, int, int)",
    ),
    Ok(
        "MapObjUpdateEffectDraw(int, MAPOBJ_DAT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjUpdateAnim(int, void *, MDAT_OBJ *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjGetFreeListSpacePtr(MAPOBJ_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjRegistEffect(int, char *, int *, int, float *, float *)",
    ),
    Ok(
        "MapObjRegistModel(int, char *, int *, int, float *, float *)",
    ),
    Ok(
        "MapObjGetFreeDatPtr(int, void *, int)",
    ),
    Ok(
        "MapObjAddDrawList(int, void *, char const *, float *, float *, int)",
    ),
    Ok(
        "MapObjRegistBornAnim(MB_OUT_SECTION *, char *, void *, int *)",
    ),
    Ok(
        "MapObjCallbackTreeAnim(void)",
    ),
    Ok(
        "MapObjCheckNuno(int, char *, void *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjRegistTreeAnim(int, char *, char *, char *, void *, float *, float *)",
    ),
    Ok(
        "MapObjRegistPutFurn(int, int, int, MB_OUT_SECTION *)",
    ),
    Ok(
        "MapObjCallFuncRecDat(int, int, int, int, int (*)(int, int, int, MB_OUT_SECTION *))",
    ),
    Ok(
        "MapObjDeleteAlphaChangeEffect(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapObjRegSetSceneLoad(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutGetFreeArea(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutAddList(MAPPUT_OBJ *)",
    ),
    Ok(
        "MpaPutDeleteOne(MAPPUT_OBJ *)",
    ),
    Ok(
        "MapPutDrawOK(MAPPUT_OBJ *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutSort(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapPutSetFlg(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSaveGetDatPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSkyGetDatNowArea(void)",
    ),
    Ok(
        "MapSkySprite(Q_WORDDATA *, int, int, int, int, int, int, int, int, int, int, int, int)",
    ),
    Ok(
        "MapSkySetBg(int, int, float *, int)",
    ),
    Ok(
        "MapSkyGetPerspectiveMatrix(float (*)[4], GRA3DCAMERA const *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSkyBlockPoly(Q_WORDDATA *, float (*)[4], float (*)[4], int *, int *, int, int, int, int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSkyDrawTen(MAP_SKY_ST *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapSkyGetTex0(unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazGetFreeArea(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazGetSpeed(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpMoviRegistObj(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpFusumaEnd(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MapSpKayaDrawCallback(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "RegDatGetBuffFreeSpace(void)",
    ),
    Ok(
        "RegDatGetBuffListPtr(int)",
    ),
    Ok(
        "RegDatGetVecPtrSub(MB_OUT_HEAD *, int, int *)",
    ),
    Ok(
        "RegDatGetVecPtrBin(MB_OUT_HEAD *, int)",
    ),
    Ok(
        "RegDatGetVecNumBin(MB_OUT_HEAD *, int)",
    ),
    Ok(
        "RegDatRegistPtrList(RD_REG_HEAD *)",
    ),
    Ok(
        "RegDatAddOffset(MB_OUT_HEAD *, float, float, float)",
    ),
    Ok(
        "RegDatCheckHitRect(MB_OUT_RECT *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to RegDatSetTopAddr(int, void *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "SingleLinkListCellAlloc(SINGLE_LINK_LIST const *)",
    ),
    Ok(
        "SingleLinkListCellFree(_SLL_CELL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motClothWind(CLOTH_CTRL *)",
    ),
    Ok(
        "motClothSetWindTime(WIND_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to rope_spring",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumCtrlInit(int)",
    ),
    Ok(
        "AlbumInfoInit(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetAlbumDataMem(void **, int)",
    ),
    Ok(
        "AlbumTexLoadWait(void)",
    ),
    Ok(
        "AlbumDispCtrlInit(void)",
    ),
    Ok(
        "AlbumModeMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to album_info",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumBaseFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumA_FrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumA_ThumbnailFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumB_FrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumB_ThumbnailFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumAPhotoNumDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumBPhotoNumDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSlotSelectDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditTopInit(void)",
    ),
    Ok(
        "AlbumEditCopyPosSelInit(void)",
    ),
    Ok(
        "AlbumEditCopyConfInit(void)",
    ),
    Ok(
        "AlbumEditConfInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditModeTop(void)",
    ),
    Ok(
        "AlbumEditModeMenu(void)",
    ),
    Ok(
        "AlbumEditSortPad(void)",
    ),
    Ok(
        "AlbumEditCopyPosSelMain(void)",
    ),
    Ok(
        "AlbumEditCopyConfPad(void)",
    ),
    Ok(
        "AlbumEditDelConfPad(void)",
    ),
    Ok(
        "AlbumEditLoadConfPad(void)",
    ),
    Ok(
        "AlbumEditModeSave(void)",
    ),
    Ok(
        "AlbumEditModeLoad(void)",
    ),
    Ok(
        "AlbumEditExitConfPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditTopDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditTopMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditSortDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditCopyPosSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditCopyConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditDelConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditLoadConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditSaveDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditLoadDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditExitConfDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditCopyCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumEditDispInit(void)",
    ),
    Ok(
        "AlbumEditModeMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditChangeMode(void)",
    ),
    Ok(
        "AlbumEditTopPad(void)",
    ),
    Ok(
        "AlbumEditMoveViewReq(void)",
    ),
    Ok(
        "CheckAlbumMenuCondition(int)",
    ),
    Ok(
        "AlbumEditMoveMenuReq(void)",
    ),
    Ok(
        "CheckAlbumMenuCopyCondition(void)",
    ),
    Ok(
        "AlbumEditMoveCopyPosSelReq(char)",
    ),
    Ok(
        "AlbumEditOutReq(void)",
    ),
    Ok(
        "AlbumEditMenuPad(void)",
    ),
    Ok(
        "AlbumEditMenuPadDecision(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumEditCopyPosSelPad(void)",
    ),
    Ok(
        "AlbumPhotoCopy(PICTURE_WRK *, int, PICTURE_WRK const *, int)",
    ),
    Ok(
        "AlbumPhotoDelete(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "CheckAlbumMenuDelCondition(void)",
    ),
    Ok(
        "CheckAlbumMenuSortCondition(void)",
    ),
    Ok(
        "CheckAlbumMenuSaveCondition(void)",
    ),
    Ok(
        "CheckAlbumMenuLoadCondition(void)",
    ),
    Ok(
        "AlbumEditBaseDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditAlbumThumbnailDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditPhotoDisp(int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditThumbnailProtectionFrameDisp(int, int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumEditPhotoInfoDisp(int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditMenuDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumEditSortMenuDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumLoadTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadDispInit(void)",
    ),
    Ok(
        "AlbumLoadModeMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadSlotSelPad(void)",
    ),
    Ok(
        "AlbumLoadMcLoad(void)",
    ),
    Ok(
        "AlbumLoadOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadMcCardCheckInit(void)",
    ),
    Ok(
        "AlbumLoadMcCardCheckWait(void)",
    ),
    Ok(
        "AlbumLoadMcGetDirInfoInit(void)",
    ),
    Ok(
        "AlbumLoadMcGetDirInfoWait(void)",
    ),
    Ok(
        "AlbumLoadMcLoadAlbumSelInit(void)",
    ),
    Ok(
        "AlbumLoadMcLoadAlbumSelWait(void)",
    ),
    Ok(
        "AlbumLoadMcCheckAgainInit(void)",
    ),
    Ok(
        "AlbumLoadMcCheckAgainWait(void)",
    ),
    Ok(
        "AlbumLoadMcLoadConfInit(void)",
    ),
    Ok(
        "AlbumLoadMcLoadConfWait(void)",
    ),
    Ok(
        "AlbumLoadMcLoadInit(void)",
    ),
    Ok(
        "AlbumLoadMcLoadWait(void)",
    ),
    Ok(
        "AlbumLoadMcErrorConfInit(void)",
    ),
    Ok(
        "AlbumLoadMcErrorConfWait(void)",
    ),
    Ok(
        "AlbumLoadMcEndConf(void)",
    ),
    Ok(
        "AlbumLoadMcLoadAlbumSelPad(void)",
    ),
    Ok(
        "AlbumLoadMcEveryFrameCheck(void)",
    ),
    Ok(
        "AlbumLoadMcLoadConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadMcErrorConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadSlotSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumLoadMcLoadDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumLoadAlbumSelDisp(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to AlbumLoadCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSaveTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveDispInit(void)",
    ),
    Ok(
        "AlbumSaveModeMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveSlotSelPad(void)",
    ),
    Ok(
        "AlbumSaveMcSave(void)",
    ),
    Ok(
        "AlbumSaveOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveMcCardCheckInit(void)",
    ),
    Ok(
        "AlbumSaveMcCardCheckWait(void)",
    ),
    Ok(
        "AlbumSaveMcGetDirInfoInit(void)",
    ),
    Ok(
        "AlbumSaveMcGetDirInfoWait(void)",
    ),
    Ok(
        "AlbumSaveMcSaveAlbumSelInit(void)",
    ),
    Ok(
        "AlbumSaveMcSaveAlbumSelWait(void)",
    ),
    Ok(
        "AlbumSaveMcCheckAgainInit(void)",
    ),
    Ok(
        "AlbumSaveMcCheckAgainWait(void)",
    ),
    Ok(
        "AlbumSaveMcSaveConfInit(void)",
    ),
    Ok(
        "AlbumSaveMcSaveConfWait(void)",
    ),
    Ok(
        "AlbumSaveMcSaveInit(void)",
    ),
    Ok(
        "AlbumSaveMcSaveWait(void)",
    ),
    Ok(
        "AlbumSaveMcErrorConfInit(void)",
    ),
    Ok(
        "AlbumSaveMcErrorConfWait(void)",
    ),
    Ok(
        "AlbumSaveMcEndConf(void)",
    ),
    Ok(
        "AlbumSaveMcRemakeConfInit(void)",
    ),
    Ok(
        "AlbumSaveMcRemakeConfWait(void)",
    ),
    Ok(
        "AlbumSaveMcRemakeDirDelInit(void)",
    ),
    Ok(
        "AlbumSaveMcRemakeDirDelWait(void)",
    ),
    Ok(
        "AlbumSaveMcNewMakeConfInit(void)",
    ),
    Ok(
        "AlbumSaveMcNewMakeConfWait(void)",
    ),
    Ok(
        "AlbumSaveMcNewMakeInit(void)",
    ),
    Ok(
        "AlbumSaveMcNewMakeWait(void)",
    ),
    Ok(
        "AlbumSaveMcFormatConfInit(void)",
    ),
    Ok(
        "AlbumSaveMcFormatConfWait(void)",
    ),
    Ok(
        "AlbumSaveMcFormatInit(void)",
    ),
    Ok(
        "AlbumSaveMcFormatWait(void)",
    ),
    Ok(
        "AlbumSaveMcFormatEndInit(void)",
    ),
    Ok(
        "AlbumSaveMcFormatEndWait(void)",
    ),
    Ok(
        "AlbumSaveMcSaveAlbumSelPad(void)",
    ),
    Ok(
        "AlbumSaveAlbumSelMcEveryFrameCheck(void)",
    ),
    Ok(
        "AlbumSaveMcSaveConfPad(void)",
    ),
    Ok(
        "AlbumSaveMcEveryFrameCheck(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveMcErrorConfPad(void)",
    ),
    Ok(
        "AlbumSaveMcRemakeConfPad(void)",
    ),
    Ok(
        "AlbumSaveMcNewMakeConfPad(void)",
    ),
    Ok(
        "AlbumSaveMcFormatConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveSlotSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumSaveMcSaveDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumSaveAlbumSelDisp(unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetAlbumViewDispPhotoNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumViewTexLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AlbumViewDispInit(void)",
    ),
    Ok(
        "AlbumViewTopPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumViewMoveEditReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumViewFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewBaseDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewPhotoDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewPhotoInfoDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewLeftThumbnailDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewRightThumbnailDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewNoDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewAlbumTypeDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewCsrDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumViewPhotoFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "AlbumViewPhotoProtectionFrameDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to AlbumViewCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "motAniIsSeNoDustEffect(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AutoLoadInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AutoLoadMain(void)",
    ),
    Ok(
        "AutoLoadMcCheckInit(void)",
    ),
    Ok(
        "AutoLoadMcCheckWait(void)",
    ),
    Ok(
        "AutoLoadMcLoadInit(void)",
    ),
    Ok(
        "AutoLoadMcLoadWait(void)",
    ),
    Ok(
        "AutoLoadMcLoadConf(void)",
    ),
    Ok(
        "AutoLoadMcErrorConf(void)",
    ),
    Ok(
        "AutoLoadMcDefStartConf(void)",
    ),
    Ok(
        "AutoLoadMcEmptyError(void)",
    ),
    Ok(
        "AutoLoadMcEmptyWarning(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AutoLoadDispMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ChapterSelPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_GetCharBBDataRef(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to clear_flg_ctrl",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuInit(void)",
    ),
    Ok(
        "ClearMenuCtrlInit(void)",
    ),
    Ok(
        "ClearMenuDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuBackGroundLoadReq(void)",
    ),
    Ok(
        "ClearMenuTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ClearMenuMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuMemFree(void)",
    ),
    Ok(
        "ClearMenuDisp(void)",
    ),
    Ok(
        "ClearMenuFadeBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuTopCtrlInit(void)",
    ),
    Ok(
        "ClearMenuTopDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuTopTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ClearMenuTopPad(void)",
    ),
    Ok(
        "ClearMenuTopConfPad(void)",
    ),
    Ok(
        "ClearMenuEndReq(void)",
    ),
    Ok(
        "ClearMenuTopExeDecision(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "ClearMenuTopSelMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "ClearMenuTopCsrDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "InitCompress(char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReadPixelStrip(unsigned int *, unsigned char (*)[384], unsigned char)",
    ),
    Ok(
        "ForwardDCT(unsigned char **, int (*)[8])",
    ),
    Ok(
        "WriteDCTData(BIT_FILE *, int (*)[8])",
    ),
    Ok(
        "OutputCode(BIT_FILE *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReadDCTData(BIT_FILE *, int (*)[8])",
    ),
    Ok(
        "InverseDCT(int (*)[8], unsigned char **)",
    ),
    Ok(
        "WritePixelStrip(unsigned int *, unsigned char (*)[384], unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InputCode(BIT_FILE *)",
    ),
    Ok(
        "InputBits(BIT_FILE *, int)",
    ),
    Ok(
        "OutputBits(BIT_FILE *, unsigned int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to PlyrCrystalInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneTest(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to dbg_menu_main",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "_OnDetectedPacketDoesNotTerminated(G3DGSSYNCPATHTIMEOUTREASON)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to DoorCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "DrawCmnNumberTex_One(int, SPRT_DAT *, int, int, unsigned char, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "SET_ALPHA_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_TEST_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_TEX1_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_CLAMP_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_ZBUF_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_SCISSOR_REGISTER(unsigned long *, int, long)",
    ),
    Ok(
        "SET_TEXA_REGISTER(unsigned long *, long)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "DrawCmnLineTate(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "DrawCmnLineYoko(float, float, float, unsigned char, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_EEExceptionHandler(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, __uint128_t *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_DmacHandler(int, void *, void *)",
    ),
    Ok(
        "_InitDmacHandler(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectScreenFinder(void)",
    ),
    Ok(
        "EffectScreenEnemyDead(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckSetEffectsOK(void)",
    ),
    Ok(
        "GetEffectContBuf(int)",
    ),
    Ok(
        "SearchEmptyEffectBuf(void)",
    ),
    Ok(
        "SetEffects_Z_DEP(EFFECT_CONT *, int, int)",
    ),
    Ok(
        "SetEffects_DITHER(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_BLUR(EFFECT_CONT *, int, int, void *)",
    ),
    Ok(
        "SetEffects_DEFORM(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_FOCUS(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_OVERLAP(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_FADEFRAME(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_RENZFLARE(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_BLACKFILTER(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_NEGA(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_NCONTRAST(EFFECT_CONT *, int, int, void *)",
    ),
    Ok(
        "SetEffects_ENEDMG(EFFECT_CONT *, int, int, void *)",
    ),
    Ok(
        "SetEffects_FIRE(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_HALO(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_PDEFORM(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_ENEIN(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_DUST(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_WATERDROP(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_ENEFIRE(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_TORCH(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_TORCH2(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_SPARK(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_TORCH_FREA(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_HAZE(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_CAMERA_FLASH(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_MANY_CANDLE(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "SetEffects_DOOR_SEAL(EFFECT_CONT *, int, void *)",
    ),
    Ok(
        "EffectContClear(EFFECT_CONT *)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectZSort(int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectZSort2(void)",
    ),
    Ok(
        "EffectInPhoto(EFFECT_CONT *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ScreenEffectParam00",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "EffectButterflyMakeMatrix(ANI_CTRL *, float *, float *)",
    ),
    Ok(
        "EffectDrawButterflyOne(ANI_CTRL *, GRA3DLIGHTDATA const *, int)",
    ),
    Ok(
        "EffectDrawButterflyFrea(float const *, float, float, unsigned int)",
    ),
    Ok(
        "EffectGetButterflyPosition(float *, _BUTTERFLY_DISP *)",
    ),
    Ok(
        "EffectButterflyUpdate(_BUTTERFLY_DISP *)",
    ),
    Ok(
        "EffectButterflyParticleReqAdjustParam(SINGLE_LINK_LIST *, float const *, float const *)",
    ),
    Ok(
        "ButterflyDelete(SINGLE_LINK_LIST *, _SLL_CELL *)",
    ),
    Ok(
        "EffectButterflyUpdateTypeDefault(_BUTTERFLY_DISP *)",
    ),
    Ok(
        "EffectButterflyUpdateTypeMoveToTarget(_BUTTERFLY_DISP *)",
    ),
    Ok(
        "EffectButterflyGetLockOnInterval(int, float const *, float const *)",
    ),
    Ok(
        "EffectButterflyGetVelocity(float *, float const *, float const *, float const *, int, float, int)",
    ),
    Ok(
        "EffectButterflyTargetParameterPtrGet(int)",
    ),
    Ok(
        "EffectButterflyGetDispPtr(int)",
    ),
    Ok(
        "ButterflyParticleOneDraw(_BUTTERFLY_PARTICLE const *, float, float)",
    ),
    Ok(
        "ButterflyParticleUpdate(_BUTTERFLY_PARTICLE *)",
    ),
    Ok(
        "EffectButterflyParticleReq(SINGLE_LINK_LIST *, float const *, float const *, float const *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ButterflyTargetType00",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "EneDmgLargeHitCtrlInit(void)",
    ),
    Ok(
        "EneDmgParticleWorkInit(void)",
    ),
    Ok(
        "EffectEndParticleWorkInit(void)",
    ),
    Ok(
        "EneDmgScreenWorkInit(void)",
    ),
    Ok(
        "EneHitEffectCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EfGetMpos(int, int)",
    ),
    Ok(
        "EfGetDmgOld(int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneDmgEffect1_Sub2(int)",
    ),
    Ok(
        "SetEneDmgEffect2_Sub2(NEW_PERTICLE *, float *, float *, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "DrawNewPerticleSub(int, float (*)[4], unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneDmgParticleEffectCut(SINGLE_LINK_LIST *, _SLL_CELL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneDmgParticle(SINGLE_LINK_LIST *, _SLL_CELL *)",
    ),
    Ok(
        "EneDmgLargeHitCtrlMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneDmgParticleColorGet(int *, int, int)",
    ),
    Ok(
        "EneDmgParticleSpreadTimeGet(int)",
    ),
    Ok(
        "EneDmgParticleOneInit(ENEDMG_PARTICLE_ONE *, float *, float, int)",
    ),
    Ok(
        "EneDmgParticleOneUpdate(ENEDMG_PARTICLE_ONE *)",
    ),
    Ok(
        "EneDmgParticleSuctionInit(_ENEDMG_P_WRK *, float const *, float const *)",
    ),
    Ok(
        "EneDmgParticleSuction(_ENEDMG_P_WRK *)",
    ),
    Ok(
        "EneDmgParticleSizeWGet(int)",
    ),
    Ok(
        "EneDmgParticleSizeHGet(int)",
    ),
    Ok(
        "EneDmgParticleAnmCountGet(int)",
    ),
    Ok(
        "EneDmgParticleAlphaGet(int)",
    ),
    Ok(
        "EneDmgParticleSuctionTailInit(ENEDMG_P_TAIL_WRK *, ENEDMG_PARTICLE_ONE *)",
    ),
    Ok(
        "EneDmgParticleSuctionOne(ENEDMG_PARTICLE_ONE *, float *, float *, float, float)",
    ),
    Ok(
        "EneDmgParticleSuctionTail(ENEDMG_P_TAIL_WRK *, ENEDMG_PARTICLE_ONE *)",
    ),
    Ok(
        "EneDmgLargeHitEffectDisp(ENE_DMG_LARGE_HIT *, float, float)",
    ),
    Ok(
        "EneDmgLargeHitEffectSmallInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectSP_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectSP_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectSlow_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectSlow_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZero_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZero_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZeroSC_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZeroSC_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZeroSP_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectZeroSP_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKoku_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKoku_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKokuSC_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKokuSC_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKokuSP_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectKokuSP_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsu_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsu_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsuSC_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsuSC_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsuSP_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectMetsuSP_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRen_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRen_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRenSC_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRenSC_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRenSP_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectRenSP_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectParalyze_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectParalyze_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectView_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectView_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectTsui_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectTsui_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectFuu_AInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitEffectFuu_BInit(ENE_DMG_LARGE_HIT *)",
    ),
    Ok(
        "EneDmgLargeHitInit(ENE_DMG_LARGE_HIT *, ENE_DMG_LARGE_HIT_PARAMETER const *)",
    ),
    Ok(
        "EneDmgLargeHitMakeVertex(float (*)[4], float *, float, float, unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to SmallHit",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectLightComeInInit(void)",
    ),
    Ok(
        "EffectWaterFlowInit(void)",
    ),
    Ok(
        "EffectModelAlphaChangeInit(void)",
    ),
    Ok(
        "EffectTourouFreaInit(void)",
    ),
    Ok(
        "EffectTourouBaseInit(void)",
    ),
    Ok(
        "SubPartsDeform2(EFFECT_CONT *, unsigned char, int, int, float, float, float, int, float, float, float)",
    ),
    Ok(
        "SubPartsDeform1(EFFECT_CONT *, unsigned char, int, int, float, float, float, int, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MakePartsDeformPacket(int, int, float (*)[4], float (*)[4], float (*)[4], unsigned char const *, float, unsigned long, int, int, int, int)",
    ),
    Ok(
        "GetFreePartsDeformCtrlNo(void)",
    ),
    Ok(
        "GetPartsDeformCtrlWrk(int)",
    ),
    Ok(
        "PartsDeformClipCheck(float (*)[4])",
    ),
    Ok(
        "GetDistancePosToCamera(float *)",
    ),
    Ok(
        "PartsDeformAddIso(float, float)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PartsDeformCalcWaveY(float (*)[4], int, int, float, float)",
    ),
    Ok(
        "PartsDeformCalcWaveZ(float (*)[4], int, int, float, float, float, float, float, float)",
    ),
    Ok(
        "PartsDeformCalcWaveIsoZ(float (*)[4], int, int, float, float, float, float, float, float)",
    ),
    Ok(
        "PartsDeformCalcWaveRot(float (*)[4], int, int, float, float, float, float, float, EFFINFO2 const *)",
    ),
    Ok(
        "PartsDeformCalcWaveRotZ(float (*)[4], int, int, float, float, float, float, float, EFFINFO2 const *)",
    ),
    Ok(
        "PartsDeformCalcWaveBound(float (*)[4], int, int, float, float, float, float, float, float)",
    ),
    Ok(
        "PartsDeformCalcWaveRenz1(float (*)[4], int, int, float, float, float, float, float)",
    ),
    Ok(
        "PartsDeformCalcWaveRenz2(float (*)[4], int, int, float, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PartsDeformEffInf02Init(EFFINFO2 *, int, int, int, float, float, float, float, float, PDEFORM_PARA const *)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PartsDeform2CalcWaveY(float (*)[4], int, int, float, float, float, EFFINFO2 *)",
    ),
    Ok(
        "PartsDeform2CalcWaveZ(float (*)[4], int, int, float, float, float, EFFINFO2 *)",
    ),
    Ok(
        "PartsDeform2CalcWaveY2(float (*)[4], int, int, float, float, float, PDEFORM_PARA const *, EFFINFO2 *)",
    ),
    Ok(
        "PartsDeform2CalcWaveType2(float (*)[4], int, int, float, float, float, PDEFORM_PARA const *, EFFINFO2 *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetStarRay(float *, int, float, int, float)",
    ),
    Ok(
        "EffectLightComeInGetAlphaMax(int)",
    ),
    Ok(
        "EffectLightComeInSetVertexColor(void *, int)",
    ),
    Ok(
        "EffectLightComeInAddSTScrollCtrl(float, float)",
    ),
    Ok(
        "EffectLightComeInMatrix2Rot(float (*)[4], float *, float *)",
    ),
    Ok(
        "EffectLightComeInCalcAlphaRateCamDir(void *)",
    ),
    Ok(
        "EffectLightComeInCalcAlphaRateCamDist(void *)",
    ),
    Ok(
        "EffectLightComeInGetScrollU(int)",
    ),
    Ok(
        "EffectLightComeInGetScrollV(int)",
    ),
    Ok(
        "EffectLightComeInSetVertexColorF607(void *)",
    ),
    Ok(
        "EffectLightComeInSetVertexColorF609(void *)",
    ),
    Ok(
        "EffectLightComeInSetVertexColorNormal(void *)",
    ),
    Ok(
        "EffectWaterFlowGetAlpha(int)",
    ),
    Ok(
        "EffectWaterFlowGetAddS(int, int, int)",
    ),
    Ok(
        "EffectWaterFlowGetAddT(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectWaterFlowExecOne(WATER_FLOW_DATA *)",
    ),
    Ok(
        "EffectWaterFlowGetChangeFrame(int, int)",
    ),
    Ok(
        "EffectWaterFlowChangeCtrl(WATER_FLOW_DATA *)",
    ),
    Ok(
        "EffectCameraFlashGetPosition(float *, float *)",
    ),
    Ok(
        "EffectCameraFlashDraw(float *, int)",
    ),
    Ok(
        "EffectCameraFlashDrawTex(float *, int)",
    ),
    Ok(
        "CameraFlashMakeVertex(float (*)[4], float *, float, int)",
    ),
    Ok(
        "EffectCameraFlashDrawSub(float *, float, float, unsigned char *, unsigned char *, unsigned long)",
    ),
    Ok(
        "EffectTourouFreaGetScaleX(int, int)",
    ),
    Ok(
        "EffectTourouFreaGetScaleY(int, int)",
    ),
    Ok(
        "EffectTourouFreaGetAlpha(int, int)",
    ),
    Ok(
        "EffectTourouBaseGetColor(int *, int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to efi",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemEffectCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectThunderLightInit(void)",
    ),
    Ok(
        "EffectManyCandleLoadInit(MANY_CANDLE_LOAD_CTRL *)",
    ),
    Ok(
        "DoorSealDisappearInit(void)",
    ),
    Ok(
        "EffectManyCandleLoadMain(MANY_CANDLE_LOAD_CTRL *)",
    ),
    Ok(
        "DoorSealDisappearMain(DOOR_SEAL_DISAPPEAR_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubCandleFlame(EFFECT_CONT *)",
    ),
    Ok(
        "CandleFlameScaleWGet(int, int)",
    ),
    Ok(
        "CandleFlameScaleHGet(int, int)",
    ),
    Ok(
        "CandleFlameMakePacket(int (*)[4], unsigned long, unsigned int, int, int, int, int)",
    ),
    Ok(
        "EffectManyCandleLoadAllEffectReq(MANY_CANDLE_LOAD_CTRL *)",
    ),
    Ok(
        "EffectManyCandleLoadEnd(MANY_CANDLE_LOAD_CTRL *)",
    ),
    Ok(
        "EffectManyCandleReq(float (*)[4], float (*)[4], int, int)",
    ),
    Ok(
        "ManyCandleCtrlInit(MANY_CANDLE_CTRL *, float (*)[4], float (*)[4], int, int)",
    ),
    Ok(
        "ManyCandleCtrl(MANY_CANDLE_CTRL *)",
    ),
    Ok(
        "ManyCandleParticleUpdate(MANY_CANDLE_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "draw_distortion_particles(float (*)[4][4], float (*)[4][4], int, int, PARTICLE *, float, float, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemEffectReqSub(float *, int, int)",
    ),
    Ok(
        "ItemEffectGetChangeVal(int, int, int, int)",
    ),
    Ok(
        "CloudOfDustCtrlInit(CLOUD_OF_DUST_CTRL *, float *)",
    ),
    Ok(
        "AddCloudOfDustRunParticle(CLOUD_OF_DUST_CTRL *)",
    ),
    Ok(
        "CloudOfDustCtrl(CLOUD_OF_DUST_CTRL *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HazeCtrlInit(HAZE_CTRL *, float (*)[4], float (*)[4], int, int, float *)",
    ),
    Ok(
        "HazeCtrl(HAZE_CTRL *, float)",
    ),
    Ok(
        "EffectHazeParticleReqOneFrame(HAZE_CTRL *)",
    ),
    Ok(
        "GetHazeAllVelocity(float *, HAZE_CTRL *)",
    ),
    Ok(
        "HazeAllVelocityCtrl(HAZE_CTRL *)",
    ),
    Ok(
        "UpdateHazeParticles(HAZE_PARTICLE *, float *, int)",
    ),
    Ok(
        "EffectHazeGetParticleBuf(HAZE_CTRL *)",
    ),
    Ok(
        "EffectHazeInitParticle(HAZE_PARTICLE *, float *, float *, int)",
    ),
    Ok(
        "SubDoorSeal(float (*)[4], float *, float)",
    ),
    Ok(
        "DoorSealDisappearCameraBackup(DOOR_SEAL_CAMERA_BACKUP *)",
    ),
    Ok(
        "DoorSealDisappearCameraReturn(DOOR_SEAL_CAMERA_BACKUP *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorSealDisappearCameraSet(void)",
    ),
    Ok(
        "DoorSealDisappearPDeformParamSet(EFFECT_CONT *, float (*)[4], int, float *, float *)",
    ),
    Ok(
        "DoorSealDisappearPDeformBlurParamSet(EFFECT_CONT *, float (*)[4], int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorSealDisappearTexPosGet(float *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to HazeParameter",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectRainReqNum(int, float *)",
    ),
    Ok(
        "EffectRainParticleInit(EFFECT_RAIN_PARTICLE *, float *, float)",
    ),
    Ok(
        "EffectRainParticleDraw(EFFECT_RAIN_PARTICLE const *, int const *, int const *)",
    ),
    Ok(
        "EffectRainParticleUpdate(EFFECT_RAIN_PARTICLE *, float *)",
    ),
    Ok(
        "EffectRainParticleHitCheck(EFFECT_RAIN_PARTICLE const *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSprayReqNumRect(EFFECT_SPRAY_CTRL *, float *, int, SPRAY_APPEAR_DATA const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSprayParticleClear(EFFECT_SPRAY_PARTICLE *)",
    ),
    Ok(
        "EffectSprayParticleReqOneFrame(EFFECT_SPRAY_CTRL *, float *)",
    ),
    Ok(
        "EffectSprayCut(EFFECT_SPRAY_CTRL *)",
    ),
    Ok(
        "EffectSprayParticleBufferGet(EFFECT_SPRAY_CTRL *)",
    ),
    Ok(
        "EffectSprayParticleInit(EFFECT_SPRAY_PARTICLE *, float const (*)[4], float *, float *, int, float, float)",
    ),
    Ok(
        "EffectSprayParticleUpdate(EFFECT_SPRAY_PARTICLE *)",
    ),
    Ok(
        "EffectSprayDraw(EFFECT_SPRAY_CTRL *)",
    ),
    Ok(
        "EffectSprayParticleDraw(float const *, float, float, int, int, int, int, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectDropParticleUpdate(_EFFECT_DROP_PARTICLE *)",
    ),
    Ok(
        "EffectDropParticleReqOneFrame(EFFECT_DROP_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectDropOfWaterReqAppearPos(EFFECT_DROP_CTRL *, float const (*)[4], float *, int, float, float, int, int, int, int)",
    ),
    Ok(
        "EffectDropParticleInit(_EFFECT_DROP_PARTICLE *, float const *, float const *, float, float)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "GetBurnFireWork(void)",
    ),
    Ok(
        "SearchBurnFireFurnID(int)",
    ),
    Ok(
        "RDPFireCalcMovePos(float *, float const *, float, float)",
    ),
    Ok(
        "RDPFireCheckTorchTypeExist(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to burn_fire",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MakeDitherPattern(unsigned int, unsigned int)",
    ),
    Ok(
        "ScreenSaverInit(void)",
    ),
    Ok(
        "ScreenSaverMain(void)",
    ),
    Ok(
        "SubFocus(int)",
    ),
    Ok(
        "SetDeform0(int, float, unsigned char)",
    ),
    Ok(
        "SetDeform2(int, float, unsigned char)",
    ),
    Ok(
        "SetDeform3(int, float, unsigned char)",
    ),
    Ok(
        "SetDeform4(int, float, unsigned char)",
    ),
    Ok(
        "SetDeform5(int, float, unsigned char)",
    ),
    Ok(
        "SetDeform6(int, float, unsigned char)",
    ),
    Ok(
        "_SetScrData(Q_WORDDATA *, SCRDEF *)",
    ),
    Ok(
        "MakeScrDeformPacket(int, int, unsigned long, SCRDEF (*)[33], int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MakeRDither3(unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubDither4(float, float, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ScreenSaverOneTexInit(SCREEN_SAVER_TEX *, int)",
    ),
    Ok(
        "ScreenSaverTexFileNoGet(void)",
    ),
    Ok(
        "ScreenSaverSetDITHER(EFFECT_CONT *, int, float, float, int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to eff_blur",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndFileReadyAllReleaseAndRemove(void)",
    ),
    Ok(
        "EffectSndFileDeleteAllRemove(void)",
    ),
    Ok(
        "EffectSndPlayCtrl(void)",
    ),
    Ok(
        "EffectSndFileReadyCtrl(void)",
    ),
    Ok(
        "EffectSndFileDeleteCtrl(void)",
    ),
    Ok(
        "EffectSndFileReadyRegisteredCheck(int)",
    ),
    Ok(
        "EffectSndFileDeleteRemove(int)",
    ),
    Ok(
        "EffectSndFileReadyRemove(int)",
    ),
    Ok(
        "EffectSndGetBankNo(int)",
    ),
    Ok(
        "EffectSndFileIsReady(int)",
    ),
    Ok(
        "EffectSndFileDeleteRegisteredCheck(int)",
    ),
    Ok(
        "EffectSndFilePlayUseCheck(int)",
    ),
    Ok(
        "EffectSndPlaySub(int, int, int, int, float (*)[4], unsigned int)",
    ),
    Ok(
        "EffectLeavesFallCtrlInit(LEAVES_FALL_CTRL *, float *, int, int, float const *, int, int, int, int, int, int)",
    ),
    Ok(
        "EffectLeavesDropSet(LEAVES_FALL_CTRL *)",
    ),
    Ok(
        "EffectLeavesFallParticleInit(LEAVES_PARTICLE *, float *, int, float *, short, short *)",
    ),
    Ok(
        "EffectLeavesFallExecSub(LEAVES_FALL_CTRL *)",
    ),
    Ok(
        "EffectLeavesUpdateTrans(float *, float *, float *, float *)",
    ),
    Ok(
        "EffectLeavesUpdateRot(float *, float *, float *)",
    ),
    Ok(
        "EffectLeavesLight(float *, short *, short *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "EffOthTorch2BurstIntervalTimeGet(int)",
    ),
    Ok(
        "EffOthTorch2WindIntervalTimeGet(void)",
    ),
    Ok(
        "Torch2BasePosMoveInfluence(PARTICLE *, float *, float, int, int)",
    ),
    Ok(
        "EffOthTorch2BurstReqCtrl(TORCH_CTRL *, float, float)",
    ),
    Ok(
        "Torch2BurstRangeAndStartScaleGet(float *, float *, int, TORCH2_PARAMETER *, TORCH2_BURST_PARAMETER *)",
    ),
    Ok(
        "Torch2WindReqCtrl(TORCH_CTRL *)",
    ),
    Ok(
        "Torch2WindVectorGet(float *, float *, int)",
    ),
    Ok(
        "Torch2AddParticle(TORCH_CTRL *, float *, float *, float, float, float, float, float)",
    ),
    Ok(
        "Torch2UpdateParticles(PARTICLE *, int, float, float, float, float)",
    ),
    Ok(
        "EffectSetTorch2Sub(float (*)[4], int, int)",
    ),
    Ok(
        "TorchSparkPartInit(SPARK_CTRL *, int, float, float, float)",
    ),
    Ok(
        "AddSparkParticle(SPARK_CTRL *, float, TORCH2_SPARK_PARAMETER *)",
    ),
    Ok(
        "ContTorchSpark(SPARK_CTRL *, float *, float, float, TORCH2_SPARK_PARAMETER *)",
    ),
    Ok(
        "UpdateSparkParticles(PARTICLE *, float, float, TORCH2_SPARK_PARAMETER *)",
    ),
    Ok(
        "Torch2WindVectorMake(float *)",
    ),
    Ok(
        "Torch2WindReq(TORCH_CTRL *)",
    ),
    Ok(
        "Torch2BigFreaDraw(float const *, float, float, int, int, int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to TorchType00",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to InitEneMotAlgCtrl(ENE_WRK *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "enemyInitAnmSub(int)",
    ),
    Ok(
        "enemyReleaseDataSub(ENE_WRK *)",
    ),
    Ok(
        "enemyReqDataSub(_ENE_DAT_COMMON *)",
    ),
    Ok(
        "enemyReqDataClearSub(_ENE_DAT_COMMON *)",
    ),
    Ok(
        "enemyReqDataClear(ENE_WRK *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "enemyReqData(ENE_WRK *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "enemyIsReadyData(ENE_WRK *)",
    ),
    Ok(
        "_EnemyAnimationProc(ENE_WRK *)",
    ),
    Ok(
        "EneSpeMimeCtrl(ANI_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EneStreamCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneBlinkPosSet(ENE_WRK *)",
    ),
    Ok(
        "EnemyWrkOne(ENE_WRK *, int)",
    ),
    Ok(
        "EneSealCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneMahiCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneRule(ENE_WRK *)",
    ),
    Ok(
        "EneRelease(int)",
    ),
    Ok(
        "OkuraSanEnemyDebug(void)",
    ),
    Ok(
        "CtrlEarthquake(void)",
    ),
    Ok(
        "NearestAutoEneDoJob(void)",
    ),
    Ok(
        "NearestAutoEneDoJob_In_Circle(void)",
    ),
    Ok(
        "NearestBattleEneDoJob(void)",
    ),
    Ok(
        "EnemyHPSetJob(void)",
    ),
    Ok(
        "NearestBattleEneDoJob_In_Circle(void)",
    ),
    Ok(
        "NearestBattleEneDoJob_WithView(void)",
    ),
    Ok(
        "EneAuraCtrl(ENE_WRK *)",
    ),
    Ok(
        "SetCommonDat(ENE_WRK *, _ENE_DAT_COMMON *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "AutoEnemyStart(ENE_WRK *)",
    ),
    Ok(
        "SetAtkTarget(ENE_WRK *, int)",
    ),
    Ok(
        "JibakuEnemyStart(ENE_WRK *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetEneDatP(int, int)",
    ),
    Ok(
        "GetEneWrkBuffer(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EneComboCtrl(ENE_WRK *)",
    ),
    Ok(
        "EnemyMotionWorkOne(ENE_WRK *)",
    ),
    Ok(
        "_enemySetLight(ENE_WRK *)",
    ),
    Ok(
        "EneLightCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneMoveCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneAniResolutionCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneSlowHitBackCtrl(ENE_WRK *)",
    ),
    Ok(
        "EneCondCtrl(ENE_WRK *)",
    ),
    Ok(
        "EnePRecogChkChk(ENE_WRK *)",
    ),
    Ok(
        "EnePRecogChk(ENE_WRK *, unsigned char *)",
    ),
    Ok(
        "EneActIniChk(ENE_WRK *, unsigned char, unsigned char)",
    ),
    Ok(
        "EneActRule(ENE_WRK *)",
    ),
    Ok(
        "EneHPRecv(ENE_WRK *)",
    ),
    Ok(
        "EneActPreferChk(ENE_WRK *, unsigned char *)",
    ),
    Ok(
        "PlyrOutAreaChk(ENE_WRK *)",
    ),
    Ok(
        "EneDmgChk(ENE_WRK *)",
    ),
    Ok(
        "EneAtkCtrl(ENE_WRK *)",
    ),
    Ok(
        "ChangeAtkTarget(ENE_WRK *)",
    ),
    Ok(
        "EneTrtryChk(ENE_WRK *, unsigned char)",
    ),
    Ok(
        "ClearEneStaDmg(ENE_WRK *)",
    ),
    Ok(
        "EneItukiMepatiCtrl(ANI_CTRL *)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ene_wrk",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "EnemyDeadPDeformCall(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyDeadPDeformReset(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "CompulsionSet_ForcedEndState(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetEmpty_EvChangeCtrl(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EvChangeCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvDisp2DMain(void)",
    ),
    Ok(
        "EvChapterDispMain(void)",
    ),
    Ok(
        "EvItemNameDispMain(void)",
    ),
    Ok(
        "EvDisp2DDataLoadReq(void)",
    ),
    Ok(
        "EvDisp2DDataLoadWait(void)",
    ),
    Ok(
        "EvDisp2DExe(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EvDisp2DDataMakePkt(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EvChapterDataLoadReq(void)",
    ),
    Ok(
        "EvChapterDataLoadWait(void)",
    ),
    Ok(
        "EvChapterDispExe(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EvChapterDataMakePkt(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ev_disp2d_dat",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventExeCtrlInit(EV_EXE_CTRL *, int, unsigned char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetExeCtrlEmpty(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EventExeInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvPlyrPosSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrHeightSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrRotSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrPosMove(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrDisp(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrPad(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrFloorChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrFinderMode(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrMotionCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrFacialCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrDamageRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrMotionChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrModelChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrFlashLightSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrGazePointObjSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrGazePointPosSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPlyrGazePointDefSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisPosSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisHeightSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisRotSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisPosMove(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisDisp(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisJoin(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisLeave(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisFloorChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisRegist(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisDelete(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisMotionCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisFacialCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisDamageRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisGazePointObjSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisGazePointPosSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSisGazePointDefSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGhostAppear(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGhostDisappear(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGhostRegist(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGhostDelete(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFloatageGhost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvLockAreaFloatageGhost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvUnLockAreaFloatageGhost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcPosSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcHeightSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcRotSet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcPosMove(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcDisp(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvNpcFloorChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjHitCheck(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjPhotoAble(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjEffect(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjVisible(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjReqAction(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjActionType(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPhotoLock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPhotoUnlock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvItemGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvItemUse(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvItemLost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFileGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFileLost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFileRead(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCrystalGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCrystalLost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvLevelGemGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvLevelGemLost(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamSpecialShotGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamAddFunctionGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamEquipFunctionGet(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMemoUpdate(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPuzzleStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvCam(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvCamVCI(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvCamVP(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvCamVR(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvCamRot(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvCamProj(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamVPSetObj(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamVRSetObj(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvCamSetWorldSwitch(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMonoDisp(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFadeIn(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFadeOut(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSoundLoad(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSoundRelease(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSoundPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSoundStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSound3DObjPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSound3DPosPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvStreamPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvStreamStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMapStreamPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMapStreamStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMapStreamChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvStream3DObjPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvStream3DPosPlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvStreamAllStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDoorOpen(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDoorClose(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDoorLock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDoorUnlock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvLoadRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvReleaseRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvAreaChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvBackGroundLoad(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvAreaSwitch(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDispMsg(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMsgChoice(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkTblInit(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkDataAdd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkSubtitleAdd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkTypeChange(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkExe(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvTalkCam(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMoviePlay(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDisp2DStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvDisp2DEnd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvChapterDispStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvFog(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvFogColor(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvFogDistNear(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvFogDistFar(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetEvFogDist(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvOverLapStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvOverLapEnd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFilamentTimerCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFilamentCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvFilamentRelease(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetObjAlgorithm(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetPlyrSisDistance(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvSetState(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvSetTimer(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvChapterLoadRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvChangeChapter(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGameDataSave(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGameClear(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetConditionCheck(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetButterfly(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMoveButterfly(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvReleaseButterfly(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEffDitherStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEffDitherEnd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEffThunderReq(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetScreenEffect(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSynchroModeStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSynchroModeEnd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvItemNameDispStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvItemNameDispEnd(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMenuLock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMenuUnlock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPauseLock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPauseUnlock(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetPhotoCurse(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvPadWait(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMovieRoomRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvGameOverRequest(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSubTitleDispReq(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSubTitle3DObjDispReq(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSubTitle3DPosDispReq(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSubTitleStop(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvSetGhostSealDoor(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvReleaseGhostSealDoor(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMissionStart(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMissionClear(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvMissionFailed(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvChapterSelInit(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvIf(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvElse(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvElseIf(EV_EXE_CTRL *)",
    ),
    Ok(
        "EvEvEndIf(EV_EXE_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvIfItemMax(unsigned char *)",
    ),
    Ok(
        "EvIfChoiceSelect(unsigned char *)",
    ),
    Ok(
        "EvIfRandom(unsigned char *)",
    ),
    Ok(
        "EvIfWithSister(unsigned char *)",
    ),
    Ok(
        "EvIfPlyrFlashLightHave(unsigned char *)",
    ),
    Ok(
        "EvIfPuzzleClear(unsigned char *)",
    ),
    Ok(
        "EvIfGameDifficulty(unsigned char *)",
    ),
    Ok(
        "EvIfGameClearNum(unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvChoiceCtrlInit(void)",
    ),
    Ok(
        "EvSoundCtrlInit(void)",
    ),
    Ok(
        "EvStreamCtrlInit(void)",
    ),
    Ok(
        "EvGhostCtrlInit(void)",
    ),
    Ok(
        "EvEffCtrlInit(void)",
    ),
    Ok(
        "EvSaveStreamInit(void)",
    ),
    Ok(
        "EvSaveObjStreamInit(void)",
    ),
    Ok(
        "EvSavePosStreamInit(void)",
    ),
    Ok(
        "EvSaveEffDitherInit(void)",
    ),
    Ok(
        "EvSaveScreenEffectInit(void)",
    ),
    Ok(
        "EventMacroLoad_StreamInit(void)",
    ),
    Ok(
        "EventMacroLoad_ObjStreamInit(void)",
    ),
    Ok(
        "EventMacroLoad_PosStreamInit(void)",
    ),
    Ok(
        "EventMacroLoad_EffDitherInit(void)",
    ),
    Ok(
        "EventMacroLoad_ScreenEffectInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Regist_StreamID(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEvEffDitherID(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "Event_EvEnd(EV_EXE_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EvWaitFinderOff(EV_EXE_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EvBankSoundSub(int, int, _SND_3D_SET *)",
    ),
    Ok(
        "Regist_SoundID(int, int, int)",
    ),
    Ok(
        "Del_SoundID(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "IsRegist_StreamID(int)",
    ),
    Ok(
        "SetEvSaveStream(int, int, int)",
    ),
    Ok(
        "EvStreamStopSub(int, int)",
    ),
    Ok(
        "Del_StreamID(int)",
    ),
    Ok(
        "DelEvSaveStream(int)",
    ),
    Ok(
        "DelEvSaveObjStream(int)",
    ),
    Ok(
        "DelEvSavePosStream(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetEvSaveObjStream(int, int, int, int, int)",
    ),
    Ok(
        "SetEvSavePosStream(int, float *, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetNextEventCom(EV_EXE_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetEvSaveEffDither(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "GetEvEffDitherID(void)",
    ),
    Ok(
        "DelEvEffDitherID(void)",
    ),
    Ok(
        "SetEvSaveScreenEffect(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EventMacroInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ev_wrk",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvPlyrAreaIn(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrAreaOut(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrRoomIn(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrRoomOut(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrRot(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrIntoSight(int, unsigned char *)",
    ),
    Ok(
        "EvSisAreaIn(int, unsigned char *)",
    ),
    Ok(
        "EvSisAreaOut(int, unsigned char *)",
    ),
    Ok(
        "EvSisRot(int, unsigned char *)",
    ),
    Ok(
        "EvSisIntoSight(int, unsigned char *)",
    ),
    Ok(
        "EvGhostExist(int, unsigned char *)",
    ),
    Ok(
        "EvGhostLost(int, unsigned char *)",
    ),
    Ok(
        "EvGhostReleaseType(int, unsigned char *)",
    ),
    Ok(
        "EvNpcAreaIn(int, unsigned char *)",
    ),
    Ok(
        "EvNpcAreaOut(int, unsigned char *)",
    ),
    Ok(
        "EvNpcRot(int, unsigned char *)",
    ),
    Ok(
        "EvNpcDistance(int, unsigned char *)",
    ),
    Ok(
        "EvPushPad(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrItemUse(int, unsigned char *)",
    ),
    Ok(
        "EvPlyrItemHave(int, unsigned char *)",
    ),
    Ok(
        "EvEvState(int, unsigned char *)",
    ),
    Ok(
        "EvEvNotState(int, unsigned char *)",
    ),
    Ok(
        "EvEvRandom(int, unsigned char *)",
    ),
    Ok(
        "EvPhotoObj(int, unsigned char *)",
    ),
    Ok(
        "EvNotPhotoObj(int, unsigned char *)",
    ),
    Ok(
        "EvFinderMode(int, unsigned char *)",
    ),
    Ok(
        "EvObjIntoFinder(int, unsigned char *)",
    ),
    Ok(
        "EvObjIntoPlyrSight(int, unsigned char *)",
    ),
    Ok(
        "EvBattleEnd(int, unsigned char *)",
    ),
    Ok(
        "EvBattleMode(int, unsigned char *)",
    ),
    Ok(
        "EvChapterLoadWait(int, unsigned char *)",
    ),
    Ok(
        "EvEvFailure(int, unsigned char *)",
    ),
    Ok(
        "EvSetEvPriority(int, unsigned char *)",
    ),
    Ok(
        "EvPuzzleSuccess(int, unsigned char *)",
    ),
    Ok(
        "EvNowChapter(int, unsigned char *)",
    ),
    Ok(
        "EvNotNowChapter(int, unsigned char *)",
    ),
    Ok(
        "EvNotHaveItem(int, unsigned char *)",
    ),
    Ok(
        "EvCheckGameDifficulty(int, unsigned char *)",
    ),
    Ok(
        "EvAboveClearNum(int, unsigned char *)",
    ),
    Ok(
        "EvFollowClearNum(int, unsigned char *)",
    ),
    Ok(
        "EvNowSynchroMode(int, unsigned char *)",
    ),
    Ok(
        "EvNotNowSynchroMode(int, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEvCtrlCenter(EV_CTRL_CENTER *, short, short, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvPriCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEventPriority(int, unsigned char)",
    ),
    Ok(
        "EventSetCondition(int, unsigned char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EventAutoStart(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EventOpenJudge(int, unsigned char *)",
    ),
    Ok(
        "EventCloseJudge(int, unsigned char *)",
    ),
    Ok(
        "EventPriorityJudge(int *, int)",
    ),
    Ok(
        "EventConditionJudge(int, unsigned char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EvCtrlCenterInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ev_sisIsRegistered(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ev_sisSetSave(MC_SAVE_DATA *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "TalkExeCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetTalkDataPos(unsigned char)",
    ),
    Ok(
        "TalkExeMainSub(unsigned char)",
    ),
    Ok(
        "TalkPadWait(void)",
    ),
    Ok(
        "TalkDispMain(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EvTalkInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to talk_info",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegistTimerInit(REGIST_TIMER *)",
    ),
    Ok(
        "EvTimerCount(void)",
    ),
    Ok(
        "EvTimerExe(void)",
    ),
    Ok(
        "GetEmptyRegistTimer(void)",
    ),
    Ok(
        "CalTimerFill(unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to EvTimerCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraInitCtrl(EVENT_CAMERA_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraVCIPlayFrame(VCI_CAMERA_HEADER *, unsigned int, int)",
    ),
    Ok(
        "EventCameraGetMoveDist(float *, float *, VCI_CAMERA_HEADER *)",
    ),
    Ok(
        "EventCameraGetRollDist(VCI_CAMERA_HEADER *)",
    ),
    Ok(
        "EventCameraGetProjDist(VCI_CAMERA_HEADER *)",
    ),
    Ok(
        "EventCameraHokan(VCI_CAMERA_HEADER *, unsigned int, float, float, float, float, int)",
    ),
    Ok(
        "EventCameraGetProgress(VCI_CAMERA_HEADER *, unsigned int)",
    ),
    Ok(
        "EventCameraGetTargetDistToPointNo(VCI_CAMERA_HEADER *, float)",
    ),
    Ok(
        "EventCameraGetPosDistToPointNo(VCI_CAMERA_HEADER *, float)",
    ),
    Ok(
        "EventCameraSetBezier(VCI_CAMERA_HEADER *, float, int, int)",
    ),
    Ok(
        "EventCameraSetHermite(VCI_CAMERA_HEADER *, int, float, int, int)",
    ),
    Ok(
        "EventCameraSetFromPointDist(VCI_CAMERA_HEADER *, int, float, int, int)",
    ),
    Ok(
        "EventCameraSetRollFromPointDist(VCI_CAMERA_HEADER *, int, float)",
    ),
    Ok(
        "EventCameraSetProjFromPointDist(VCI_CAMERA_HEADER *, int, float)",
    ),
    Ok(
        "EventCameraGetMoveDistToPoint(float *, float *, VCI_CAMERA_HEADER *, int)",
    ),
    Ok(
        "EventCameraGetRollDistToPoint(VCI_CAMERA_HEADER *, int)",
    ),
    Ok(
        "EventCameraGetProjDistToPoint(VCI_CAMERA_HEADER *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetAddrPK2(unsigned int *, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "EventCameraGetHermiteDirVector(float *, VCI_CAMERA_POINT *, int, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrFileInit(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetFileData(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetPlyrFileData(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to AllPlyrFileInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "PlyrCamCondChk(PLYR_WRK *, MOVE_BOX *)",
    ),
    Ok(
        "SetFinderRot(PLYR_WRK *, MOVE_BOX *)",
    ),
    Ok(
        "FinderModePadChk(char *, char *, float *, float *, unsigned char *)",
    ),
    Ok(
        "PconMahiCameraCtrl(MOVE_BOX *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "CheckEffectFly(FLY_WRK *)",
    ),
    Ok(
        "GetFlyWork(void)",
    ),
    Ok(
        "FlyModelDataInit(FLY_WRK *)",
    ),
    Ok(
        "FlyEffectDataInit(FLY_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FlyPlyrHitChk(FLY_WRK *)",
    ),
    Ok(
        "FlyAtkHit(FLY_WRK *, PLCMN_WRK *)",
    ),
    Ok(
        "FlyMove(FLY_WRK *)",
    ),
    Ok(
        "ClearCheckFlyWork(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to fly_dat",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "FodGetFixEffect(unsigned int *)",
    ),
    Ok(
        "FodGetLightNum(FOD_LIGHT *)",
    ),
    Ok(
        "FodGetLightSerial(FOD_LIGHT *)",
    ),
    Ok(
        "FodGetFirstLight(FOD_LIGHT *, float *)",
    ),
    Ok(
        "FodGetLightType(FOD_LIGHT *, int)",
    ),
    Ok(
        "Fodg3dSetLight(int, G3DLIGHT const *)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to FodLight",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "foot_seGetSeStat4RegID(int)",
    ),
    Ok(
        "foot_seGetSeStat(int, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "FrameRateSelPad(void)",
    ),
    Ok(
        "FrameRateSelTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "FrameRateSelItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "FrameRateSelCursorDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_CalcColor(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_CalcAmbient(void)",
    ),
    Ok(
        "_ApplyLightDirectional(void)",
    ),
    Ok(
        "_ApplyLightPoint(void)",
    ),
    Ok(
        "_ApplyLightSpot(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_Vu0CalcVertexColorPointLightConstant(float *)",
    ),
    Ok(
        "_Vu0CalcVertexColorPointLightLambert(float *)",
    ),
    Ok(
        "_Vu0CalcVertexColorPointLightPhong(float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Assert(char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Warning(char const *)",
    ),
    Ok(
        "_IsVifcodeMpg(tVIF_CODE const *)",
    ),
    Ok(
        "_IsVifcodeUnpack(tVIF_CODE const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_ParseDmaPacket(tVIF_CODE const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_VSyncCallback(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_AppendVUProgTag(unsigned int const *)",
    ),
    Ok(
        "_DmaSend(sceDmaChan *, void *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_PlaneFromMatrix(float *, float const (*)[4], int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetGsDrawEnv1(sceGsDrawEnv1 const *)",
    ),
    Ok(
        "_CallHandler(G3DGSSYNCPATHTIMEOUTREASON)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_IsBBLightingupSpot(G3DLIGHT const *, float const (*)[4])",
    ),
    Ok(
        "_IsBBLightingupPoint(G3DLIGHT const *, float const (*)[4])",
    ),
    Ok(
        "_ConvertEmulateDirectionallightDataToG3DLIGHT(G3DLIGHT *, G3D_EMULATE_DIRECTIONALLIGHT_DATA const *)",
    ),
    Ok(
        "_BlendEmulatedDirectionalLight(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA const *, G3D_EMULATE_DIRECTIONALLIGHT_DATA const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_BlendEmulatedDirectionalLight(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA const *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_GetVif1CmdInfo(_VIF1CMDINFO *, G3DVIF1CMDDATA const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_UpdateValue(_VIF1CMDINFO *, G3DVIF1CMDDATA const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalleryTopPad(void)",
    ),
    Ok(
        "GalleryViewPad(void)",
    ),
    Ok(
        "GalleryMoviePad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GalleryTexLoadWait(void)",
    ),
    Ok(
        "GalleryTexLoadCancel(void *, int)",
    ),
    Ok(
        "LiberateGalleryTexMem(void **)",
    ),
    Ok(
        "GetGalleryTexMem(void **, int)",
    ),
    Ok(
        "GalleryTexLoadReq(void *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "GalDispBgMask(int)",
    ),
    Ok(
        "GalDispMenuCsr(int, int)",
    ),
    Ok(
        "GalDispTitle(int, int, int, int)",
    ),
    Ok(
        "GalDispCaption(int, int)",
    ),
    Ok(
        "GalDispWinMsg(int, int)",
    ),
    Ok(
        "GalDispViewPage(int)",
    ),
    Ok(
        "GalDispPicture(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveCtrlInit(char)",
    ),
    Ok(
        "LiberateGameDataSaveMem(void **)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetGameDataSaveDataMem(void **, int)",
    ),
    Ok(
        "GameDataSaveTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameDataSaveDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveMcMain(void)",
    ),
    Ok(
        "GameDataSaveOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameDataSaveMcCheckInit(void)",
    ),
    Ok(
        "GameDataSaveMcCheckWait(void)",
    ),
    Ok(
        "GameDataSaveMcHeadLoadInit(void)",
    ),
    Ok(
        "GameDataSaveMcHeadLoadWait(void)",
    ),
    Ok(
        "GameDataSaveMcSnapLoadInit(void)",
    ),
    Ok(
        "GameDataSaveMcSnapLoadWait(void)",
    ),
    Ok(
        "GameDataSaveMcSaveFileSel(void)",
    ),
    Ok(
        "GameDataSaveMcSaveConf(void)",
    ),
    Ok(
        "GameDataSaveMcSystemLoadInit(void)",
    ),
    Ok(
        "GameDataSaveMcSystemLoadWait(void)",
    ),
    Ok(
        "GameDataSaveMcSaveInit(void)",
    ),
    Ok(
        "GameDataSaveMcSaveWait(void)",
    ),
    Ok(
        "GameDataSaveMcErrorConfInit(void)",
    ),
    Ok(
        "GameDataSaveMcErrorConfWait(void)",
    ),
    Ok(
        "GameDataSaveMcEndConf(void)",
    ),
    Ok(
        "GameDataSaveMcRemakeConfInit(void)",
    ),
    Ok(
        "GameDataSaveMcRemakeConfWait(void)",
    ),
    Ok(
        "GameDataSaveMcRemakeDirDelInit(void)",
    ),
    Ok(
        "GameDataSaveMcRemakeDirDelWait(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeConfInit(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeConfWait(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeInit(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeWait(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeSaveInit(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeSaveWait(void)",
    ),
    Ok(
        "GameDataSaveMcFormatConfInit(void)",
    ),
    Ok(
        "GameDataSaveMcFormatConfWait(void)",
    ),
    Ok(
        "GameDataSaveMcFormatInit(void)",
    ),
    Ok(
        "GameDataSaveMcFormatWait(void)",
    ),
    Ok(
        "GameDataSaveMcFormatEndInit(void)",
    ),
    Ok(
        "GameDataSaveMcFormatEndWait(void)",
    ),
    Ok(
        "GameDataSaveMcEveryFrameCheck(void)",
    ),
    Ok(
        "GameDataSaveMcSaveFileSelPad(void)",
    ),
    Ok(
        "GameDataSaveMcSaveConfPad(void)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveMcErrorConfPad(void)",
    ),
    Ok(
        "GameDataSaveMcRemakeConfPad(void)",
    ),
    Ok(
        "GameDataSaveMcNewMakeConfPad(void)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveMcFormatConfPad(void)",
    ),
    Ok(
        "GameData_SaveFileSelDisp(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GameDataSaveInit(char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameResultInit(void)",
    ),
    Ok(
        "GameResultCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultBackGroundLoadReq(void)",
    ),
    Ok(
        "LiberateGameResultTexMem(void **)",
    ),
    Ok(
        "GetGameResultTexMem(void **, int)",
    ),
    Ok(
        "GameResultTexLoadReq(void *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultMain(void)",
    ),
    Ok(
        "GameResultMemFree(void)",
    ),
    Ok(
        "GameResultDisp(void)",
    ),
    Ok(
        "GameResultBgDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultFadeBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameResultTopRankCheck(TIME_INFO)",
    ),
    Ok(
        "GameResultTopClearFlgSet(void)",
    ),
    Ok(
        "GameResultTopDispInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultTopFlgMsgSet(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameResultTopPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameResultTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopLineDisp(float, unsigned char)",
    ),
    Ok(
        "GameResultTopCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopDifficultyDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopClearTime(TIME_INFO, int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopScoreTime(int, int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopRankDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "GameResultTopLineAnimCtrl(char *, char *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GameResultTopInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "GameOverFadeCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverFadeMain(void)",
    ),
    Ok(
        "GameOverFadeDispMain(void)",
    ),
    Ok(
        "GameOverFadeAnimCtrl(short)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuInit(void)",
    ),
    Ok(
        "GameOverMenuCtrlInit(void)",
    ),
    Ok(
        "GameOverMenuDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTexBackGroundLoadReq(void)",
    ),
    Ok(
        "GameOverMenuTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameOverMenuMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuMemFree(void)",
    ),
    Ok(
        "GameOverMenuDispMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadCtrlInit(void)",
    ),
    Ok(
        "GameOverLoadDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameOverLoadMcMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadReturnMenu(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameOverLoadMcCheckInit(void)",
    ),
    Ok(
        "GameOverLoadMcCheckWait(void)",
    ),
    Ok(
        "GameOverLoadMcHeadLoadInit(void)",
    ),
    Ok(
        "GameOverLoadMcHeadLoadWait(void)",
    ),
    Ok(
        "GameOverLoadMcSnapLoadInit(void)",
    ),
    Ok(
        "GameOverLoadMcSnapLoadWait(void)",
    ),
    Ok(
        "GameOverLoadMcLoadFileSel(void)",
    ),
    Ok(
        "GameOverLoadMcLoadConf(void)",
    ),
    Ok(
        "GameOverLoadMcSysLoadInit(void)",
    ),
    Ok(
        "GameOverLoadMcSysLoadWait(void)",
    ),
    Ok(
        "GameOverLoadMcLoadInit(void)",
    ),
    Ok(
        "GameOverLoadMcLoadWait(void)",
    ),
    Ok(
        "GameOverLoadMcErrorConfInit(void)",
    ),
    Ok(
        "GameOverLoadMcErrorConfWait(void)",
    ),
    Ok(
        "GameOverLoadMcEndConf(void)",
    ),
    Ok(
        "GameOverLoadMcEveryFrameCheck(void)",
    ),
    Ok(
        "GameOverLoadMcLoadFileSelPad(void)",
    ),
    Ok(
        "GameOverLoadMcLoadConfPad(void)",
    ),
    Ok(
        "GameOverLoadMcErrorConfPad(void)",
    ),
    Ok(
        "GameOverLoadMcEndConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameOverLoadFileSelDisp(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GameOverLoadInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTopCtrlInit(void)",
    ),
    Ok(
        "GameOverMenuTopDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTopTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GameOverMenuTopPad(void)",
    ),
    Ok(
        "GameOverMenuTopConfPad(void)",
    ),
    Ok(
        "GameOverMenuEndReq(void)",
    ),
    Ok(
        "GameOverMenuTopExeDecision(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "GameOverMenuTopSelMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "GameOverMenuTopCsrDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GhostSealDoorInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetInitFlag(void)",
    ),
    Ok(
        "DoJobPhase(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_MakeColorToMonotone(float *)",
    ),
    Ok(
        "_MakeColorToMonotone(int *)",
    ),
    Ok(
        "_InitLight(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_InitFog(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_InitCamera(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_SetClipValue(float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetClipValueCheck(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_ResetCameraTarget(void)",
    ),
    Ok(
        "_GetCameraDirectionInverse(float *)",
    ),
    Ok(
        "_StabilizeCamera(GRA3DCAMERA *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_ModifyFogParam(void)",
    ),
    Ok(
        "_UpdateLight_Directional(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_UpdateLight_Point(void)",
    ),
    Ok(
        "_UpdateLight_Spot(void)",
    ),
    Ok(
        "_SetVu1LightData_Point(GRA3DVU1LIGHTDATA_POINT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_SetVu1LightData_Spot(GRA3DVU1LIGHTDATA_SPOT *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetVu1LightData_Directional(GRA3DVU1LIGHTDATA_DIRECTIONAL *, float const (*)[4])",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetMaxColor255(float *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetRegisterSpecified(long, long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetRegisterSpecified(long &, long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_ModifyGra3dScratchpadDefault(void)",
    ),
    Ok(
        "_ModifyScratchpad(void)",
    ),
    Ok(
        "_OnExitApp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0LoadMatrix_4_5_6_7(float const (*)[4])",
    ),
    Ok(
        "_Vu0ApplyMatrixWithoutTrans_4_5_6_7(float *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "global constructors keyed to g_Vu0Matrix",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to g_uiMustBeSetValue",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "_DrawSphere(float const *, float, unsigned int, float const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_SetLightToShadow(GRA3DEMULATIONLIGHTDATACREATIONDATA const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to _DrawShadowTexture(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetSGDTop(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_GetLPHEAD(void)",
    ),
    Ok(
        "GetNextUnpackAddr(unsigned int *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetVUVNData(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "SetVUVNDataPost(SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetVUMeshData(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetVUMeshDataPost(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "CheckCoordCache(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMaterialDataVU(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "GsImageProcess(SGDPROCUNITHEADER const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_SetCoordData(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "CheckBoundingBox(SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SgSortUnitPrim(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "_CalcWeightedLocalWorldMatrix(float (*)[4], float const (*)[4])",
    ),
    Ok(
        "SetCoordData(GRA3DVU1LIGHTDATA *, SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_CalcWeightedVectorBuffer(_ONELIST *, int, float (*)[4], float const (*)[4], void (*)(float *, float const *))",
    ),
    Ok(
        "CalcVertexBuffer(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "SgSortUnitPrimPost(SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetPreRenderMeshData(SGDPROCUNITHEADER *, int)",
    ),
    Ok(
        "SelectLight(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "void G3DLIGHTTYPE::_SelectLightByType<4>(float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetG3DLightForPrelighting(int)",
    ),
    Ok(
        "SgPreRenderPrim(SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ClearPreRenderMeshData(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "SgClearPreRenderPrim(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "SetVUMeshDataP(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadTRI2Files(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SgSortPreProcessP(SGDPROCUNITHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SgSetVNBuffer(float (*)[4], int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ChangeST(SGDVUMESHTEXGIFTAG *, int, float, float)",
    ),
    Ok(
        "ChangeSTP(SGDPROCUNITHEADER *, float, float)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "ChangeSTVUMeshData(SGDPROCUNITHEADER *, float, float)",
    ),
    Ok(
        "ChangeSTVUMeshDataP(SGDPROCUNITHEADER *, float, float)",
    ),
    Ok(
        "SgChangeSTUnitPrim(SGDPROCUNITHEADER *, int, float, float)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetVertexColorPresetMeshData(SGDPROCUNITHEADER *, int, float *)",
    ),
    Ok(
        "SgSetVertexColorUnitPrimP(SGDPROCUNITHEADER *, int, float *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "void _CalcValidLightIndexByType<4>(int *, G3DLIGHTTYPE, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "Y01fi_v",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sgdClearCoordCalcFlgParents(SGDCOORDINATE *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "RebuildTRI2Files(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "MappingCoordinateData(unsigned int *, HeaderSection *)",
    ),
    Ok(
        "MappingVUVNDataPreset(unsigned int *, int, int, int)",
    ),
    Ok(
        "MappingVUVNData(SGDPROCUNITHEADER *, SGDFILEHEADER *)",
    ),
    Ok(
        "MappingMeshData(SGDPROCUNITHEADER *, unsigned int *, SGDFILEHEADER *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MappingVertexList(_VERTEXLIST *, SGDVECTORINFO *)",
    ),
    Ok(
        "RebuildTRI2FilesInverse(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "MappingCoordinateDataInverse(SGDPROCUNITHEADER *, SGDFILEHEADER *)",
    ),
    Ok(
        "MappingVUVNDataInverse(SGDPROCUNITHEADER *, SGDFILEHEADER *)",
    ),
    Ok(
        "MappingVUVNDataPresetInverse(unsigned int *, int, int, int)",
    ),
    Ok(
        "MappingMeshDataInverse(SGDPROCUNITHEADER *, unsigned int *, SGDFILEHEADER *)",
    ),
    Ok(
        "MappingVertexListInverse(_VERTEXLIST *, SGDVECTORINFO *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetCurrentFBP(void)",
    ),
    Ok(
        "_IsDraw(void)",
    ),
    Ok(
        "SetVU1HeaderShadow(void)",
    ),
    Ok(
        "ShadowMeshDataVU(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "ShadowBoundClip(float *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AppendShadowClipCheck(float const (*)[4], BoundLine const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckBoundingBoxShadowTrace(float const (*)[4], float const (*)[4], float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckBoundingBoxShadow(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_CalcTarget(float *, float const (*)[4])",
    ),
    Ok(
        "_IsSamePositionAsTarget(float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetUpShadow(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetRotMatrixZAxis(float (*)[4], float const *)",
    ),
    Ok(
        "_CalcProjectionShadowMatrix(float (*)[4], float, float, float, int, int, float const *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "CalcShadowHeight(float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_CalcCullingMatrix(void)",
    ),
    Ok(
        "_SetCameraCoord(void)",
    ),
    Ok(
        "_CalcAspectRatioForRenderShadow(float *, float *)",
    ),
    Ok(
        "SetShadowCamera(void)",
    ),
    Ok(
        "_ApplyCamera(GRA3DCAMERA const *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_RenderShadow(SGDFILEHEADER *, SGDCOORDINATE *, int)",
    ),
    Ok(
        "_DrawShadow(GRA3DCAMERA const *, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_CalcColor(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "_CalcDirection(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to g_gra3dShadowDebug",
    ),
    Ok(
        "global destructors keyed to g_gra3dShadowDebug",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "_MakeTRI2FileHeader(SGDTRI2FILEHEADER *, short, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_MakeTRI2FileByVRAMImage(SGDTRI2FILEHEADER *, short, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "DrawLinePacket(float const *, unsigned char, unsigned char, unsigned char, unsigned char, float const *, unsigned char, unsigned char, unsigned char, unsigned char, _DRAW_ENV_NOTEX const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleDollSelPad(void)",
    ),
    Ok(
        "HinaPuzzleExitSelPad(void)",
    ),
    Ok(
        "HinaPuzzleClearPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleDollSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleExitSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleClearDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleTimeOverDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleDispInit(void)",
    ),
    Ok(
        "HinaPuzzleSubOutAnimCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleTimer(void)",
    ),
    Ok(
        "HinaPuzzleReqNextSubStep(char)",
    ),
    Ok(
        "HinaPuzzleClearCheck(void)",
    ),
    Ok(
        "HinaPuzzleDollPosChange(void)",
    ),
    Ok(
        "HinaPuzzleGetBlankPos(char *, char *)",
    ),
    Ok(
        "HinaPuzzleChangeCheck(int, int)",
    ),
    Ok(
        "HinaPuzzleChangeDataPos(int, int, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "HinaPuzzleExitReq(void)",
    ),
    Ok(
        "HinaPuzzleBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleSmokeScreenAnim(short *)",
    ),
    Ok(
        "HinaPuzzleSmokeScreenDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleStandFleaDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleDollsDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleModeAnimCtrl(void)",
    ),
    Ok(
        "HinaPuzzleRemainderTimeDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleBlackBgDisp(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleExitConfWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleClearWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleTimeOverWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleStandFleaAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleDollsFleaDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleDollsFleaAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleWarningTimeAnim(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleAnim(char *, short *, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleCmnWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "HinaPuzzleCrossDollsDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "HcBaseIsNearRectangle(float (*)[4], float *, float)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitBeforeGame(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearBeforeGameInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IngameWrkInitNotPlayData(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ingame_wrk",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectSubFuncPDeformMain(void)",
    ),
    Ok(
        "IgEffectZeroParticleMain(void)",
    ),
    Ok(
        "IgEffectZeroParticleReqSet(int)",
    ),
    Ok(
        "IgEffectSubFuncPDeformReqSet(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectZeroPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectSlowPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectKokuPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectParalyzePDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectViewPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectMetsuPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectRenPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectTsuiPDeformReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectFuuPDeformReq(int)",
    ),
    Ok(
        "IgEffectZeroParticleReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to IgEffectInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to plyr_item",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPzlDrawCap(void)",
    ),
    Ok(
        "KaiPzlCheckClear(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPzlGetCen(int, int)",
    ),
    Ok(
        "KaiPuzzleSetMode(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPzlPrintCen(int, int, int, unsigned char)",
    ),
    Ok(
        "KaiPuzzleDrawMsg(int, float, unsigned char)",
    ),
    Ok(
        "KaiPuzzleDrawMsgOne(unsigned char, int, DISP_STR *)",
    ),
    Ok(
        "KaiPuzzleBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPuzzleDraw4Stat(void)",
    ),
    Ok(
        "KaiPzlCheckKai(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2StartMsgPad(void)",
    ),
    Ok(
        "KazaPuzzle2PinWheelSelPad(void)",
    ),
    Ok(
        "KazaPuzzle2ExitPad(void)",
    ),
    Ok(
        "KazaPuzzle2ClearPad(void)",
    ),
    Ok(
        "KazaPuzzle2CondErrorPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2StartMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PinWheelSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2ExitSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2ClearDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2FailureDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2CondErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2CtrlInit(void)",
    ),
    Ok(
        "KazaPuzzle2DispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2CondCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2Mode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2SubOutAnimCheck(void)",
    ),
    Ok(
        "KazaPuzzle2RotAnimExe(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2ClearCheck(void)",
    ),
    Ok(
        "KazaPuzzle2ReqNextSubStep(char)",
    ),
    Ok(
        "GetKazaPuzzle2PinWheelWingColor(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2RotAnimStart(void)",
    ),
    Ok(
        "KazaPuzzle2ExitReq(void)",
    ),
    Ok(
        "KazaPuzzle2Anim(char *, short *, unsigned char *)",
    ),
    Ok(
        "KazaPuzzle2BgDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2BlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2ModeAnimCtrl(void)",
    ),
    Ok(
        "KazaPuzzle2PanelAllShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelAllDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelAllEmbossShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelAllEmbossHighLightDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2ScreenMask(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2StartMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelFlareDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2CapBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2CapDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2RemainderFrequency(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2ExitConfWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2ClearWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2FailureWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelShadowDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelDisp(int, int, int, unsigned char, float)",
    ),
    Ok(
        "KazaPuzzle2PanelEmbossShadowDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2PanelEmbossHighLightDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzle2CondErrorWinDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2RotAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2FlareAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2CmnWinDisp(int, int, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to KazaPuzzle2ExeInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleStartMsgPad(void)",
    ),
    Ok(
        "KazaPuzzlePinWheelSelPad(void)",
    ),
    Ok(
        "KazaPuzzleExitPad(void)",
    ),
    Ok(
        "KazaPuzzleClearPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleStartMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePinWheelSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleExitSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleClearDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleFailureDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleCtrlInit(void)",
    ),
    Ok(
        "KazaPuzzleDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleMode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleSubOutAnimCheck(void)",
    ),
    Ok(
        "KazaPuzzleRotAnimExe(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleClearCheck(void)",
    ),
    Ok(
        "KazaPuzzleReqNextSubStep(char)",
    ),
    Ok(
        "GetKazaPuzzlePinWheelWingColor(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleRotAnimStart(void)",
    ),
    Ok(
        "KazaPuzzleExitReq(void)",
    ),
    Ok(
        "KazaPuzzleAnim(char *, short *, unsigned char *)",
    ),
    Ok(
        "KazaPuzzleBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleModeAnimCtrl(void)",
    ),
    Ok(
        "KazaPuzzlePanelAllShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePanelAllDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePanelAllEmbossShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePanelAllEmbossHighLightDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleScreenMask(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleStartMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePanelFlareDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleCapBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleCapDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleRemainderFrequency(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleExitConfWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleClearWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzleFailureWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "KazaPuzzlePanelShadowDisp(int, int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleRotAnim(void)",
    ),
    Ok(
        "KazaPuzzlePanelDisp(int, int, int, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzlePanelEmbossShadowDisp(int, int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzlePanelEmbossHighLightDisp(int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleFlareAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleCmnWinDisp(int, int, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to KazaPuzzleExeInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LangCheckInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LangCheckMain(void)",
    ),
    Ok(
        "LangCheckMcCheckInit(void)",
    ),
    Ok(
        "LangCheckMcCheckWait(void)",
    ),
    Ok(
        "LangCheckMcLoadInit(void)",
    ),
    Ok(
        "LangCheckMcLoadWait(void)",
    ),
    Ok(
        "LangCheckMcLoadConf(void)",
    ),
    Ok(
        "LangCheckMcErrorConf(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LangCheckDispMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LangSelCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LangSelTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LangSelMain(void)",
    ),
    Ok(
        "LangSelMainPad(void)",
    ),
    Ok(
        "LangSelDispMain(void)",
    ),
    Ok(
        "LangSelBlackBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "LangSelNationalFlagDisp(int, int, unsigned char)",
    ),
    Ok(
        "LangSelCsrFlareDisp(int, int, unsigned char)",
    ),
    Ok(
        "LangSelCountryNameDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadGameCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LoadGameMcCheckInit(void)",
    ),
    Ok(
        "LoadGameMcCheckWait(void)",
    ),
    Ok(
        "LoadGameMcHeadLoadInit(void)",
    ),
    Ok(
        "LoadGameMcHeadLoadWait(void)",
    ),
    Ok(
        "LoadGameMcSnapLoadInit(void)",
    ),
    Ok(
        "LoadGameMcSnapLoadWait(void)",
    ),
    Ok(
        "LoadGameMcLoadFileSel(void)",
    ),
    Ok(
        "LoadGameMcLoadConf(void)",
    ),
    Ok(
        "LoadGameMcSystemLoadInit(void)",
    ),
    Ok(
        "LoadGameMcSystemLoadWait(void)",
    ),
    Ok(
        "LoadGameMcLoadInit(void)",
    ),
    Ok(
        "LoadGameMcLoadWait(void)",
    ),
    Ok(
        "LoadGameMcErrorConfInit(void)",
    ),
    Ok(
        "LoadGameMcErrorConfWait(void)",
    ),
    Ok(
        "LoadGameMcEndConf(void)",
    ),
    Ok(
        "LoadGameMcEveryFrameCheck(void)",
    ),
    Ok(
        "LoadGameMcLoadFileSelPad(void)",
    ),
    Ok(
        "LoadGameMcLoadConfPad(void)",
    ),
    Ok(
        "LoadGameMcErrorConfPad(void)",
    ),
    Ok(
        "LoadGameMcEndConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LoadGameFileSelDisp(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to LoadGameInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadingAnimCtrl(void)",
    ),
    Ok(
        "LoadingBlackBgDisp(unsigned char)",
    ),
    Ok(
        "LoadingBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "LoadingNowLoadingDisp(int, int, unsigned char)",
    ),
    Ok(
        "CalcLoadingBlackFadeAlpha(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LogoDispMain(int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to m_plyr_camera",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckSoftReset(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallSoftReset(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_bgmPlayIn(int, int)",
    ),
    Ok(
        "map_bgmPlaySub(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to map_bgmInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrApproachCameraCtrl(int)",
    ),
    Ok(
        "MapCamNormalCameraCtrl(int)",
    ),
    Ok(
        "QuakeCameraMain(void)",
    ),
    Ok(
        "FinderInOverRapCtrl(void)",
    ),
    Ok(
        "QuakeCameraInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapCamUpdateRoomNo(MAP_CAMERA_CTRL *)",
    ),
    Ok(
        "MapCamSpCameraCtrl(MDAT_CAM_SP *, MB_OUT_RECT *, float *)",
    ),
    Ok(
        "MapCamRectangleCameraCtrl(PLCMN_WRK *, int, int)",
    ),
    Ok(
        "MapCamSpCameraParallel(MDAT_CAM_SP *, MB_OUT_RECT *, float *)",
    ),
    Ok(
        "MapCamSpCameraDiagonal(MDAT_CAM_SP *, MB_OUT_RECT *, float *)",
    ),
    Ok(
        "MapCamGetPerpendicularNode(float *, float *, float *, float *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MapCamTypeFix(void)",
    ),
    Ok(
        "MapCamTypePositionFollow(int)",
    ),
    Ok(
        "MapCamTypeTargetFollow(int)",
    ),
    Ok(
        "MapCamTypePositionTargetFollow(int)",
    ),
    Ok(
        "MapCamTypePositionFollowYFix(int)",
    ),
    Ok(
        "MapCamTypeTargetFollowYFix(int)",
    ),
    Ok(
        "MapCamSetFovRoll(void)",
    ),
    Ok(
        "MapCamCalcFollowPointWithMargin(float *, float const *, float const *, float)",
    ),
    Ok(
        "PlyrShoulderCameraTypeGet(int)",
    ),
    Ok(
        "PlyrShoulderCameraPositionGet(float *, int)",
    ),
    Ok(
        "PlyrShoulderCameraSet(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhSetCtrlP(int, int)",
    ),
    Ok(
        "MhGetCtrlP(int)",
    ),
    Ok(
        "MhSetOffset(MhCtrl *, float *)",
    ),
    Ok(
        "MhIsInArea(MhCtrl *, float *)",
    ),
    Ok(
        "MhIsInTriXZ(MhCtrl *, float *, int)",
    ),
    Ok(
        "MhIsHeightTri(MhCtrl *, float *, int)",
    ),
    Ok(
        "MhIsHitHeightTri(MhCtrl *, float *, float *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MhFirstInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetRegBuffID(int)",
    ),
    Ok(
        "MrecGetSeInfo(void)",
    ),
    Ok(
        "MrecGetStaRotTbl(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMemoryCardDelFilePath(char *, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMemoryCardSaveDataInfo(MC_SAVE_DATA *, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MemoryCardSoftResetLock(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "motGetTargetRot(float *, SGDCOORDINATE *, float *, int)",
    ),
    Ok(
        "motCheckRotLimit(float *, float, float)",
    ),
    Ok(
        "motAddRotOffsetZX(SGDCOORDINATE *, float, float, float (*)[4])",
    ),
    Ok(
        "GetClampValAddOffsetF(float, float, float)",
    ),
    Ok(
        "movGetMaxval(unsigned int *)",
    ),
    Ok(
        "movGetFrameNum(unsigned int *)",
    ),
    Ok(
        "GetPlyrSpd(float *, float *, float *, ANI_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to PlyrMemoInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuWrkInit(void)",
    ),
    Ok(
        "MenuTexBackGroundLoad(void)",
    ),
    Ok(
        "MenuInDispCapture(void)",
    ),
    Ok(
        "MenuDispCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetMenuCaptureData(void)",
    ),
    Ok(
        "MenuCaptureDataDisp(void)",
    ),
    Ok(
        "MenuBg_LeftShojiDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_RightShojiDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_TourouDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_LeftShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_RightShadowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_WallDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuBg_AnimCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditSelMenuPad(void)",
    ),
    Ok(
        "MenuCamEditErrorPad(void)",
    ),
    Ok(
        "MenuCamEditSelLensEquipPosPad(void)",
    ),
    Ok(
        "MenuCamEditEquipLensSelPad(void)",
    ),
    Ok(
        "MenuCamEditItemSelPad(void)",
    ),
    Ok(
        "MenuCamEditGemAddConfPad(void)",
    ),
    Ok(
        "MenuCamEditPowerUpConfPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditSelMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensNothingErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelLensEquipPosDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelEquipLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelGemAddPosDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelPowerUpPosDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditGemAddConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditGemAddErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditGemNothingErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditPowerUpConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditPowerUpLvMaxErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditPowerUpNothingErrorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditCtrlInit(void)",
    ),
    Ok(
        "MenuCamEditSetDispLensData(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditSelMenuPadDecision(void)",
    ),
    Ok(
        "MenuCamEditMoveTop(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamEditItemSelDecision(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamEditGemAddPosDecision(void)",
    ),
    Ok(
        "MenuCamEditPowerUpPosDecision(void)",
    ),
    Ok(
        "GetMenuCamBasicGemNum(int)",
    ),
    Ok(
        "GetMenuCamBasicGemNumMax(int)",
    ),
    Ok(
        "GetMenuCamBasicLv(int)",
    ),
    Ok(
        "GetMenuCamBasicLvMax(int)",
    ),
    Ok(
        "MenuCamGemAdd(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamPowerUp(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamEditBaseGemAnimReq(char, char)",
    ),
    Ok(
        "MenuCamEditLensGemAnimReq(char, char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditCmnDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseNextPointDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensNextPointDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditItemFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseGemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensGemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditFrameBlackBgDisp(int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelEquipLensPosFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuCamEditEquipLensPosCsrDisp(float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "MenuCamEditOneLensNextPointDisp(int, int, int, unsigned char, int)",
    ),
    Ok(
        "MenuCamEditSelFrameBgDisp(int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelCsrDisp(float, float, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditGemAddCmnDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditConfYesNoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditPowerUpCmnDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditTitleFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditMenuFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditMenuItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditReinforcedLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseFrameBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensFrameBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditEquipReinforcedLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditEquipLensLvDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditHaveStatusDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseLvDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditHaveLensNameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensLvDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditScrollDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditMsgWindowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditBaseFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditLensFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamEditSelFrameDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "MenuCamEditNonSelFrameDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "MenuCamEditEquipDisp(int, int, unsigned char)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditFrameBgDisp(float, unsigned char)",
    ),
    Ok(
        "MenuCamEditLvDisp(float, unsigned char, int)",
    ),
    Ok(
        "MenuCamEditNextPointDisp(int, int, unsigned char, int, int)",
    ),
    Ok(
        "MenuCamEditGemDisp(float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "MenuCamEditGemAnimDisp(float, float, unsigned char, short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditLensNameDisp(float, float, unsigned char, int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MenuCamEditInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "LiberateMenuCamMainTexMem(void **)",
    ),
    Ok(
        "GetMenuCamMainTexMem(void **, int)",
    ),
    Ok(
        "MenuCamMainTexLoadWait(void)",
    ),
    Ok(
        "MenuCamModeMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamMainTexLoadCancel(void *, int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamNumberDisp_One(int, int, int, unsigned char, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopAdditionalFunctionSelPad(void)",
    ),
    Ok(
        "MenuCamTopFilmSelPad(void)",
    ),
    Ok(
        "MenuCamTopEquipFuncSelPad(void)",
    ),
    Ok(
        "MenuCamTopPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamModeAddFuncSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamModeFilmSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamModeEquipFuncSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamModeTopDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopCtrlInit(void)",
    ),
    Ok(
        "MenuCamTopDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopPadDecision(void)",
    ),
    Ok(
        "MenuCamTopOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamTopMoveEdit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuCamTopCmnDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopEquipFilmDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopEquipFilmSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopFilmSelCsrDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopAddFuncSelCsrDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopEquipFuncSelCsrDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopTitleFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopCsrBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopBasicPerformaneItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopCsrLineDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopEquipReinforcedLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopLevelGemNumDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopGhostPowerDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopPlyrHaveAddFuncDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopPlyrHaveEquipFuncDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopMsgWindowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCamTopCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopReinforcedLensLvNumDisp(int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopAddFuncLineDisp(float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "MenuCamTopEquipFuncLineDisp(float, float, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuCrossFadeMem(int, int)",
    ),
    Ok(
        "MenuCrossFadeTexLoadReq(int, int)",
    ),
    Ok(
        "MenuCrossFadeTexLoadWait(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuPlyrHPDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCmnPlyrEquipReinforcedLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilmDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuCmnHyphenDisp(int, int, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnReinforcedLensDisp(int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuFilePocketBookPad(void)",
    ),
    Ok(
        "MenuFilePhotoGraphPad(void)",
    ),
    Ok(
        "MenuFileMapPad(void)",
    ),
    Ok(
        "MenuFileTopPad(void)",
    ),
    Ok(
        "MenuFileNoHavePad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuFilePocketBookDisp(unsigned char)",
    ),
    Ok(
        "MenuFilePhotoDisp(unsigned char)",
    ),
    Ok(
        "MenuFileMapDisp(unsigned char)",
    ),
    Ok(
        "MenuFileTopDisp(unsigned char)",
    ),
    Ok(
        "MenuFileNoHaveDisp(unsigned char)",
    ),
    Ok(
        "MenuFileInit(void)",
    ),
    Ok(
        "MenuFileCtrlInit(void)",
    ),
    Ok(
        "MenuFileTexLoadReq(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateMenuFileTexMem(void **)",
    ),
    Ok(
        "GetMenuFileTexMem(void **, int)",
    ),
    Ok(
        "MenuFileTexLoadWait(void *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuFileLoadReq(char)",
    ),
    Ok(
        "MenuFileTexLoadCancel(void *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuFileLoadWait(char)",
    ),
    Ok(
        "MenuFileSetDispData(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuFileDispFileID(int, int)",
    ),
    Ok(
        "MenuFileDispInit(void)",
    ),
    Ok(
        "MenuFileMode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuFileModeMoveLiberate(char)",
    ),
    Ok(
        "MenuFileModeMoveReq(char)",
    ),
    Ok(
        "MenuFileOutReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetMenuFileDispData(int, int)",
    ),
    Ok(
        "GetMenuFileDispFileState(int, int)",
    ),
    Ok(
        "MenuFileTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopPictureDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopScrollFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopScrollDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopTagDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopListFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileTopCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentNameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentDataDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileDocumentPageDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoSmallTexDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoCenterTexDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFilePhotoNameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapSmallTexDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapCenterTexDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileMapNameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuFileSmallArrowDisp(float, float, unsigned char, unsigned char, char)",
    ),
    Ok(
        "MenuFileSelFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuFileNonSelFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuFileNoReadFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuFileBigArrowDisp(float, float, unsigned char, unsigned char, char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MenuFileTexBackGroundLoad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemPad(void)",
    ),
    Ok(
        "MenuItemNoUsePad(void)",
    ),
    Ok(
        "MenuItemUseSelPad(void)",
    ),
    Ok(
        "MenuItemInit(void)",
    ),
    Ok(
        "MenuItemCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemTexLoadWait(void)",
    ),
    Ok(
        "SetDispItemData(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemDispInit(void)",
    ),
    Ok(
        "MenuNonItemPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemUseItemMain(int)",
    ),
    Ok(
        "MenuItemOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuItemUse(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuItemTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemWindowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemLensDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemPictureDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPlyrItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemPlyrDataDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemConfirmDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemUseSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemNoHaveItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuItemListScrollDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemExplanation(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GetMenuItemTexMem(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapInit(void)",
    ),
    Ok(
        "MenuMapCtrlInit(void)",
    ),
    Ok(
        "GetMenuMapTexMem(void **, int)",
    ),
    Ok(
        "MenuMapTexLoadReq(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapLoadCtrlInit(MENU_MAP_LOAD_CTRL *)",
    ),
    Ok(
        "LiberateMenuMapTexMem(void **)",
    ),
    Ok(
        "MenuMapSnapLoadReq(void)",
    ),
    Ok(
        "MenuMapBgLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapDispInit(void)",
    ),
    Ok(
        "MenuMapRoomHitCheck(float, float)",
    ),
    Ok(
        "MenuMapPad(void)",
    ),
    Ok(
        "MenuMapSnapLoadExe(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapFloorChange(int)",
    ),
    Ok(
        "MenuMapDispStartPos(void)",
    ),
    Ok(
        "MenuMapChange(int)",
    ),
    Ok(
        "MenuMapOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapInCheck(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapSetPosition(float *, float, float)",
    ),
    Ok(
        "CalMapDispStartPos(float *, float *, char)",
    ),
    Ok(
        "MenuMapCheckHouseCondition(int)",
    ),
    Ok(
        "MenuMapTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapMapDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "MenuMapCenterDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapSnapShotDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapWindowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapInfoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMapCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapRoomGroupCheck(int)",
    ),
    Ok(
        "MenuMapDispAreaCheck(int, float, float, float, float)",
    ),
    Ok(
        "MenuMapSavePointDisp(int, float, float, unsigned char)",
    ),
    Ok(
        "MenuMapDoorDisp(int, float, float, unsigned char)",
    ),
    Ok(
        "MenuMapPlyrPosDisp(int, float, float, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapNormalDoorDisp(int, float, float, unsigned char, MAP_DOOR_POINT const *)",
    ),
    Ok(
        "MenuMapGhostSealNormalDoorDisp(int, float, float, unsigned char, MAP_DOOR_POINT const *)",
    ),
    Ok(
        "MenuMapDoubleDoorDisp(int, float, float, unsigned char, MAP_DOOR_POINT const *)",
    ),
    Ok(
        "MenuMapGhostSealDoubleDoorDisp(int, float, float, unsigned char, MAP_DOOR_POINT const *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapGhostSealMarkDisp(int, float, float, unsigned char, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuMapCenterAnim(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MenuMap(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoPad(void)",
    ),
    Ok(
        "MenuMemoContentDispPad(void)",
    ),
    Ok(
        "MenuMemoNotHavePad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoContentDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoNotHaveDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoInit(void)",
    ),
    Ok(
        "MenuMemoCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoTexLoadWait(void)",
    ),
    Ok(
        "MenuMemoSetDispData(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoModeMoveReq(unsigned char)",
    ),
    Ok(
        "MenuMemoOutReq(void)",
    ),
    Ok(
        "MenuMemoBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoPlyrMemoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoLineDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoContentCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoMsgWindowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuMemoNonReadFrameDisp(float, unsigned char)",
    ),
    Ok(
        "MenuMemoContentWindowDisp(int, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GetMenuMemoTexMem(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuPhotoInit(void)",
    ),
    Ok(
        "MenuPhotoCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuPhotoTexLoadWait(void)",
    ),
    Ok(
        "MenuPhotoDispInit(void)",
    ),
    Ok(
        "MenuPhotoPad(void)",
    ),
    Ok(
        "MenuPhotoSubPad(void)",
    ),
    Ok(
        "MenuPhotoSortPad(void)",
    ),
    Ok(
        "MenuPhotoDelPad(void)",
    ),
    Ok(
        "MenuNonPhotoPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuPhotoOutReq(void)",
    ),
    Ok(
        "MenuPhotoSubMenuMain(void)",
    ),
    Ok(
        "MenuPhotoSortMenuMain(void)",
    ),
    Ok(
        "MenuPhotoTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoThumbnailDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoDataWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoInfoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoProtectCsr(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoLargePhotoWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoLargePhotoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoLargeProtectDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoSubMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoDelConfirmDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoNotDelWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoSortMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuPhotoNotHaveDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRadioInit(void)",
    ),
    Ok(
        "MenuRadioCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRadioTexLoadWait(void)",
    ),
    Ok(
        "MenuRadioSetDispData(void)",
    ),
    Ok(
        "MenuRadioDispInit(void)",
    ),
    Ok(
        "MenuRadioPad(void)",
    ),
    Ok(
        "MenuRadioCrystalPlayPad(void)",
    ),
    Ok(
        "MenuRadioCrystalTitleDebugPad(void)",
    ),
    Ok(
        "MenuRadioNoHaveCrystalPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRadioBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioCrystalSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioCrystalPlayDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioNoHaveCrystalDisp(unsigned char)",
    ),
    Ok(
        "MenuRadioCrystalNameFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioNonHearFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioScrollFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioScrollDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioLoadCrystalDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioTopMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioCrystalPlayCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuRadioCrystalTitleTimerDebugDisp(void)",
    ),
    Ok(
        "MenuRadioSelFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuRadioNonSelFrameDisp(float, float, unsigned char)",
    ),
    Ok(
        "MenuRadioNoHearFrameDisp(float, float, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRadioCrystalDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "MenuRadioCrystalFlareDisp(int, int, unsigned char, void *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to GetMenuRadioTexMem(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulInit(void)",
    ),
    Ok(
        "MenuSoulCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulTexLoadWait(void)",
    ),
    Ok(
        "MenuSoulSetDispData(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulPad(void)",
    ),
    Ok(
        "MenuSoulCompMsgPad(void)",
    ),
    Ok(
        "MenuSoulNoListPad(void)",
    ),
    Ok(
        "MenuSoulOutReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MenuSoulTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulListSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCompMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulNotHaveListDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulScrollArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulScrollDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulAccomplishmentRateDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCursorBaseDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulNoReadFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulGhostNameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCursorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCursorTriangleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulOrderSignDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulGhostMaxScoreDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulGhostPlaceDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulGhostInfoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulPhotoDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulGhostExplainDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "MenuSoulNumberDisp(int, int, int, int, unsigned char, int, unsigned char)",
    ),
    Ok(
        "MenuSoulCompleteDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MenuSoulListCompFlgInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuTopInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuTopDispInit(void)",
    ),
    Ok(
        "GetMenuChapterTitleTexLabel(int)",
    ),
    Ok(
        "MenuChapterTitleTexLoadWait(void)",
    ),
    Ok(
        "MenuTopPad(void)",
    ),
    Ok(
        "DebugMenuTopDebugSwitchPad(void)",
    ),
    Ok(
        "CheckMenuCondition(int)",
    ),
    Ok(
        "MenuTopBackGroundLoadStart(void)",
    ),
    Ok(
        "CheckMenuCameraCondition(void)",
    ),
    Ok(
        "CheckMenuFileCondition(void)",
    ),
    Ok(
        "CheckMenuMemoCondition(void)",
    ),
    Ok(
        "CheckMenuRadioCondition(void)",
    ),
    Ok(
        "CheckMenuSoulCondition(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuTopAnimCtrl(void)",
    ),
    Ok(
        "MenuTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopSelectDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopPlayDataDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopPlyrDataDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopChapterTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopWindowDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuTopPlayTimeDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopScoreDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopPhotoNumDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopBusterNumDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopMaxScoreDisp(int, int, unsigned char)",
    ),
    Ok(
        "MenuTopNowDateDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetAccessMcSlot_Msg(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFontPacketHeader(Q_WORDDATA *, int, int, unsigned char)",
    ),
    Ok(
        "SetFont(Q_WORDDATA *, int, int, int, int, int, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetFontTex(Q_WORDDATA *, int, int)",
    ),
    Ok(
        "SetFontPat(Q_WORDDATA *, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetUnderLine(Q_WORDDATA *, int, int, int, int, int, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MesBankExe(DISP_STR *, MSG_EXE_CTRL *)",
    ),
    Ok(
        "MesSetExe(DISP_STR *, MSG_EXE_CTRL *)",
    ),
    Ok(
        "MesWinSizeExe(DISP_STR *, MSG_WIN_DAT *)",
    ),
    Ok(
        "MesArrangeExe(DISP_STR *, MSG_WIN_DAT *, MSG_EXE_CTRL *)",
    ),
    Ok(
        "MesExNumExe(DISP_STR *, MSG_EXE_CTRL *, Q_WORDDATA **)",
    ),
    Ok(
        "MesColExe(DISP_STR *, MSG_EXE_CTRL *)",
    ),
    Ok(
        "MesRetExe(DISP_STR *, MSG_WIN_DAT *, MSG_EXE_CTRL *)",
    ),
    Ok(
        "SetMsgFont(Q_WORDDATA **, DISP_STR *, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "MsgExeCtrlInit(DISP_STR *, MSG_EXE_CTRL *, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MesKeyCheck(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Ok(
        "PrintNull_K(int, int, int, unsigned char, unsigned char, int)",
    ),
    Ok(
        "SpCmnPrintNumber_NK2(int, int, int, int, unsigned char, unsigned char, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawRank(int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawClearTime(int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawClearPoint(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawTassei(int, int, unsigned char)",
    ),
    Ok(
        "MissionDrawScrollbar(int, unsigned char)",
    ),
    Ok(
        "MissionDrawCsrOnly(int, int, int, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawCsr(int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisFadePrint(int, int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisSetNextFunc(int (*)(void))",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisEnSubAllDisp(int)",
    ),
    Ok(
        "MisEnRegistData(void)",
    ),
    Ok(
        "MisCheckClearAllS(void)",
    ),
    Ok(
        "MisEnReleaseTexAll(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "MisPauseCtrlInit(void)",
    ),
    Ok(
        "MisPauseInDispCaptuer(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MisPausePad(void)",
    ),
    Ok(
        "MisPauseReturnTitlePad(void)",
    ),
    Ok(
        "MisPausePadErrorPad(void)",
    ),
    Ok(
        "MisPauseMenuSel(void)",
    ),
    Ok(
        "MisPauseCaptureDataDisp(void)",
    ),
    Ok(
        "MisPauseWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MisPauseTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "MisPauseMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "MisPauseMenuCsrDisp(int, int, unsigned char)",
    ),
    Ok(
        "MisPauseMenuReturnTitleWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "MisPausePadErrorMsgDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MissionKeepSaveData(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MissionResetSaveData(void)",
    ),
    Ok(
        "MissionPushCameraDataEQ(MIS_SAVE_DATA *)",
    ),
    Ok(
        "MissionPushCameraData(MIS_SAVE_DATA *)",
    ),
    Ok(
        "MissionPushMissionData(MIS_SAVE_DATA *)",
    ),
    Ok(
        "MissionPushGen(MIS_SAVE_DATA *)",
    ),
    Ok(
        "MissionResetSaveDataKeepCam(void)",
    ),
    Ok(
        "MissionInitData(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSelDispInit(void)",
    ),
    Ok(
        "MissionSelTexLoadWait(void)",
    ),
    Ok(
        "MissionSubSelMiniMenu(void)",
    ),
    Ok(
        "MissionSelOutReq(int)",
    ),
    Ok(
        "MissionSubSelect(void)",
    ),
    Ok(
        "MissionWindowYesNo(void)",
    ),
    Ok(
        "MissionSubOK(void)",
    ),
    Ok(
        "MissionSubExitOK(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMissionSelNextPhase(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to MissionGetTimePal(int *, int *, int *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphDevCode(ANI_CTRL *)",
    ),
    Ok(
        "MorphSetNewCode(MORPH_CODE_CTRL *)",
    ),
    Ok(
        "MorphSetRateM(MORPH_CTRL *, float)",
    ),
    Ok(
        "MorphSetWorkNo(ANI_CTRL *)",
    ),
    Ok(
        "MorphSetP(MORPH_CTRL *, unsigned int *, float (*)[4])",
    ),
    Ok(
        "MorphResetP(MORPH_CTRL *, unsigned int *, float (*)[4])",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ch017_morph",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motGetBoneNum(unsigned int *)",
    ),
    Ok(
        "motInitClearAniCtrl(ANI_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motAddressMapping(unsigned int *)",
    ),
    Ok(
        "motGetFrameNum(unsigned int *)",
    ),
    Ok(
        "motGetInterpFrameNum(unsigned int *)",
    ),
    Ok(
        "motGetFrameData(RST_DATA *, unsigned int *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motSetInterpMatrix(ANI_CTRL *, float (*)[4][4], float (*)[4][4])",
    ),
    Ok(
        "motInterpAnm(ANI_CTRL *, float (*)[4][4], float (*)[4][4])",
    ),
    Ok(
        "motAddFrame(MOT_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motInitNewMotion(ANI_CTRL *)",
    ),
    Ok(
        "motGetSIFrameNum(unsigned int *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motGetParentId(unsigned int *, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motCheckIncludeRstPacket(unsigned int *)",
    ),
    Ok(
        "motGetFrameDataAddr(unsigned int *, unsigned int)",
    ),
    Ok(
        "motGetFrameDataRST(RST_DATA *, unsigned int *, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "motGetTransId(unsigned int *, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motSceneInterpAnm(ANI_CTRL *, float (*)[4][4], float (*)[4][4], RST_DATA *, RST_DATA *, float)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to motInitANI_CTRL(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterGetIndex(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to movie_projecterInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuMsgDispPad(void)",
    ),
    Ok(
        "MovieRoomMenuFilmSelPad(void)",
    ),
    Ok(
        "MovieRoomMenuFilmPlayConfPad(void)",
    ),
    Ok(
        "MovieRoomMenuExitConfPad(void)",
    ),
    Ok(
        "MovieRoomMenuNoHaveFilmPad(void)",
    ),
    Ok(
        "MovieRoomMenuFilmSetPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuStartMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuFilmSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuFilmPlayConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuExitConfDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuNoHaveFilmDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuFilmSetDisp(int, int, unsigned char)",
    ),
    Ok(
        "GetItemNameFromPlayFilmNo(int)",
    ),
    Ok(
        "GetPlayFilmNoFromItemNo(int)",
    ),
    Ok(
        "MovieRoomMenuCtrlInit(void)",
    ),
    Ok(
        "SetDispFilmData(void)",
    ),
    Ok(
        "MovieRoomMenuDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMovieRoomMenuTexMem(void **, int)",
    ),
    Ok(
        "MovieRoomMenuTexLoadReq(void *, int)",
    ),
    Ok(
        "LiberateMovieRoomMenuTexMem(void **)",
    ),
    Ok(
        "MovieRoomMenuTexLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuFilmSelAnimCtrl(char *, short *)",
    ),
    Ok(
        "MovieRoomMenuFilmReelDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuCursorDisp(int, int, unsigned char)",
    ),
    Ok(
        "MovieRoomMenuFilmReelNameDisp(int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuFilmMoveAnim(char *, short *, float *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetMovieTitleDat(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "NewGameDifficultySelPad(void)",
    ),
    Ok(
        "NewGameItemDisp(int, int, unsigned char)",
    ),
    Ok(
        "NewGameDifficultyDisp(int, int, unsigned char)",
    ),
    Ok(
        "NewGameCursorDisp(int, int, unsigned char)",
    ),
    Ok(
        "NewGameBlackOutAnimCtrl(int)",
    ),
    Ok(
        "NewGameBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "intr_LoadCancelFunc(void *, void *)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to ol_load",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionMainPad(void)",
    ),
    Ok(
        "OptionOperatePad(void)",
    ),
    Ok(
        "OptionButtonSetup(void)",
    ),
    Ok(
        "OptionBrightnessSetup(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionTexLoadWait(void)",
    ),
    Ok(
        "OptVerify(void)",
    ),
    Ok(
        "GetOptWrkChgValue(void)",
    ),
    Ok(
        "ReplaceONOFF(unsigned char)",
    ),
    Ok(
        "ChangeValue(int, int, int, int)",
    ),
    Ok(
        "LiberateOptionTexMem(void **)",
    ),
    Ok(
        "GetOptionTexMem(void **, int)",
    ),
    Ok(
        "OptionTexLoadReq(void *, int)",
    ),
    Ok(
        "OptionTexLoadCancel(void *, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "OptDispTitle(int, int, int, int)",
    ),
    Ok(
        "OptDispBracket(int, int, int)",
    ),
    Ok(
        "OptDispIcon(int, int, int)",
    ),
    Ok(
        "OptDispCursor(int, int, int)",
    ),
    Ok(
        "OptDispCaption(int, int, int)",
    ),
    Ok(
        "OptDispAHeadText(int, int, int)",
    ),
    Ok(
        "OptDispWinMsg(int, int, int)",
    ),
    Ok(
        "OptBrightnessAdjustmentFilterDraw(int)",
    ),
    Ok(
        "OptDispButtonSetupText(int)",
    ),
    Ok(
        "OptPrintMsgShdw(int, int, int, int, int, int, int)",
    ),
    Ok(
        "OptDispCautionMsg(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IngameLoadOnce(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadAnalogRptCtrl(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "PadCheckInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PadCheckMain(void)",
    ),
    Ok(
        "PadCheckMainPad(void)",
    ),
    Ok(
        "PadCheckDispMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "PauseCtrlInit(void)",
    ),
    Ok(
        "PauseInDispCaptuer(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PausePad(void)",
    ),
    Ok(
        "PauseReturnTitlePad(void)",
    ),
    Ok(
        "PausePadErrorPad(void)",
    ),
    Ok(
        "PauseMenuSel(void)",
    ),
    Ok(
        "PauseCaptureDataDisp(void)",
    ),
    Ok(
        "PauseWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "PauseTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "PauseMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "PauseMenuCsrDisp(int, int, unsigned char)",
    ),
    Ok(
        "PauseMenuReturnTitleWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "PausePadErrorMsgDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photoLock3D(void)",
    ),
    Ok(
        "SetSpecialFurn(int)",
    ),
    Ok(
        "DispPhotoName(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "MoviePhaseJobPre(void)",
    ),
    Ok(
        "MoviePhaseJobAfter(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to pfile_wrk",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "furn_soundStop(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to photo_rng_tbl",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PlayData_TotalScoreCount(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrAttractSisMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "playerSetSearchEne(int)",
    ),
    Ok(
        "PlyrSpotLightLookAt(void)",
    ),
    Ok(
        "PlyrKaidanLookAt(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ShutterChanceChangeJob(void)",
    ),
    Ok(
        "SpiritGageCalc(void)",
    ),
    Ok(
        "FinderModeEndJob(void)",
    ),
    Ok(
        "PlyrPhotoChk2Sub(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerTakePictJob(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetFlashlightHand(int)",
    ),
    Ok(
        "_SetFlashlightStep(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to plyr_wrk",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrNeckInit(void)",
    ),
    Ok(
        "PlayerInterpFlame(ANI_CTRL *, int, int)",
    ),
    Ok(
        "PlyrNeckMain(void)",
    ),
    Ok(
        "PlyrNeckGetParam(void)",
    ),
    Ok(
        "LeftHandCtrl(SGDCOORDINATE *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PlyrNeckFrameInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to g_iMaxPlayerAlpha",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HouseInCheck(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "RoomInfoRoomHitCheck(int, int, float, float)",
    ),
    Ok(
        "RoomInfoSetPosition(float *, float, float, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to RoomInInfoInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PzlExeCtrlInit(int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PzlTexDataLoadReq(int)",
    ),
    Ok(
        "PzlExeConfMain(void)",
    ),
    Ok(
        "PzlExeSelPad(void)",
    ),
    Ok(
        "PzlExeConfMsgDispPad(void)",
    ),
    Ok(
        "PzlExePuzzleLoadWait(void)",
    ),
    Ok(
        "PzlExeConfDecision(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PzlExeConfDispMain(void)",
    ),
    Ok(
        "PzlExeConfWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "PzlExeConfAfterMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "PzlExeSelCmnWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "PzlCrossFadeMain(void)",
    ),
    Ok(
        "PzlCrossFadeDispMain(void)",
    ),
    Ok(
        "PzlCrossMovePuzzlePhase(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "PuzzleEndCmnExe(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to PuzzleInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to kaza_panel_center",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to six_puzzle_answer",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleBookSelPad(void)",
    ),
    Ok(
        "SixPuzzleBookShelfPad(void)",
    ),
    Ok(
        "SixPuzzleBookReadPad(void)",
    ),
    Ok(
        "SixPuzzleMsgReadPad(void)",
    ),
    Ok(
        "SixPuzzleExitPad(void)",
    ),
    Ok(
        "SixPuzzleClearPad(void)",
    ),
    Ok(
        "SixPuzzleFailurePad(void)",
    ),
    Ok(
        "SixPuzzleCtrlInit(void)",
    ),
    Ok(
        "SixPuzzleDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleSubOutAnimCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleReqNextSubStep(char)",
    ),
    Ok(
        "SixPuzzleClearCheck(void)",
    ),
    Ok(
        "SixPuzzleEnterBook(void)",
    ),
    Ok(
        "SixPuzzleExitReq(void)",
    ),
    Ok(
        "SixPuzzleReturnFirstState(void)",
    ),
    Ok(
        "SixPuzzleAnim(char *, short *, unsigned char *)",
    ),
    Ok(
        "SixPuzzleBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleShelfBookDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleModeAnimCtrl(void)",
    ),
    Ok(
        "SixPuzzleBookSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookShelfSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookReadDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleMsgReadDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleClearDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleFailureDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleExitSelDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleBookSelAnimCtrl(char *, short *)",
    ),
    Ok(
        "SixPuzzleBookReadBgDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookSelWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookTitleWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookSelArrowDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleCapWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookSelCapDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleShelfCsrDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleShelfSelCapDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleShelfMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookReadWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleBookReadCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleMsgReadFleaDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleMsgReadWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleClearWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleFailureWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SixPuzzleExitConfWinDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleBookAnim(char *, short *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleBookSelArrowAnim(char *, short *, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleCmnWinDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to SixPuzzleExeInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePoint_BgPattern1Disp(float, float, unsigned char)",
    ),
    Ok(
        "SavePoint_BgPattern2Disp(float, float, unsigned char)",
    ),
    Ok(
        "SavePoint_BgFleaDisp(int, int, unsigned char)",
    ),
    Ok(
        "SavePoint_FleaDisp(int, int, unsigned char)",
    ),
    Ok(
        "SavePoint_ShadowDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SavePointFadeInMsgDispPad(void)",
    ),
    Ok(
        "SavePointFadeInMsgWinDisp(int, int, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointMainInit(void)",
    ),
    Ok(
        "SavePointMainCtrlInit(void)",
    ),
    Ok(
        "SavePointMainDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointMainTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SavePointMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointMainDisp(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointTopCtrlInit(void)",
    ),
    Ok(
        "SavePointTopDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointTopTexLoadWait(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SavePointTopPad(void)",
    ),
    Ok(
        "SavePointTopConfPad(void)",
    ),
    Ok(
        "SavePointEndReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SavePointTopExeDecision(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointTopTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "SavePointTopSelMsgDisp(int, int, unsigned char)",
    ),
    Ok(
        "SavePointTopCsrDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SceneDataLoadReq(int, unsigned int *)",
    ),
    Ok(
        "SceneCtrlInit(void)",
    ),
    Ok(
        "SceneManModelLoadReq(void)",
    ),
    Ok(
        "SceneManModelLoadWait(void)",
    ),
    Ok(
        "SceneItemModelLoadReq(void)",
    ),
    Ok(
        "SceneItemModelLoadIsEnd(void)",
    ),
    Ok(
        "SceneSceneNoToAdpcmNo(int)",
    ),
    Ok(
        "SceneManModelClear(void)",
    ),
    Ok(
        "SceneItemModelClear(void)",
    ),
    Ok(
        "SceneDoorModelDBFree(void)",
    ),
    Ok(
        "SceneDataAnalyze(SCENE_FILE *, unsigned int *)",
    ),
    Ok(
        "SceneInitEnvironment(SCENE_FILE *, SCENE_CTRL *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "GetADRTBL(unsigned int *, unsigned int)",
    ),
    Ok(
        "SceneGetHeaderData(SCENE_CTRL *, unsigned int *)",
    ),
    Ok(
        "PrefixToRoomNo(char const *)",
    ),
    Ok(
        "GetHeaderMdlNo(SCN_ANM_MDL *, int, char *)",
    ),
    Ok(
        "SceneLightRevision(SCENE_CTRL *)",
    ),
    Ok(
        "SceneAllMdlInit(SCENE_CTRL *, SCENE_FILE *)",
    ),
    Ok(
        "SceneInitManMdl(SCN_ANM_MDL *, unsigned int *, unsigned int *, unsigned int *, unsigned int)",
    ),
    Ok(
        "SceneInitOtherMdl(SCN_ANM_MDL *, unsigned int *, unsigned int)",
    ),
    Ok(
        "SceneGetMotAddr(unsigned int *, unsigned int, char *)",
    ),
    Ok(
        "SceneGetMimAddr(unsigned int *, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneRenewEnvironment(SCENE_CTRL *)",
    ),
    Ok(
        "SceneLightClear(SCENE_CTRL *)",
    ),
    Ok(
        "SceneDrawRoom(SCENE_CTRL *)",
    ),
    Ok(
        "SceneDrawOtherMdl(SCENE_CTRL *, SCN_ANM_MDL *, float *)",
    ),
    Ok(
        "SceneDrawManMdl(SCENE_CTRL *, unsigned int, float *)",
    ),
    Ok(
        "SceneCameraSet(FOD_CAMERA_DATA *)",
    ),
    Ok(
        "SceneAniCtrlFree(SCENE_CTRL *)",
    ),
    Ok(
        "SceneMonotoneReturn(SCENE_CTRL *)",
    ),
    Ok(
        "SceneSetHandSpotLightToPlyrWrk(FOD_LIGHT *)",
    ),
    Ok(
        "SceneDoorDoubleBufferProc(SCN_ANM_MDL *, int)",
    ),
    Ok(
        "AreaPrefixToTopNo(char const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneManModelIdToSceneModelNo(SCENE_CTRL *, int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneMakeLightName(char *, unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneMakeModelPrefix(char *, unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to scene_ctrl",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "SceneEffectCtrlInit(void)",
    ),
    Ok(
        "SceneEffectFadeModelCtrlInit(void)",
    ),
    Ok(
        "SceneEffectPDeformCtrlInit(void)",
    ),
    Ok(
        "SceneEffectEneAuraCtrlInit(void)",
    ),
    Ok(
        "SceneEffectVibrationCtrlInit(void)",
    ),
    Ok(
        "SceneTorchCtrlInit(void)",
    ),
    Ok(
        "SceneEffectHazeCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectReq(short *, int)",
    ),
    Ok(
        "SceneEffectRegistEffectReq(int)",
    ),
    Ok(
        "SceneEffectVibrationReq(short *, int)",
    ),
    Ok(
        "SceneEffectFadeModelCtrlExec(SCENE_CTRL *)",
    ),
    Ok(
        "SceneEffectEneAuraCtrlExec(void)",
    ),
    Ok(
        "SceneEffectVibrationCtrlExec(int)",
    ),
    Ok(
        "SceneTorchCtrlExec(void)",
    ),
    Ok(
        "SceneEffectHazeCtrlExec(void)",
    ),
    Ok(
        "SceneEffectPDeformCtrlExec(int)",
    ),
    Ok(
        "SceneEffectLenzFlareExec(SCENE_CTRL *)",
    ),
    Ok(
        "SceneEffectCtrlAllDelete(void)",
    ),
    Ok(
        "SceneEffectFadeModelAllDelete(void)",
    ),
    Ok(
        "SceneEffectPDeformCtrlAllDelete(void)",
    ),
    Ok(
        "SceneEffectEneAuraCtrlAllDelete(void)",
    ),
    Ok(
        "SceneEffectVibrationCtrlAllDelete(void)",
    ),
    Ok(
        "SceneTorchCtrlAllDelete(void)",
    ),
    Ok(
        "SceneEffectHazeCtrlAllDelete(void)",
    ),
    Ok(
        "SceneEffectCtrlRegist(void *, int, int)",
    ),
    Ok(
        "SceneEffectCtrlDelete(int)",
    ),
    Ok(
        "SceneEffectReqOneData(short *, int)",
    ),
    Ok(
        "SceneEffectCallDither(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallBlur(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallDeform(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallFocus(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallContrast(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallNega(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectCallFadeFrame(_SCENE_EFFECT_CTRL_DATA *, int)",
    ),
    Ok(
        "SceneEffectVibrationRegist(SCENE_EFFECT_VIBRATION2 *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectChangeDataPtr(_SCENE_EFFECT_CTRL_DATA const *)",
    ),
    Ok(
        "SceneEffectReqDataEnd(short *, int)",
    ),
    Ok(
        "SceneEffectReqOff(short *, int)",
    ),
    Ok(
        "SceneEffectReqFocusDepth(short *, int)",
    ),
    Ok(
        "SceneEffectReqDither(short *, int)",
    ),
    Ok(
        "SceneEffectReqBlur(short *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectReqDeform(short *, int)",
    ),
    Ok(
        "SceneEffectReqFocus(short *, int)",
    ),
    Ok(
        "SceneEffectReqContrast(short *, int)",
    ),
    Ok(
        "SceneEffectReqNega(short *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectReqFadeFrame(short *, int)",
    ),
    Ok(
        "SceneEffectReqOverlap(short *, int)",
    ),
    Ok(
        "SceneEffectReqModelFade(short *, int)",
    ),
    Ok(
        "SceneEffectFadeModelRegist(SCENE_EFFECT_MODELFADE *, int)",
    ),
    Ok(
        "SceneEffectReqPDeform(short *, int)",
    ),
    Ok(
        "SceneEffectPDeformRegist(SCENE_EFFECT_PDEFORM *, int)",
    ),
    Ok(
        "SceneEffectReqLenzFlare(short *, int)",
    ),
    Ok(
        "SceneEffectReqEneAura(short *, int)",
    ),
    Ok(
        "SceneEffectEneAuraRegist(SCENE_EFFECT_ENE_AURA *)",
    ),
    Ok(
        "SceneEffectReqVibration(short *, int)",
    ),
    Ok(
        "SceneEffectReqPointLight(short *, int)",
    ),
    Ok(
        "SceneEffectReqSpotLight(short *, int)",
    ),
    Ok(
        "SceneEffectReqHandSpotLight(short *, int)",
    ),
    Ok(
        "SceneEffectReqTorch(short *, int)",
    ),
    Ok(
        "SceneTorchCtrlRegistAndReq(SCENE_EFFECT_TORCH_DATA *, int)",
    ),
    Ok(
        "SceneEffectReqPDeformOff(short *, int)",
    ),
    Ok(
        "SceneEffectPDeformCtrlDelete(int)",
    ),
    Ok(
        "SceneEffectMonochroModeOnOff(short *, int)",
    ),
    Ok(
        "SceneEffectReqHaze(short *, int)",
    ),
    Ok(
        "SceneEffectHazeRegist(SCENE_EFFECT_HAZE *)",
    ),
    Ok(
        "SceneEffectHazeOff(short *, int)",
    ),
    Ok(
        "SceneEffectHazeCtrlDelete(int)",
    ),
    Ok(
        "SceneEffectFadeInOut(short *, int)",
    ),
    Ok(
        "SceneEffectReqFadeScreen(short *, int)",
    ),
    Ok(
        "SceneEffectReqFadeScreenOff(short *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectVibrationExecPAL(int)",
    ),
    Ok(
        "SceneEffectVibrationCountPAL(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneTestMainMenu(void)",
    ),
    Ok(
        "SceneTestCameraMode(void)",
    ),
    Ok(
        "SceneTestLightSelect(void)",
    ),
    Ok(
        "SceneTestLightData(void)",
    ),
    Ok(
        "SceneTestLightPosDispOnOff(void)",
    ),
    Ok(
        "SceneTestAmbient(void)",
    ),
    Ok(
        "SceneTestFogData(void)",
    ),
    Ok(
        "SceneTestEffect(void)",
    ),
    Ok(
        "SceneTestEffectData(void)",
    ),
    Ok(
        "SceneTestPartsDeform0(void)",
    ),
    Ok(
        "SceneTestPartsDeform1(void)",
    ),
    Ok(
        "SceneTestEneEffFire(void)",
    ),
    Ok(
        "SceneTestEneEffPDeform(void)",
    ),
    Ok(
        "SceneTestEneEffOthers(void)",
    ),
    Ok(
        "SceneTestVibrate(void)",
    ),
    Ok(
        "SceneTestScnTestPdeformInit(SCN_TEST_PDEFORM *)",
    ),
    Ok(
        "SceneTestSelect(void)",
    ),
    Ok(
        "SceneTestPlay(void)",
    ),
    Ok(
        "SceneTestPlayMovie(void)",
    ),
    Ok(
        "SceneTestMenu(void)",
    ),
    Ok(
        "SceneTestAllLightPosDisp(void)",
    ),
    Ok(
        "ScnLRCtrl(int *, int, int)",
    ),
    Ok(
        "SceneTestSetDefEffect(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneTestLoad(void)",
    ),
    Ok(
        "SceneTestLightPosDispInit(void)",
    ),
    Ok(
        "SceneTestDraw(SCENE_CTRL const *, int)",
    ),
    Ok(
        "SceneTestRopeReleaseWorkAll(void)",
    ),
    Ok(
        "SceneTestLightPosDispEnd(void)",
    ),
    Ok(
        "SceneTestLoopManage(char)",
    ),
    Ok(
        "SceneTestMovLoad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SceneTestEffectTest(void)",
    ),
    Ok(
        "SceneTestMenuCsrToFuncNo(int)",
    ),
    Ok(
        "ScnUDCtrl(int *, int, int)",
    ),
    Ok(
        "SceneFileSaveBin(void)",
    ),
    Ok(
        "SceneFileSaveText(void)",
    ),
    Ok(
        "SceneTestPadCamera(void)",
    ),
    Ok(
        "ScnDispPrintVector(char *, float *, float, float)",
    ),
    Ok(
        "RotVectorY(float *, float *, float)",
    ),
    Ok(
        "ScnValueCtrl(float *, float, float, float, float)",
    ),
    Ok(
        "ScnValueCtrlI(int *, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ScnValueCtrlC(unsigned char *, unsigned char, unsigned char, int, int)",
    ),
    Ok(
        "SceneTestPartsDeformCommon(int)",
    ),
    Ok(
        "SceneTestPdeformCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateSetupTexMem(void **)",
    ),
    Ok(
        "GetSetupTexMem(void **, int)",
    ),
    Ok(
        "SetupTexLoadReq(void *, int)",
    ),
    Ok(
        "SetupTexLoadWait(void)",
    ),
    Ok(
        "SetupDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupTexLoadCancel(void *, int)",
    ),
    Ok(
        "SetupBgDisp(int, int, unsigned char, void *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuPad(void)",
    ),
    Ok(
        "SetupMenuSetupSelPad(void)",
    ),
    Ok(
        "SetupMenuExitConfPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuSelMenuDisp(int, int, unsigned char)",
    ),
    Ok(
        "SetupMenuSelSetupDisp(int, int, unsigned char)",
    ),
    Ok(
        "SetupMenuExitConfDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuOffDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuOnDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetupMenuDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuExitReq(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetupMenuGoToGame(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuGotoMission(void)",
    ),
    Ok(
        "SetupMenuTitleFrameDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "SetupMenuTitleDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "SetupMenuCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuSelMenuItemDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCostumeDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCostumeTypeDisp(int, int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuAccessoryDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuMioDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuMayuDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuDifficultyDisp(int, int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuLineDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuTopCursorFrameDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuTopCursorDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuMsgWinDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuGameStartDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuMissionSelectDisp(int, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCursorDisp(int, int, unsigned char, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuCsrLDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCsrFlareLDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCsrRDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SetupMenuCsrFlareRDisp(int, int, unsigned char, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisNeckInit(void)",
    ),
    Ok(
        "SisNeckMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SisNeckGetParam(void)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetEmulationLightdataCreationDataRef(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisNeckFrameInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to sis_mdlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisKaidanLookAt(void)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SearchMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to sis_trace",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SetPlyrSoulListState(int, char)",
    ),
    Ok(
        "SetPlyrSoulListMaxScore(int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to PlyrSoulListInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to zero2_spr_stack",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Ok(
        "SubTitleCtrlStructInit(SUBTITLE_CTRL *)",
    ),
    Ok(
        "SubTitleDataPtrGet(int)",
    ),
    Ok(
        "SubTitleMimReq(int)",
    ),
    Ok(
        "SubTitleMimStop(int)",
    ),
    Ok(
        "SubTitleUpdateStreamPosition(int, int, int)",
    ),
    Ok(
        "SubTitleCheckDispAccept(void)",
    ),
    Ok(
        "SubTitleReqSub(int, int, int, int, float (*)[4])",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_InitException(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitSysWrk(void)",
    ),
    Ok(
        "InitGraphics(void)",
    ),
    Ok(
        "InitVBlank(void)",
    ),
    Ok(
        "v_callback(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "vfunc(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SystemDataSaveCtrlInit(void)",
    ),
    Ok(
        "LiberateSystemDataSaveMem(void **)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSystemDataSaveDataMem(void **, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SystemDataSaveDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemDataSaveMcMain(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SystemDataSaveOutReq(char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "SystemDataSaveMcCheckInit(void)",
    ),
    Ok(
        "SystemDataSaveMcCheckWait(void)",
    ),
    Ok(
        "SystemDataSaveMcSaveConfInit(void)",
    ),
    Ok(
        "SystemDataSaveMcSaveConfWait(void)",
    ),
    Ok(
        "SystemDataSaveMcLoadInit(void)",
    ),
    Ok(
        "SystemDataSaveMcLoadWait(void)",
    ),
    Ok(
        "SystemDataSaveMcSaveInit(void)",
    ),
    Ok(
        "SystemDataSaveMcSaveWait(void)",
    ),
    Ok(
        "SystemDataSaveMcErrorConfInit(void)",
    ),
    Ok(
        "SystemDataSaveMcErrorConfWait(void)",
    ),
    Ok(
        "SystemDataSaveMcEndConf(void)",
    ),
    Ok(
        "SystemDataSaveMcRemakeConfInit(void)",
    ),
    Ok(
        "SystemDataSaveMcRemakeConfWait(void)",
    ),
    Ok(
        "SystemDataSaveMcRemakeDirDelInit(void)",
    ),
    Ok(
        "SystemDataSaveMcRemakeDirDelWait(void)",
    ),
    Ok(
        "SystemDataSaveMcNewMakeConfInit(void)",
    ),
    Ok(
        "SystemDataSaveMcNewMakeConfWait(void)",
    ),
    Ok(
        "SystemDataSaveMcNewMakeInit(void)",
    ),
    Ok(
        "SystemDataSaveMcNewMakeWait(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatConfInit(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatConfWait(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatInit(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatWait(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatEndInit(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatEndWait(void)",
    ),
    Ok(
        "SystemDataSaveMcSaveConfPad(void)",
    ),
    Ok(
        "SystemDataSaveMcEveryFrameCheck(void)",
    ),
    Ok(
        "SystemDataSaveMcErrorConfPad(void)",
    ),
    Ok(
        "SystemDataSaveMcRemakeConfPad(void)",
    ),
    Ok(
        "SystemDataSaveMcNewMakeConfPad(void)",
    ),
    Ok(
        "SystemDataSaveMcFormatConfPad(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2CalcBufSize(int, int, int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleWrkInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleLoadWait(void)",
    ),
    Ok(
        "TitleMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleTexLoadCancel(void *, int)",
    ),
    Ok(
        "TitleDispCtrlInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispTitleBlackBg(int, int, unsigned char)",
    ),
    Ok(
        "DispTitleBgPattern1(float, float, unsigned char)",
    ),
    Ok(
        "DispTitleBgPattern2(float, float, unsigned char)",
    ),
    Ok(
        "DispTitleBgCloud1(float, float, unsigned char)",
    ),
    Ok(
        "DispTitleBgCloud2(float, float, unsigned char)",
    ),
    Ok(
        "DispTitleBgShadeingOffFlea2(float, float, unsigned char)",
    ),
    Ok(
        "DispTitleBgShadeingOffFlea1(float, float, unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleMenuPad(void)",
    ),
    Ok(
        "TitleMenuMovePhase(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Ok(
        "DispTitleMenuItem(int, int, unsigned char)",
    ),
    Ok(
        "DispTitleMenuCursor(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Ok(
        "TitleTopPad(void)",
    ),
    Ok(
        "TitleTopPressStartDisp(unsigned char)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "static_initialization_and_destruction_0",
        ),
    ),
    Ok(
        "global constructors keyed to C_ZERO2_PERF_CNT::FrameInit(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_fixed_array_assert(char const *, unsigned int, unsigned int)",
    ),
    Ok(
        "void * * _fixed_array_verifyrange<void *>(unsigned int, unsigned int)",
    ),
    Ok(
        "char * * _fixed_array_verifyrange<char *>(unsigned int, unsigned int)",
    ),
    Ok(
        "unsigned int * * _fixed_array_verifyrange<unsigned int *>(unsigned int, unsigned int)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FUNCTION",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_libinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "clz_tab",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "clz_tab",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "clz_tab",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "clz_tab",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "unexpected_func",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EXCEPTION_TABLE",
        ),
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "FRAME_END",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_lock_owner",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "sprint",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "sbprintf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "sprint",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "sbprintf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidNamespaceOnNamespacedGlobal(
            "",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSdwSrcDrawFLG(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "ps2_klibinfo",
        ),
    ),
    Ok(
        "MapLoadGetBuffID4Label(int)",
    ),
    Ok(
        "GalPictureManage(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneMovieEffectMain(int, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrAcsAlphaCtrl(void)",
    ),
    Ok(
        "unsigned int type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointTopFirstInit(void)",
    ),
    Ok(
        "CNEquipTraySave::sub_func_metsu_param",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dCalcVu1MaterialDataDirectional(GRA3DVU1MATERIALDATA_DIRECTIONAL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "eeexceptionEnableExcCodeAll(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisCheckClearAll(void)",
    ),
    Ok(
        "gra3dsgdDrawPresetDataObject(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_DMG_LARGE_HIT type_info node",
    ),
    Ok(
        "acsRopeMoveStop(unsigned int)",
    ),
    Ok(
        "MrecGetCameraInfo(void)",
    ),
    Ok(
        "CNEquipTrayWrk::SetRemainParticle(int)",
    ),
    Ok(
        "InitLogoCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__attr_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetManyCandle(EFFECT_CONT *)",
    ),
    Ok(
        "CNPlyrCamera::DrawUnlock(void)",
    ),
    Ok(
        "plyr_mdlBankIsLoopSnd(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB24(ENEALG_WRK *)",
    ),
    Ok(
        "Get2PLength(float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Album(void)",
    ),
    Ok(
        "dmaVif1GetPacketFLUSH_DIRECT(void)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > * __uninitialized_copy_aux<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *, basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *>(basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *, basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *, basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *, __false_type)",
    ),
    Ok(
        "ctl::custom_allocator<char>::custom_deallocate(void *)",
    ),
    Ok(
        "CRenderTarget virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispTitleTecmoLogo(int, int, unsigned char)",
    ),
    Ok(
        "CNEquipTrayWrk::GetNowEquipFuncNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectParticleEndPosCalcNoFinder(float *)",
    ),
    Ok(
        "PARTICLE type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitTerm(void)",
    ),
    Ok(
        "GetPzlTexDataAddr(void)",
    ),
    Ok(
        "int ()[4] * _fixed_array_verifyrange<int ()[4]>(unsigned int, unsigned int)",
    ),
    Ok(
        "EventCameraGetOneData(VCI_CAMERA_POINT *, unsigned int const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sis_mdlBankIsLoopSnd(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "mprec_tinytens",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC2B(ENEALG_WRK *)",
    ),
    Ok(
        "CFile::GetFileTitle(void) const",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleTopMain(void)",
    ),
    Ok(
        "KazaPuzzle2Main(void)",
    ),
    Ok(
        "MisDispTimeInit(void)",
    ),
    Ok(
        "CheckPhotoExpandEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow_type_match",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisterPos(float *)",
    ),
    Ok(
        "CheckSisGhost(void)",
    ),
    Ok(
        "TitleTexBackGroundLoadReq(void)",
    ),
    Ok(
        "_GetGlobalVertexBuffer(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDrawDelRegDatAll(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_DATA virtual table",
    ),
    Ok(
        "ReqPlayerMimContinue(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvDbg_EventGhostPrint(void)",
    ),
    Ok(
        "EffWrkEffectBankSet(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motInitANI_CTRL(void)",
    ),
    Ok(
        "EventCameraCheckFileId(unsigned int const *)",
    ),
    Ok(
        "EVENT_STATE * _fixed_array_verifyrange<EVENT_STATE>(unsigned int, unsigned int)",
    ),
    Ok(
        "MenuFileTexBackGroundLoad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::MultiAppearDisable(void)",
    ),
    Ok(
        "MapFogProc(int, int, float *)",
    ),
    Ok(
        "SetTexaRegister(long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisProc(void)",
    ),
    Ok(
        "SpCmnPrintNumber_NK(int, int, int, int, unsigned char, unsigned char, int, unsigned char, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "main",
        ),
    ),
    Ok(
        "map_bgmMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_60_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_seGetBankID(int)",
    ),
    Ok(
        "movie_projecterTakeFilm(void)",
    ),
    Ok(
        "MrecDoorLineCross(float const *, float const *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SearchSearchPoint(float *, int, float *, int)",
    ),
    Ok(
        "EJobC1F(ENEALG_WRK *)",
    ),
    Ok(
        "CFile::GetFilePath(void) const",
    ),
    Ok(
        "GetPlayerPos(float *)",
    ),
    Ok(
        "__func_type_info type_info node",
    ),
    Ok(
        "CalcParticleNumFromDamage(int)",
    ),
    Ok(
        "init_Story_Debug_Cam(void)",
    ),
    Ok(
        "EffectDropOfWaterDraw(void)",
    ),
    Ok(
        "CTexture::CTexture(void)",
    ),
    Ok(
        "DispPlyrAcs(unsigned int *, unsigned int *, ACS_ALPHA *, unsigned int)",
    ),
    Ok(
        "GetRandValF(float)",
    ),
    Ok(
        "CRenderTarget type_info node",
    ),
    Ok(
        "SIS_ANI_TBL * type_info function",
    ),
    Ok(
        "MAN_DATA::ReadyIn(int *, int *, int *)",
    ),
    Ok(
        "MisEnSubAllClear(void)",
    ),
    Ok(
        "_Vu0LoadColorCoeffConstant(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2LoadTexture(int, unsigned int, int, int, int, __uint128_t *)",
    ),
    Ok(
        "movie_projecterWork(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_LangSel_Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetRectPtr(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "long long type_info function",
    ),
    Ok(
        "DbmFClose(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RTFillamentModeOff(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardExeEndSync(int *)",
    ),
    Ok(
        "EvTimerMain(void)",
    ),
    Ok(
        "MhCtlGetMapHeight(float *, float *, int, int)",
    ),
    Ok(
        "SaveLoadMcCheckDisp(int, int, unsigned char, void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB0E(ENEALG_WRK *)",
    ),
    Ok(
        "CFilament::SetBattle(float)",
    ),
    Ok(
        "MapPutSetLitPtr(void *, GRA3DLIGHTDATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadReload(int)",
    ),
    Ok(
        "g3dCalcFA(G3DFOG const *)",
    ),
    Ok(
        "FlyAct(FLY_WRK *, unsigned char, float *, float *, PLCMN_WRK *)",
    ),
    Ok(
        "FURN_CTL type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraCut(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3ddbgDrawLine(float const *, float const *, unsigned int)",
    ),
    Ok(
        "SetSave_PlyrWrk(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCameraPowerUp::Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CVariable<char, 0, 9> type_info function",
    ),
    Ok(
        "MissionGetStat(int, int)",
    ),
    Ok(
        "end_Story_Load_Mission_Save(void)",
    ),
    Ok(
        "FOD_LIT_SERIAL * _fixed_array_verifyrange<FOD_LIT_SERIAL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DISP_LENS_DATA type_info function",
    ),
    Ok(
        "one_Story_Ene_Dead(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterGetFilmNo(void)",
    ),
    Ok(
        "MesStatusCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dshadowSetBoundingBox(float const (*)[4], float const (*)[4])",
    ),
    Ok(
        "DrawCmnSelNo(unsigned int, float, float, unsigned char)",
    ),
    Ok(
        "MapManimSetAnimEx2(int, int, char *, int *, float *, float *, int, int)",
    ),
    Ok(
        "SaSetDirection(SISALG_WRK *)",
    ),
    Ok(
        "__user_type_info::contained_p(__user_type_info::sub_kind)",
    ),
    Ok(
        "LiberateMenuMemoTexMem(void)",
    ),
    Ok(
        "DebugInit(void)",
    ),
    Ok(
        "PrintMATRIX(float (*)[4])",
    ),
    Ok(
        "sis_mdlGetShadowANI_CTRL(void)",
    ),
    Ok(
        "AlbumEditPhotoFrameDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::npos",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0LoadMaterialPhong(G3DMATERIAL const *)",
    ),
    Ok(
        "MAPSP_KAZ_HEAD * _fixed_array_verifyrange<MAPSP_KAZ_HEAD>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawHitCircle2D(float *, float, int, unsigned char, unsigned char, float)",
    ),
    Ok(
        "GetNowMenu(void)",
    ),
    Ok(
        "gra3dGetTransformRef(GRA3DTRANSFORMSTATETYPE)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSaveDispMain(void)",
    ),
    Ok(
        "GetMdlHeightPos(void *, float *, float *, int)",
    ),
    Ok(
        "mmanageIsReadyItemMdl(int, int *, int)",
    ),
    Ok(
        "IgEffectTourouBaseModelDrawSub(void *, float (*)[4])",
    ),
    Ok(
        "EJobC33(ENEALG_WRK *)",
    ),
    Ok(
        "IgEffectSubFuncFuuReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckCrossFadeDisp(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_PARTICLE * _fixed_array_verifyrange<C_PARTICLE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFilament::FrameReset(void)",
    ),
    Ok(
        "Zero2Anim2D_FadeInAnimCtrl(int *, short)",
    ),
    Ok(
        "acsChodoMakeCollision(COLLISION_DAT *, SGDCOORDINATE *, TUBE *, float)",
    ),
    Ok(
        "TitleAlbumDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC0B(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "int indexof<float>(float const *, float const *)",
    ),
    Ok(
        "CCenterCircle::SetEneCatchFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapManimDeleteOne(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetItemSgdAddr(int *)",
    ),
    Ok(
        "gra3dCallMicroSubroutine2(unsigned int const *)",
    ),
    Ok(
        "GetDist(float, float)",
    ),
    Ok(
        "MorphRun(ANI_CTRL *, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_NowLoading(void)",
    ),
    Ok(
        "CTexture type_info function",
    ),
    Ok(
        "SortPhotoData_NewTime(PFILE_WRK *)",
    ),
    Ok(
        "motGetGuujiTuePos(float *, ANI_CTRL *, int)",
    ),
    Ok(
        "SetLine2D(float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "RD_REG_HEAD type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectHazeReqId(float *, int)",
    ),
    Ok(
        "GetMenuRadioTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjRegistPhf(int, char *)",
    ),
    Ok(
        "KaiPzlRelease(void)",
    ),
    Ok(
        "signed char type_info node",
    ),
    Ok(
        "MenuSoul(void)",
    ),
    Ok(
        "EventCameraVCICtrlInit(unsigned int *)",
    ),
    Ok(
        "g3dDmaFlush(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "divdi3",
        ),
    ),
    Ok(
        "PhotoDebug(void)",
    ),
    Ok(
        "g3dCalcDistanceToScreen(float, float)",
    ),
    Ok(
        "CopySprDToSpr2(DISP_SPRT2 *, SPRT_DAT2 *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatGetStPtr4Label(int, int)",
    ),
    Ok(
        "__class_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrNormalCtrl(void)",
    ),
    Ok(
        "init_GameResult_Top(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Game_Over_Pre(GPHASE_ENUM)",
    ),
    Ok(
        "EVENT_STATE type_info function",
    ),
    Ok(
        "IgEffectSubFuncZeroReq(int, int)",
    ),
    Ok(
        "void __adjust_heap<LIGHTCOMPAREDATA *, int, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, int, int, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "SetSave_ListCompDispFlg(MC_SAVE_DATA *)",
    ),
    Ok(
        "int ()[4] type_info node",
    ),
    Ok(
        "DOOR_CTRL type_info node",
    ),
    Ok(
        "MapDoorCopyMatrxSgd(SGDFILEHEADER *, SGDFILEHEADER *)",
    ),
    Ok(
        "IG3DCompatible type_info node",
    ),
    Ok(
        "g3dCalcEllipseEffectiveRadius(float const (*)[4], float const *)",
    ),
    Ok(
        "GetPlyrFloor(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_sisRelease(void)",
    ),
    Ok(
        "SubTitleStop(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecSetRegBuffID(int, float const *, int)",
    ),
    Ok(
        "BURN_FIRE type_info node",
    ),
    Ok(
        "EJobM02(ENEALG_WRK *)",
    ),
    Ok(
        "alg_manageIsReadyAlg(int, int *)",
    ),
    Ok(
        "MapDrawShadowOne(MLOAD_HEAD *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "MisGetScore(void)",
    ),
    Ok(
        "EJobB0D(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisStInit(void)",
    ),
    Ok(
        "init_Title_Chapter_Sel(void)",
    ),
    Ok(
        "CFile type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorAllPreRender(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetEmulationLightdataCreationDataRef(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sgdRemap(SGDFILEHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugMain(void)",
    ),
    Ok(
        "MDAT_DOOR type_info node",
    ),
    Ok(
        "MenuInOutAnimCtrl(char *, char *, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisDispClearAll(unsigned char, int, int, int, void *, void *)",
    ),
    Ok(
        "ItemUse(int, unsigned char)",
    ),
    Ok(
        "SetEneVram(unsigned int *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetGhostSealDoorState(int)",
    ),
    Ok(
        "SpCmnStart(SPRT_DAT *)",
    ),
    Ok(
        "CNPlyrCamera::PhotoInfoDisp(int, int, _PHOTO_BONUS_SHOT)",
    ),
    Ok(
        "LiberateMenuChapterTitleTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "floatdidf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::ReqNoiseUp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM0B(ENEALG_WRK *)",
    ),
    Ok(
        "MenuMemoDisp(void)",
    ),
    Ok(
        "SwapPK2Dbuf(void)",
    ),
    Ok(
        "Get1Byte(unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectDropOfWaterCut(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureToUnlockGhost(void)",
    ),
    Ok(
        "MrecIsHitRectangleNum(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPadStateStable(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisEnSubLoadWait(void)",
    ),
    Ok(
        "MrecIsInEventSub(float const *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_15__UiUi_PX01",
        ),
    ),
    Ok(
        "SaAnimEnd(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Scene(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "flyAnimationProc(FLY_WRK *)",
    ),
    Ok(
        "CFindFile type_info node",
    ),
    Ok(
        "PlayerShutterLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortGetSgdMatrix(HeaderSection *)",
    ),
    Ok(
        "MissionDrawTime(int, int, int, int, int, unsigned char)",
    ),
    Ok(
        "CAutoTransform<0>::Pop(void)",
    ),
    Ok(
        "SetSprFile(unsigned int)",
    ),
    Ok(
        "GameOverMenuTopInit(void)",
    ),
    Ok(
        "SpCmnDrawSprite(int, int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dDmaSetGsRegisters(_sceGifPackAd const *, int)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__attr_type_info type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrMovePadFind(MOVE_BOX *, float *)",
    ),
    Ok(
        "MapCamGra3dcamSetPositionAddOffset(float const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_SavePoint_Top(GPHASE_ENUM)",
    ),
    Ok(
        "GetPhotoExpand(void)",
    ),
    Ok(
        "EndPK2Dbuf(Q_WORDDATA *)",
    ),
    Ok(
        "SaveLoadSelNoDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "sis_mdlBankPlay(int, int, int, int, _SND_3D_SET *, int, int)",
    ),
    Ok(
        "IngameDecideNextPhase(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsActiveEneDmgParticle(void)",
    ),
    Ok(
        "CaptureScreen(unsigned int)",
    ),
    Ok(
        "end_Puzzle_Kaza2(void)",
    ),
    Ok(
        "GalleryMemFree(void)",
    ),
    Ok(
        "SetEneSlowHitBack(ENE_WRK *, int, int, float)",
    ),
    Ok(
        "CFindFile::SetDirectory(char const *)",
    ),
    Ok(
        "InitEffectObjEF(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMessageV3(unsigned char *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "pure_virtual",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisNeckRegisterTarget(_LOOK_AT_PARAM *, _LOOK_TARGET_PRIORITY_MAYU, float)",
    ),
    Ok(
        "EndMovieWithTitle(void)",
    ),
    Ok(
        "CSpiritGage::CalcDamageRate(_SHUTTER_CHANCE_STATE)",
    ),
    Ok(
        "AlbumViewBackGroundLoadReq(int)",
    ),
    Ok(
        "CopySprDToSpr(DISP_SPRT *, SPRT_DAT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFadeFrame(EFFECT_CONT *)",
    ),
    Ok(
        "MapHitSetDoorRec(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardCheckDirSize(void)",
    ),
    Ok(
        "EvChapterIsDisp(void)",
    ),
    Ok(
        "PlyrOutsideCheck(void)",
    ),
    Ok(
        "MapLoadSetNowRoom(int)",
    ),
    Ok(
        "pre_super(GPHASE_ENUM)",
    ),
    Ok(
        "SceneCtrlGet(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditDisp(void)",
    ),
    Ok(
        "m_plyr_cameraSetSavePowrUp(MC_SAVE_DATA *)",
    ),
    Ok(
        "CNEquipTrayWrk::GetSubFuncArray(char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamGetFov(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IEditObject::TypeInfo(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitMovieWithTitle(int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "sseek",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetCameraAsobi(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "sinit",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMdlShldPos(float *, ANI_CTRL *, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM07(ENEALG_WRK *)",
    ),
    Ok(
        "CFindFile virtual table",
    ),
    Ok(
        "MapLoadDrawRoomOne(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionReleaseSaveData(void)",
    ),
    Ok(
        "pre_GameOver_Menu(GPHASE_ENUM)",
    ),
    Ok(
        "SaveLoadFileSelMsgDisp(int, int, unsigned char, int)",
    ),
    Ok(
        "ItemDbgPlyrItemPrint(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetRDPFire(float *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadingTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumMain(void)",
    ),
    Ok(
        "CNEquipTraySave::IsStockMax(void)",
    ),
    Ok(
        "TitleEndReq(void)",
    ),
    Ok(
        "EJobC05(ENEALG_WRK *)",
    ),
    Ok(
        "CBonusShotOne::Draw(int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphSetRate(ANI_CTRL *, float)",
    ),
    Ok(
        "SceneInitAfterModelLoad(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSaveRegist(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubTitleReq3D(int, float *)",
    ),
    Ok(
        "exception::what(void) const",
    ),
    Ok(
        "foot_seRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dMatrixRotationByAxis(float (*)[4], float const *, float)",
    ),
    Ok(
        "CCameraFilm::aFilmChargeSpdTbl",
    ),
    Err(
        InvalidSpecialMethod(
            "sceKernlGetEhSemaId",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Ending_Movie(void)",
    ),
    Ok(
        "EffEneDmgLargeHitParameterPtrGet(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "register_frame",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimClearToScene(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPhotoExpand(unsigned char)",
    ),
    Ok(
        "MapHitRegistCallback(int, int (*)(MAPHIT_HEAD *, MAPHIT_DAT *, int))",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCameraRectOne(int, float *)",
    ),
    Ok(
        "EJobC3E(ENEALG_WRK *)",
    ),
    Ok(
        "GetMdlWaistPos(float *, ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "GetEffDrawFLG(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::~CRenderTarget(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "sfmoreglue",
        ),
    ),
    Ok(
        "mem_dbgQueryTotalFreeSize(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrFileTotalNum(int)",
    ),
    Ok(
        "CSpiritGage::FadeIn(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaWait(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_SavePoint_FadeIn(void)",
    ),
    Ok(
        "EffectThunderLightExec(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadInit(void)",
    ),
    Ok(
        "_HINT_PHOTO_REQ type_info node",
    ),
    Ok(
        "MisDispTime(int, int, int, int, int, unsigned char)",
    ),
    Ok(
        "FlyInit(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_SAVE_STREAM type_info function",
    ),
    Ok(
        "end_Story_Normal(void)",
    ),
    Ok(
        "type_info::before(type_info const &) const",
    ),
    Ok(
        "PlyrCamTurnChk(void)",
    ),
    Ok(
        "DistHitCheck(float *, float *, float)",
    ),
    Ok(
        "LoadingCtrlMain(void)",
    ),
    Ok(
        "RegDatGetVecNumAll(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_unlock",
        ),
    ),
    Ok(
        "EJobB15(ENEALG_WRK *)",
    ),
    Ok(
        "CSearchMark::Release(void)",
    ),
    Ok(
        "after_Story_SavePoint(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFindFile::IsDirectory(sce_dirent const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaLoopEnd(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionInit(int)",
    ),
    Ok(
        "CFindFile::ErrorString(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadGameDataLoadWait(void)",
    ),
    Ok(
        "gra3dLightPushData(void)",
    ),
    Ok(
        "end_Story_Main(void)",
    ),
    Ok(
        "GetDataMemoryArea(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_ptmd",
        ),
    ),
    Ok(
        "acsRopeGetFurnID(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_ANI_TBL * * _fixed_array_verifyrange<SIS_ANI_TBL *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Mission_Album(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Zero2Anim2D_FadeOutAnimCtrl(int *, short)",
    ),
    Ok(
        "init_Story_Scene_Main(void)",
    ),
    Ok(
        "CMovieRoom::Draw(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_90_i_116_i_13_i_90_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffOthCandleFlameFlareUpReq(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecIsNearRectangle(float *, float *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjStart(MDAT_OBJ *)",
    ),
    Ok(
        "Vu0Normalize(float *, float *)",
    ),
    Ok(
        "EnemyEffectPosUpdate(void)",
    ),
    Ok(
        "MapLoadInitRoom(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Album(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dDmaContinueVu1MicroSubroutine(unsigned int const *)",
    ),
    Ok(
        "TALK_DATA type_info node",
    ),
    Ok(
        "AlbumViewCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_PrintLMatrix(float const (*)[4], char const *)",
    ),
    Ok(
        "SaveLoadClearNumberDisp_One(int, int, int, unsigned char, int, void *)",
    ),
    Ok(
        "PlayData_ScoreCount(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RST_DATA type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "bad_exception type_info function",
    ),
    Ok(
        "ev_seIsReady(void)",
    ),
    Ok(
        "GetCamI2DPos(float const *, float *, float *)",
    ),
    Ok(
        "__class_type_info::~__class_type_info(void)",
    ),
    Ok(
        "photo_datObjSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "CBuffGetRegistNum(void)",
    ),
    Ok(
        "SetSisJoinFlg(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugGetAllSoulList(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrPhotoChk2(void)",
    ),
    Ok(
        "PadSyncCallback(void)",
    ),
    Ok(
        "my_mallocQueryTotalFreeMem(_MY_MALLOC *)",
    ),
    Ok(
        "GhostSealDoorMain(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTrgtRot(float const *, float const *, float *, int)",
    ),
    Ok(
        "motMatrix2Quaternion(float *, float (*)[4])",
    ),
    Ok(
        "after_SavePoint_Main(GPHASE_ENUM)",
    ),
    Ok(
        "ENE_DMG_LARGE_HIT_PARAMETER type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorDeleteBuff(int)",
    ),
    Ok(
        "after_Story_NowLoading(GPHASE_ENUM)",
    ),
    Ok(
        "end_Title_Movie_Mode(void)",
    ),
    Ok(
        "MapDrawDeleteRoomAll(void)",
    ),
    Ok(
        "ctl::custom_allocator<char>::custom_allocate(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_LangSel_Main(void)",
    ),
    Ok(
        "BJobL04(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetASCIIString(float, float, char *)",
    ),
    Ok(
        "EJobB22(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraSetTargetOffset(float *)",
    ),
    Ok(
        "float ()[4] type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void _delete_ContainerPtr_ForEach<ctl::vector<IEditObject *> >(ctl::vector<IEditObject *> &)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAN_DATA::ReleaseIn(void)",
    ),
    Ok(
        "PlayerDrawUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisAlgCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSetTorch2NoSE(float (*)[4], int)",
    ),
    Ok(
        "InitEffectOth(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetOffsetLastChar(char const *, int, char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Move_Movie(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0LoadColorDataConstant(void const *)",
    ),
    Ok(
        "PlayMovieWithTitle(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Puzzle_Kaza2(GPHASE_ENUM)",
    ),
    Ok(
        "SetDust(EFFECT_CONT *)",
    ),
    Ok(
        "CMovieRoom::Release(void)",
    ),
    Ok(
        "ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > >::custom_deallocate(void *)",
    ),
    Ok(
        "motInitOneEnemyAnm(unsigned int *, unsigned int *, unsigned int, unsigned int)",
    ),
    Ok(
        "ChrSortDeleteEnem(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_ACS_CTRL * _fixed_array_verifyrange<C_ACS_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "PlayData_Init(void)",
    ),
    Ok(
        "GameOverScreenBgDisp(unsigned char, unsigned char, unsigned char, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CMovieRoom::Init(void)",
    ),
    Ok(
        "MapManimSetMatrixSgdOne2(SGDFILEHEADER *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "dynamic_cast_2",
        ),
    ),
    Ok(
        "LoadReqGetAddr(int, unsigned int, int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectTourouBaseModelDraw(void)",
    ),
    Ok(
        "IgEffectStoryMainContrastColorGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditAlbumDisp(int, int, int, int, unsigned char)",
    ),
    Ok(
        "SceneGetModelPDeformPos(float *, int, float)",
    ),
    Ok(
        "MenuPhoto(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SortPhotoData_Before(PFILE_WRK *)",
    ),
    Ok(
        "EJobC3C(ENEALG_WRK *)",
    ),
    Ok(
        "init_Title_Top(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutGetNowBuffID(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapManimInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CAutoTransform<0> type_info function",
    ),
    Ok(
        "CulcEP(float *, float *)",
    ),
    Ok(
        "MapLightLed(GRA3DLIGHTDATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ol_loadHeapInit(void *, unsigned int)",
    ),
    Ok(
        "SetMessageV2_2(DISP_STR *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0CalcColorDataLambert(void *, void const *)",
    ),
    Ok(
        "LocalCopyLtoB(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisterStatus(void)",
    ),
    Ok(
        "void __partial_sort<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "dmaVif1WaitPath3(void)",
    ),
    Ok(
        "_Vu0LoadMaterialLambert(G3DMATERIAL const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetGameResultCharPk2Addr(void)",
    ),
    Ok(
        "GetAlbumEditTexAddr(void)",
    ),
    Ok(
        "acsGetRopeCollisionBuf(void)",
    ),
    Ok(
        "GetPK2Dbuf(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Puzzle_Hina(GPHASE_ENUM)",
    ),
    Ok(
        "end_Story_Pause(void)",
    ),
    Ok(
        "end_AutoLoad_Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CTexture::GetImage(void)",
    ),
    Ok(
        "HAZE_PARTICLE * _fixed_array_verifyrange<HAZE_PARTICLE>(unsigned int, unsigned int)",
    ),
    Ok(
        "GetAccessMemoryCardFormat(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Movie_Room_Sel(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadClearCount(int)",
    ),
    Ok(
        "CTexture::Create(G3DTEXTUREDATA const *)",
    ),
    Ok(
        "GetMemoryCardClearDataFlg(int)",
    ),
    Ok(
        "_Alloc_traits<IEditObject *, ctl::custom_allocator<IEditObject *> >::_S_instanceless",
    ),
    Ok(
        "MemoryCardExeInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjRegistRegDatOne(int, int)",
    ),
    Ok(
        "gra3dsgdInit(GRA3DSGDCREATIONDATA const *)",
    ),
    Ok(
        "motReleaseOneAnm(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAP_ANIM_CTL * _fixed_array_verifyrange<MAP_ANIM_CTL>(unsigned int, unsigned int)",
    ),
    Ok(
        "MemoryCardSetIconTitleName(char *, int)",
    ),
    Ok(
        "SetMsgFirstPage(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SingleLinkListFree(SINGLE_LINK_LIST *)",
    ),
    Ok(
        "ol_loadQueryTotalFreeSize(void)",
    ),
    Ok(
        "dmaVif1IsResizeOK(void)",
    ),
    Ok(
        "GetStrWidthMain(unsigned char *, int)",
    ),
    Ok(
        "KaiPzlProc(void)",
    ),
    Ok(
        "GetSdwSrcDrawFLG(void)",
    ),
    Ok(
        "float const * max_element<float const *>(float const *, float const *)",
    ),
    Ok(
        "end_Title_Gallery(void)",
    ),
    Ok(
        "LostLevelGem(void)",
    ),
    Ok(
        "MrecGetCameraSpInfo(MB_OUT_RECT **, void *, int, float *)",
    ),
    Ok(
        "gra3dUseScratchpad(int)",
    ),
    Ok(
        "EJobB10(ENEALG_WRK *)",
    ),
    Ok(
        "EJobM0D(ENEALG_WRK *)",
    ),
    Ok(
        "AlbumB_CurrentFrameFlareDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "DbFurnPreGetObjNum(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_Setup(void)",
    ),
    Ok(
        "OptAnimation(void)",
    ),
    Ok(
        "OL_LOAD_ONE * _fixed_array_verifyrange<OL_LOAD_ONE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Mission_Cam(GPHASE_ENUM)",
    ),
    Ok(
        "end_Title_Mission(void)",
    ),
    Ok(
        "MapSpObjRelease(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_Movie_Mode(void)",
    ),
    Ok(
        "MapLoadGetRegBuffID(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamTargetChange(int)",
    ),
    Ok(
        "exception type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mem_utilGetMem(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SGDFILEHEADER * * _fixed_array_verifyrange<SGDFILEHEADER *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionMain(void)",
    ),
    Ok(
        "PK2SendVramOne(unsigned int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_DATA type_info function",
    ),
    Ok(
        "mem_dbgReset(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEventState(int, unsigned char)",
    ),
    Ok(
        "_PICTURE_SUBJECT type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PrintMsg_T(DISP_STR *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "bad_cast virtual table",
    ),
    Ok(
        "init_Story_Door_Open(void)",
    ),
    Ok(
        "EffectTorch2BigFreaReq(float *)",
    ),
    Ok(
        "_HINT_PHOTO_REQ type_info function",
    ),
    Ok(
        "DispTitleBack(int *, void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazProc(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dDmaLoadVu1MicroProgram(unsigned int const *, int)",
    ),
    Ok(
        "__func_type_info::~__func_type_info(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemDataSaveDispMain(void)",
    ),
    Ok(
        "TALK_TBL * _fixed_array_verifyrange<TALK_TBL>(unsigned int, unsigned int)",
    ),
    Ok(
        "_Vu0LoadColorCoeffPhong(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CHpBar::Draw(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CopyPFileWrk(PFILE_WRK *)",
    ),
    Ok(
        "acsChodoDel(int)",
    ),
    Ok(
        "DrawCameraRect(float *)",
    ),
    Ok(
        "SisterDebug(void)",
    ),
    Ok(
        "MissionGetYesNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB18(ENEALG_WRK *)",
    ),
    Ok(
        "MapDrawGetCenPos(void *, float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_Language(MC_SAVE_DATA *)",
    ),
    Ok(
        "init_Project_Mode(void)",
    ),
    Ok(
        "EJobB0F(ENEALG_WRK *)",
    ),
    Ok(
        "one_Boot_PadCheck(GPHASE_ENUM)",
    ),
    Ok(
        "MpkAddTexOffset(unsigned int *, int)",
    ),
    Ok(
        "NearAllEneInfo(PLCMN_WRK *)",
    ),
    Ok(
        "MapAnimGetFlg(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "cp_push_exception",
        ),
    ),
    Ok(
        "SisterPushCheck(void)",
    ),
    Ok(
        "GalleryInit(void)",
    ),
    Ok(
        "SetSisterRotY(float)",
    ),
    Ok(
        "ReleaseLoadGameTexMem(void)",
    ),
    Ok(
        "MisDispTimeProc(void)",
    ),
    Ok(
        "GalleryDispTop(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulDisp(void)",
    ),
    Ok(
        "LIGHTCOMPAREDATA * __unguarded_partition<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "GameOverLoadEnd(void)",
    ),
    Ok(
        "EJobB1A(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumMenuSelFrameDisp(int, int, int, unsigned char, float, unsigned char)",
    ),
    Ok(
        "MisDispGetTime(void)",
    ),
    Ok(
        "PhotoDmgChkSub2(ENE_WRK *, int, int *)",
    ),
    Ok(
        "UpdateCloudOfDustParticles(PARTICLE *, float, int, int, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadingInit(void)",
    ),
    Ok(
        "end_Story_Scene(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSearchMark::Init(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_array",
        ),
    ),
    Ok(
        "PhotoWrkPreInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuCrossFadeAlpha(unsigned char *)",
    ),
    Ok(
        "Get2Byte(unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "eeexceptionInitialize(void)",
    ),
    Ok(
        "SetLine2DPacket(float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FURN_CTL * _fixed_array_verifyrange<FURN_CTL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TIME_INFO type_info function",
    ),
    Ok(
        "MemoryCardGetCardInfoInit(int, int)",
    ),
    Ok(
        "GetPlyrMdlNo(void)",
    ),
    Ok(
        "EnemyAnimUnlock(void)",
    ),
    Ok(
        "SetRDPFireMove(float *, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlGetMotAddr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__user_type_info::~__user_type_info(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "errno",
        ),
    ),
    Ok(
        "gra3dshadowSetAssignGroup(int)",
    ),
    Ok(
        "__user_type_info::contained_virtual_p(__user_type_info::sub_kind)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dbvIsEllipseInclude(float const (*)[4], float const *)",
    ),
    Ok(
        "MapObjCheckAnim(int, char *, float *, float *, void *, int)",
    ),
    Ok(
        "g3dGsSyncPath(int, unsigned short)",
    ),
    Ok(
        "SceneChangeHandSpotLightParameter(float, float, float, float, float)",
    ),
    Ok(
        "DispVUMemory(void)",
    ),
    Ok(
        "__ptmf_type_info virtual table",
    ),
    Ok(
        "GetPrefixNo(char *)",
    ),
    Ok(
        "OptionMainDisp(void)",
    ),
    Ok(
        "MisStSubLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetYOffset(void)",
    ),
    Ok(
        "end_OutGame_Main(void)",
    ),
    Ok(
        "MapDrawSetSpRoomLight(GRA3DLIGHTDATA *)",
    ),
    Ok(
        "CFilmNo::Init(void)",
    ),
    Ok(
        "EvGetExeAddr(int, int)",
    ),
    Ok(
        "dmaVif1Resize(int)",
    ),
    Ok(
        "SCENE_CTRL * _fixed_array_verifyrange<SCENE_CTRL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckEnhancingSoulListCondition(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB27(ENEALG_WRK *)",
    ),
    Ok(
        "CSearchMark::FadeIn(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dGetAmbientRef(void)",
    ),
    Ok(
        "init_Title_Mode(void)",
    ),
    Ok(
        "GetTex0RegPK(unsigned int, int, unsigned int)",
    ),
    Ok(
        "one_GameOver_Menu_Load(GPHASE_ENUM)",
    ),
    Ok(
        "CNEquipTrayWrk::SetEffectsPre(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerFinderUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PLYR_SOUL_LIST * _fixed_array_verifyrange<PLYR_SOUL_LIST>(unsigned int, unsigned int)",
    ),
    Ok(
        "DISP_CRYSTAL_DATA type_info node",
    ),
    Ok(
        "MemoryCardGetDirInfoReq(int, int, char *)",
    ),
    Ok(
        "CheckEventExeEntry(int)",
    ),
    Ok(
        "Reserve2DPacket(unsigned int)",
    ),
    Ok(
        "mmanageClearItemMdl(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuTopInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAN_DATA::MAN_DATA(void)",
    ),
    Ok(
        "g3dCalcIntersectionSphereAndLine(float (*)[4], float const *, float, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC30(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dLoadTRI2FileToVRAM(int, SGDTRI2FILEHEADER const *, int)",
    ),
    Ok(
        "ChrSortInit(void)",
    ),
    Ok(
        "EJobB11(ENEALG_WRK *)",
    ),
    Ok(
        "MapLightPreRenderObj(void *, int)",
    ),
    Ok(
        "signed char type_info function",
    ),
    Ok(
        "EventCameraSetWorldFlg(int)",
    ),
    Ok(
        "char type_info node",
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_rem_pio2f",
        ),
    ),
    Ok(
        "ModeSisSearch(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionCheckEnd(void)",
    ),
    Ok(
        "PhotoWrkInit(_PHOTO_WRK_DEF const *)",
    ),
    Ok(
        "EJobC22(ENEALG_WRK *)",
    ),
    Ok(
        "FinderDispMain(void)",
    ),
    Ok(
        "CheckMoveTitleMovie(void)",
    ),
    Ok(
        "RegDatGetStPtr4Label2(int)",
    ),
    Ok(
        "EnePosInfoSet(ENE_WRK *)",
    ),
    Ok(
        "GetCrystal(int)",
    ),
    Ok(
        "MapAnimSetCallback(int, int (*)(int, float (*)[4], void *, void *), void *, void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LangData_LoadWait(void)",
    ),
    Ok(
        "end_Puzzle_CrossFade(void)",
    ),
    Ok(
        "motGetBukiUpPos(float *, ANI_CTRL *)",
    ),
    Ok(
        "SendEneVramMono(unsigned int *, int, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqModeSisMotion(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaveLoadMcPlayDataInfoDisp(int, int, unsigned char, int, int, TIME_INFO)",
    ),
    Ok(
        "EffWrkMonochroModeGet(void)",
    ),
    Ok(
        "MAPPUT_OBJ type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Mission_Cam(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectButterflyFadeOut(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSaveCallback(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorInit(void)",
    ),
    Ok(
        "MapAnimMixRst(float (*)[4], RST_DATA *, RST_DATA *, float)",
    ),
    Ok(
        "movie_projecterSetSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditPhotoProtectionFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "PlayerActionUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawSpecialFurnPhoto(float, float)",
    ),
    Err(
        InvalidSpecialMethod(
            "cyg_profile_func_exit",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0CalcVertexColorSpotLightPhong(float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EFF_LEAF_ONE * _fixed_array_verifyrange<EFF_LEAF_ONE>(unsigned int, unsigned int)",
    ),
    Ok(
        "G3DLIGHT type_info function",
    ),
    Ok(
        "EneComboReq(ENE_WRK *, int)",
    ),
    Ok(
        "EffectButterflyMain(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_100_",
        ),
    ),
    Ok(
        "DISP_SOUL_LIST_DATA type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvSaveEffDither(MC_SAVE_DATA *)",
    ),
    Ok(
        "ENE_DMG_BLUR_CONTRAST_PARAMETER * type_info node",
    ),
    Ok(
        "CBuffGetStr(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCrossLine(float const *)",
    ),
    Ok(
        "RegDatGetNextVecPtr(MB_OUT_RECT *)",
    ),
    Ok(
        "void __push_heap<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallPartsDeform3(int, float, void *, unsigned int, unsigned int, unsigned int, int)",
    ),
    Ok(
        "CEneTracer::Work(void)",
    ),
    Ok(
        "g3dApplyLight(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawMiniMenu(void *, void *, int, unsigned char, float, int, int)",
    ),
    Ok(
        "MENU_FILE_DATA type_info function",
    ),
    Ok(
        "playerDrawShadow(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RunBlur(EFFECT_CONT *)",
    ),
    Ok(
        "CFindFile::GetSubDirectoryRef(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumLoadCtrlInit(void)",
    ),
    Ok(
        "mem_utilReset(void *, int)",
    ),
    Ok(
        "GetTecmoLogoTexMem(void)",
    ),
    Ok(
        "end_Story_Photo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeReadCTRL(ANI_CTRL *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__ptmd_type_info type_info function",
    ),
    Ok(
        "CNPlyrCamera::PhotoInfoDispNew(int, int, BONUS_SHOT_SCORE)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Mission_Sel(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "make_dp",
        ),
    ),
    Ok(
        "SisMepachiCtrl(void)",
    ),
    Ok(
        "EneDmgMain(void)",
    ),
    Ok(
        "MAN_DATA::ReleaseAnmIn(void)",
    ),
    Ok(
        "PrintFVECTOR(char *, float *)",
    ),
    Ok(
        "GetMemoryCardDirSize(int)",
    ),
    Ok(
        "EventMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "svfscanf",
        ),
    ),
    Ok(
        "SetLine2PC(int, float, float, unsigned char, unsigned char, unsigned char, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "end_Story_Mission_Result(void)",
    ),
    Ok(
        "SetTex1Register(int, long)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ProjectLogoTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallFire3(void *, int, unsigned char, unsigned char, unsigned char, float, unsigned char, unsigned char, unsigned char, float)",
    ),
    Ok(
        "SetTorch2BigFrea(EFFECT_CONT *)",
    ),
    Ok(
        "MapTesCallbackHit(MAPHIT_HEAD *, MAPHIT_DAT *, int)",
    ),
    Ok(
        "EffectButterflyAllFadeOut(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisGetTexPtr(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_SoftResetMain(void)",
    ),
    Ok(
        "HinaPuzzleNumberDisp_One(int, float, float, unsigned char, int)",
    ),
    Ok(
        "MapSpGetReelPos(void)",
    ),
    Ok(
        "PictureInitSub(void)",
    ),
    Ok(
        "_Vu0CalcVertexColorDirectinalLightPhong(float *)",
    ),
    Ok(
        "TALK_TBL type_info node",
    ),
    Ok(
        "ClearFlg_CheckAllRankS_MissionClear(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3ddbgDrawRangedCone(float const *, float const *, float, float, unsigned int)",
    ),
    Ok(
        "EffectButterflyParticleInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleCrossScreenDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Puzzle(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SPRING type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC07(ENEALG_WRK *)",
    ),
    Ok(
        "CTexture::GetSize(void)",
    ),
    Ok(
        "PlyrMovePad(void)",
    ),
    Ok(
        "SetMemoryCardDataCheckSum(char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqSisAlgo(unsigned char)",
    ),
    Ok(
        "__builtin_type_info::~__builtin_type_info(void)",
    ),
    Ok(
        "CEditRoot::GetObject(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsSetRopeCollision(ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "RegDatGetVecPtr(int, int)",
    ),
    Ok(
        "DrawSPhotoFromSmallPhotoArea2(int, int, int, int, int, int, int, unsigned char)",
    ),
    Ok(
        "SendDMAMain(void)",
    ),
    Ok(
        "SetBlackIn(void)",
    ),
    Ok(
        "CHpBar::Work(void)",
    ),
    Ok(
        "MapCamSetEventCameraFlg(int)",
    ),
    Ok(
        "EffectWaterFlowRegist(void *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuPhotoTexMem(void)",
    ),
    Ok(
        "motGetKuroreiPos(float *, ANI_CTRL *)",
    ),
    Ok(
        "g3dMatrixInverseTransform(float (*)[4], float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsFinderLocked(void)",
    ),
    Ok(
        "SetEneDmgEffect1_Sub(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPMANIM_HEAD type_info node",
    ),
    Ok(
        "motAniCodeSetBuf(ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "EventCameraSetRoll(float)",
    ),
    Ok(
        "bad_exception virtual table",
    ),
    Ok(
        "SGDFILEHEADER type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "make_fp",
        ),
    ),
    Ok(
        "MenuMain(void)",
    ),
    Ok(
        "void fill<_LIGHTCOMPAREDATA *, _LIGHTCOMPAREDATA>(_LIGHTCOMPAREDATA *, _LIGHTCOMPAREDATA *, _LIGHTCOMPAREDATA const &)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearMenuTexLoadReq(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobE00(ENEALG_WRK *)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_",
        ),
    ),
    Ok(
        "CFadeVariable<float>::Fade(float, float)",
    ),
    Ok(
        "CFEneEntry::Release(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DISP_ITEM_DATA * _fixed_array_verifyrange<DISP_ITEM_DATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "motGetRandom(float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlyrFile(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetEvState(int)",
    ),
    Ok(
        "MrecCheckDoorHitSta(int, int)",
    ),
    Ok(
        "FreqCamera(void)",
    ),
    Ok(
        "SetFlash(void)",
    ),
    Ok(
        "AlbumSaveMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SoftResetUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LangData_LoadReq(void)",
    ),
    Ok(
        "SgSortPreProcess(unsigned int *)",
    ),
    Ok(
        "EJobB20(ENEALG_WRK *)",
    ),
    Ok(
        "EneDmgParticleEndPosSet(float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dEmulateDirectionalLight(G3DLIGHT *, G3DLIGHT const *, G3DLIGHTTYPE, float const *)",
    ),
    Ok(
        "EffectSprayAllDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Menu(void)",
    ),
    Ok(
        "ItemUsePossible(int, unsigned char)",
    ),
    Ok(
        "gra3ddbgDrawSphere(float const *, float, unsigned int, float const *)",
    ),
    Ok(
        "CNPlyrCamera::ReqNoiseReset(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectEnd(void)",
    ),
    Ok(
        "DrawDbgMenu(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::AccumulaterDraw(int, int, int)",
    ),
    Ok(
        "KaiPzlClear(void)",
    ),
    Ok(
        "EFF_LEAF_ONE type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "dmaVif1Kick(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetTitleBgSendLock(unsigned char)",
    ),
    Ok(
        "MapPutGetModelPtr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SCENE_CTRL type_info node",
    ),
    Ok(
        "SCREEN_EFFECT_PARAMETER type_info function",
    ),
    Ok(
        "MemoryCardFormatInit(int, int)",
    ),
    Ok(
        "mem_dbgQueryMaxFreeSize(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSaeHazeReq(float (*)[4], float (*)[4], float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPuzzleSetFade2(int, int, int, int)",
    ),
    Ok(
        "end_Boot_PadCheck(void)",
    ),
    Ok(
        "release_typeSetSaveJ(MC_SAVE_DATA *)",
    ),
    Ok(
        "foot_sePlay(float *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvSavePosStream(MC_SAVE_DATA *)",
    ),
    Ok(
        "IgEffectTourouFreaModelDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerCurseLock(void)",
    ),
    Ok(
        "GetItemType(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "log_10sub(float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTitleTexMem(void **, int)",
    ),
    Ok(
        "gra3dIsFogEnable(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSynchroModeFlg(void)",
    ),
    Ok(
        "GetSetupBgPk2Addr(void)",
    ),
    Ok(
        "MemoryCardMakeNewDirReq(int, int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCsrAnimCtrl(char *, unsigned char *)",
    ),
    Ok(
        "CStdioFile type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndAllPause(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCmnNumberTex(int, int, SPRT_DAT *, int, int, unsigned char, int, unsigned char)",
    ),
    Ok(
        "gra3dSetGsRegisters(_sceGifPackAd const *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaNeckPos(SISALG_WRK *)",
    ),
    Ok(
        "CNEquipTraySave::ResetGage(void)",
    ),
    Ok(
        "end_Tecmo_Mode(void)",
    ),
    Ok(
        "EJobC2F(ENEALG_WRK *)",
    ),
    Ok(
        "MapLoadGetBuffID(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_attr",
        ),
    ),
    Ok(
        "EJobM0F(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCenterCircle::Init(void)",
    ),
    Ok(
        "EFFECT_MALLOC(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dExecPrelight(SGDFILEHEADER *, float const (*)[4])",
    ),
    Ok(
        "DrawPhotoBuffer(unsigned int, int, int, int, int, int, int, int, int, int, unsigned char, int)",
    ),
    Ok(
        "iopalloc(unsigned int, char *)",
    ),
    Ok(
        "CheckModelBoundingBox(float const (*)[4])",
    ),
    Ok(
        "TAIL_DMG2_DAT type_info node",
    ),
    Ok(
        "MemoryCardFileSaveInit(int, int, char *, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Movie_Room(void)",
    ),
    Ok(
        "CheckHintSE(MDAT_OBJ *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC3D(ENEALG_WRK *)",
    ),
    Ok(
        "PrintMsg_TW(DISP_STR *, MSG_WIN_DAT *)",
    ),
    Ok(
        "MakeClutDirect_ChrMono(unsigned int *, int, int, unsigned int *)",
    ),
    Ok(
        "RegDatGetNextStPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgDumpVu0FloatingPointRegisters(float const (*)[4])",
    ),
    Ok(
        "_Vu0LoadColorCoeffLambert(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_AlbumData(MC_SAVE_DATA *)",
    ),
    Ok(
        "gra3dLightEnableAll(int)",
    ),
    Ok(
        "MenuCrossFadeInStart(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_GameOver_Movie(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutGetWork(void *)",
    ),
    Ok(
        "MapLoadGetRoomNoNow(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::IsReady(void)",
    ),
    Ok(
        "SaveLoadTitleLoadDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "FodChangeFodLightToGra3dLight(GRA3DLIGHTDATA *, FOD_LIGHT *, char *, float const *)",
    ),
    Ok(
        "SetWString2(int, float, float, unsigned char, unsigned char, unsigned char, char *)",
    ),
    Ok(
        "ENDMG1 type_info function",
    ),
    Ok(
        "AlbumSaveCtrlInit(void)",
    ),
    Ok(
        "CFEneEntry::Unlock(void)",
    ),
    Ok(
        "MenuItem(void)",
    ),
    Ok(
        "EJobB21(ENEALG_WRK *)",
    ),
    Ok(
        "IEditObject::~IEditObject(void)",
    ),
    Ok(
        "InitVibrate(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameResultFadeOutReq(void)",
    ),
    Ok(
        "RTFillamentModeOn(int, int)",
    ),
    Ok(
        "FurnLoadGetAttr(char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardNewMakeMain(void)",
    ),
    Ok(
        "EffectButterflyParticleMain(void)",
    ),
    Ok(
        "SubTitleReq(int)",
    ),
    Ok(
        "DrawEneSubObj(unsigned int *, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutChangeFunc(void *, void (*)(void))",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_SavePoint_Main(GPHASE_ENUM)",
    ),
    Ok(
        "init_Story_Movie_Room_Sel(void)",
    ),
    Ok(
        "SaveLoadFileSelMsgWinDisp(int, int, unsigned char)",
    ),
    Ok(
        "SetupSisMdl(void)",
    ),
    Ok(
        "CEneLife::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuOutReq(void)",
    ),
    Ok(
        "bad_typeid type_info node",
    ),
    Ok(
        "AddCNTtag(Q_WORDDATA *, int)",
    ),
    Ok(
        "BJobL02(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::CRenderTarget(void)",
    ),
    Ok(
        "CNEquipTrayWrk::SetSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugMsgCtrlInit(void)",
    ),
    Ok(
        "GetFileTexId(int, int)",
    ),
    Ok(
        "MAN_DATA::InitIn(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dbbIsInViewvolume(float (*)[4], float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPSP_KAZ_HEAD type_info node",
    ),
    Ok(
        "GhostSealDoorRelease(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sce_dirent * __uninitialized_copy_aux<sce_dirent *, sce_dirent *>(sce_dirent *, sce_dirent *, sce_dirent *, __false_type)",
    ),
    Ok(
        "init_Story_Movie_Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlayerFloor(int)",
    ),
    Ok(
        "SisAlgoMain(void)",
    ),
    Ok(
        "CEneLife::FrameLenSet(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsInitRopeWork(void)",
    ),
    Ok(
        "PlayMovie(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_ClearMenu_Top(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "check_null_eh_spec",
        ),
    ),
    Ok(
        "ReleaseLoadingTexMem(void)",
    ),
    Ok(
        "SetOverRap(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CAutoTransform<0> type_info node",
    ),
    Ok(
        "SetString(float, float, char const *, ...)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitCollisionPoint(float *, float *, float *, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB23(ENEALG_WRK *)",
    ),
    Ok(
        "TORCH2_PARAMETER * * _fixed_array_verifyrange<TORCH2_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Ok(
        "BUTTERFLY_TARGET_PARAMETER * * _fixed_array_verifyrange<BUTTERFLY_TARGET_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Ok(
        "__user_type_info::contained_nonpublic_p(__user_type_info::sub_kind)",
    ),
    Ok(
        "end_Story_Game_Over(void)",
    ),
    Ok(
        "CRenderTarget::SetHeight(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "UncompressPhoto(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "char type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EFFECT_FREE(void *)",
    ),
    Ok(
        "ReqSisterMimContinue(int, int)",
    ),
    Ok(
        "MhFirstInit(void)",
    ),
    Ok(
        "one_Mission_Save(GPHASE_ENUM)",
    ),
    Ok(
        "FinderBankIsReady(void)",
    ),
    Ok(
        "dmaVif1GetPacket(void)",
    ),
    Ok(
        "MapFogReset(void)",
    ),
    Ok(
        "one_Story_Mission_Result(GPHASE_ENUM)",
    ),
    Ok(
        "Tim2LoadClut(TIM2_PICTUREHEADER *, unsigned int)",
    ),
    Ok(
        "CEditRoot::Create(char const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::AreaChange(int, int)",
    ),
    Ok(
        "EventCameraVCIPlay(void)",
    ),
    Ok(
        "g3dSetAmbient(float const *)",
    ),
    Ok(
        "TORCH2_BURST_PARAMETER * * _fixed_array_verifyrange<TORCH2_BURST_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Ok(
        "GetVecLenUnitFrom2Point(float *, float *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionVibChange(int)",
    ),
    Ok(
        "KazaPuzzleDispMain(void)",
    ),
    Ok(
        "FurnWorkInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FinderDispInit(void)",
    ),
    Ok(
        "EffectEndSet(void)",
    ),
    Ok(
        "PlayData_PlayTimeInit(void)",
    ),
    Ok(
        "gra3dGetLightStatusRef(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadDataLoadReq(void)",
    ),
    Ok(
        "g3dAcosf(float)",
    ),
    Ok(
        "GalleryEnd(void)",
    ),
    Ok(
        "TalkExeMain(unsigned char)",
    ),
    Ok(
        "Anim2D_CalcNowRot(ROT_ANIM_TBL const *, int)",
    ),
    Ok(
        "CNEquipTrayWrk::RenzMarkOff(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCenterCircle::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__si_type_info::~__si_type_info(void)",
    ),
    Ok(
        "MapSpFusumaProc(void)",
    ),
    Ok(
        "MapLightSetScale(GRA3DLIGHTDATA *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "MapObjDeletDraw(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SGDFILEHEADER * type_info node",
    ),
    Ok(
        "SaRndJump(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Gallery(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileWriteReq(int, void *, int)",
    ),
    Ok(
        "MapLoadInit(int)",
    ),
    Ok(
        "SetNextGPhase(GPHASE_ID_ENUM)",
    ),
    Ok(
        "_PrintMatrix(float const (*)[4], char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlClearAll(void)",
    ),
    Ok(
        "init_SavePoint_Album(void)",
    ),
    Ok(
        "g3dCalcLightAttenuation(G3DLIGHT const *, float const *)",
    ),
    Ok(
        "DoorCtrlInit(void)",
    ),
    Ok(
        "GetPhotoExpandNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsClothCtrl(ANI_CTRL *, unsigned int *, unsigned int, unsigned char)",
    ),
    Ok(
        "MovieCountGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC20(ENEALG_WRK *)",
    ),
    Ok(
        "release_typeClear(void)",
    ),
    Ok(
        "MrecGetCameraID(void)",
    ),
    Ok(
        "EffectWaterFlowExec(void)",
    ),
    Ok(
        "acsRopeSetWork(unsigned int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortRegistFly(FLY_WRK *)",
    ),
    Ok(
        "unexpected(void)",
    ),
    Ok(
        "CFilmNo::BlinkOn(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "COLLISION_DAT type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC47(ENEALG_WRK *)",
    ),
    Ok(
        "EJobC00(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetVUVNPRIM(void)",
    ),
    Ok(
        "SaveLoadMcClearPlayDataInfoDisp(int, int, unsigned char, TIME_INFO)",
    ),
    Ok(
        "g3dGetTransformRef(G3DTRANSFORMSTATETYPE)",
    ),
    Ok(
        "g3ddbgVerifyGsRegisterAddress(void)",
    ),
    Ok(
        "EffectHazeCutId(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsPlayerMimParts(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterDraw(void)",
    ),
    Ok(
        "PointSearchCameraCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardAllFileNum(int)",
    ),
    Ok(
        "CEditRoot::SwitchNextItem(void)",
    ),
    Ok(
        "DoorSealDisappearDraw(void)",
    ),
    Ok(
        "OL_LOAD::Clear(int)",
    ),
    Ok(
        "MapObjRegistMot(int, MAPOBJ_DAT *, char *, int, int, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulTexLoadCancel(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "padIsConnected(int)",
    ),
    Ok(
        "gra3dSetValidLightId(int, unsigned int, int)",
    ),
    Ok(
        "end_Puzzle_Kaza(void)",
    ),
    Ok(
        "SetIngameListnerInfo(void)",
    ),
    Ok(
        "EvChapterDispStartReq(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisterDamageCtrl(void)",
    ),
    Ok(
        "LocalCopyLtoL(int, int, int)",
    ),
    Ok(
        "DebugAllClearFlgUp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrOpenDoor(void)",
    ),
    Ok(
        "release_typeGetReleaseType(int, int)",
    ),
    Ok(
        "MapHitDeleteAll(void)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::replace(unsigned int, unsigned int, unsigned int, char)",
    ),
    Ok(
        "EJobC37(ENEALG_WRK *)",
    ),
    Ok(
        "MapAnimInit(void)",
    ),
    Ok(
        "MAN_DATA::AccessoryDraw(int)",
    ),
    Ok(
        "MenuDBuffChange(void)",
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::FuyuActReq(float (*)[4]) const",
    ),
    Ok(
        "EffectTourouBaseDelete(int)",
    ),
    Ok(
        "IgEffectSubFuncRenReq(int, int)",
    ),
    Ok(
        "GetCrystalTitleDat(int)",
    ),
    Ok(
        "IngameEventMsgDispReq(int)",
    ),
    Ok(
        "SavePointMainBackGroundLoadReq(void)",
    ),
    Ok(
        "MemoryCardFileReadInit(int, void *, int)",
    ),
    Ok(
        "SetSave_PlyrMemo(MC_SAVE_DATA *)",
    ),
    Ok(
        "one_Project_Mode(GPHASE_ENUM)",
    ),
    Ok(
        "CEditRoot virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFlyLight(FLY_WRK *)",
    ),
    Ok(
        "pre_Story_Scene(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubBlur(int, unsigned char, float, float, float, float, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dbbCopy(float (*)[4], float const (*)[4])",
    ),
    Ok(
        "HAZE_PARTICLE type_info function",
    ),
    Ok(
        "acsRopeMakeCollision(COLLISION_DAT *, float (*)[4], TUBE *, float)",
    ),
    Ok(
        "CRenderTarget::GetGsTex0Ref(void)",
    ),
    Ok(
        "CFindFile::GetNumSubDirectory(void)",
    ),
    Ok(
        "GetPadAnalogRpt(int)",
    ),
    Ok(
        "AlbumTitleFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "MemoryCardFormatReq(int, int)",
    ),
    Ok(
        "TORCH2_BURST_PARAMETER type_info node",
    ),
    Ok(
        "SixPuzzleCrossScreenDisp(int, int, unsigned char)",
    ),
    Ok(
        "motAlign128(unsigned int *)",
    ),
    Ok(
        "IG3DCompatible::s_pFuncGetTransformRef",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SortEffectPacket(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "infinity",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeExec(ANI_CTRL *, unsigned short, int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_gra3dDrawSGD(SGDFILEHEADER *, SGDRENDERTYPE, SGDCOORDINATE *, int)",
    ),
    Ok(
        "GetPlyrAreaNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadSetNoRegList(void)",
    ),
    Ok(
        "FurnCtlGetMdoelName(char *, char *)",
    ),
    Ok(
        "ClearFlg_HardGameClearExe(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointMainMemFree(void)",
    ),
    Ok(
        "DISP_MEMO_DATA * _fixed_array_verifyrange<DISP_MEMO_DATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "PLYR_MEMO type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrAvoidCheck(void)",
    ),
    Ok(
        "Zero2Anim2D_InOutAnimCtrl(char *, char *, short, short)",
    ),
    Ok(
        "ModeSisMotion(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "cp_exception_info",
        ),
    ),
    Ok(
        "MapManimDelete(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_OutGame_Main(GPHASE_ENUM)",
    ),
    Ok(
        "EffOthTorch2BurstParameterPtrGet(int)",
    ),
    Ok(
        "Vector2Rot(float const *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ResetClutAlpha(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DbgSisLookPointCtrl(void)",
    ),
    Ok(
        "MemoryCardMakeSearchDirPath(char *, int)",
    ),
    Ok(
        "plyr_mdlInit(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_ZA19_6SPRING",
        ),
    ),
    Ok(
        "SetPlyrAnime(unsigned char, unsigned char)",
    ),
    Ok(
        "DispChara(int, unsigned char, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "after_Ending_Movie(GPHASE_ENUM)",
    ),
    Ok(
        "pre_GameResult(GPHASE_ENUM)",
    ),
    Ok(
        "SetMemoryCardPlayDataHead(int, char)",
    ),
    Ok(
        "CNPlyrCamera::FrameReset(void)",
    ),
    Ok(
        "_gra3dEnableTextureForce(int)",
    ),
    Ok(
        "ClearMenuTopMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDrawIsEnableFlashlightOnly(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dsgdGetCoordinate(int)",
    ),
    Ok(
        "FinderDrawLock(void)",
    ),
    Ok(
        "IsReadyPlyrMdl(void)",
    ),
    Ok(
        "ClearFlgMerging(CLEAR_FLG_CTRL, CLEAR_FLG_CTRL)",
    ),
    Ok(
        "MapDoorRelease(void)",
    ),
    Ok(
        "GetSystemTime(DATE_INFO *)",
    ),
    Ok(
        "float * min_element<float *>(float *, float *)",
    ),
    Ok(
        "FurnCtlGetHeadPtr(int, char *)",
    ),
    Ok(
        "MissionGetPrize(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ManItemSGDDraw(HeaderSection *, ANI_CTRL *, int)",
    ),
    Ok(
        "motAniCodeIsEnd(unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureDisp(void)",
    ),
    Ok(
        "motGetAniWorkArea(unsigned int *, unsigned int *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_seRegisterFile(int, int)",
    ),
    Ok(
        "SetPlyrFileState(int, int, char)",
    ),
    Ok(
        "end_Story_Scene_PreLoad(void)",
    ),
    Ok(
        "MapObjItemOn(void)",
    ),
    Ok(
        "EneActSet(ENE_WRK *, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneCountFlgSet(int)",
    ),
    Ok(
        "PrintMsg_P(int, int, int, int, int, int, int, int, int)",
    ),
    Ok(
        "SavePoint_BgDisp(int *, int *, int *, void *)",
    ),
    Ok(
        "sgdEnableOptimizeTexture(int)",
    ),
    Ok(
        "acsRopeMoveCtrl(ROPE_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrFlashlight(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemGetPossible(int)",
    ),
    Ok(
        "AlbumEditMenuDelete(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "fene_entrySetSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorGetModelSize(char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "NewGameMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC3A(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrRoomLabel(void)",
    ),
    Ok(
        "m_plyr_cameraSetSaveEQ(MC_SAVE_DATA *)",
    ),
    Ok(
        "BoundingBoxCalcP(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "float ()[4][4] type_info node",
    ),
    Ok(
        "vector<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >, ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > > >::_M_insert_aux(basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > *, basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > const &)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "DTOR_END",
        ),
    ),
    Ok(
        "Tim2LoadPicture2(TIM2_PICTUREHEADER *, unsigned int, unsigned int, unsigned int)",
    ),
    Ok(
        "GetPlyrFtype(void)",
    ),
    Ok(
        "DbmFOpen(char *, int)",
    ),
    Ok(
        "LoadGameEnd(void)",
    ),
    Ok(
        "MapDrawPreLight(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuMemoTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamCmnReinforcedLensDisp(float, float, unsigned char, int)",
    ),
    Ok(
        "MapSaveSetStat(int, int, int)",
    ),
    Ok(
        "gra3dSetTransform(GRA3DTRANSFORMSTATETYPE, float const (*)[4])",
    ),
    Ok(
        "end_LangData_Check(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardPlayDataClearNum(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisDead(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisterRot(float *)",
    ),
    Ok(
        "ctl::custom_allocator<IEditObject *> type_info function",
    ),
    Ok(
        "FurnCtlGetAnimID(char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetGlobalNormalBuffer(void)",
    ),
    Ok(
        "MenuOutCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndStop(int, int, int)",
    ),
    Ok(
        "MDAT_DOOR * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumA_CurrentFrameFlareDisp(int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "ROOM_IN_INFO * _fixed_array_verifyrange<ROOM_IN_INFO>(unsigned int, unsigned int)",
    ),
    Ok(
        "SPChanceMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvItemNameDispStartReq(int, int, int)",
    ),
    Ok(
        "one_ClearMenu_Save(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ScreenCtrl(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_logf",
        ),
    ),
    Ok(
        "MenuFileMemRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnWorkTrem(void)",
    ),
    Ok(
        "BackupEneVramCtrl(void)",
    ),
    Ok(
        "RegDatGetStPtr4Label3(int, int)",
    ),
    Ok(
        "GetMdlHipPos(float *, ANI_CTRL *, unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PrintChoice(DISP_STR *, MSG_WIN_DAT *, int, int *, int)",
    ),
    Ok(
        "MenuCmnLineTateDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "IsTargetInSight(ANI_CTRL *, float *)",
    ),
    Ok(
        "CFindFile::CurrentDirectory(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorClose(int)",
    ),
    Ok(
        "EventCameraSetPositionOffset(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Photo(GPHASE_ENUM)",
    ),
    Ok(
        "GetPadDUALSHOCK2(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisDispStartInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC04(ENEALG_WRK *)",
    ),
    Ok(
        "MapLoadGetHeader(void)",
    ),
    Ok(
        "FileStGetType(int)",
    ),
    Ok(
        "m_plyr_cameraSetSaveFilmType(MC_SAVE_DATA *)",
    ),
    Ok(
        "end_Puzzle_Hina(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumThumbnailBaseDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "SetSave_SisMotion(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChangeMonochrome(int)",
    ),
    Ok(
        "MemoryCardCheckMain(void)",
    ),
    Ok(
        "EJobM09(ENEALG_WRK *)",
    ),
    Ok(
        "EJobC24(ENEALG_WRK *)",
    ),
    Ok(
        "DrawPerformanceCounter2(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HEAT_HAZE * _fixed_array_verifyrange<HEAT_HAZE>(unsigned int, unsigned int)",
    ),
    Ok(
        "GetClearMenuTexMem(void **, int)",
    ),
    Ok(
        "set_terminate(void (*)(void))",
    ),
    Ok(
        "PlayerGameOver(void)",
    ),
    Ok(
        "GalPK2SendVram(int, void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitPhotoWrk(void)",
    ),
    Ok(
        "SetASCIIString2(int, float, float, int, unsigned char, unsigned char, unsigned char, char *)",
    ),
    Ok(
        "DrawCmnYesNoSel(int, float, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM15(ENEALG_WRK *)",
    ),
    Ok(
        "GetAlbumCmnTexAddr(void)",
    ),
    Ok(
        "LoadGameInit(void)",
    ),
    Ok(
        "gra3dGetNumLightInitial(GRA3DLIGHTDATA const *, int)",
    ),
    Ok(
        "EffectObjPartsDeformBlurCheck(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSquareN(int, float, float, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ol_loadGetHeap(int)",
    ),
    Ok(
        "GetAccessMemoryCardType(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoState(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_Ending_Movie(GPHASE_ENUM)",
    ),
    Ok(
        "EachDebugMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CVu0Matrix::s_pFuncLoadMatrix",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "after_Title_Mode(GPHASE_ENUM)",
    ),
    Ok(
        "CRenderTarget::SetClearColor(unsigned int)",
    ),
    Ok(
        "MANY_CANDLE_PARTICLE type_info function",
    ),
    Ok(
        "SingleLinkListRemoveBegin(SINGLE_LINK_LIST *)",
    ),
    Ok(
        "float ()[4] type_info function",
    ),
    Ok(
        "EffWrkStopFlgSet(int)",
    ),
    Ok(
        "SetMsgDefData(DISP_STR *, int)",
    ),
    Ok(
        "C_ZERO2_PERF_CNT::GetPercent(void)",
    ),
    Ok(
        "GetPlyrDrawFLG(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::aFuyuAppearTbl",
    ),
    Ok(
        "type_info::operator!=(type_info const &) const",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sis_mdlMotionWork(void)",
    ),
    Ok(
        "CSPChance::Release(void)",
    ),
    Ok(
        "InitGraph2dEFrame(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectLightComeInGetDataPtr(void *)",
    ),
    Ok(
        "MapDrawInitFurn(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FilamentDrawLock(void)",
    ),
    Ok(
        "LiberateClearMenuTexMem(void **)",
    ),
    Ok(
        "CFilament::FadeIn(void)",
    ),
    Ok(
        "SetCoordinate(ANI_CTRL *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne::Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecIsCameraChange(void)",
    ),
    Ok(
        "DispPointNumberNew(int, short, short, unsigned char)",
    ),
    Ok(
        "EvDbg_EventStatePrint(void)",
    ),
    Ok(
        "ApproachCameraCrossFadeSW(int)",
    ),
    Ok(
        "SCN_ANM_MDL type_info node",
    ),
    Ok(
        "CFindFile::~CFindFile(void)",
    ),
    Ok(
        "g3dIsBBLightingup(G3DLIGHT const *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC1B(ENEALG_WRK *)",
    ),
    Ok(
        "EffectButterflyAllCut(void)",
    ),
    Ok(
        "EffScreenEffectStatusSet(int)",
    ),
    Ok(
        "GetFileSize_L(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_FrameRate_Sel(GPHASE_ENUM)",
    ),
    Ok(
        "GetMemoryCardDirSizeCluster(int)",
    ),
    Ok(
        "init_OutGame_Main(void)",
    ),
    Ok(
        "GetRandValI(int)",
    ),
    Ok(
        "MENU_FILE_DATA * _fixed_array_verifyrange<MENU_FILE_DATA>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetGlobalBufferSize(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetFreeArea(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetGameOverMenuTexMem(void **, int)",
    ),
    Ok(
        "SetEneDmgEffect2_Sub(void)",
    ),
    Ok(
        "CNEquipTrayWrk::SetAbsorbMultiRate(float)",
    ),
    Ok(
        "MapHitInit(void)",
    ),
    Ok(
        "CEditRoot type_info node",
    ),
    Ok(
        "SisterGameOver(void)",
    ),
    Ok(
        "CNEquipTrayWrk::SetUp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPlyrHPSPdownP(PLCMN_WRK *, unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEneTracer::Req(int, int)",
    ),
    Ok(
        "CBonusShot::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void __adjust_heap<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "MemoryCardFileOpenInit(int, int, char *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "uncatch_exception",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrFinderQEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Game_Over_Pre(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngameMission(int)",
    ),
    Ok(
        "EffectGetScreenEffectNo(void)",
    ),
    Ok(
        "photo_datFlgDown(int)",
    ),
    Ok(
        "SetSave_DoorCtrl(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ol_loadDrawMemory(void (*)(int, int, int, int, int), void (*)(int, int, int, int, int), int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvDisp2DStartReq(int, int, int, int, unsigned char, int)",
    ),
    Ok(
        "GetRDPFireWork(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "draw_distortion_particles2(float (*)[4][4], float (*)[4][4], int, PARTICLE *, float, unsigned long, unsigned long)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "mprec_tens",
        ),
    ),
    Ok(
        "SgdAddTexOffset(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetLightStatus(int, GRA3DLIGHTSTATUS const *)",
    ),
    Ok(
        "MapPutSetFirst(void *, short)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPOBJ_HEAD * _fixed_array_verifyrange<MAPOBJ_HEAD>(unsigned int, unsigned int)",
    ),
    Ok(
        "EJobC29(ENEALG_WRK *)",
    ),
    Ok(
        "gra3dSetFog(float, float, float, float)",
    ),
    Ok(
        "void __final_insertion_sort<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "map_bgmChangeTbl(int, int)",
    ),
    Ok(
        "DbFurnPreGetDat(int, char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectEneDmgReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFindFile::GetMatchFileRef(int)",
    ),
    Ok(
        "CStdioFile::CStdioFile(void)",
    ),
    Ok(
        "RegDatSetOffset(int, float, float, float)",
    ),
    Ok(
        "sis_mdlGetANI_CTRL(void)",
    ),
    Ok(
        "getFStrLength(float)",
    ),
    Ok(
        "MapDrawCalcRoomCoord(void *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispTitleZeroLogo(int, int, unsigned char)",
    ),
    Ok(
        "gra3dApplyLight(void)",
    ),
    Ok(
        "SceneInitOtherAnime(ANI_CTRL *, unsigned int *, unsigned int *, unsigned int *, unsigned int *)",
    ),
    Ok(
        "MAN_DATA type_info node",
    ),
    Ok(
        "bad_exception::bad_exception(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisCtlSetDisp(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMenuMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_GameResult(void)",
    ),
    Ok(
        "one_Story_Menu(GPHASE_ENUM)",
    ),
    Ok(
        "EJobB12(ENEALG_WRK *)",
    ),
    Ok(
        "MemoryCardGetDirInfoMain(void)",
    ),
    Ok(
        "GetAccessMemoryCardSlot(void)",
    ),
    Ok(
        "SetPlyrFinder(void)",
    ),
    Ok(
        "SCREEN_SAVER_TEX type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatGetBuffIDG(int, float const *)",
    ),
    Ok(
        "alg_manageReqAlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatGetBuffID(float *)",
    ),
    Ok(
        "gra3dcamSetAspect(float, float)",
    ),
    Ok(
        "BJobL03(ENE_WRK *)",
    ),
    Ok(
        "RoomInCheckMain(void)",
    ),
    Ok(
        "MapSpMoviSetFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "after_Title_Setup(GPHASE_ENUM)",
    ),
    Ok(
        "Anim2D_CalcAlphaAnim(unsigned char, unsigned char, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimSetReso(MIME_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEditRoot::CEditRoot(void)",
    ),
    Ok(
        "init_Puzzle_Kai2(void)",
    ),
    Ok(
        "init_Story_Normal(void)",
    ),
    Ok(
        "TitleCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleExeInit(void)",
    ),
    Ok(
        "MAPHIT_HEAD type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispCameraCharge(short, short, int)",
    ),
    Ok(
        "EffectGetScreenEffectParamPtr(int)",
    ),
    Ok(
        "FurnPhotoFlgUp(void)",
    ),
    Ok(
        "GetEquipReinforcedLensNum(void)",
    ),
    Ok(
        "MapHitDeleteFlg(int, int)",
    ),
    Ok(
        "EJobC3B(ENEALG_WRK *)",
    ),
    Ok(
        "_strcatf(char *, char const *, ...)",
    ),
    Ok(
        "InitEneVramCtrlSub(ENE_VRAM_CTRL *)",
    ),
    Ok(
        "SetSave_EvSaveObjStream(MC_SAVE_DATA *)",
    ),
    Ok(
        "SetSave_RoomInInfo(MC_SAVE_DATA *)",
    ),
    Ok(
        "motInitOneEnemyMdl(unsigned int *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Anim2D_CalcNowPos(POS_ANIM_TBL const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCmnCapGroup_W(int, int, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckSisterNeckSW(unsigned char)",
    ),
    Ok(
        "MisEnSubMiss(void)",
    ),
    Ok(
        "mimRequest(MIME_CTRL *, unsigned char)",
    ),
    Ok(
        "EFFECT_CONT * _fixed_array_verifyrange<EFFECT_CONT>(unsigned int, unsigned int)",
    ),
    Ok(
        "CNEquipTraySave::Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetCameraType(void)",
    ),
    Ok(
        "EvDisp2DEndRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimCalcVertex(MIME_CTRL *, WMIM_CTRL *, unsigned char)",
    ),
    Ok(
        "g3dbvInnerEllipseFromVertices(float (*)[4], float const (*)[4])",
    ),
    Ok(
        "EventRootStart(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_top_pad",
        ),
    ),
    Ok(
        "CSearchMark::SetRot(float)",
    ),
    Ok(
        "IgEffectButterflyReq(float *)",
    ),
    Ok(
        "SortPhotoData_SmallScore(PFILE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_DATA::IsReady(void)",
    ),
    Ok(
        "EJobC17(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerGetNowMPPercentage(void)",
    ),
    Ok(
        "CNEquipTrayWrk::Work(void)",
    ),
    Ok(
        "init_Story_SavePoint(void)",
    ),
    Ok(
        "TORCH2_SPARK_PARAMETER * type_info function",
    ),
    Ok(
        "DrawCmnTriCsrR(unsigned int, float, float, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetDeform(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CDamageDisp::Req(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::Reset(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetBuffID4Pos(int, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardDebugReqSizeDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetPosition(float, float, float)",
    ),
    Ok(
        "EventCameraGetDataNum(unsigned int *)",
    ),
    Ok(
        "EventEnd(void)",
    ),
    Ok(
        "MapHitDeleteDoorFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChangeWorldPosToWinPos(float *, float *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoMsgStep(int)",
    ),
    Ok(
        "AlbumMenuItemDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "Tim2GetComment(TIM2_PICTUREHEADER *)",
    ),
    Ok(
        "g3dVif1Unpack(int, void const *, int)",
    ),
    Ok(
        "SaveLoadTitleSaveDisp(int, int, unsigned char, void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaLoopSet(SISALG_WRK *)",
    ),
    Ok(
        "end_Puzzle_Kai1(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetBlur(EFFECT_CONT *)",
    ),
    Ok(
        "KazaPuzzle2CrossScreenDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::End(void)",
    ),
    Ok(
        "AlbumLoadMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "mb_cur_max",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrMemoInit(void)",
    ),
    Ok(
        "SystemBankPlay(int, int, int, int, _SND_3D_SET *, int, int)",
    ),
    Ok(
        "SpCmnTexMemLoad(int)",
    ),
    Ok(
        "MapDoorGetLight(void)",
    ),
    Ok(
        "SaGetEneNum(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dsgdSetData(SGDFILEHEADER *)",
    ),
    Ok(
        "end_SavePoint_FadeOut(void)",
    ),
    Ok(
        "EJobC32(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "update_particles(PARTICLE *)",
    ),
    Ok(
        "ctl::custom_allocator<IEditObject *>::custom_deallocate(void *)",
    ),
    Ok(
        "void __insertion_sort<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "MapDoorMakeDualRoomLight(GRA3DLIGHTDATA *, float *, void *)",
    ),
    Ok(
        "my_mallocQueryMaxFreeMem(_MY_MALLOC *)",
    ),
    Ok(
        "end_Project_Mode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReleaseTecmoLogoTexMem(void)",
    ),
    Ok(
        "EndMovie(void)",
    ),
    Ok(
        "InitGraph2dON(void)",
    ),
    Ok(
        "RotFvector(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectManyCandleLoadCut(void)",
    ),
    Ok(
        "SetEnemyParallelLight(ENE_WRK *, float, float, float, float)",
    ),
    Ok(
        "EFFINFO2 * _fixed_array_verifyrange<EFFINFO2>(unsigned int, unsigned int)",
    ),
    Ok(
        "after_ClearMenu(GPHASE_ENUM)",
    ),
    Ok(
        "MrecGetDoorHitInfoRecNumList(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__default_unexpected(void)",
    ),
    Ok(
        "short type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMenuStep(void)",
    ),
    Ok(
        "EffWrkDispFlgSet(int)",
    ),
    Ok(
        "IgEffectSubFuncKokuReq(int, int)",
    ),
    Ok(
        "void type_info function",
    ),
    Err(
        InvalidSpecialMethod(
            "sigtramp_r",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChapterSelCtrlInit(void)",
    ),
    Ok(
        "ev_seDeleteFile(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerMoveLock(void)",
    ),
    Ok(
        "ReqFinderDispOut(void)",
    ),
    Ok(
        "mimSetOriVertex(MIME_DAT *)",
    ),
    Ok(
        "gra3dshadowDrawSGD(SGDFILEHEADER *, SGDCOORDINATE *, int)",
    ),
    Ok(
        "CalcMemoryCardDataCheckSum(char *, int)",
    ),
    Ok(
        "GET_CLAMP_REGISTER(int)",
    ),
    Ok(
        "Vu0SubOuterProduct(float *, float *, float *, float *)",
    ),
    Ok(
        "mimInitAcsCtrl(ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "SGDFILEHEADER type_info node",
    ),
    Ok(
        "EV_SAVE_POS_STREAM type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ModeSisBattle(void)",
    ),
    Ok(
        "GetMemoryCardPlayDataFlg(int)",
    ),
    Ok(
        "GetPlyrOldAreaNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<IEditObject *> type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSquareSN(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqHPDispIn(void)",
    ),
    Ok(
        "IgEffectSubFuncSlowReq(int)",
    ),
    Ok(
        "init_Ending_Movie(void)",
    ),
    Ok(
        "MapPutGetFlgPtr(void *)",
    ),
    Ok(
        "__class_type_info::do_upcast(__user_type_info::sub_kind, type_info const &, void *, __user_type_info::upcast_result &) const",
    ),
    Ok(
        "one_Story_Map(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GRA3DLIGHTSTATUS type_info function",
    ),
    Ok(
        "bad_cast type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SUBFUNC_PDEFORM_CTRL * _fixed_array_verifyrange<SUBFUNC_PDEFORM_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "PlyrDamageCtrl(void)",
    ),
    Ok(
        "g3dCalcViewClipMatrixOrtho(float (*)[4], float, float, float, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFormatMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortDelFlg(int)",
    ),
    Ok(
        "gra3dGetProjectorSpotId(void)",
    ),
    Ok(
        "gra3dCalcVu1MaterialDataPoint(GRA3DVU1MATERIALDATA_POINT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobE02(ENEALG_WRK *)",
    ),
    Ok(
        "SetHalo(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motGetFrameDataRT(RST_DATA *, unsigned int *, unsigned int, unsigned int)",
    ),
    Ok(
        "EffWrkDithOffGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CurnCtlSetTopWorkAddr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzle2ExeInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_PERFORMANCE_MEASURE::GetFromMark(void)",
    ),
    Ok(
        "MenuCamMainDisp(void)",
    ),
    Ok(
        "KaiPzlAnim(void)",
    ),
    Ok(
        "g3dInitialize(G3DCREATIONDATA const *)",
    ),
    Ok(
        "MenuLoadWait(void)",
    ),
    Ok(
        "CamSave(void)",
    ),
    Ok(
        "end_Title_FrameRate_Sel(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardSoftResetLock(void)",
    ),
    Ok(
        "SetSquare(int, float, float, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "BrightnessAdjustmentFilterDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Option(void)",
    ),
    Ok(
        "SetSquareS(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetBattleEneDatRot(int, int)",
    ),
    Ok(
        "SetPCRTC(int)",
    ),
    Ok(
        "CheckPlayerNeckSW(unsigned char)",
    ),
    Ok(
        "INGAME_WRK::PauseLock(void)",
    ),
    Ok(
        "InitPhotoExpand(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PhotoMain(void)",
    ),
    Ok(
        "unsigned long * _fixed_array_verifyrange<unsigned long>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "get_eh_info",
        ),
    ),
    Ok(
        "_Vu0CalcVertexColorDirectinalLightConstant(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleMovieInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::GetDmgRate(_SHUTTER_CHANCE_STATE)",
    ),
    Ok(
        "EventSetOpenCondition(int)",
    ),
    Ok(
        "end_Ending_Normal1(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "frame_state_for",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjGetDat(int, int)",
    ),
    Ok(
        "my_mallocDrawMemory(_MY_MALLOC *, void (*)(int, int, int, int, int), void (*)(int, int, int, int, int), int, int, int, int)",
    ),
    Ok(
        "finderEneLifeLen(float)",
    ),
    Ok(
        "SceneFodLightPtrGet(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "smakebuf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectDropOfWaterReq(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureHint3(void)",
    ),
    Ok(
        "FileLoadIsEnd2_L(int, void *)",
    ),
    Ok(
        "mem_utilQueryTotalFreeSize(void)",
    ),
    Ok(
        "SetSisterAcsNo(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "StopSisterMim(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ContTorch(void *, int, float *, float *, int, float, float, float, float, float, float, int, float, float)",
    ),
    Ok(
        "ALBUM_INFO type_info function",
    ),
    Ok(
        "SetSearchPoint(char *, int, int)",
    ),
    Ok(
        "DrawPhotoHinttex(unsigned int, float, float, int, int, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ROOM_IN_INFO type_info function",
    ),
    Ok(
        "SaReqSE(SISALG_WRK *)",
    ),
    Ok(
        "TAIL_DMG2_DAT type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectTourouFreaModelDrawSub(void *, float (*)[4])",
    ),
    Ok(
        "InitEffectScr(void)",
    ),
    Ok(
        "PlyrSEStop(void)",
    ),
    Ok(
        "SetDoorSeal(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Effect(GPHASE_ENUM)",
    ),
    Ok(
        "one_EventFile_Disp(GPHASE_ENUM)",
    ),
    Ok(
        "gra3dcamGetTarget(void)",
    ),
    Ok(
        "CFindFile::Clear(void)",
    ),
    Ok(
        "MapDoorLoadReq(char *)",
    ),
    Ok(
        "g3dSetMaterial(G3DMATERIAL const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CamChangeCheck(void)",
    ),
    Ok(
        "one_Puzzle_CrossFade(GPHASE_ENUM)",
    ),
    Ok(
        "dmaVif1SetPacket(void const *)",
    ),
    Ok(
        "EventInit(void)",
    ),
    Ok(
        "EJobC1E(ENEALG_WRK *)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::Rep::clone(void)",
    ),
    Ok(
        "__class_type_info::do_dyncast(int, __user_type_info::sub_kind, type_info const &, void *, type_info const &, void *, __user_type_info::dyncast_result &) const",
    ),
    Ok(
        "MhCtrl * type_info node",
    ),
    Ok(
        "motSearchANI_CTRL(int)",
    ),
    Ok(
        "void __unguarded_linear_insert<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "init_Boot_Init(void)",
    ),
    Ok(
        "_GetPREVIOUSTRI2PRIM(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGsSetDebugHandler(void (*)(G3DGSSYNCPATHTIMEOUTREASON))",
    ),
    Ok(
        "EJobC12(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAN_DATA virtual table",
    ),
    Ok(
        "SetEffects(int, int, ...)",
    ),
    Ok(
        "RegDatGetHitList(void)",
    ),
    Ok(
        "MenuMemo(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardGetCardInfoReq(int, int)",
    ),
    Ok(
        "CEditRoot::IsItem(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_MOT_WRK type_info function",
    ),
    Ok(
        "SCREEN_EFFECT_PARAMETER type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_bgmRelease(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SpCmnDrawSpriteScale(int, int, int, float, float, unsigned char, int)",
    ),
    Ok(
        "MapDrawGetLightPtr(int)",
    ),
    Ok(
        "CBuffReset(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorSEIsReady(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditMain(void)",
    ),
    Ok(
        "g3dVif1SetRegister(G3DVIF1CMDDATA const *, int)",
    ),
    Ok(
        "CNEquipTrayWrk::FinderConvertGage2StockNum(int)",
    ),
    Ok(
        "gra3dbbCalcInnerEllipse(float *, float const (*)[4])",
    ),
    Ok(
        "FodInit(FOD_CTRL *, unsigned int *, unsigned int *, unsigned int *, float *)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_15_ZA14_10C_ACS_CTRL",
        ),
    ),
    Ok(
        "MapDoorGetHdl(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "unpack_d",
        ),
    ),
    Ok(
        "GetMenuDBuffFlg(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dbbCalcRadiusXZ(float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckEneView(ENE_WRK *, float, float)",
    ),
    Ok(
        "SetCameraFlash(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalPictureLoadReq(int, int)",
    ),
    Ok(
        "UnPkGetPacState(char *, char *)",
    ),
    Ok(
        "one_Story_Movie_PreLoad(GPHASE_ENUM)",
    ),
    Ok(
        "gra3ddbgDrawPoint(float const *, unsigned int)",
    ),
    Ok(
        "init_Story_Photo(void)",
    ),
    Ok(
        "EnemyAnimOne(int)",
    ),
    Ok(
        "GetObjectPos(float *, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dUpdateSpecialLight(void)",
    ),
    Ok(
        "CNEquipTrayWrk::Draw(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckIngameMission(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_user",
        ),
    ),
    Ok(
        "OL_LOAD_ONE::Main(void)",
    ),
    Ok(
        "CNPlyrCamera::ZoomWork(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispSprD2(DISP_SPRT2 *)",
    ),
    Ok(
        "TitleMenuMain(void)",
    ),
    Ok(
        "EvDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEventGazeWrk::Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "INGAME_WRK::PauseIsLocked(void)",
    ),
    Ok(
        "dmaVif1AddRefTag(unsigned int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_LangData_Check(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_max_sbrked_mem",
        ),
    ),
    Ok(
        "EffectTorch2BigFreaCut(void)",
    ),
    Ok(
        "MapAnimDeleteBuffID(int)",
    ),
    Ok(
        "g3dGetVu1MaterialCache(G3DLIGHTTYPE, int)",
    ),
    Ok(
        "MenuCamGoToEditReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "QuakeCameraStop(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_Story_NowLoading(GPHASE_ENUM)",
    ),
    Ok(
        "sgdClearCoordCalcFlgParents(void *, int)",
    ),
    Ok(
        "gra3dEnableFog(int)",
    ),
    Ok(
        "ResetPIXELAlpha(unsigned char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadingCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_15_",
        ),
    ),
    Ok(
        "GalPictureMemFree(void)",
    ),
    Ok(
        "init_ClearMenu_Album(void)",
    ),
    Ok(
        "__user_type_info::dyncast(int, type_info const &, void *, type_info const &, void *) const",
    ),
    Ok(
        "MapObjProc(void)",
    ),
    Ok(
        "ResetRDPFire(int)",
    ),
    Ok(
        "CopyGSqDToSqr(DISP_SQAR *, GSQR_DAT *)",
    ),
    Ok(
        "end_Story_Scene_Main(void)",
    ),
    Ok(
        "init_GameOver_Menu_Album(void)",
    ),
    Ok(
        "AlbumSaveSelAlbumCsrDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "CBuffInit(int, int)",
    ),
    Ok(
        "MrecGetStaRot(int)",
    ),
    Ok(
        "end_GameOver_Menu(void)",
    ),
    Ok(
        "FurnLoadOne(char const *, char *, int *)",
    ),
    Ok(
        "EV_SOUND_CTRL type_info node",
    ),
    Ok(
        "MapSpObjReg(int, char *, MAPOBJ_DAT *, float *)",
    ),
    Ok(
        "mimSetMimeCtrl(MIME_CTRL *, MIME_DAT *, unsigned int, unsigned int)",
    ),
    Ok(
        "CFilament::DrawUnlock(void)",
    ),
    Ok(
        "G3DLIGHT type_info node",
    ),
    Ok(
        "one_Title_LoadGame(GPHASE_ENUM)",
    ),
    Ok(
        "MAN_DATA::InitializeIn(void)",
    ),
    Ok(
        "MapPutSetBuffID(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_eneRelease(void)",
    ),
    Ok(
        "one_Tecmo_Mode(GPHASE_ENUM)",
    ),
    Ok(
        "PICTURE_WRK type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPSP_KAZ_SPEED type_info node",
    ),
    Ok(
        "mimGetPartsNo(unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlDeleteDrawFlgAll(int)",
    ),
    Ok(
        "TitleAlbumInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CopySqrDToSqr(DISP_SQAR *, SQAR_DAT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CMovieRoom::Work(void)",
    ),
    Ok(
        "GetPlyrFileState(int, int)",
    ),
    Ok(
        "CEneLife::SetDamage(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BUTTERFLY_TARGET_PARAMETER type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRefMovePageUp(MENU_REF_CTRL *, int *, int, int)",
    ),
    Ok(
        "g3dutilSetLightDefault(G3DLIGHT *, G3DLIGHTTYPE)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile::Write(void const *, unsigned int)",
    ),
    Ok(
        "MapLoadBg(int)",
    ),
    Ok(
        "gra3dshadowAddProjectModel(SGDFILEHEADER *)",
    ),
    Ok(
        "MapPutSetMatrix(void *, float (*)[4])",
    ),
    Ok(
        "g3ddbgVerifyDmaPacket(void const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetLineInfo(void)",
    ),
    Ok(
        "AlbumDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__uint128_t type_info node",
    ),
    Ok(
        "CTexture virtual table",
    ),
    Ok(
        "CalcGirlCoord(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_LIGHTCOMPAREDATA * _fixed_array_verifyrange<_LIGHTCOMPAREDATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "__user_type_info::do_dyncast(int, __user_type_info::sub_kind, type_info const &, void *, type_info const &, void *, __user_type_info::dyncast_result &) const",
    ),
    Ok(
        "ClearEneMotAttr(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatVecFind4Label(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitMessage(void)",
    ),
    Ok(
        "CTexture type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawGirl(void)",
    ),
    Ok(
        "SetContrast3(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Damage(void)",
    ),
    Ok(
        "ROOM_IN_INFO type_info node",
    ),
    Ok(
        "EJobC03(ENEALG_WRK *)",
    ),
    Ok(
        "gra3dcamGetDirection(void)",
    ),
    Ok(
        "SetContrast2(EFFECT_CONT *)",
    ),
    Ok(
        "SetSisterHeight(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Chapter_Sel(void)",
    ),
    Ok(
        "gra3dcamSetRoll(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvTimerRegist(int, unsigned int, int, unsigned char)",
    ),
    Ok(
        "MENU_FILE_DATA type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSearchMark::FadeOut(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffWrkDithOffSet(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjIsRespondFilament(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuPlyrDataDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSaveMain(void)",
    ),
    Ok(
        "MhCtlHitLineCheck(float *, float *, int)",
    ),
    Ok(
        "PlayerMainCmn(int)",
    ),
    Ok(
        "void sort_heap<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "SisterLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dEmulateLightData(GRA3DLIGHTDATA *, GRA3DLIGHTDATA const *, float const *, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnPhotoFlgIsUp(void)",
    ),
    Ok(
        "IgEffectPlayerDustReq(ANI_CTRL *, int)",
    ),
    Ok(
        "DrawCmnSelCsr(unsigned int, float, float, unsigned char, float, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "umoddi3",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetLoadGameTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RTSpiritsDownModeOff(void)",
    ),
    Ok(
        "SetRoomDrawFLG(int)",
    ),
    Ok(
        "MAN_DATA::Setup(int, int, int, int, int)",
    ),
    Ok(
        "SubTitleInit(void)",
    ),
    Ok(
        "MapSkyRegist(void)",
    ),
    Ok(
        "bad_cast type_info function",
    ),
    Ok(
        "GetFileInPak(void *, int)",
    ),
    Ok(
        "SetVBlankWaitNum(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcViewScreenMatrixPerspective(float (*)[4], float, float, float, float, float, float, float, float, float)",
    ),
    Ok(
        "MapDrawSetUpRoomCoordinate(MLOAD_HEAD *)",
    ),
    Ok(
        "movGetMoveval(float *, float *, ANI_CTRL *, unsigned int, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerRunLock(void)",
    ),
    Ok(
        "MAPSP_KAZ_SPEED * _fixed_array_verifyrange<MAPSP_KAZ_SPEED>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dGetLightRef(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorAnimCallback(int, float (*)[4], void *, void *)",
    ),
    Ok(
        "MapSkyInit(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapHitCheck(float *, float *, float *, float *, float *)",
    ),
    Ok(
        "plyr_mdlGetANI_CTRL(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectEndParticleEffectReq(ENE_DMG_PARTICLE_REQ const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimAddressMapping(unsigned int *)",
    ),
    Ok(
        "SceneManModelHipPositionGet(float *, int)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::replace(unsigned int, unsigned int, basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > const &, unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Get4Byte(unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTopDisp(void)",
    ),
    Ok(
        "CAutoGsRegisters<3> virtual table",
    ),
    Ok(
        "MenuTopDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__array_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrFinderCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgVerifyDmaBuffer(void const *)",
    ),
    Ok(
        "Tim2GetPictureHeader(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleAlbumMain(void)",
    ),
    Ok(
        "SetupEneVramCtrl(void)",
    ),
    Ok(
        "MapDrawInitRegDat(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetAccessMemoryCardFreeCluster(void)",
    ),
    Ok(
        "MisEnInit(void)",
    ),
    Ok(
        "SetAnlgInfo(PAD_STRUCT *, int)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_75_i_112_i_17_i_75_",
        ),
    ),
    Ok(
        "SetDateInfoType(DATE_INFO *, sceCdCLOCK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectEffectEndParticleReq(float *, int)",
    ),
    Ok(
        "MapLoadInitFreeMem(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dSetTexture(int, CTexture *)",
    ),
    Ok(
        "MisStTerm(void)",
    ),
    Ok(
        "GetYOffsetf(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "kernel_sinf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterPlay(void)",
    ),
    Ok(
        "PrintMsg(int, int, int, int, int, int, int, int, int)",
    ),
    Ok(
        "DISP_SOUL_LIST_DATA * _fixed_array_verifyrange<DISP_SOUL_LIST_DATA>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_Mission(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsMoveCloth(float (*)[4], CLOTH_CTRL *, SGDCOORDINATE *, COLLISION_CTRL *, COLLISION_DAT *, float, float, unsigned char)",
    ),
    Ok(
        "EffectLeavesFallReq(float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutSetZoffset(void *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TalkDataAdd(unsigned char, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_SavePoint_Top(void)",
    ),
    Ok(
        "CallPartsDeform3_2(int, float, float, void *, unsigned int, unsigned int, unsigned int, int)",
    ),
    Ok(
        "after_Story_Puzzle(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AddPhotoData(int, int, int, int, sceCdCLOCK, SUBJECT_WRK *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_PICTURE_SUBJECT * _fixed_array_verifyrange<_PICTURE_SUBJECT>(unsigned int, unsigned int)",
    ),
    Ok(
        "float type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSpiritGage::Work(float, float, float, _SHUTTER_CHANCE_STATE, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_MOT_WRK type_info node",
    ),
    Ok(
        "MapLoadSetDrawFlg2(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapManimUnitMatrix(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectKusabiHazeReq(float (*)[4], float (*)[4], float *)",
    ),
    Ok(
        "RegDatDeleteAllBuffList(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMovieTitleDatTblPos(MOVIE_TITLE_DAT *, int)",
    ),
    Ok(
        "one_Puzzle_Kai2(GPHASE_ENUM)",
    ),
    Ok(
        "SaEneDist(SISALG_WRK *)",
    ),
    Ok(
        "GameDataSaveBackGroundLoadReq(void *(*)(int), void (*)(void *))",
    ),
    Ok(
        "LangSelMain(void)",
    ),
    Ok(
        "g3dSinf(float)",
    ),
    Ok(
        "SubTitleIsEnd(void)",
    ),
    Ok(
        "SetIngameDoorMode(int)",
    ),
    Ok(
        "int type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_GameOver_Eff(void)",
    ),
    Ok(
        "g3dMatrixSetColumnXYZ(float (*)[4], float const *, int)",
    ),
    Ok(
        "IEditObject::Clear(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FinderInCameraCtrl(void)",
    ),
    Ok(
        "MapLightUpdate(GRA3DLIGHTDATA *, MAP_LIGHT_DAT *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPuzzleSetFadeNextMode(int, int)",
    ),
    Ok(
        "motClearANI_CTRL(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB13(ENEALG_WRK *)",
    ),
    Err(
        InvalidSpecialMethod(
            "udivdi3",
        ),
    ),
    Ok(
        "COLLISION_DAT type_info function",
    ),
    Ok(
        "bad_typeid virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FilamentDrawUnlock(void)",
    ),
    Ok(
        "ENDMG1 * _fixed_array_verifyrange<ENDMG1>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSubTitleAddr(void)",
    ),
    Ok(
        "CFindFile type_info function",
    ),
    Ok(
        "SGDFILEHEADER * type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FinderDrawUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisStSubInit(void)",
    ),
    Ok(
        "EffectSndFileReadyReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugAllFirstMemoGet(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "mprec_bigtens",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardDataLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEneTracer::Init(void)",
    ),
    Ok(
        "EV_SAVE_OBJ_STREAM type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sceFprintf(int, char const *, ...)",
    ),
    Ok(
        "SaveLoadSelLineDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "ReqAnm(void *, int, int, int)",
    ),
    Ok(
        "PlyrItemInit(PLYR_ITEM *)",
    ),
    Ok(
        "SubTitleReq3DObj(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlyrLevelGem(MC_SAVE_DATA *)",
    ),
    Ok(
        "DrawPoint2(float const *, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SingleLinkListInit(SINGLE_LINK_LIST *, unsigned int)",
    ),
    Ok(
        "MemoryCardEnd(void)",
    ),
    Ok(
        "unsigned long type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeReadEFCT(ANI_CTRL *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_si",
        ),
    ),
    Ok(
        "IsReadySisMdl(void)",
    ),
    Ok(
        "AllPlyrItemInit(void)",
    ),
    Ok(
        "ENEDMG_PARTICLE_ONE type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMsgPageNum(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadMain(void)",
    ),
    Ok(
        "EJobC0E(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "mcmp",
        ),
    ),
    Ok(
        "HPDispInit(void)",
    ),
    Ok(
        "ctl::custom_allocator<char> virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadDeleteRoom(int)",
    ),
    Ok(
        "AREA_PREFIX_TO_NO * _fixed_array_verifyrange<AREA_PREFIX_TO_NO>(unsigned int, unsigned int)",
    ),
    Ok(
        "ReleasePlyrMdl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveInit(char)",
    ),
    Ok(
        "ItemEffectCut(int)",
    ),
    Ok(
        "PakAlign128(unsigned int *)",
    ),
    Ok(
        "GetSystemLanguage(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InfoDispPause(void)",
    ),
    Ok(
        "PlyrRoomCheck(void)",
    ),
    Ok(
        "PlayerChangeMode(int)",
    ),
    Ok(
        "EneHitEffectReq(int, float *, int)",
    ),
    Ok(
        "ol_loadHeapReset(void *, unsigned int)",
    ),
    Ok(
        "GRA3DSCRATCHPADLAYOUT * GetStaticInstance<GRA3DSCRATCHPADLAYOUT>(void)",
    ),
    Ok(
        "one_Story_Damage(GPHASE_ENUM)",
    ),
    Ok(
        "init_Puzzle_Hina(void)",
    ),
    Ok(
        "ConvertRot2Dir(float, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuChapterTitleTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecIsCameraHit(void)",
    ),
    Ok(
        "SendIngameEndingNormal(int)",
    ),
    Ok(
        "HEAT_HAZE type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetRoomDrawFLG(void)",
    ),
    Ok(
        "CVu0Matrix::s_pFuncApplyMatrixWithoutTrans",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtlDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::Work(void)",
    ),
    Ok(
        "CStdioFile::~CStdioFile(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvCtrlCenter(MC_SAVE_DATA *)",
    ),
    Ok(
        "SystemBankIsLoopSnd(int)",
    ),
    Ok(
        "map_bgmFadeIn(int)",
    ),
    Ok(
        "EventEnd_SubStateChange(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawDbgMenuSub(DEBUG_MENU *, int)",
    ),
    Ok(
        "__class_type_info::do_find_public_subobj(int, type_info const &, void *, void *) const",
    ),
    Ok(
        "MissionSetNewRecord(int, int, int)",
    ),
    Ok(
        "MapObjGetLightFlg(char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "add_particle2(int, HEAT_HAZE *, float *, float *, float, float, float, float)",
    ),
    Ok(
        "GetMdlNeckPos(float *, ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "SetSisEscape(void)",
    ),
    Ok(
        "MissionSelEnd(void)",
    ),
    Ok(
        "gra3dIsLightTypeEnable(G3DLIGHTTYPE)",
    ),
    Ok(
        "REGIST_TIMER * _fixed_array_verifyrange<REGIST_TIMER>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "unsigned long long type_info node",
    ),
    Ok(
        "GetSquare(float const (*)[4], float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphDell(void *)",
    ),
    Ok(
        "dmaVif1GetToggle(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSprite::Draw(void)",
    ),
    Ok(
        "DrawPhotoFromWorkAreaAddr(int, int, int, int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapAnimDelete(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SendDMASub(Q_WORDDATA *)",
    ),
    Ok(
        "DrawEventRect(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneMimSetVertex(ANI_CTRL *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FlyGetMatrix(FLY_WRK *)",
    ),
    Ok(
        "MenuItemDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitGPhaseSys(void)",
    ),
    Ok(
        "MapPutSetWork(void *, int)",
    ),
    Ok(
        "motLookAtCtrl(ANI_CTRL *, _LOOK_AT_PARAM *)",
    ),
    Ok(
        "CEventGazeWrk::SetObjType(int, int)",
    ),
    Ok(
        "bool type_info node",
    ),
    Ok(
        "MisEnSubInit(void)",
    ),
    Ok(
        "dmaVif1GetPacketVIF(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_acosf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndAllStop(void)",
    ),
    Ok(
        "mimClearVertex(MIME_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PuzzleRelease(void)",
    ),
    Ok(
        "EneAlphaCtrl(ENE_WRK *)",
    ),
    Ok(
        "MapHitRegistDoorVec(int, int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuInit(void)",
    ),
    Ok(
        "EvTimerRelease(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectCameraFlashReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CDamageDisp::Draw(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamCmnAdditionalFunctionDisp(float, float, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IG3DResource::~IG3DResource(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisDispClear(unsigned char, int, int, int, void *, void *)",
    ),
    Ok(
        "IgEffectDustReq(ANI_CTRL *, int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraSetVCIAddress(unsigned int *)",
    ),
    Ok(
        "DOOR_CTRL * _fixed_array_verifyrange<DOOR_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "end_Title_NewGame(void)",
    ),
    Ok(
        "SceneAllLoad(int, unsigned int *)",
    ),
    Ok(
        "gra3dGetTRI2SizeData(TRI2SIZEDATA *, TRI2SIZEDATA const *, SGDTRI2FILEHEADER const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_76_",
        ),
    ),
    Ok(
        "MapLoadGetRoomNo4BuffID(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetType(G3DCAMPROJECTIONTYPE)",
    ),
    Ok(
        "ClearPlyrMoveStatus(void)",
    ),
    Ok(
        "one_GameOver_Menu_Top(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalleryBackGroundLoadReq(void)",
    ),
    Ok(
        "CRenderTarget::GetWidth(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PrintMsg_W(DISP_STR *, MSG_WIN_DAT *)",
    ),
    Ok(
        "GetMapLabelFromAreaLabel(int, int)",
    ),
    Ok(
        "gra3dSetGsRegisterDefault(void)",
    ),
    Ok(
        "MenuMapRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFileName type_info function",
    ),
    Ok(
        "EffectLightComeInRegist(void *, int, int)",
    ),
    Ok(
        "gra3dbbCalcCenterBase(float *, float const (*)[4])",
    ),
    Ok(
        "CameraMainInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GET_TEX1_REGISTER(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneDrawFLG(int)",
    ),
    Ok(
        "GetDist_Sister2Player(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetMaterial(SGDMATERIAL *)",
    ),
    Err(
        InvalidSpecialMethod(
            "check_eh_spec",
        ),
    ),
    Ok(
        "MrecSetSEInfo(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaveLoadCmnBaseDisp(int, int, unsigned char, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjSealGhostDrawLock(void)",
    ),
    Ok(
        "MenuCamMain(void)",
    ),
    Ok(
        "EvGetParentID(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne::OutReq(int)",
    ),
    Ok(
        "plyr_mdlGetShadowANI_CTRL(void)",
    ),
    Ok(
        "MisPauseMain(void)",
    ),
    Ok(
        "EvCtrlCenterInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC36(ENEALG_WRK *)",
    ),
    Ok(
        "gra3dVu1TransGTEOP(void)",
    ),
    Ok(
        "ENE_MOT_WRK * type_info function",
    ),
    Ok(
        "CFindFile::GetNumFile(void)",
    ),
    Ok(
        "_SetVector(float *, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "m_plyr_cameraSetSaveFilament(MC_SAVE_DATA *)",
    ),
    Ok(
        "end_Story_Door_Open(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcViewScreenMatrixOrtho(float (*)[4], float, float, float, float, float, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectButterflyAllChangeTarget(float *)",
    ),
    Ok(
        "MapAnimDeleteFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_100_c",
        ),
    ),
    Ok(
        "LocalRotMatrixZ(float (*)[4], float (*)[4], float)",
    ),
    Ok(
        "SceneEffectInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLightMakeDualDirect(GRA3DLIGHTDATA *, GRA3DLIGHTDATA *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "SisDoorAct(void)",
    ),
    Ok(
        "gra3dCalcShadowLight(G3DLIGHT *, float const *)",
    ),
    Ok(
        "CVariable<char, 0, 3> type_info function",
    ),
    Ok(
        "MemoryCardFileCloseInit(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsEnemyOn(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_seRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PLYR_PLYR_DATA type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrMapLabel(void)",
    ),
    Ok(
        "init_Title_Move_Movie(void)",
    ),
    Ok(
        "SceneDraw(int)",
    ),
    Ok(
        "plyr_mdlSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "PhotoPointCulcEne2(ENE_WRK *, BONUS_SHOT_SCORE *, SUBJECT_WRK *, _HINT_PHOTO_REQ *, int)",
    ),
    Ok(
        "SpCmnGetScreen(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetEneDatStatus(int, int)",
    ),
    Ok(
        "MapFogGetColor(void)",
    ),
    Ok(
        "MapDrawRegistModel(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamGetObjPosition(float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RunFocus(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IG3DResource virtual table",
    ),
    Ok(
        "MapDoorAnimCheckPlay(void)",
    ),
    Ok(
        "g3dLightEnable(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphGetRate(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditMain(void)",
    ),
    Ok(
        "ANI_CTRL * _fixed_array_verifyrange<ANI_CTRL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Zero2Anim2D_CsrAnimCtrl(char *, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileCloseMain(void)",
    ),
    Ok(
        "SetIngameEventModeFlg(int)",
    ),
    Ok(
        "motEneTexAnm(ANI_CTRL *, unsigned int)",
    ),
    Ok(
        "OL_LOAD_ONE::Req(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcSpotlightFalloff(G3DLIGHT const *, float const *)",
    ),
    Ok(
        "CBonusShot::InReqWrk(void)",
    ),
    Ok(
        "PlyrPosSet(MOVE_BOX *, float *)",
    ),
    Ok(
        "RD_REG_ST_DAT * _fixed_array_verifyrange<RD_REG_ST_DAT>(unsigned int, unsigned int)",
    ),
    Ok(
        "MenuCrossFadeOutStart(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardAllFileDelInit(int, int, int)",
    ),
    Ok(
        "SetLine2(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SavePointTopCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "CWaitVariable<short>::Work(void)",
    ),
    Ok(
        "SetRDLongFire2(float *, unsigned char, float, float, float, float, float, float, float, float, int)",
    ),
    Ok(
        "MenuCamMainMemFree(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetCameraInterest(float *)",
    ),
    Ok(
        "FinderBattleAlphaMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InFinderFrameSub(float *, float *, float, float)",
    ),
    Ok(
        "CNEquipTraySave::sub_func_si_param",
    ),
    Ok(
        "CallPartsDeform6(int, float, void *, unsigned int, unsigned int, unsigned int, int, float *, float *, int, int, int)",
    ),
    Ok(
        "IgEffectStoryMainScreenEffectReq(SCREEN_EFFECT_PARAMETER *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_60_i_20_i0",
        ),
    ),
    Ok(
        "SendIngameGameOverPre(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "rethrow",
        ),
    ),
    Ok(
        "gra3dStartSpecialLight(void)",
    ),
    Ok(
        "gra3dbbCalcCenter(float *, float const (*)[4])",
    ),
    Ok(
        "MapLBuffSetLoadFile(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "dmaVif1Clear(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetRT2BaseMtx(ANI_CTRL *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneFlyModelInitWait(ENE_WRK *)",
    ),
    Err(
        InvalidSpecialMethod(
            "get_eh_context",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlayDataHead(MC_SAVE_DATA *)",
    ),
    Ok(
        "MhCtrl type_info node",
    ),
    Ok(
        "MenuYesNoCtrlInit(int)",
    ),
    Ok(
        "void __make_heap<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater, LIGHTCOMPAREDATA, int>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater, LIGHTCOMPAREDATA *, int *)",
    ),
    Ok(
        "EffectModelAlphaChangeRegist(void *, int)",
    ),
    Ok(
        "EneDmgLargeHitAllOff(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetCameraRotZ(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM14(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_ZERO2_PERF_CNT::SetMark(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Map(void)",
    ),
    Ok(
        "EJobC1D(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnNonSelFrameDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Debug(void)",
    ),
    Ok(
        "MhCtlMain(int)",
    ),
    Ok(
        "SavePCFile(void)",
    ),
    Ok(
        "SetDrawFLGAllOFF(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcPlaneFromPointNormal(float *, float const *, float const *)",
    ),
    Ok(
        "ChrSortFlyCallback(void)",
    ),
    Ok(
        "MemoryCardDirInfoCtrlInit(void)",
    ),
    Ok(
        "my_mallocFree(_MY_MALLOC *, void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "register_frame_table",
        ),
    ),
    Ok(
        "IgEffectRenzFlareDispFlgSet(int)",
    ),
    Ok(
        "CSPChance::Work(int)",
    ),
    Ok(
        "GetMenuCamInitType(void)",
    ),
    Ok(
        "MrecGetCameraPrj(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatDeleteBuffList(int)",
    ),
    Ok(
        "__user_type_info type_info function",
    ),
    Ok(
        "ctl::custom_allocator<IEditObject *> virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispShadowSprite(void)",
    ),
    Ok(
        "EvDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_HINT_PHOTO_REQ * _fixed_array_verifyrange<_HINT_PHOTO_REQ>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispTitleCursorL(float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "bool type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitHeatHaze(void)",
    ),
    Ok(
        "ClearFlg_NightMareGameClearExe(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptSoundSetupRef(OPTION_WRK *)",
    ),
    Ok(
        "systemFreeMem(void *)",
    ),
    Ok(
        "UpdateMemo(int, unsigned char)",
    ),
    Ok(
        "EffWrkEffectBankGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimInitLoop(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dMatrixSetColumn(float (*)[4], float const *, int)",
    ),
    Ok(
        "EventExeRelease(int)",
    ),
    Ok(
        "EffectHazeReq(float *)",
    ),
    Ok(
        "SavePoint_MenuConfWinDisp(int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnYesNoWinDisp(int, int, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChangeSisTraceDist(unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "unpack_f",
        ),
    ),
    Ok(
        "DrawHitLCircle(float *, unsigned char, unsigned char, unsigned char, float)",
    ),
    Ok(
        "CEneLife::Set(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SixPuzzleMain(void)",
    ),
    Ok(
        "gra3dshadowClearProjectModel(void)",
    ),
    Ok(
        "gra3dCallMicroSubroutine1(unsigned int const *)",
    ),
    Ok(
        "SetNumerousDisp(SPRT_DAT *, int, int, int, int, int, float, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnSelFrameDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "g3dSetRenderState(G3DRENDERSTATETYPE, unsigned int)",
    ),
    Ok(
        "DrawCmnFileWindow(int, int, unsigned int, unsigned char, unsigned char)",
    ),
    Ok(
        "MapObjRegInit(void)",
    ),
    Ok(
        "CostumeSetSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_Option(MC_SAVE_DATA *)",
    ),
    Ok(
        "FModeScreenEffect(void)",
    ),
    Ok(
        "motGetNowFramef(MOT_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileWriteMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCenterCross::Draw(int, int, int)",
    ),
    Ok(
        "PictureHint2(void)",
    ),
    Ok(
        "SaveLoadNonSelNoDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "end_EventMsg_Disp(void)",
    ),
    Ok(
        "DevelopMemoryCardLoadData(char *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneEffectMain(SCENE_CTRL *, unsigned int *)",
    ),
    Ok(
        "MapCamGetEventCameraFlg(void)",
    ),
    Ok(
        "ChrSortDeleteFly(FLY_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSquare2s(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "EvGetTblAddr(int)",
    ),
    Ok(
        "g3dMalloc(unsigned int, char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CPhotoCharger::Work(int)",
    ),
    Ok(
        "MisEnTerm(void)",
    ),
    Ok(
        "GetNowMsgPageNum(void)",
    ),
    Ok(
        "CPhotoCharger::Draw(int, int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "sjthrow",
        ),
    ),
    Ok(
        "RegDatGetHead(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemDbg_PlyrItemLink(void)",
    ),
    Ok(
        "TitleMenuDispMain(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrAcsNo(int)",
    ),
    Ok(
        "void __unguarded_linear_insert<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "PlyrBattleCheck(void)",
    ),
    Ok(
        "LoadingTexLoadWait(void)",
    ),
    Ok(
        "GetMenuItemTexMem(void)",
    ),
    Ok(
        "GetPlayerFinderPos(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectButterflyInit(void)",
    ),
    Ok(
        "gra3dcamGetPosition(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffWrkBlurOffGet(void)",
    ),
    Ok(
        "EvItemNameDispEndReq(int)",
    ),
    Ok(
        "RunLeaf(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectLeavesFallExec(void)",
    ),
    Ok(
        "CBonusShot::Draw(int, int)",
    ),
    Ok(
        "DeletePhotoData(unsigned char)",
    ),
    Ok(
        "ReqPlyrApproachCameraCtrl(float *, float, float)",
    ),
    Ok(
        "GetPzlSndBankID(void)",
    ),
    Ok(
        "one_Story_GameOver_Movie(GPHASE_ENUM)",
    ),
    Ok(
        "EffectExecCheck(void *, int)",
    ),
    Ok(
        "end_Story_Movie_PreLoad(void)",
    ),
    Ok(
        "mimAddFrame(MIME_CTRL *, unsigned int *)",
    ),
    Ok(
        "CngPlyrRotRapid(MOVE_BOX *, float)",
    ),
    Ok(
        "DbIlInit(int)",
    ),
    Ok(
        "FinderBankSetup(void)",
    ),
    Ok(
        "UnPkGetFileName(char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "release_typeInit(void)",
    ),
    Ok(
        "MisDispSetFlg(int)",
    ),
    Ok(
        "MapAnimCall(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dIsLightEnable(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitEffectRdrEF(void)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "erminate_func",
        ),
    ),
    Ok(
        "MemoryCardSetIconSysPath(char *, int)",
    ),
    Ok(
        "EneDmgParticleSuctionNumGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgDumpVif1Code(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GRA3DLIGHTSTATUS * _fixed_array_verifyrange<GRA3DLIGHTSTATUS>(unsigned int, unsigned int)",
    ),
    Ok(
        "bad_typeid type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_MOT_CTRL type_info function",
    ),
    Ok(
        "__user_type_info virtual table",
    ),
    Ok(
        "PrintNumber(int, int, int, unsigned char, unsigned char, int, unsigned char)",
    ),
    Ok(
        "EnemyMain(void)",
    ),
    Ok(
        "init_AutoLoad_Main(void)",
    ),
    Ok(
        "MapDoorSetStat(unsigned int, void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "after_GameOver_Menu(GPHASE_ENUM)",
    ),
    Ok(
        "EffImageHalf32(unsigned int *, unsigned int, unsigned int)",
    ),
    Ok(
        "foot_seSetNewFiles(int const *, int)",
    ),
    Ok(
        "gra3dSetLight(int, G3DLIGHT const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetHeadPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaveLoadMcStateMsgDisp(int, int, unsigned char, int)",
    ),
    Ok(
        "EJobB28(ENEALG_WRK *)",
    ),
    Ok(
        "MemoryCardPlayDataHeadInit(void)",
    ),
    Ok(
        "PutSpriteYW(unsigned short, unsigned short, float, float, float, int, float, float, float, unsigned char, int, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "TALK_TBL type_info function",
    ),
    Ok(
        "EventMacroLoadInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB1F(ENEALG_WRK *)",
    ),
    Ok(
        "CFadeVariable<char>::Work(void)",
    ),
    Ok(
        "MapPutDelete(int)",
    ),
    Ok(
        "SavePointFadeInDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubContrast2(unsigned char, unsigned char)",
    ),
    Ok(
        "EJobM03(ENEALG_WRK *)",
    ),
    Ok(
        "AlbumEditFrameDisp(int, int, unsigned char)",
    ),
    Ok(
        "SetMessageV2(DISP_STR *)",
    ),
    Ok(
        "IgEffectStoryMainContrastTypeGet(void)",
    ),
    Ok(
        "dmaVif1SetPacketFLUSH_DIRECT(int (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemDataSaveInit(void *(*)(int), void (*)(void *))",
    ),
    Ok(
        "EventCameraInitCtrlReq(void)",
    ),
    Ok(
        "OptionButtonSetupDisp(void)",
    ),
    Ok(
        "EffectCandleFlameDraw(float *, int *, float, int)",
    ),
    Ok(
        "GRA3DSCRATCHPADLAYOUT_MAPSHADOW * GetStaticInstance<GRA3DSCRATCHPADLAYOUT_MAPSHADOW>(void)",
    ),
    Ok(
        "AlbumMemFree(char const *, int)",
    ),
    Ok(
        "MapLBuffLoad(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrFinderIn(void)",
    ),
    Ok(
        "MissionGetTimePal(int *, int *, int *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventExeFuncCall(EV_EXE_CTRL *)",
    ),
    Ok(
        "CPhotoCharger::IsReady(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionBrightnessDisp(void)",
    ),
    Ok(
        "MapDrawObjNoShadow(void *, float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_GameOver_Menu_Album(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisDrawFLG(int)",
    ),
    Ok(
        "GetMenuCameraEdtPk2Addr(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "kernel_cosf",
        ),
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_i_128_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFilmNo::Draw(int, int, int, int, int)",
    ),
    Ok(
        "SisterUnlock(void)",
    ),
    Ok(
        "MenuRadioTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGsExecStoreImage(sceGsStoreImage const *, __uint128_t *)",
    ),
    Ok(
        "SortPhotoData_OldTime(PFILE_WRK *)",
    ),
    Ok(
        "ChrSortGetPlayrMatrix(void)",
    ),
    Ok(
        "PhotoDmgChk2(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "floatdisf",
        ),
    ),
    Ok(
        "MapPutResetAll(void)",
    ),
    Ok(
        "motCheckInterp(ANI_CTRL *)",
    ),
    Ok(
        "GetMemoHaveNum(void)",
    ),
    Ok(
        "ItemEffectDrawOne(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgWarning(bool, char const *, ...)",
    ),
    Ok(
        "photo_datObjFadeOutSE(int)",
    ),
    Ok(
        "end_Mission_Album(void)",
    ),
    Ok(
        "__class_type_info type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Debug_Menu(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetEnePartAddr(void *, int, int)",
    ),
    Ok(
        "gra3dApplyFog(void)",
    ),
    Ok(
        "EffOthCandleFlameYuramekiReq(EFFECT_CONT *, float *)",
    ),
    Ok(
        "MapLoadUpdatRoomDat(int)",
    ),
    Ok(
        "SetGsResetGraph(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_STREAM_CTRL type_info function",
    ),
    Ok(
        "GetCornHitCheck2(float *, float, float *, float *)",
    ),
    Ok(
        "GetAlbumOutGameTexAddr(void)",
    ),
    Ok(
        "EventCameraGetPosition(float *, unsigned int *, int)",
    ),
    Ok(
        "g3ddbgPrintConsole(char const *, ...)",
    ),
    Ok(
        "SetIngamePauseMode(int)",
    ),
    Ok(
        "init_Story_Puzzle(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ModeSisFind(void)",
    ),
    Ok(
        "DISP_LENS_DATA type_info node",
    ),
    Ok(
        "KaiPzlTerm(void)",
    ),
    Ok(
        "mem_dbgFreeMem(void *)",
    ),
    Ok(
        "SetSisWrk(int)",
    ),
    Ok(
        "IEditObject::TypeString(void)",
    ),
    Ok(
        "SisterHitCheck(float *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisterTraceMove(void)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow",
        ),
    ),
    Ok(
        "_PrintVector(float const *, char const *)",
    ),
    Ok(
        "EffWrkStopFlgGet(void)",
    ),
    Ok(
        "MDAT_DOOR type_info function",
    ),
    Ok(
        "ReleaseGameOverLoadTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_UBI_Mode(void)",
    ),
    Ok(
        "gra3dbbApplyFromBounds(float (*)[4], float const *, float const *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapAnimSetFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_bgmSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "MapSkySetTim2Vram(unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimWeightCtrl(ANI_CTRL *, unsigned int, float)",
    ),
    Ok(
        "CFindFile::GetNumSubDirectoryAll(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SpCmnBlackOut(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrClut(int)",
    ),
    Ok(
        "_Vu0CalcVertexColorDirectinalLightLambert(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_CTRL_CENTER type_info node",
    ),
    Ok(
        "EV_EXE_CTRL * _fixed_array_verifyrange<EV_EXE_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "SetupInit(void)",
    ),
    Ok(
        "init_super(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReleasePlayer(void)",
    ),
    Ok(
        "CallFire2(void *, unsigned char, unsigned char, unsigned char, float, unsigned char, unsigned char, unsigned char, float)",
    ),
    Ok(
        "InDamageState(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_128_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow_bad_cast",
        ),
    ),
    Ok(
        "PLYR_SOUL_LIST type_info function",
    ),
    Ok(
        "PlyrFinderEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CompulsionSetEventStateMain(void)",
    ),
    Ok(
        "PlyrFModeMoveCtrl(void)",
    ),
    Ok(
        "CompVector(float *, float *)",
    ),
    Ok(
        "ChkPhotoAble(void)",
    ),
    Ok(
        "DebugMsgDataCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_DMG_LARGE_HIT_PARAMETER type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_reverbAfterMCLoadInit(void)",
    ),
    Ok(
        "MapAnimRegstMim(int, unsigned int *, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datGetFurnPowerDegree(void)",
    ),
    Ok(
        "CFilament::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveEnd(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "empty",
        ),
    ),
    Ok(
        "MisDispClearInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatAddNoRegistList(int)",
    ),
    Ok(
        "MapDrawEnableFlashlightOnly(int)",
    ),
    Ok(
        "IG3DCompatible type_info function",
    ),
    Ok(
        "RegDatGetStLabel(int, int)",
    ),
    Ok(
        "IG3DCompatible::s_pFuncSetGsRegisters",
    ),
    Ok(
        "g3dSetLight(int, G3DLIGHT const *)",
    ),
    Ok(
        "CCameraFilm::aFilmDamageTbl",
    ),
    Ok(
        "CEditRoot::GetNumObject(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC48(ENEALG_WRK *)",
    ),
    Ok(
        "EJobC01(ENEALG_WRK *)",
    ),
    Ok(
        "MapPutSetObj(int, unsigned int *, float *, float *, float *, GRA3DLIGHTDATA *, int)",
    ),
    Ok(
        "EJobC43(ENEALG_WRK *)",
    ),
    Ok(
        "GetSdwDrawFLG(void)",
    ),
    Ok(
        "MAP_ANIM_CTL type_info node",
    ),
    Ok(
        "MemoryCardGetDirInfoInit(int, int, char *)",
    ),
    Ok(
        "EneDmgLargeHitReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSaveSelAlbumDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "exception::~exception(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardWarning(char *, ...)",
    ),
    Ok(
        "vector<sce_dirent, ctl::custom_allocator<sce_dirent> >::_M_insert_aux(sce_dirent *, sce_dirent const &)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::aResionAreaTbl",
    ),
    Ok(
        "ev_eneInit(void)",
    ),
    Ok(
        "EJobC09(ENEALG_WRK *)",
    ),
    Ok(
        "IEditObject::Inc(float, int)",
    ),
    Ok(
        "GetSetupFontPk2Addr(void)",
    ),
    Ok(
        "EventCameraSetTargetObjId(int, int)",
    ),
    Ok(
        "CFile::SeekToBegin(void)",
    ),
    Ok(
        "one_GameOver_Menu_Album(GPHASE_ENUM)",
    ),
    Ok(
        "GetNumInPak(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtlGetObjStatNext(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MLOAD_HEAD type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DbmFWrite(char const *, ...)",
    ),
    Ok(
        "spr_stackGetMem(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardCheckEveryFrameMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "playerGetFlashlightType(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3ddbgVerifyVu1MemAddress(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadSwitch(void)",
    ),
    Ok(
        "GetTitleSoundID(void)",
    ),
    Ok(
        "MapSkyProc(void)",
    ),
    Ok(
        "IgEffectStoryMainContrastAlphaGet(void)",
    ),
    Ok(
        "EFF_LEAF type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ANI_CTRL type_info node",
    ),
    Ok(
        "mimStopNum(ANI_CTRL *, int)",
    ),
    Ok(
        "EV_SAVE_OBJ_STREAM type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuIn(void)",
    ),
    Ok(
        "Anim2D_CalcNowAlpha(ALPHA_ANIM_TBL const *, int)",
    ),
    Ok(
        "EventCameraSetPositionObjId(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_ANI_TBL type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "update_particles2(HEAT_HAZE *, float, float)",
    ),
    Ok(
        "OutSightChk(float *, float *, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatGetVecPtrStart(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSquareZ(int, float, float, float, float, int)",
    ),
    Ok(
        "end_GameOver_Menu_Top(void)",
    ),
    Ok(
        "CFEneEntry::GetResionId(int)",
    ),
    Ok(
        "__ptmf_type_info type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorSealDisappearIsEnd(void)",
    ),
    Ok(
        "ExpandFile(char *, unsigned int *)",
    ),
    Ok(
        "SavePointBackGroundLoadReq(void)",
    ),
    Ok(
        "bad_typeid::bad_typeid(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_ClearMenu_Save(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTourouFreaRegist(void *, int)",
    ),
    Ok(
        "SetSave_EvChangeCtrl(MC_SAVE_DATA *)",
    ),
    Ok(
        "TORCH2_SPARK_PARAMETER * * _fixed_array_verifyrange<TORCH2_SPARK_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Ok(
        "Tim2GetClut(TIM2_PICTUREHEADER *)",
    ),
    Ok(
        "pre_Title_Mission(GPHASE_ENUM)",
    ),
    Ok(
        "CNPlyrCamera::Release(void)",
    ),
    Ok(
        "ReqEneStop(unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcAngle(float const *, float const *, float const *)",
    ),
    Ok(
        "GetMemoryCardPlayDataPlayTime(int)",
    ),
    Ok(
        "GetPlyrHaveSoulListNum(void)",
    ),
    Ok(
        "HinaPuzzleMain(void)",
    ),
    Ok(
        "CSprite type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEffDrawFLG(int)",
    ),
    Ok(
        "EneBlinkSet(ENE_WRK *)",
    ),
    Ok(
        "RegDatGetStPtrStart(int, int)",
    ),
    Ok(
        "SavePointFadeInCtrlInit(void)",
    ),
    Ok(
        "CPhotoCharger::Reset(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_SavePoint_Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndStopDeleteKey(unsigned int, int)",
    ),
    Ok(
        "float ()[4][4] type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuTopBackGroundLoadReq(void)",
    ),
    Ok(
        "AlbumInit(int)",
    ),
    Ok(
        "MapDrawGetLightPtr4BuffID(int)",
    ),
    Ok(
        "ChangeAtkTargetRnd(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetDrawEnv(int)",
    ),
    Ok(
        "CFilament::Init(void)",
    ),
    Ok(
        "MapObjSetDoorDat(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitSystemON(void)",
    ),
    Ok(
        "end_Story_Load_Mission_Event(void)",
    ),
    Ok(
        "MapSavePushFirstDat(void)",
    ),
    Ok(
        "end_Story_GameOver_Eff(void)",
    ),
    Ok(
        "motAniCodeReadMOT(ANI_CTRL *, int *)",
    ),
    Ok(
        "SavePointMainFadeOutReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetLineInfo(char const *, int, char const *, char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardPlayDataRoomLabel(int)",
    ),
    Ok(
        "EffectDitherIsSet(void)",
    ),
    Ok(
        "CutEffects(int)",
    ),
    Ok(
        "ctl::custom_allocator<sce_dirent>::custom_deallocate(void *)",
    ),
    Ok(
        "SetDrawEnv(int, _DRAW_ENV_5 const *)",
    ),
    Ok(
        "MapLightSetLight(int, int *, void *, int)",
    ),
    Ok(
        "end_Story_SavePoint(void)",
    ),
    Ok(
        "SaPlyrDist(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_eneSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "EJobB0A(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dsgdSetupVu1(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Puzzle_Kaza(void)",
    ),
    Ok(
        "EV_STREAM_CTRL * _fixed_array_verifyrange<EV_STREAM_CTRL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitMessageEF(void)",
    ),
    Ok(
        "ENE_MOT_WRK ** type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisDispStart(unsigned char, void *)",
    ),
    Ok(
        "SisterDrawLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EndPlyrApproachCameraCtrl(void)",
    ),
    Ok(
        "DebugAllCrystalGet(void)",
    ),
    Ok(
        "PLYR_MEMO type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dExecPrelight(SGDFILEHEADER *, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTitleLogoTexAddr(void)",
    ),
    Ok(
        "SetMessageV3_2(unsigned char *, int)",
    ),
    Ok(
        "MpkMapUnit(unsigned int *)",
    ),
    Ok(
        "OL_LOAD::Print(char *)",
    ),
    Ok(
        "MapHitSetDoorHit(int, int, float (*)[4])",
    ),
    Ok(
        "MemoryCardMakeNewDirMain(void)",
    ),
    Ok(
        "MemoryCardFileReadMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFinderBase::Draw(int, int, int)",
    ),
    Ok(
        "IgEffectSubFuncTsuiReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mmanageIsReadyAnm(int, int *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPakTaleAddr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ol_loadQueryMaxFreeSize(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetCenterPoint(float *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverMenuFadeOutReq(void)",
    ),
    Ok(
        "MAPMANIM_HEAD type_info function",
    ),
    Ok(
        "KaiPuzzleSetFade(int, int, int)",
    ),
    Ok(
        "eeexceptionEnableExcCode(PS2EXCEPTION, int)",
    ),
    Ok(
        "_CalcWeightedVertexBuffer(float *, float const *)",
    ),
    Ok(
        "InitEffectEneEF(void)",
    ),
    Ok(
        "CallPartsDeform4(int, float, void *, float *)",
    ),
    Ok(
        "SetPlyrFinderEnd(void)",
    ),
    Ok(
        "MapSpKazDeleteGroup(int)",
    ),
    Ok(
        "__user_type_info::upcast(type_info const &, void *, void **) const",
    ),
    Ok(
        "SetSave_EvExeCtrl(MC_SAVE_DATA *)",
    ),
    Ok(
        "MapSpKageProc(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "deregister_frame_info",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneInDispChk(ENE_WRK *)",
    ),
    Ok(
        "EneLoadReq(int, int, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPanel2(unsigned int, float, float, float, float, int, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "MhCtlDrawLock(void)",
    ),
    Ok(
        "gra3dEmulateLightDataObj(GRA3DLIGHTDATA *, GRA3DLIGHTDATA const *, float const *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC14(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneIsEnd(void)",
    ),
    Ok(
        "DebugMemoryCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Mission_Cam(void)",
    ),
    Ok(
        "BJobL01(ENE_WRK *)",
    ),
    Ok(
        "SetEneSealMode(ENE_WRK *, int)",
    ),
    Ok(
        "CFileName type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLBuffRegist(int)",
    ),
    Ok(
        "Tim2IsClut2(TIM2_PICTUREHEADER *)",
    ),
    Ok(
        "one_Story_Debug_Cam(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motGetNextMotion(ANI_CTRL *)",
    ),
    Ok(
        "acsChodoClothCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetTitleStreamID(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "terminate(void)",
    ),
    Ok(
        "AlbumEditAlbumInfoWinDisp(int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CAutoGsRegisters<3> type_info node",
    ),
    Ok(
        "CopySq4DToSqr(DISP_SQAR *, SQR4_DAT *)",
    ),
    Ok(
        "CFile::GetFileName(void) const",
    ),
    Ok(
        "EneAllRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PuzzleInit(void)",
    ),
    Ok(
        "ReqSisBankPlay(int, int, int, int, _SND_3D_SET *)",
    ),
    Ok(
        "MAP_ANIM_CTL type_info function",
    ),
    Ok(
        "__si_type_info::__si_type_info(char const *, __user_type_info const &)",
    ),
    Ok(
        "ReqSisterMim(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvWrk(MC_SAVE_DATA *)",
    ),
    Err(
        InvalidSpecialMethod(
            "pack_f",
        ),
    ),
    Ok(
        "SetTriangleZ(int, float, float, float, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrCrystalInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectRainReq(float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngameMovieRoomMenu(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawSeRectOne(int, float *)",
    ),
    Ok(
        "one_Title_NewGame(GPHASE_ENUM)",
    ),
    Ok(
        "SCREEN_SAVER_TEX type_info function",
    ),
    Ok(
        "motQuaternion2Matrix(float (*)[4], float *)",
    ),
    Ok(
        "GalPictureLoadWait(int)",
    ),
    Ok(
        "PrintMsg_ArrangeOneLine(unsigned char *, int, int, int, int, int, int, int, int)",
    ),
    Ok(
        "CEventSisterGazeWrk::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_UBI_Mode(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "unwinding_cleanup",
        ),
    ),
    Ok(
        "__array_type_info type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "INGAME_WRK::PauseUnlock(void)",
    ),
    Ok(
        "TorchPartInit(TORCH_CTRL *, int, float *, int, int)",
    ),
    Ok(
        "DISP_MEMO_DATA type_info node",
    ),
    Ok(
        "gra3dshadowSetLight(G3DLIGHT const *)",
    ),
    Ok(
        "G3D_EMULATE_DIRECTIONALLIGHT_DATA * __unguarded_partition<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "GetApproachCameraCrossFade(void)",
    ),
    Ok(
        "MapLoadGetOffset(int)",
    ),
    Ok(
        "__attr_type_info type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_SoftResetMain(GPHASE_ENUM)",
    ),
    Ok(
        "GetPK2DbufWait(void)",
    ),
    Ok(
        "SavePointTopDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC2E(ENEALG_WRK *)",
    ),
    Ok(
        "MisDispBadEnd(unsigned char, int, int, int, void *, void *)",
    ),
    Ok(
        "DebugSetPlayScoreMaxNum(void)",
    ),
    Ok(
        "MrecSetDoorHitRectInfo(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTourouFreaDelete(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimInitMimeCtrl(MIME_CTRL *, MIME_DAT *, unsigned int *, unsigned int *, unsigned int *, unsigned int *)",
    ),
    Err(
        InvalidSpecialMethod(
            "do_global_dtors",
        ),
    ),
    Ok(
        "GetSisJoinFlg(void)",
    ),
    Ok(
        "one_Title_Menu(GPHASE_ENUM)",
    ),
    Ok(
        "init_GameOver_Menu(void)",
    ),
    Ok(
        "SetString2(int, float, float, int, unsigned char, unsigned char, unsigned char, char const *, ...)",
    ),
    Ok(
        "CNEquipTraySave::sub_func_rei_param",
    ),
    Ok(
        "MemoryCardSetAccessPort(int)",
    ),
    Ok(
        "IEditObject::Dec(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OL_LOAD_ONE::IsReady(int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetEdgeCheck(int)",
    ),
    Ok(
        "g3dGsSwapDBuff(sceGsDBuff const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TecmoLogoTexLoadWait(void)",
    ),
    Ok(
        "GetSisterAcsNo(void)",
    ),
    Ok(
        "type_info::name(void) const",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__func_type_info type_info function",
    ),
    Ok(
        "MrecCheckOnSameCamRect(void *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "gra3dCalcVertexColor(float *, float const *, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventExe(void)",
    ),
    Ok(
        "init_Debug_Menu(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MakeBillBoardPacket(float *, float, float, int, int, int, int, float, float, float, float, sceGsTex0, int)",
    ),
    Ok(
        "ReqPlyrTalkCameraCtrl(float, float)",
    ),
    Ok(
        "InitEneVramCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile::Seek(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::Create(RENDERTARGETCREATIONDATA const *)",
    ),
    Ok(
        "motSetNeckWork(ANI_CTRL *)",
    ),
    Ok(
        "CCenterCircle::SetMode(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecSetHitRectInfo(int)",
    ),
    Ok(
        "CFilament::SetAuto(float)",
    ),
    Ok(
        "type_info type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dDmaCopyPacket(void const *, int)",
    ),
    Ok(
        "TitleTopDispMain(int, int, unsigned char)",
    ),
    Ok(
        "ReqHPDispOut(void)",
    ),
    Ok(
        "ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > > virtual table",
    ),
    Ok(
        "SetAlbumPhotoNo(char)",
    ),
    Ok(
        "MapPutChangeObj(void *)",
    ),
    Ok(
        "IAutoState virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPPUT_OBJ * _fixed_array_verifyrange<MAPPUT_OBJ>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow_type_match_rtti",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_Story_SavePoint(GPHASE_ENUM)",
    ),
    Ok(
        "AlbumMemInit(unsigned int, char const *, int)",
    ),
    Ok(
        "GetOptionVib(void)",
    ),
    Ok(
        "CallBlur(int, int, unsigned char, float, float)",
    ),
    Ok(
        "sgdCalcBoneCoordinate(SGDCOORDINATE *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::sub_func_oso_param",
    ),
    Ok(
        "IG3DResource type_info node",
    ),
    Ok(
        "MapLoadSetDrawFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_50_i_100_i1i0",
        ),
    ),
    Ok(
        "mimEndStopNum(ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PrintMsg_Arrange(int, int, int, int, int, int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_DMG_LARGE_HIT * _fixed_array_verifyrange<ENE_DMG_LARGE_HIT>(unsigned int, unsigned int)",
    ),
    Ok(
        "FileLoadReqEE_L(int, void *, int, void (*)(void *, void *), void *)",
    ),
    Ok(
        "C_ZERO2_PERF_CNT::AddDraw(char const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "int indexof<SGDMATERIAL>(SGDMATERIAL const *, SGDMATERIAL const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FadeOutReq(unsigned char, unsigned char, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndAllRestart(void)",
    ),
    Ok(
        "MapObjBornDelete(int)",
    ),
    Ok(
        "end_Story_GameOver_Fade(void)",
    ),
    Ok(
        "GetDebugMenuSwitch(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "CTOR_LIST",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ModeSisTalk(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dEmulateDirectionalLight(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3DLIGHT const *, float const *)",
    ),
    Ok(
        "MapDrawRoom(void)",
    ),
    Ok(
        "CFindFile::ScanDirectory(void)",
    ),
    Ok(
        "IsSisterMimParts(int)",
    ),
    Ok(
        "BJobL00(ENE_WRK *)",
    ),
    Ok(
        "gra3dsgdGetNumBlock(void)",
    ),
    Ok(
        "GetAniCodeArgs(unsigned short, int *)",
    ),
    Ok(
        "EraseEneFlyWork(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HcBasePointRectangle(float *, float *, float *, float *, float (*)[4], float)",
    ),
    Ok(
        "MapAnimProc(void)",
    ),
    Ok(
        "set_unexpected(void (*)(void))",
    ),
    Ok(
        "MemoryCardIconInit(int, int, int, int)",
    ),
    Ok(
        "g3dCalcLightDistanceAttenuation(G3DLIGHT const *, float const *)",
    ),
    Ok(
        "SetEventInitStatus(int)",
    ),
    Ok(
        "end_Mission_Save(void)",
    ),
    Ok(
        "EffectIsReadyButterflyModel(void)",
    ),
    Ok(
        "MapManimSetAnimEx(int, char *, char *, int *, float *, float *, int, int)",
    ),
    Ok(
        "FurnCtlModelInit(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckPlyrAnimeEnd(int)",
    ),
    Ok(
        "Tim2LoadClut2(TIM2_PICTUREHEADER *, unsigned int, unsigned int)",
    ),
    Ok(
        "Bcd2Int(char)",
    ),
    Ok(
        "MapPutSetFlg(int, int)",
    ),
    Ok(
        "SaveLoadNonClearMaskDisp(int, int, unsigned char, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsChodoSetCloth(unsigned int *, int, int, unsigned int *, int)",
    ),
    Ok(
        "AlbumTexLoadCancel(void *, int)",
    ),
    Ok(
        "EventCtrlCenterMain(void)",
    ),
    Ok(
        "GetPlyrHaveCrystalNum(void)",
    ),
    Ok(
        "MAPSP_KAZ_SPEED type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::sub_func_mahi_param",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecCheckHitRect(int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GET_TEXA_REGISTER(void)",
    ),
    Ok(
        "Anim2D_CalcPosAnim(float, float, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ContHeatHaze(void *, int, float *, float *, int, float, float, float, float, float, float)",
    ),
    Ok(
        "init_Story_Pause_Mission(void)",
    ),
    Ok(
        "GetDistV2(float const *, float const *)",
    ),
    Ok(
        "AlbumViewMain(void)",
    ),
    Ok(
        "MakePacket3D(float (*)[4], int, int, int, int, int, float, float, float, float, sceGsTex0, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FlyRelease(FLY_WRK *)",
    ),
    Ok(
        "GetPlyrAcsNo(void)",
    ),
    Ok(
        "ShutterChanceChk(void)",
    ),
    Ok(
        "motSetCoord(ANI_CTRL *, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneAlgCtrl(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GET_TEST_REGISTER(int)",
    ),
    Ok(
        "PlyrMepachiCtrl(void)",
    ),
    Ok(
        "AllPlyrFileInit(void)",
    ),
    Ok(
        "MemoryCardDirDelInit(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleNumberDisp(int, int, float, float, unsigned char, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_COLLISION * _fixed_array_verifyrange<ENE_COLLISION>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopFirstInit(void)",
    ),
    Ok(
        "MisPauseDispMain(void)",
    ),
    Ok(
        "gra3dCalcVu1MaterialDataSpot(GRA3DVU1MATERIALDATA_SPOT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrLevelGemInit(void)",
    ),
    Ok(
        "SaveLoadSelDataNumDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "__func_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CalcSisDist(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "dmaVif1SetPacketVIF(int (*)[4], int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "type_info type_info node",
    ),
    Ok(
        "g3dSetTransform(G3DTRANSFORMSTATETYPE, float const (*)[4])",
    ),
    Ok(
        "g3dGetRenderStateRef(G3DRENDERSTATETYPE)",
    ),
    Ok(
        "__is_pointer(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENEDMG_PARTICLE_ONE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSoulListAccomplishmentRate(void)",
    ),
    Ok(
        "init_Story_Effect(void)",
    ),
    Ok(
        "LocalCopyLtoBAdrs(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SendIngameEventLoadEndFlg(int)",
    ),
    Ok(
        "EJobC0D(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetStrLen(char const *)",
    ),
    Ok(
        "SetEneSlow(ENE_WRK *, int, float)",
    ),
    Ok(
        "CNEquipTrayWrk::IsSetUp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InfoDispRestart(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaAnimSet(SISALG_WRK *)",
    ),
    Ok(
        "SetPartInit(HEAT_HAZE *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardCheckNewFileLoad(void *, int)",
    ),
    Ok(
        "LoadLangSetUp(void)",
    ),
    Ok(
        "EvDbg_CompulsionSetPrint(void)",
    ),
    Ok(
        "EnemyMotionWork(void)",
    ),
    Ok(
        "SPU_draw_line_func(int, int, int, int, int)",
    ),
    Ok(
        "GetMsgWinData(DISP_STR, MSG_WIN_DAT, int *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardDataLoadReq(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsEnemyOn(int, int)",
    ),
    Ok(
        "MisStSubExec(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LocalCopyBtoLAdrs(int, int, int)",
    ),
    Ok(
        "GetPlyrAcsLightPos(float *, ANI_CTRL *)",
    ),
    Ok(
        "Zero2PrintWarningFunc(char *)",
    ),
    Ok(
        "EJobB01(ENEALG_WRK *)",
    ),
    Ok(
        "CopyScreenToBuffer2(int, int, int, int, int, int, int)",
    ),
    Ok(
        "gra3dshadowGetAssignGroup(void)",
    ),
    Ok(
        "MapSaveGetTblPtr(int)",
    ),
    Ok(
        "__builtin_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_ACS_CTRL type_info node",
    ),
    Ok(
        "g3dDmaCancelPacket(void)",
    ),
    Ok(
        "g3dGetMaterialRef(void)",
    ),
    Ok(
        "EJobM12(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneDmgParticleOneDraw(ENEDMG_PARTICLE_ONE *, float, float, int, int, int, float, int)",
    ),
    Ok(
        "MakeTim2Direct(unsigned int *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_PERFORMANCE_MEASURE::FrameStart(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadingDispMain(void)",
    ),
    Ok(
        "MisFadeProc(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaRotEneDir(SISALG_WRK *)",
    ),
    Ok(
        "IsMorphEnable(ANI_CTRL *)",
    ),
    Ok(
        "MapHitLineCheck(float *, int, float *, int, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SpCmnTexMemReleaseSub(void *)",
    ),
    Ok(
        "ENE_MOT_WRK ** type_info node",
    ),
    Ok(
        "MorphCheckId1(int)",
    ),
    Ok(
        "VibrateRequest2(unsigned short, unsigned short)",
    ),
    Ok(
        "AlbumEditCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventSetCloseCondition(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetNextMenuStep(int)",
    ),
    Ok(
        "init_Puzzle_InConf(void)",
    ),
    Ok(
        "CBonusShotOne::InReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrDoorFlg(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneDistCount(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardCheckEmptyBroken(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadReadFunc(PAD_STRUCT *, int)",
    ),
    Ok(
        "MapManimSetAnim(int, char *, char *, int *, float *, float *, int)",
    ),
    Ok(
        "_DrawShadowTexture(void)",
    ),
    Ok(
        "MisDispSetTime(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_GameOver_Menu_Top(void)",
    ),
    Ok(
        "MemoryCardSetIconFileName(char *, int, int)",
    ),
    Ok(
        "EventCameraSetMargin(float)",
    ),
    Ok(
        "AlbumEditAlbumBCursorDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "CopyStrDToStr(DISP_STR *, STR_DAT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Del_EvGhostID(unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnConfirmWinDisp(int, int, unsigned char, unsigned int)",
    ),
    Ok(
        "GetMsgIDNumMax(int)",
    ),
    Ok(
        "MapObjGetListPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrRoomID(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCenterCircle::SetAutoFlg(int)",
    ),
    Ok(
        "EJobB14(ENEALG_WRK *)",
    ),
    Ok(
        "CEditRoot::SwitchPrevItem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_Story_Movie(GPHASE_ENUM)",
    ),
    Ok(
        "EFFINFO2 type_info function",
    ),
    Ok(
        "Zero2PrintAssertFunc(char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCmnCaption(unsigned char, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "AlbumLoadDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraMain(void)",
    ),
    Ok(
        "CompulsionSetEventState(int, unsigned char)",
    ),
    Ok(
        "iopexceptionInitialize(IOPEXCEPTIONCREATIONDATA const *)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_sbrk_base",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB1E(ENEALG_WRK *)",
    ),
    Ok(
        "acsMoveRope(unsigned int, SGDCOORDINATE *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CalcPartsDeformXYZ(int *, float *)",
    ),
    Ok(
        "SCREEN_EFFECT_PARAMETER * * _fixed_array_verifyrange<SCREEN_EFFECT_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Ok(
        "ctl::custom_allocator<sce_dirent> type_info function",
    ),
    Ok(
        "MissionGetRank(int, int)",
    ),
    Ok(
        "CFEneEntry::aFuyuGhostTbl",
    ),
    Ok(
        "CFindFile::GetNumMatchFile(void)",
    ),
    Ok(
        "Graph2dMain(void)",
    ),
    Ok(
        "GET_ALPHA_REGISTER(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMemoTexLoadCancel(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CulcEP3(float *)",
    ),
    Ok(
        "mimIsUseParts(ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2GetClutColor(TIM2_PICTUREHEADER *, int, int)",
    ),
    Ok(
        "GetEvWrkWaitFlg(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dCalcWorldScreenMatrix(float (*)[4], GRA3DCAMERA *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sgdClearCoordCalcFlg(void *, int)",
    ),
    Ok(
        "GhostSealDoorInit(void)",
    ),
    Ok(
        "CCameraPowerUp::GetRadiusRate(void)",
    ),
    Ok(
        "short type_info node",
    ),
    Ok(
        "DrawFrea(float *, float, int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PuzzleClear(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSkySetAlpha(int)",
    ),
    Ok(
        "MapFogAnim(MAP_FOG_HEAD *, MAP_FOG_HEAD *, MAP_FOG_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetHaveItemTypeNum(void)",
    ),
    Ok(
        "end_Title_LoadGame(void)",
    ),
    Ok(
        "g3dGsPutDispEnv(sceGsDispEnv const *)",
    ),
    Ok(
        "MapLightMakeRoomReal(GRA3DLIGHTDATA *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "AlbumEditInfoNoDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "FLY_WRK * _fixed_array_verifyrange<FLY_WRK>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC21(ENEALG_WRK *)",
    ),
    Ok(
        "DrawCmnWindow(unsigned int, float, float, float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "char * _fixed_array_verifyrange<char>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayData_MaxScoreUpdate(int)",
    ),
    Ok(
        "g3dMatrixGetRoll(float const (*)[4])",
    ),
    Ok(
        "DrawMapHitRect(float *)",
    ),
    Ok(
        "MAPDOOR_HEAD type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dAtan2f(float, float)",
    ),
    Ok(
        "acsChodoResetWind(int)",
    ),
    Ok(
        "g3ddbgDumpVif1Stat(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MesPassCheck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_SavePoint_Album(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IngameDrawSub(void)",
    ),
    Ok(
        "SetTriangle(int, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0LoadColorDataPhong(void const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawLine(float const *, unsigned char, unsigned char, unsigned char, unsigned char, float const *, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "init_Story_Ene_Dead(void)",
    ),
    Ok(
        "AlbumSaveSelAlbumNameDisp(int, int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawEventRectOne(int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MLOAD_HEAD type_info node",
    ),
    Ok(
        "MovieTitleMain(int)",
    ),
    Ok(
        "MenuDBuffLoadReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SCN_ANM_MDL type_info function",
    ),
    Ok(
        "MenuNumberDisp(int, int, int, int, unsigned char, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TORCH2_PARAMETER * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::MultiAppearEnable(void)",
    ),
    Ok(
        "TORCH2_PARAMETER type_info function",
    ),
    Ok(
        "g3dIsLightEnable(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemPlyrSPRecover(int)",
    ),
    Ok(
        "EffectRainInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::RenzMarkDraw(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_PARTICLE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamRotationByAxis(float const *, float)",
    ),
    Ok(
        "FLY_WRK type_info function",
    ),
    Ok(
        "_Alloc_traits<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >, ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > > >::_S_instanceless",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyDrawLock(void)",
    ),
    Ok(
        "GetHaveAddFuncNum(void)",
    ),
    Ok(
        "init_SoftResetMain(void)",
    ),
    Ok(
        "EJobB1C(ENEALG_WRK *)",
    ),
    Ok(
        "bad_cast::bad_cast(void)",
    ),
    Ok(
        "CFilament::SetHint(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckEvDisp2DDataLoad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetBattleEneDatPos(int, float *)",
    ),
    Ok(
        "DbmFWriteLabelOne(char *, char const *, ...)",
    ),
    Ok(
        "MisPauseInit(void)",
    ),
    Ok(
        "EJobM10(ENEALG_WRK *)",
    ),
    Ok(
        "GetObjDrawFLG(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTrgtRotFromPlyr(float *, float *, int)",
    ),
    Ok(
        "KaiPzlDrawMsg(void)",
    ),
    Ok(
        "EFFECT_CONT type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhGetMapHeight(float *, float *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjSetHit(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemSetVCallback(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FinderBankRelease(void)",
    ),
    Ok(
        "SceneSetCoordFrameF(ANI_CTRL *, float, unsigned int)",
    ),
    Ok(
        "GetPlyrEquipmentFilmType(void)",
    ),
    Ok(
        "IsLoadEndAll(void)",
    ),
    Ok(
        "SetupReturnTitleReq(void)",
    ),
    Ok(
        "PrintMsgOneLine(DISP_STR *, MSG_EXE_CTRL *, Q_WORDDATA **)",
    ),
    Ok(
        "ENE_DMG_BLUR_CONTRAST_PARAMETER * * _fixed_array_verifyrange<ENE_DMG_BLUR_CONTRAST_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEffSQTex(int, float *, int, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "IgEffectParticleEndPosFinderGet(void)",
    ),
    Ok(
        "end_Story_Map(void)",
    ),
    Ok(
        "my_mallocInit(_MY_MALLOC *, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgPrintf(char const *, ...)",
    ),
    Ok(
        "InitEffectOthEF(void)",
    ),
    Ok(
        "__pointer_type_info virtual table",
    ),
    Ok(
        "GetTex0RegTM(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlayerRot(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ANI_CTRL type_info function",
    ),
    Ok(
        "PlyrHeightCtrl(float *)",
    ),
    Ok(
        "gra3ddbgDrawSprite(G3DFREGION const *, float, unsigned int, sceGsTex0 const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayData_PlayTimeCount(void)",
    ),
    Ok(
        "SetupBackGroundLoadReq(void)",
    ),
    Ok(
        "SetKeyType(void)",
    ),
    Ok(
        "EneDmgParticleEffectReq(ENE_DMG_PARTICLE_REQ const *)",
    ),
    Ok(
        "RegDatCheckSameRectStat(void *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneDataLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Movie(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Puzzle_Roku(GPHASE_ENUM)",
    ),
    Ok(
        "_Vu0LoadColorDataLambert(void const *)",
    ),
    Ok(
        "Anim2D_CalcNowScale(SCL_ANIM_TBL const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RD_REG_HEAD * _fixed_array_verifyrange<RD_REG_HEAD>(unsigned int, unsigned int)",
    ),
    Ok(
        "MemoryCardAllFileDelMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrAreaNo(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodGetCamData(FOD_CAMERA_DATA *, FOD_CAM_FRAME *, float *)",
    ),
    Ok(
        "InitDrawEnv(int (*)[4] (*)(void), int (*)[4] (*)(void), void (*)(int (*)[4]), void (*)(int (*)[4]))",
    ),
    Ok(
        "_SetPREVIOUSTRI2PRIM(SGDPROCUNITHEADER *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPhotoNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTorch2BigFreaInit(void)",
    ),
    Ok(
        "CNEquipTraySave::aStockMaxTbl",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FOD_LIT_SERIAL type_info function",
    ),
    Ok(
        "CheckPointDepth(PP_JUDGE *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DbIlPop(char *)",
    ),
    Ok(
        "DrawGirlSubObj(unsigned int *, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetVU1Header(void)",
    ),
    Ok(
        "EJobB02(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionOperateDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSetupButterflyModel(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MoveTitleMovieTimerRestart(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_64_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadSetDrawFlg3(int, int)",
    ),
    Ok(
        "MenuRadioTexLoadCancel(void)",
    ),
    Ok(
        "init_Story_Game_Over_Pre(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneInitAnime(ANI_CTRL *, unsigned int *, unsigned int *, unsigned int *, unsigned int *, unsigned int)",
    ),
    Ok(
        "RoomInInfoInit(void)",
    ),
    Ok(
        "gra3dEndSpecialLight(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget type_info function",
    ),
    Ok(
        "LostCrystal(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraVCIPlayIsEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerFinderLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgDumpMemoryCompare(void const *, void const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorSealDisappearEndProc(void)",
    ),
    Ok(
        "RTSpiritsDownModeOn(int)",
    ),
    Ok(
        "CallPartsDeform5(int, float, float, void *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TORCH2_SPARK_PARAMETER type_info function",
    ),
    Ok(
        "MapSpKazRegistObj(int, void *, int, float *)",
    ),
    Ok(
        "GetLevelGem(void)",
    ),
    Ok(
        "RotLimitChk(float *)",
    ),
    Ok(
        "end_Story_NowLoading(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemDataSaveEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CMovieRoom::PreLoad(int, float const (*)[4])",
    ),
    Ok(
        "CTexture::PreLoad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_ClearMenu_Album(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSprite type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::Lock(void)",
    ),
    Ok(
        "ReqPlyrHPdownP(PLCMN_WRK *, unsigned short)",
    ),
    Ok(
        "IngameSceneReq(int)",
    ),
    Ok(
        "SlideDecodeHeader(unsigned char *, unsigned char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFileNoFromSceneNo(int)",
    ),
    Ok(
        "MenuCmnYesNoPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_DMG_LARGE_HIT_PARAMETER * type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalleryDispView(void)",
    ),
    Ok(
        "EneReleaseReq(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Top(GPHASE_ENUM)",
    ),
    Ok(
        "end_Ending_Hard(void)",
    ),
    Ok(
        "ChrSortSetFlg(int)",
    ),
    Ok(
        "InitLogo(void)",
    ),
    Ok(
        "CBonusShotOne::Work(void)",
    ),
    Ok(
        "gra3dbbFromBounds(float (*)[4], float const *, float const *)",
    ),
    Ok(
        "_LIGHTCOMPAREDATA type_info function",
    ),
    Ok(
        "IgEffectIsEndParticleSuck(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sisterAnimationProc(void)",
    ),
    Ok(
        "MhCtrl * * _fixed_array_verifyrange<MhCtrl *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SyncHpBar(void)",
    ),
    Ok(
        "PlyrLeverInputChk(void)",
    ),
    Ok(
        "motInversKinematics(SGDCOORDINATE *, float *, unsigned int *, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetParam(int, int, unsigned char, unsigned char, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawTube(float *, float *, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "EnemyStart(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PreloadedEneAllRelease(int)",
    ),
    Ok(
        "TORCH2_BURST_PARAMETER * type_info node",
    ),
    Ok(
        "MapDoorCheckLoad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "NEW_PERTICLE type_info function",
    ),
    Ok(
        "after_OutGame_Main(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCenterCircle::SetHintFlg(int)",
    ),
    Ok(
        "MapLoadDeleteRoomAll(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne type_info node",
    ),
    Ok(
        "OL_LOAD_ONE::Print(char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateAllMenuCrossFadeTexMem(void)",
    ),
    Ok(
        "SavePointStartReq(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_current_mallinfo",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlayerPos(float *)",
    ),
    Ok(
        "MakeClutDirect(unsigned int *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSavePhotoNo(void)",
    ),
    Ok(
        "SaveLoadMemoryCardSlotDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "MapMeiCheck(MLOAD_HEAD *)",
    ),
    Ok(
        "EffectButterflyReqTarget(int, int, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MessageChangeDrawEnv(_DRAW_ENV_5 const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrMdlNo(int)",
    ),
    Ok(
        "MenuRadioStreamStop(void)",
    ),
    Ok(
        "gra3dsgdSetCoordinate(SGDCOORDINATE const *, int)",
    ),
    Ok(
        "EV_SAVE_OBJ_STREAM * _fixed_array_verifyrange<EV_SAVE_OBJ_STREAM>(unsigned int, unsigned int)",
    ),
    Ok(
        "AlbumInOutAnimCtrl(char *, char *, unsigned char *)",
    ),
    Err(
        InvalidSpecialMethod(
            "sfvwrite",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitEffects(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::alloc(unsigned int, bool)",
    ),
    Ok(
        "SpCmnSetSprite(DISP_SPRT *, int, int, int, unsigned char, int)",
    ),
    Ok(
        "IgEffectSubFuncViewReq(int)",
    ),
    Ok(
        "InitEffectRdr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__user_type_info::contained_nonvirtual_p(__user_type_info::sub_kind)",
    ),
    Ok(
        "AREA_PREFIX_TO_NO type_info function",
    ),
    Ok(
        "KaiPuzzleFadeProc(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "NewGameCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawScreen(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "photo_datRelease(void)",
    ),
    Ok(
        "MrecGetHitInfoRecVecter(int, int)",
    ),
    Ok(
        "g3dDmaSetGsRegister(_sceGifPackAd const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjCheckEffect(char *)",
    ),
    Ok(
        "OptionInitialyzeDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngamePhoto(int)",
    ),
    Ok(
        "one_Story_Load_Mission_Save(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecIsNearDoorRectangle(float *, float *, int, int)",
    ),
    Ok(
        "__array_type_info type_info function",
    ),
    Ok(
        "CAutoGsRegisters<3>::Pop(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSystemHeapWrkP(void)",
    ),
    Ok(
        "DISP_MEMO_DATA type_info function",
    ),
    Ok(
        "SetDrawFLGAllON(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetZbufRegister(int, long)",
    ),
    Ok(
        "MenuDBuffCtrlInit(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_127_",
        ),
    ),
    Ok(
        "MapLightMakeDual(GRA3DLIGHTDATA *, GRA3DLIGHTDATA *, GRA3DLIGHTDATA *, float *)",
    ),
    Ok(
        "CNEquipTrayWrk::SetSubFuncArray(char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSavePopFirstDat(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalleryDispMovie(void)",
    ),
    Ok(
        "PlyrVibCtrl(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Mission_Sel(GPHASE_ENUM)",
    ),
    Ok(
        "EJobC1C(ENEALG_WRK *)",
    ),
    Ok(
        "MapDoorAnimInit(unsigned int *)",
    ),
    Ok(
        "EJobM00(ENEALG_WRK *)",
    ),
    Ok(
        "Tim2SetClutColor(TIM2_PICTUREHEADER *, int, int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::Rotate(void)",
    ),
    Ok(
        "HinaPuzzleExeInit(void)",
    ),
    Ok(
        "SetBlackOut2(int)",
    ),
    Ok(
        "one_Story_Scene_PreLoad(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "UnPkGetFileNum(char *)",
    ),
    Ok(
        "CVariable<char, 0, 3> * _fixed_array_verifyrange<CVariable<char, 0, 3> >(unsigned int, unsigned int)",
    ),
    Ok(
        "CCenterCircle::aRgb",
    ),
    Ok(
        "SaveLoadMcSelYesNoWinDisp(int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePoint_MenuWinDisp(int, int, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "start_cp_handler",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<IEditObject *>::custom_allocate(unsigned int)",
    ),
    Ok(
        "PrefixToNo(char const *, int)",
    ),
    Ok(
        "CFilmNo::Work(void)",
    ),
    Ok(
        "EV_SOUND_CTRL * _fixed_array_verifyrange<EV_SOUND_CTRL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Movie_Room(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "systemGetMem(int)",
    ),
    Ok(
        "LiberateAlbumViewTex(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPK2DRefTag(int, unsigned int)",
    ),
    Ok(
        "SpCmnDrawScreen(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "int ()[4] type_info function",
    ),
    Ok(
        "dmaVif1CheckDMA(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcScreenGSPrimitiveMatrix(float (*)[4], float, float, float, float, float, float)",
    ),
    Ok(
        "InitPlyrAcsAlpha(void)",
    ),
    Ok(
        "SetupMenuDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BJobL06(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motPrintVector(char *, float *)",
    ),
    Ok(
        "MrecPointDoorRectangle(float *, float *, float *, float *, int, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnWorkFreeAll(void)",
    ),
    Ok(
        "GetRoomInfo(int)",
    ),
    Ok(
        "CFile::SeekToEnd(void)",
    ),
    Ok(
        "EJobC26(ENEALG_WRK *)",
    ),
    Ok(
        "MapPutDraw(void)",
    ),
    Ok(
        "MovieCancel(void)",
    ),
    Ok(
        "g3dCalcScreenCoord(float *, sceGsXyz const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffWrkBlurOffSet(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFindMode(float *, int)",
    ),
    Ok(
        "GetTrgtRotType2(float *, float *, float *, int)",
    ),
    Ok(
        "MhCtlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mmanageIsReadyMdl(int, int *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearFlgEndingNormalExe(void)",
    ),
    Ok(
        "MisEnSubAllClearS(void)",
    ),
    Ok(
        "MapMeiProc(void)",
    ),
    Ok(
        "void __final_insertion_sort<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "acsChodoInitCloth(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMemFree(void)",
    ),
    Ok(
        "FlyEffectRelease(FLY_WRK *)",
    ),
    Ok(
        "end_Story_Pause_Mission(void)",
    ),
    Ok(
        "SetDrawFLG_SI_GameOver(void)",
    ),
    Ok(
        "SceneTestIsMenuMode(void)",
    ),
    Ok(
        "unsigned char type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OL_LOAD::Init(void)",
    ),
    Ok(
        "SetEventExeStatus(int)",
    ),
    Ok(
        "CRenderTarget::GetHeight(void)",
    ),
    Ok(
        "MapAnimGetRstMix(MAP_ANIM_CTL *, MOT_CTRL *)",
    ),
    Ok(
        "MapObjRegSetSceneLoad(int)",
    ),
    Ok(
        "EneFlyAct(ENE_WRK *, unsigned char, float *, float *, PLCMN_WRK *)",
    ),
    Ok(
        "EJobB04(ENEALG_WRK *)",
    ),
    Ok(
        "CulcEP2(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "fpcmp_parts_d",
        ),
    ),
    Ok(
        "PLYR_PLYR_DATA::IsReady(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSaveEnd(void)",
    ),
    Ok(
        "CFadeVariable<char>::Fade(char, char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetBlackFilter(EFFECT_CONT *)",
    ),
    Ok(
        "unsigned int * _fixed_array_verifyrange<unsigned int>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitG2DDraw(void)",
    ),
    Ok(
        "EffectTourouFreaExecOne(TOUROU_FREA_DATA *)",
    ),
    Ok(
        "SetRenzFlare(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFontSize(unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorAdd(int, MDAT_DOOR *)",
    ),
    Ok(
        "MovieTitleDispMain(int, int, int, int, char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dAtanf(float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyDrawOne(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointEnd(void)",
    ),
    Ok(
        "EffOthTorch2ParameterPtrGet(int)",
    ),
    Ok(
        "MhHitLineCheck(float *, float *, int)",
    ),
    Ok(
        "IgEffectLightComeInModelDrawSub(void *, float (*)[4])",
    ),
    Ok(
        "_GetClipVolume(void)",
    ),
    Ok(
        "CallPartsDeform5_2(int, float, float, void *, float *, float *, float *)",
    ),
    Ok(
        "EffectLeavesFallCut(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerMoveUnlock(void)",
    ),
    Ok(
        "CNPlyrCamera::ResetCharge(void)",
    ),
    Ok(
        "MDAT_DOOR * * _fixed_array_verifyrange<MDAT_DOOR *>(unsigned int, unsigned int)",
    ),
    Ok(
        "MAN_DATA::SetupIn(int, int, int, int, int)",
    ),
    Ok(
        "MemoryCardFileLoadMain(void)",
    ),
    Ok(
        "PlyrNAnimeCtrl(void)",
    ),
    Ok(
        "G3DCOREOBJECT * GetStaticInstance<G3DCOREOBJECT>(void)",
    ),
    Ok(
        "GPhaseSysMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjSetHit2(MDAT_OBJ *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionGetID(void)",
    ),
    Ok(
        "FodSetSpotLights(G3DLIGHT *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCrossFadeInit(void)",
    ),
    Ok(
        "INGAME_WRK::MenuIsLocked(void)",
    ),
    Ok(
        "init_Boot_PadCheck(void)",
    ),
    Ok(
        "EJobB26(ENEALG_WRK *)",
    ),
    Ok(
        "GetCrystalStreamID(int)",
    ),
    Ok(
        "ClearSisWait(void)",
    ),
    Ok(
        "LoadGameDataLoadReq(void)",
    ),
    Ok(
        "gra3dCallMicroSubroutine3(unsigned int const *)",
    ),
    Ok(
        "PauseInit(void)",
    ),
    Ok(
        "g3dDmaCallVu1MicroSubroutine(unsigned int const *, int)",
    ),
    Ok(
        "sgdClearCoordCalcFlgAll(void *)",
    ),
    Ok(
        "g3dCalcFB(G3DFOG const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalAnimation(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "fixsfdi",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtlSetVuFlush(void)",
    ),
    Ok(
        "MapObjCallbackBornAnim(void)",
    ),
    Ok(
        "DISP_CRYSTAL_DATA type_info function",
    ),
    Ok(
        "double type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SPRING * _fixed_array_verifyrange<SPRING>(unsigned int, unsigned int)",
    ),
    Ok(
        "RegDatDeleteBuff(int)",
    ),
    Ok(
        "MLOAD_HEAD * _fixed_array_verifyrange<MLOAD_HEAD>(unsigned int, unsigned int)",
    ),
    Ok(
        "ReqPlyrDamageCameraCtrl(float *, float, float, ENE_WRK *)",
    ),
    Ok(
        "init_Title_LoadGame(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datInit(void)",
    ),
    Ok(
        "gra3dGenerateTRI2FileFromVRAM(SGDTRI2FILEHEADER *, TRI2SIZEDATA const *)",
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::FuyuIsDead(void) const",
    ),
    Ok(
        "ClearMenuTopDisp(void)",
    ),
    Ok(
        "MapPutSetFuncAddr(void *, void (*)(void))",
    ),
    Ok(
        "GetBusterGhostNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqCamTraceNearEne(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectRainCut(void)",
    ),
    Ok(
        "SetEventEndExeStatus(int)",
    ),
    Ok(
        "MapObjRegistDoor(int, int, int, MB_OUT_SECTION *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC08(ENEALG_WRK *)",
    ),
    Ok(
        "DoorSealDisappearReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Menu(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::mAppearNum",
    ),
    Ok(
        "FurnCtlGetID(char *)",
    ),
    Ok(
        "sgdResetMaterialCache(SGDFILEHEADER *)",
    ),
    Ok(
        "CNPlyrCamera::FinderIn(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC11(ENEALG_WRK *)",
    ),
    Ok(
        "CFadeVariable<short>::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "log_10(unsigned int)",
    ),
    Ok(
        "CNEquipTrayWrk::equip_func_tbl",
    ),
    Ok(
        "charbbGet(float (*)[4], ANI_CTRL const *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dSetLightStatus(G3DVU1LIGHTSTATUS const *)",
    ),
    Ok(
        "acsSetEneCollision(ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "g3dSetGsRegisters(_sceGifPackAd const *, int, int)",
    ),
    Ok(
        "MapHitSetDoorZ(float)",
    ),
    Ok(
        "MapSaveSetMstDat(int)",
    ),
    Ok(
        "DbFurnPreSetBuffID(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSearchMode(void)",
    ),
    Ok(
        "DrawCrossLineLast(float const *)",
    ),
    Ok(
        "gra3dLightPopData(void)",
    ),
    Ok(
        "FlyModelRelease(FLY_WRK *)",
    ),
    Ok(
        "SetMemoryCardSaveDataToBuff(char *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutSetMatrixPtr(void *, float (*)[4][4])",
    ),
    Ok(
        "utilSetGRA3DLIGHTDATADefault(GRA3DLIGHTDATA *)",
    ),
    Ok(
        "init_Mission_Album(void)",
    ),
    Ok(
        "SetPanel(unsigned int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsCheckCollisionTube(TUBE *, float *, float *, float *, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_GameOver_Menu_Load(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuMapDisp(void)",
    ),
    Ok(
        "AlbumBlackBgDisp(int, int, unsigned char, unsigned char)",
    ),
    Err(
        InvalidSpecialMethod(
            "cplus_type_matcher",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapPutGetLitPtr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardCheckEveryFrameInit(int, int)",
    ),
    Ok(
        "C_PERFORMANCE_MEASURE::SetMark(void)",
    ),
    Ok(
        "PlayerGetNowHPPercentage(void)",
    ),
    Ok(
        "MapHitGetColPoint(void)",
    ),
    Ok(
        "MemoryCardInfoCtrlInit(void)",
    ),
    Ok(
        "UnPkGetFileAddr(char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallFire(void *, unsigned char, unsigned char, unsigned char, float)",
    ),
    Ok(
        "acsSetMoveDir(float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMdlLegPos(float *, ANI_CTRL *, unsigned short)",
    ),
    Ok(
        "CNPlyrCamera::Main(void)",
    ),
    Ok(
        "CopyGS4DToSqr(DISP_SQAR *, GSQ4_DAT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20__UiUi_PX01",
        ),
    ),
    Ok(
        "RD_REG_ST_DAT type_info node",
    ),
    Ok(
        "MapPutDeleteFlg(int, int)",
    ),
    Ok(
        "EFFRDR_RSV * _fixed_array_verifyrange<EFFRDR_RSV>(unsigned int, unsigned int)",
    ),
    Ok(
        "IEditObject virtual table",
    ),
    Ok(
        "StopPlayerMim(int)",
    ),
    Ok(
        "GetCornHitCheck(float *, float)",
    ),
    Ok(
        "enemyIsFlyDraw(FLY_WRK *)",
    ),
    Ok(
        "MenuFileDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_Album(void)",
    ),
    Ok(
        "init_Story_Game_Over(void)",
    ),
    Ok(
        "GetNowClock(sceCdCLOCK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetAlbumTitleFlg(char)",
    ),
    Ok(
        "MissionSelTblInit(void)",
    ),
    Ok(
        "EV_GHOST_CTRL type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuDispInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FlyDrawOne(FLY_WRK *)",
    ),
    Ok(
        "CNEquipTrayWrk::PutOut(void)",
    ),
    Ok(
        "DISP_CRYSTAL_DATA * _fixed_array_verifyrange<DISP_CRYSTAL_DATA>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TUBE type_info function",
    ),
    Ok(
        "CNEquipTrayWrk::Init(void)",
    ),
    Ok(
        "SetIngameEneDead(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitShibataSet(void)",
    ),
    Ok(
        "SingleLinkListRemove(SINGLE_LINK_LIST *, _SLL_CELL *)",
    ),
    Ok(
        "FURN_CTL type_info node",
    ),
    Ok(
        "FurnCtlInit(void)",
    ),
    Ok(
        "GetStrWidth(unsigned char *)",
    ),
    Ok(
        "init_Title_Option(void)",
    ),
    Ok(
        "ENE_DMG_LARGE_HIT_PARAMETER * * _fixed_array_verifyrange<ENE_DMG_LARGE_HIT_PARAMETER *>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDrawInitRoom(MLOAD_HEAD *)",
    ),
    Ok(
        "PlyrMoveStaChk(float)",
    ),
    Ok(
        "EventCameraGetTarget(float *, unsigned int *, int)",
    ),
    Ok(
        "motSetCoordCamera(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPHIT_HEAD * _fixed_array_verifyrange<MAPHIT_HEAD>(unsigned int, unsigned int)",
    ),
    Ok(
        "__pointer_type_info type_info node",
    ),
    Ok(
        "g3dGenerateDirectionalLightByEmulatedData(G3DLIGHT *, G3D_EMULATE_DIRECTIONALLIGHT_DATA const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFadeState(void)",
    ),
    Ok(
        "CSpiritGage::Draw(int, int, int, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSprite::Create(G3DSPRITEDATA const *, CTexture *)",
    ),
    Ok(
        "LocalCopyBZtoZ(void)",
    ),
    Ok(
        "LocalCopyZtoBZ(void)",
    ),
    Ok(
        "MemoryCardAllFileMakeMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffWrkMonochroModeSet(int)",
    ),
    Ok(
        "CSPChance::SEEnable(void)",
    ),
    Ok(
        "IEditObject::Dec(float, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetBlurOff(void)",
    ),
    Ok(
        "SetTorch(EFFECT_CONT *)",
    ),
    Ok(
        "alg_manageClearAlg(int)",
    ),
    Ok(
        "gra3dIsMonotoneDrawEnable(void)",
    ),
    Ok(
        "sis_mdlGetMATRIX(float (*)[4], int)",
    ),
    Ok(
        "PlayerUnlock(void)",
    ),
    Ok(
        "MhSetOffset2(int, float *)",
    ),
    Ok(
        "GameOverMenuTexLoadReq(void *, int)",
    ),
    Ok(
        "__si_type_info::do_upcast(__user_type_info::sub_kind, type_info const &, void *, __user_type_info::upcast_result &) const",
    ),
    Ok(
        "mimGetWeightName(unsigned int *)",
    ),
    Ok(
        "ChrSortDelete(int)",
    ),
    Ok(
        "C_ZERO2_PERF_CNT::FrameInit(void)",
    ),
    Ok(
        "g3dDmaAddPacket(void const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IEditObject::Inc(int)",
    ),
    Ok(
        "one_Puzzle_InConf(GPHASE_ENUM)",
    ),
    Ok(
        "EffectHazeCut(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "sfp",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneFlyInit(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamGra3dcamSetPositionMargin(float const *, float const *, float)",
    ),
    Ok(
        "ChrSortRegistPlayr(void)",
    ),
    Ok(
        "HPDispMain(void)",
    ),
    Ok(
        "InitSisterTracePos(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PauseDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dApplyCamera(GRA3DCAMERA *, int)",
    ),
    Ok(
        "CFile::~CFile(void)",
    ),
    Ok(
        "CCenterCross::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_ClearMenu_Top(GPHASE_ENUM)",
    ),
    Ok(
        "unsigned long long type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BURN_FIRE type_info function",
    ),
    Ok(
        "GetDoorDataLabelToDoorLabel(int)",
    ),
    Ok(
        "TalkTypeChange(unsigned char, int)",
    ),
    Ok(
        "MhCtlDrawShadow(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM11(ENEALG_WRK *)",
    ),
    Ok(
        "HAZE_PARTICLE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_av_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTitleAnimRGB(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "float ()[4][4] * _fixed_array_verifyrange<float ()[4][4]>(unsigned int, unsigned int)",
    ),
    Ok(
        "MapLightSelectEnable(GRA3DLIGHTDATA *, float *)",
    ),
    Ok(
        "AlbumSaveNonSelAlbumCsrDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "MapDrawGetLightPtr4BuffID2(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngameMapMode(int)",
    ),
    Ok(
        "ScreenSaverDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetVif1Code_Unpack(int *, int, int, int)",
    ),
    Ok(
        "EffectDropOfWaterInit(void)",
    ),
    Ok(
        "MapHitSetFlg(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventDelCondition(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TecmoLogoTexLoadReq(void)",
    ),
    Ok(
        "_IOPExceptionHandler(void *, void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_NewGame(void)",
    ),
    Ok(
        "MenuCamTopInit(void)",
    ),
    Ok(
        "FurnCtlGetModelAddr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPlyrSPdown(PLCMN_WRK *, unsigned short)",
    ),
    Ok(
        "CFilament::Draw(int, int, int, int)",
    ),
    Ok(
        "SixPuzzleExeInit(void)",
    ),
    Ok(
        "MisEnSubExec(void)",
    ),
    Ok(
        "PLYR_ITEM type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamEditInit(void)",
    ),
    Ok(
        "CNEquipTraySave::sub_func_trace_param",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_WRK type_info node",
    ),
    Ok(
        "dmaVif1AddCallTag(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_powf",
        ),
    ),
    Ok(
        "one_SavePoint_FadeOut(GPHASE_ENUM)",
    ),
    Ok(
        "CStdioFile virtual table",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "sread",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MENU_REF_CTRL type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IEditObject type_info node",
    ),
    Ok(
        "MenuCamCmnEquipFunctionDisp(float, float, unsigned char, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dshadowInit(GRA3DSHADOWCREATIONDATA const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_SavePoint_Save(void)",
    ),
    Ok(
        "INGAME_WRK::MenuLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSprite::CSprite(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "type_info::~type_info(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::FuyuLoadReq(void) const",
    ),
    Ok(
        "SetEneFire(EFFECT_CONT *)",
    ),
    Ok(
        "g3ddbgAssert(bool, char const *, ...)",
    ),
    Ok(
        "GetMemoryCardFreeSizeForBrowser(void)",
    ),
    Ok(
        "SPRT_DAT type_info node",
    ),
    Ok(
        "MesSetNextPage(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionCheckRecord(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "after_super(GPHASE_ENUM)",
    ),
    Ok(
        "MapLBuffDeleteFile(int, int)",
    ),
    Ok(
        "AlbumEditAlbumInfoWinItemDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "MapLoadCheckDrawFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubTitleStreamFileNoGet(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TALK_DATA * _fixed_array_verifyrange<TALK_DATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "EJobC19(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "after_Story_Movie(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPhotoData(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqFinderInOverRap(unsigned short)",
    ),
    Ok(
        "gra3dSetGsRegister(long, long, int)",
    ),
    Ok(
        "FileGet(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LockMoveTitleMovie(void)",
    ),
    Ok(
        "InformationDispInit(void)",
    ),
    Ok(
        "EJobC0F(ENEALG_WRK *)",
    ),
    Ok(
        "CountAlgTime(void)",
    ),
    Ok(
        "AlbumMenuNonSelFrameDisp(int, int, int, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointFadeOutInit(void)",
    ),
    Ok(
        "MemoryCardCheckFileBroken(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Reserve2DPacket_Load(void)",
    ),
    Ok(
        "AlbumSaveSelSlotDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFileTypeMaxNum(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuSoulTexMem(void)",
    ),
    Ok(
        "GetMenuChapterTitleTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallNega2(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazDeleteAll(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_lock",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IAutoState type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_fmodf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGetGlobalStateRef(G3DGLOBALSTATETYPE)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dVif1Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardSetIconSysData(int)",
    ),
    Ok(
        "GetLoadingTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitRegistRec(int, int, int, float *)",
    ),
    Ok(
        "EvPhotoObjInit(void)",
    ),
    Ok(
        "CWaitVariable<int>::Work(void)",
    ),
    Ok(
        "GetDistV(float const *, float const *)",
    ),
    Ok(
        "gra3dSetAmbient(float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetDoorHitInfoRecVecter(int, int)",
    ),
    Ok(
        "MapDrawObj(void *, float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2GetMipMapHeader(TIM2_PICTUREHEADER *, int *)",
    ),
    Ok(
        "EJobB0C(ENEALG_WRK *)",
    ),
    Ok(
        "DISP_ITEM_DATA type_info function",
    ),
    Ok(
        "one_Story_Pause_Mission(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodGetToSgLight(FOD_LIGHT *, FOD_LIT_FRAME *, float *)",
    ),
    Ok(
        "SetShibataSet(void)",
    ),
    Ok(
        "DispFinderMessageMain(void)",
    ),
    Ok(
        "EffectManyCandleLoadReq(float *)",
    ),
    Ok(
        "GRA3DLIGHTSTATUS type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CalcBezierPoint(float *, int, float, float (*)[4])",
    ),
    Ok(
        "ReqFreqCamera(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dMatrixSetTarget(float (*)[4], float const *, int)",
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::FuyuReleaseReq(void) const",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mmanageReqAnm(int)",
    ),
    Ok(
        "DbFurnPreProc(void)",
    ),
    Ok(
        "CEditRoot::operator delete(void *, unsigned int)",
    ),
    Ok(
        "InitSisterPos(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneActReq(int, int)",
    ),
    Ok(
        "MapMeiTerm(void)",
    ),
    Ok(
        "CEditRoot::Clear(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sis_mdlGetAlgAdrs(void)",
    ),
    Ok(
        "DrawPoint(float *, int)",
    ),
    Ok(
        "HearCrystal(int)",
    ),
    Ok(
        "CEditRoot::GetObject(char const *, int)",
    ),
    Ok(
        "MrecSetCameraInfo(int, float const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneManModelNoChange(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugPrintMsgDef_W(int, int, unsigned char)",
    ),
    Ok(
        "SetClearMenuStreamID(int)",
    ),
    Ok(
        "CNPlyrCamera::ReqZoomOut(void)",
    ),
    Ok(
        "MemoryCardFileDelReq(int, int, char *)",
    ),
    Ok(
        "gra3dPrelightScene(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndPlayDeleteKey(int, int, int, int, float (*)[4], unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneSetCoordFrame(ANI_CTRL *, unsigned int, unsigned int)",
    ),
    Ok(
        "MrecGetHitInfoRecNumList(void)",
    ),
    Ok(
        "void __partial_sort<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetASCIIString3(int, float, float, int, unsigned char, unsigned char, unsigned char, unsigned char, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dIsBBInViewvolume(float (*)[4], float (*)[4], float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_reverbInit(void)",
    ),
    Ok(
        "SortPhotoData_BigScore(PFILE_WRK *)",
    ),
    Ok(
        "GetSisDrawFLG(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectHazeGetParameterPtrOrg(int)",
    ),
    Ok(
        "init_Puzzle_CrossFade(void)",
    ),
    Ok(
        "SetEndCondSwitch(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::Draw(void)",
    ),
    Ok(
        "SetFontEnv(void)",
    ),
    Ok(
        "PlyrSoulListInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEventGazeWrk::SetPoint(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnWorkGetFreeHead(void)",
    ),
    Ok(
        "MenuDBuffAllRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PICTURE_WRK type_info function",
    ),
    Ok(
        "DrawSister(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitEffectObj(void)",
    ),
    Ok(
        "GetMovePad(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneMahiClear(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetGameOverLoadTexMem(void)",
    ),
    Ok(
        "CRenderTarget::Begin(void)",
    ),
    Ok(
        "EJobB29(ENEALG_WRK *)",
    ),
    Ok(
        "bad_cast::~bad_cast(void)",
    ),
    Ok(
        "MenuRefMovePadLdown(MENU_REF_CTRL *, int *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_90_i_118_i6i_90_",
        ),
    ),
    Ok(
        "gra3ddbgDrawBB(float const (*)[4], unsigned int)",
    ),
    Ok(
        "EvTimerCtrlInit(void)",
    ),
    Ok(
        "MhCtlGetRoomNo(int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamDisp(void)",
    ),
    Ok(
        "SceneReleaseEffect(SCENE_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameDataSaveDispMain(void)",
    ),
    Ok(
        "gra3dshadowSetSourceModel(SGDFILEHEADER const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetVif1Code_CallMicroSubroutine2(void *, unsigned int const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motGetBukiSpeBPos(float *, ANI_CTRL *)",
    ),
    Ok(
        "MapViewInit(void)",
    ),
    Ok(
        "GetTitleStreamID(void)",
    ),
    Ok(
        "__si_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardSetIconFilePath(char *, int, int)",
    ),
    Ok(
        "SetPartsDeform(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SD1toSD2(SPRT_DAT *, SPRT_DAT2 *)",
    ),
    Ok(
        "CallFocus(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKazSetMatrix(MAPSP_KAZ_HEAD *)",
    ),
    Ok(
        "ReqSisterAnime(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLightSelect(GRA3DLIGHTDATA *, float *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SendIngameEndingHard(int)",
    ),
    Ok(
        "ev_sisChangeRoom(int)",
    ),
    Ok(
        "IngameLoopSEPause(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodNextFrame(FOD_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetIconDataSize(int, int)",
    ),
    Ok(
        "EV_SOUND_CTRL type_info function",
    ),
    Ok(
        "LineSide(POINT_T *, LINE_T *)",
    ),
    Ok(
        "GetPlyrCrystalState(int)",
    ),
    Ok(
        "init_Story_Scene_PreLoad(void)",
    ),
    Ok(
        "Pk2GetAddr(unsigned int *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DISP_LENS_DATA * _fixed_array_verifyrange<DISP_LENS_DATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "ev_sisSetSave(MC_SAVE_DATA *)",
    ),
    Err(
        InvalidSpecialMethod(
            "cyg_profile_func_enter",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENDMG1 type_info node",
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_sqrtf",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSkyDraw(int (&)[4], float, MAP_SKY_DB *)",
    ),
    Ok(
        "MapFogDbProc(int, int, float *)",
    ),
    Ok(
        "GetMapLabelToRoomLabel(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_PRI_CTRL type_info function",
    ),
    Ok(
        "EJobB17(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamCutFinCamera(void)",
    ),
    Ok(
        "EJobC16(ENEALG_WRK *)",
    ),
    Ok(
        "EffectResetTorch2(void *)",
    ),
    Ok(
        "SaveLoadCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "SCREEN_EFFECT_PARAMETER * type_info function",
    ),
    Ok(
        "CNEquipTraySave::ConvertGage2StockNum(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallFocus2(int, int, int, int)",
    ),
    Ok(
        "MrecIsInHitRectangle(float const *, float const *, float const *, float const *, int, int)",
    ),
    Ok(
        "gra3dLightDataAddOffsetPosition(GRA3DLIGHTDATA *, GRA3DLIGHTDATA const *, float const *)",
    ),
    Ok(
        "EV_STREAM_CTRL type_info node",
    ),
    Err(
        InvalidSpecialMethod(
            "eh_free",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Mission_Result(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_gra3dSetCameraForce(GRA3DCAMERA const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "cp_pop_exception",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_PRI_CTRL type_info node",
    ),
    Ok(
        "SetIngameDamageMode(int)",
    ),
    Ok(
        "PicturePre4(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetFog(G3DFOG const *)",
    ),
    Ok(
        "CDamageDisp::Init(void)",
    ),
    Ok(
        "AlbumEditCaptionDisp(int, int, unsigned char)",
    ),
    Ok(
        "IngamePlyrNoActJob(void)",
    ),
    Ok(
        "SisterDrawUnlock(void)",
    ),
    Ok(
        "DoorOpen(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_max_total_mem",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispSprD(DISP_SPRT *)",
    ),
    Ok(
        "DrawPhotoFromWorkArea(int, int, int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "finderSetEneLifePercentage(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_ftoi4(int *, float *)",
    ),
    Ok(
        "CSPChance::Draw(int, int, int)",
    ),
    Ok(
        "TORCH2_PARAMETER * type_info function",
    ),
    Ok(
        "EndDmaDirectTrans(Q_WORDDATA *)",
    ),
    Ok(
        "EJobE05(ENEALG_WRK *)",
    ),
    Ok(
        "NEW_PERTICLE * _fixed_array_verifyrange<NEW_PERTICLE>(unsigned int, unsigned int)",
    ),
    Ok(
        "CCameraPowerUp::aRadiusTbl",
    ),
    Ok(
        "RDPFireMoveCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CWaitVariable<char>::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "float * max_element<float *>(float *, float *)",
    ),
    Ok(
        "EnemyDoorMain(void)",
    ),
    Ok(
        "PlayerActionLock(void)",
    ),
    Ok(
        "bad_exception type_info node",
    ),
    Ok(
        "CCenterCircle::SetBattleFlg(int)",
    ),
    Ok(
        "acsGetRopePos(unsigned int)",
    ),
    Ok(
        "double type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2GetImage(TIM2_PICTUREHEADER *, int)",
    ),
    Ok(
        "MemoryCardMakeNewFileMain(void)",
    ),
    Ok(
        "ReleaseProjectLogoTexMem(void)",
    ),
    Ok(
        "PK2DKick(void)",
    ),
    Ok(
        "EvDbgDispCenter(void)",
    ),
    Ok(
        "EJobC06(ENEALG_WRK *)",
    ),
    Ok(
        "SetEneViewClear(ENE_WRK *)",
    ),
    Ok(
        "MAPMANIM_MATRIX type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "NewGameDispMain(void)",
    ),
    Ok(
        "DrawPhotoFrame(float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTorch2GetAlphaRate(void *)",
    ),
    Ok(
        "SubDeform(int, float, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SUBFUNC_PDEFORM_CTRL type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motSetAnime(ANI_CTRL *, unsigned short **, int)",
    ),
    Ok(
        "after_Title_Mission(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobE04(ENEALG_WRK *)",
    ),
    Ok(
        "InitPK2Dbuf(void)",
    ),
    Ok(
        "ClearFlg_AllRankS_MissionClearExe(void)",
    ),
    Ok(
        "one_AutoLoad_Main(GPHASE_ENUM)",
    ),
    Ok(
        "MorphGetAlpha2(float)",
    ),
    Ok(
        "GameResultTopMain(void)",
    ),
    Ok(
        "motSetCoordFrame(ANI_CTRL *, unsigned int)",
    ),
    Ok(
        "BackGroundLoadReq(void)",
    ),
    Ok(
        "exception type_info node",
    ),
    Ok(
        "g3dSortLightForBoundingBoxByPowerOrder(int, LIGHTCOMPAREDATA *, G3DLIGHT const **, float const (*)[4])",
    ),
    Ok(
        "CEneLife::Draw(int, int, int)",
    ),
    Ok(
        "init_Story_Load_Mission_Save(void)",
    ),
    Ok(
        "SaveLoadCursorDisp(int, int, unsigned char, unsigned char, void *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "get_eh_table_language",
        ),
    ),
    Ok(
        "KaiPuzzleMain(void)",
    ),
    Ok(
        "MhCtlDrawUnlock(void)",
    ),
    Ok(
        "EffectManyCandleCut(void *)",
    ),
    Ok(
        "ReqPlyrHPSPdown(PLCMN_WRK *, unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_FrameRate_Sel(void)",
    ),
    Ok(
        "SavePoint_BlackBgDisp(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobE01(ENEALG_WRK *)",
    ),
    Ok(
        "CSpiritGage::aDmgMultipleTbl",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB0B(ENEALG_WRK *)",
    ),
    Ok(
        "KaiPuzzleSetFadeCmn(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardDataSize(int, int)",
    ),
    Ok(
        "MemoryCardSetFilePath(char *, int, int)",
    ),
    Ok(
        "type_info::operator==(type_info const &) const",
    ),
    Ok(
        "SavePointTopMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrLevelGemNum(void)",
    ),
    Ok(
        "MenuCamMainBackGroundLoadReq(void *(*)(int), void (*)(void *))",
    ),
    Ok(
        "CFilament::RTModeOn(int, int)",
    ),
    Ok(
        "SCENE_CTRL type_info function",
    ),
    Ok(
        "end_Title_Setup(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__ptmd_type_info virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PLYR_MEMO * _fixed_array_verifyrange<PLYR_MEMO>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectWaterFlowDelete(int)",
    ),
    Ok(
        "MemoryCardPrint(char *, ...)",
    ),
    Ok(
        "EventCameraSetPosition(float const *)",
    ),
    Ok(
        "SubTitleReqAutoEnemy(int, int)",
    ),
    Ok(
        "GetAlbumTexMem(void **, int)",
    ),
    Ok(
        "MapDoorPutCallback(void)",
    ),
    Ok(
        "init_Ending_Normal1(void)",
    ),
    Ok(
        "IgEffectParticleEndPosNoFinderGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadInfoTmpSave(unsigned char *, unsigned char, float *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC23(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Pause(GPHASE_ENUM)",
    ),
    Ok(
        "Del_CompulsionSetEventState(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_MOT_CTRL type_info node",
    ),
    Ok(
        "MenuMap(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_EventFile_Disp(void)",
    ),
    Ok(
        "SetDefaultKeyType(void)",
    ),
    Ok(
        "GetMsgDataAddr(int, int)",
    ),
    Ok(
        "LineIntersect(LINE_T *, LINE_T *)",
    ),
    Ok(
        "GetMaxScore(void)",
    ),
    Ok(
        "GetMemoryCardDataFileNum(int)",
    ),
    Ok(
        "RegDatRegist(char *)",
    ),
    Ok(
        "foot_seInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrItemHaveNum(int)",
    ),
    Ok(
        "AlbumEditUncompressPhotoReq(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "sclose",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtrl * type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitDebug(void)",
    ),
    Ok(
        "__user_type_info::do_find_public_subobj(int, type_info const &, void *, void *) const",
    ),
    Ok(
        "EvTalkInit(void)",
    ),
    Ok(
        "ENE_COLLISION type_info function",
    ),
    Ok(
        "TIME_INFO type_info node",
    ),
    Ok(
        "short * _fixed_array_verifyrange<short>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetFreeMemAddr(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeReadMIM(ANI_CTRL *, int *)",
    ),
    Ok(
        "CStdioFile::ReadString(char *, unsigned int)",
    ),
    Ok(
        "SetIngameDbgMenu(int)",
    ),
    Ok(
        "InitCostume(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_DATA::Setup(int, int, int, int, int)",
    ),
    Ok(
        "MisDispNum(int, int, int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjEnd(MDAT_OBJ *)",
    ),
    Ok(
        "_LIGHTCOMPAREDATA type_info node",
    ),
    Ok(
        "DbFurnPreGetNumOneType(int, int, char *, int)",
    ),
    Ok(
        "type_info::type_info(char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRefMovePageDown(MENU_REF_CTRL *, int *, int, int)",
    ),
    Ok(
        "GameOverMenuTopMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureCapture(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM0C(ENEALG_WRK *)",
    ),
    Ok(
        "exception virtual table",
    ),
    Ok(
        "SystemBankSetup(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_GameOver_Fade(void)",
    ),
    Ok(
        "PhotoFlgIsUp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IG3DResource type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Title_Mode(void)",
    ),
    Ok(
        "GET_SCISSOR_REGISTER(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::End(int)",
    ),
    Ok(
        "EJobC40(ENEALG_WRK *)",
    ),
    Ok(
        "MapDrawSetMatrixSGD(void *, float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC45(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjIsPhotoAble(void)",
    ),
    Ok(
        "one_Ending_Normal2(GPHASE_ENUM)",
    ),
    Ok(
        "playerSetLight(float const *, GRA3DEMULATIONLIGHTDATACREATIONDATA const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGetLightRef(int)",
    ),
    Ok(
        "FinderBankPlay(int, int, int, int, _SND_3D_SET *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMenuDBuffAddr(unsigned char)",
    ),
    Ok(
        "EJobM05(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardNewMakeInit(int, int, int, void *, int)",
    ),
    Ok(
        "EffectSprayReq(float *)",
    ),
    Ok(
        "ENE_DMG_LARGE_HIT type_info function",
    ),
    Ok(
        "MapHitDeleteGroup(int)",
    ),
    Ok(
        "MapAnimCheckPlay(int)",
    ),
    Ok(
        "MapLoadSetMemSpace(unsigned int, unsigned int)",
    ),
    Ok(
        "one_Story_GameOver_Fade(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OL_LOAD::IsReady(int, int *)",
    ),
    Ok(
        "OL_LOAD_ONE type_info node",
    ),
    Ok(
        "ItemLost(int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSetStat(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void ZeroArray<LIGHTCOMPAREDATA>(LIGHTCOMPAREDATA *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieTitleEnd(void)",
    ),
    Ok(
        "__pointer_type_info::~__pointer_type_info(void)",
    ),
    Ok(
        "PARTICLE * _fixed_array_verifyrange<PARTICLE>(unsigned int, unsigned int)",
    ),
    Ok(
        "log_2(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Move_Movie(GPHASE_ENUM)",
    ),
    Ok(
        "unsigned char * _fixed_array_verifyrange<unsigned char>(unsigned int, unsigned int)",
    ),
    Ok(
        "ClearMenuTopFirstInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovePlyrStairs(void)",
    ),
    Ok(
        "SPRING type_info node",
    ),
    Ok(
        "motFreeANI_CTRL(ANI_CTRL *)",
    ),
    Ok(
        "SetLanguage(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrMotionMovement(void)",
    ),
    Ok(
        "PlyrCondCheck(void)",
    ),
    Ok(
        "IG3DCompatible::s_pFuncGetGsRegisterRef",
    ),
    Ok(
        "PrintMsg(int, int, int, int, int, int, int)",
    ),
    Ok(
        "IG3DCompatible::s_pFuncSetGsRegister",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC38(ENEALG_WRK *)",
    ),
    Ok(
        "MemoryCardFileSaveMain(void)",
    ),
    Ok(
        "one_Story_Normal(GPHASE_ENUM)",
    ),
    Ok(
        "motAniCodeRead(ANI_CTRL *)",
    ),
    Ok(
        "AlbumSaveSelAlbumCsrFlareDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IAutoState type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSoulListOrderScore(int *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "submore",
        ),
    ),
    Ok(
        "SoftResetLock(void)",
    ),
    Ok(
        "IAutoState::~IAutoState(void)",
    ),
    Ok(
        "InFinderMode(void)",
    ),
    Ok(
        "EVENT_STATE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Debug_Menu(void)",
    ),
    Ok(
        "HcBaseLineIntersect(float const *, float const *, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Puzzle_Kaza2(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlGetNextName(void)",
    ),
    Ok(
        "CNEquipTrayWrk::IsMoving(void)",
    ),
    Ok(
        "MapMeiGetLight(void)",
    ),
    Ok(
        "ENE_MOT_CTRL * _fixed_array_verifyrange<ENE_MOT_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "RunLeafSub(EFF_LEAF *)",
    ),
    Ok(
        "EffectThunderLightSetRoomLight(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_super(void)",
    ),
    Ok(
        "CAutoGsRegisters<3>::~CAutoGsRegisters(void)",
    ),
    Ok(
        "SetPlyrFinderEnd2(void)",
    ),
    Ok(
        "motInitAniCtrlFree(ANI_CTRL *)",
    ),
    Ok(
        "GetSisterRot(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_reverbMain(void)",
    ),
    Ok(
        "EFF_LEAF_ONE type_info node",
    ),
    Ok(
        "SetDrawEnvNoTex(int, _DRAW_ENV_NOTEX const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateDataMemoryArea(void *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::End(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_SavePoint_Save(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSetItem(int)",
    ),
    Ok(
        "gra3dLightEnablePush(void)",
    ),
    Ok(
        "Tim2GetTextureColor(TIM2_PICTUREHEADER *, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvChangeCtrlInit(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_ZA19_6SPRING",
        ),
    ),
    Ok(
        "MissionGetScore(int)",
    ),
    Ok(
        "RST_DATA * _fixed_array_verifyrange<RST_DATA>(unsigned int, unsigned int)",
    ),
    Ok(
        "DrawSPhotoFromSmallPhotoAreaAddr2(int, int, int, int, int, int, int, int, unsigned char)",
    ),
    Ok(
        "DrawCmnSelFrame(unsigned int, float, float, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetVUVNPRIM(SGDPROCUNITHEADER const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadCheckLoadNow(void)",
    ),
    Ok(
        "printClut(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFire(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjBoneCtl(int, int, int)",
    ),
    Ok(
        "mem_dbgDrawMemory(void (*)(int, int, int, int, int), void (*)(int, int, int, int, int), int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "NearEneInfo(PLCMN_WRK *)",
    ),
    Ok(
        "init_Ending_Normal2(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dSetVu1LightData(GRA3DVU1LIGHTDATA *, SGDCOORDINATE const *, SGDCOORDINATE const *)",
    ),
    Ok(
        "EJobB00(ENEALG_WRK *)",
    ),
    Ok(
        "RD_REG_ST_DAT type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dEnableLightType(G3DLIGHTTYPE, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetVURand(float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneDepth(ENE_WRK *, float *)",
    ),
    Ok(
        "finderTriggerEneLifeDecrease(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__int128_t type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_SavePoint_Save(void)",
    ),
    Ok(
        "GetPlayTime(void)",
    ),
    Ok(
        "EJobC1A(ENEALG_WRK *)",
    ),
    Ok(
        "int type_info node",
    ),
    Ok(
        "SixPuzzleDispMain(void)",
    ),
    Ok(
        "MakeTim2SendPacket_Mono(unsigned int, int, unsigned int)",
    ),
    Ok(
        "SetMsgWinDefData(MSG_WIN_DAT *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "fixunssfdi",
        ),
    ),
    Ok(
        "init_EventMsg_Disp(void)",
    ),
    Ok(
        "__user_type_info type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB1D(ENEALG_WRK *)",
    ),
    Ok(
        "CFadeVariable<short>::Fade(short, short)",
    ),
    Ok(
        "IgEffectButterflyAllCut(void)",
    ),
    Ok(
        "SetSdwDrawFLG(int)",
    ),
    Ok(
        "PLYR_SOUL_LIST type_info node",
    ),
    Ok(
        "SaveLoadNonSelDataNumDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "TORCH2_BURST_PARAMETER type_info function",
    ),
    Ok(
        "EffWrkFilamentOffGet(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "kernel_tanf",
        ),
    ),
    Ok(
        "one_Title_SetupMenu(GPHASE_ENUM)",
    ),
    Ok(
        "CFindFile::AnalyzeSpec(char const *)",
    ),
    Ok(
        "SetSisterFloorPL(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dMatrixSetDirection(float (*)[4], float const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadGameDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugAllFileGet(void)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "henan_df",
        ),
    ),
    Ok(
        "GetDoorInfo(int)",
    ),
    Ok(
        "_GetCoordCache(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SPU_draw_rect_func(int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB05(ENEALG_WRK *)",
    ),
    Ok(
        "GetAmuPartAddr(void *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDrawSGD(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlyrItem(MC_SAVE_DATA *)",
    ),
    Ok(
        "_GetEdgeCheck(void)",
    ),
    Ok(
        "SetTorch2(EFFECT_CONT *)",
    ),
    Ok(
        "PicturePre1(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeClearBuf(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "sjpopnthrow",
        ),
    ),
    Ok(
        "MorphGetAlpha1(float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        UnrecognizedSpecialMethod(
            "CTOR_END",
        ),
    ),
    Ok(
        "ClearSisterPushMove(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::nilRep",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawMapHitRectOne(int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MakeTim2SendPacket(unsigned int, int)",
    ),
    Ok(
        "after_Story_Main(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_ftoi0(int *, float *)",
    ),
    Ok(
        "SpCmnDrawRange(int, int, int, int, unsigned char, int)",
    ),
    Ok(
        "EffectReleaseButterflyModel(void)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "unsigned int type_info node",
    ),
    Ok(
        "ev_seSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "CNEquipTrayWrk::AbsorbImmediately(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dLightEnable(int, int)",
    ),
    Ok(
        "GetEvGhostExist(unsigned char, int)",
    ),
    Ok(
        "one_Story_GameOver_Eff(GPHASE_ENUM)",
    ),
    Ok(
        "g3dCalcVu1Fog(G3DVU1FOG *, G3DFOG const *)",
    ),
    Ok(
        "end_SavePoint_Top(void)",
    ),
    Ok(
        "ENE_DMG_BLUR_CONTRAST_PARAMETER * type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuPhotoDisp(void)",
    ),
    Ok(
        "one_Boot_Init(GPHASE_ENUM)",
    ),
    Ok(
        "__si_type_info::do_dyncast(int, __user_type_info::sub_kind, type_info const &, void *, type_info const &, void *, __user_type_info::dyncast_result &) const",
    ),
    Ok(
        "CSprite virtual table",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneAlphaClear(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneIsPlay(void)",
    ),
    Ok(
        "GetMenuCameraPk2Addr(void)",
    ),
    Ok(
        "EventCameraTest(void)",
    ),
    Ok(
        "RegDatGetRectAndStat(MB_OUT_RECT **, void *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dMatrixSetRoll(float (*)[4], float)",
    ),
    Ok(
        "ctl::custom_allocator<sce_dirent> virtual table",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CCameraPowerUp::aDmgTbl",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBuffSetStr(char *)",
    ),
    Ok(
        "GetAlbumSaveLoadTexAddr(void)",
    ),
    Ok(
        "SetSave_GhostSealDoor(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectButterflyNumGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatVecNextFind(int)",
    ),
    Ok(
        "SceneRoomNoGet(void)",
    ),
    Ok(
        "ClrEneSta(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SendIngameGameOver(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsRopeReleaseWork(unsigned int)",
    ),
    Ok(
        "sis_mdlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimGetBufSize(unsigned int *, unsigned int *)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "vector<IEditObject *, ctl::custom_allocator<IEditObject *> >::_M_insert_aux(IEditObject **, IEditObject *const &)",
    ),
    Ok(
        "EJobC31(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqFinderCamera(void)",
    ),
    Ok(
        "one_LangData_Check(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "map_bgmFadeOut(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::FinderOut(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetTarget(float, float, float, int)",
    ),
    Ok(
        "EffectSprayInit(void)",
    ),
    Ok(
        "FurnCtlGetAddr(int, char *, char **, char **)",
    ),
    Ok(
        "NEW_PERTICLE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_127_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Puzzle_Kai2(void)",
    ),
    Ok(
        "MemoryCardInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjGetLight(int, int)",
    ),
    Ok(
        "pre_Story_Main(GPHASE_ENUM)",
    ),
    Ok(
        "DispCaptureCircleNew(short, short)",
    ),
    Ok(
        "ChengeCurrentAlbum(void)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "DTOR_LIST",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndInit(void)",
    ),
    Ok(
        "LiberateMenuCrossFadeTexMem(int)",
    ),
    Ok(
        "GetHaveReinforcedLensNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FadeMain(void)",
    ),
    Ok(
        "__class_type_info::__class_type_info(char const *, __class_type_info::base_info const *, unsigned int)",
    ),
    Ok(
        "movie_projecterIsReq(void)",
    ),
    Ok(
        "PlayData_PhotoNumCount(void)",
    ),
    Ok(
        "CRenderTarget::Clear(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_GameOver_Menu_Load(void)",
    ),
    Ok(
        "MAPMANIM_MATRIX type_info node",
    ),
    Ok(
        "end_Story_Movie_Room_Sel(void)",
    ),
    Ok(
        "AlbumOutReq(void)",
    ),
    Ok(
        "SceneFodSetFrame(int, int)",
    ),
    Ok(
        "SetManmdlTm2_Mono(unsigned int *, int, char, unsigned int *)",
    ),
    Ok(
        "IgEffectInit(void)",
    ),
    Ok(
        "motGetLocalWorldMatrix(float (*)[4], unsigned int *, int)",
    ),
    Ok(
        "EJobB07(ENEALG_WRK *)",
    ),
    Ok(
        "MapPutGetNowHdl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPzlCancel(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC46(ENEALG_WRK *)",
    ),
    Ok(
        "CFilament::SetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "__ptmd_type_info::~__ptmd_type_info(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::SetWidth(int)",
    ),
    Ok(
        "SubTitleMain(int)",
    ),
    Ok(
        "EffectGetBufferTopAdrs(void)",
    ),
    Ok(
        "sis_mdlSetSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventExeInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrNeckFlg(int)",
    ),
    Ok(
        "TORCH2_BURST_PARAMETER * type_info function",
    ),
    Ok(
        "acsInitCloth(CLOTH_CTRL *, COLLISION_CTRL *, unsigned int *, unsigned int *, int, int)",
    ),
    Ok(
        "IngameLoopSERestart(void)",
    ),
    Ok(
        "OL_LOAD_ONE type_info function",
    ),
    Ok(
        "InitEneMotAlgCtrl(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCalcGsPrimitiveCoord(sceGsXyz *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_sisDelete(int)",
    ),
    Ok(
        "acsRopeMoveRequest(unsigned int, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_ClearMenu(void)",
    ),
    Ok(
        "map_bgmInit(void)",
    ),
    Ok(
        "TORCH2_PARAMETER type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjRegistFurn(int, int, int, MB_OUT_SECTION *)",
    ),
    Ok(
        "CNEquipTrayWrk::Use2(void)",
    ),
    Ok(
        "sisterDrawShadow(void)",
    ),
    Ok(
        "init_ClearMenu_Top(void)",
    ),
    Ok(
        "MapObjNunoCtl(void *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__int128_t type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneChangeLightParameter(int, int, int, int, float, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SendItemVram(unsigned int *, int)",
    ),
    Ok(
        "InitEnemy(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrHaveEnhancingSoulListNum(void)",
    ),
    Ok(
        "gra3dGetFogRef(void)",
    ),
    Ok(
        "MAN_DATA::IsReady(void)",
    ),
    Ok(
        "wchar_t type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvChapterDispEndRelease(void)",
    ),
    Ok(
        "SavePointFadeOutDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Door_Open(GPHASE_ENUM)",
    ),
    Ok(
        "EJobC28(ENEALG_WRK *)",
    ),
    Err(
        InvalidSpecialMethod(
            "fixunsdfdi",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlayData_Score(void)",
    ),
    Ok(
        "g3dCalcViewClipMatrixPerspective(float (*)[4], float, float, float, float, float, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeReadSE(ANI_CTRL *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_ZERO2_PERF_CNT::GetPercentFromMark(void)",
    ),
    Ok(
        "PlyrSPdownCtrl(PLCMN_WRK *)",
    ),
    Ok(
        "LocalRotMatrixY(float (*)[4], float (*)[4], float)",
    ),
    Err(
        InvalidSpecialMethod(
            "deregister_frame",
        ),
    ),
    Ok(
        "init_SavePoint_FadeOut(void)",
    ),
    Ok(
        "end_GameResult_Top(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFindFile::Scan(void)",
    ),
    Ok(
        "end_Story_Debug_Cam(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_func",
        ),
    ),
    Ok(
        "ev_seChangeRoom(int)",
    ),
    Ok(
        "SaveLoadMcStateMsgWinDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaveLoadClearFrameDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "InitEffectsEF(void)",
    ),
    Ok(
        "GetRndSP(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugMenu(void)",
    ),
    Ok(
        "DebugEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetCrossFadeDataAddr(int)",
    ),
    Ok(
        "init_Puzzle_Roku(void)",
    ),
    Ok(
        "EffectRainDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapFogAnimStart(int)",
    ),
    Ok(
        "MemoryCardFileLoadInit(int, int, char *, void *, int)",
    ),
    Ok(
        "MapLoadMoveRoom(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "eh_rtime_match",
        ),
    ),
    Ok(
        "MenuCamTopMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileDelMain(void)",
    ),
    Ok(
        "MapHitCheck(float *, float *, float *, float, int)",
    ),
    Ok(
        "_ClearMaterialData(void *)",
    ),
    Ok(
        "GetTitleBgTexAddr(void)",
    ),
    Ok(
        "GetLenUnitFromVec(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitGraph2dBoot(void)",
    ),
    Ok(
        "ChargeDispReset(void)",
    ),
    Ok(
        "dmaVif1Init(void *, int, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_CalcWeightedNormalBuffer(float *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM01(ENEALG_WRK *)",
    ),
    Ok(
        "MapHitGetColLen(void)",
    ),
    Ok(
        "GetNeckPos(float *, void *)",
    ),
    Ok(
        "AlbumEditAlbumACursorDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FLY_WRK type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectZeroCamFreqReq(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "swsetup",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieRoomMenuDisp(void)",
    ),
    Ok(
        "LiberateMenuItemTexMem(void)",
    ),
    Ok(
        "EffectEndParticleMain(void)",
    ),
    Ok(
        "MorphReset(ANI_CTRL *, unsigned int *)",
    ),
    Ok(
        "sceRotMatrixXYZ(float (*)[4], float (*)[4], float *)",
    ),
    Ok(
        "one_Story_Load_Mission(GPHASE_ENUM)",
    ),
    Ok(
        "RegDatGetStID4Label(int, int)",
    ),
    Ok(
        "g3dPlaneFromMatrixZ(float *, float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_eneIsReady(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSPChance::SEDisable(void)",
    ),
    Ok(
        "MapLoadSetFreeMemAddr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC42(ENEALG_WRK *)",
    ),
    Ok(
        "motCheckTrRateMdl(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RotRngChk(float *, float *, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LocalCopyLtoBGetSize(int)",
    ),
    Ok(
        "g3ddbgWaitVU1(void)",
    ),
    Ok(
        "SaveLoadFrameDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "MenuCamExitReq(void)",
    ),
    Ok(
        "MapSpMoviProc(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MDAT_DOOR * type_info function",
    ),
    Ok(
        "g3dbvBoxFromVertices(float (*)[4], float const (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsCheckRopeMoveExec(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneCheckModelEntry(SCENE_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleDispMain(void)",
    ),
    Ok(
        "PARTICLE type_info node",
    ),
    Ok(
        "MapLightRePreRender(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngameMenuMode(int)",
    ),
    Ok(
        "DrawCmnTriCsrL(unsigned int, float, float, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTourouFreaGetDataPtr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "fixdfdi",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateMenuSoulTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvGetSubId(int, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrHPdownCtrl(PLCMN_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dBlendLight(G3DLIGHT *, G3DLIGHT const **, int, float const *)",
    ),
    Ok(
        "OptPK2SendVram(int, void *)",
    ),
    Ok(
        "LiberateMenuPhotoTexMem(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsSisWrk(void)",
    ),
    Ok(
        "SearchTraceRoute(char *)",
    ),
    Ok(
        "MemoryCardFileOpenMain(int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectSndCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapFogEndFogEv(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_SisWrk(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvSoundRestart(void)",
    ),
    Ok(
        "RegDatGetStat(int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Puzzle_Kaza(GPHASE_ENUM)",
    ),
    Ok(
        "EffectHazeGetParameterPtr(int)",
    ),
    Ok(
        "SingleLinkListAddEnd(SINGLE_LINK_LIST *, void const *)",
    ),
    Ok(
        "mem_dbgGetMem(int)",
    ),
    Ok(
        "MANY_CANDLE_PARTICLE * _fixed_array_verifyrange<MANY_CANDLE_PARTICLE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_COLLISION type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > > type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneManModelLegPositionGet(float *, int)",
    ),
    Ok(
        "init_SavePoint_Main(void)",
    ),
    Ok(
        "MapMeiRegistLightOne(G3DLIGHT *)",
    ),
    Ok(
        "MenuCamMainInit(char)",
    ),
    Ok(
        "MhCtlReload(void)",
    ),
    Ok(
        "IsLoadEnd(int)",
    ),
    Ok(
        "KaiPuzzleExeInit(int)",
    ),
    Ok(
        "EJobC27(ENEALG_WRK *)",
    ),
    Ok(
        "CFileName virtual table",
    ),
    Ok(
        "gra3dCalcVRAMPageSize(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlDeleteManimFlgAll(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Draw3DSquare(float *, float *, float *, float *, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupMain(void)",
    ),
    Ok(
        "end_GameResult(void)",
    ),
    Ok(
        "EV_GHOST_CTRL type_info node",
    ),
    Ok(
        "unsigned char type_info node",
    ),
    Ok(
        "ModeSisAeneFind(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FrameRateSelMain(void)",
    ),
    Ok(
        "MrecIsInRectangle(float const *, float const (*)[4])",
    ),
    Ok(
        "CNEquipTraySave::PopGage(int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EFF_LEAF * _fixed_array_verifyrange<EFF_LEAF>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dIsUsingScratchpad(void)",
    ),
    Ok(
        "AlbumSaveAlbumMaskDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Ok(
        "MapLBuffInit(void)",
    ),
    Ok(
        "MapFogStartFogEv(int, int, int, int, int, int, int)",
    ),
    Ok(
        "pre_ClearMenu(GPHASE_ENUM)",
    ),
    Ok(
        "DbIlPush(char *)",
    ),
    Ok(
        "MemoryCardIconMain(void)",
    ),
    Ok(
        "DrawSeRect(float *)",
    ),
    Ok(
        "RegDatGetRectAndStat2(MB_OUT_RECT **, void *, int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodGetGra3DLight(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "pre_Title_Setup(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimRequestNum(ANI_CTRL *, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CRenderTarget::Clear(void)",
    ),
    Ok(
        "DrawCmnButton(unsigned char, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "end_ClearMenu(void)",
    ),
    Ok(
        "Tim2LoadImage(TIM2_PICTUREHEADER *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_50_i_127_",
        ),
    ),
    Ok(
        "ItemPlyrHPRecover(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitDrawFLG(void)",
    ),
    Ok(
        "FrameRateSelDispMain(void)",
    ),
    Ok(
        "AlbumConfYesNoDisp(int, int, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateAlbumTexMem(void **)",
    ),
    Ok(
        "__user_type_info::contained_public_p(__user_type_info::sub_kind)",
    ),
    Ok(
        "ReqPlyrDead(int)",
    ),
    Ok(
        "motInitInterpAnime(ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisterIsLocked(void)",
    ),
    Ok(
        "mem_utilQueryMaxFreeSize(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2LoadImage2(TIM2_PICTUREHEADER *, unsigned int, unsigned int)",
    ),
    Ok(
        "GetSisterFtype(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGsPutDrawEnv(sceGifTag const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPlayerAnime(unsigned char)",
    ),
    Ok(
        "dmaVif1AddRefTagVIF(unsigned int, int, int, int)",
    ),
    Ok(
        "Tim2GetUserData(TIM2_PICTUREHEADER *, int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFilePhotoNum(void)",
    ),
    Ok(
        "Tim2LoadPicture(TIM2_PICTUREHEADER *, unsigned int, unsigned int)",
    ),
    Ok(
        "photo_datObjRelease(void)",
    ),
    Ok(
        "EffectTourouBaseGetDataPtr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaveLoadFileSelYesNoWinDisp(int, int, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "sgdCalcCoordinateMatrix(SGDCOORDINATE *)",
    ),
    Ok(
        "CallVibrate(void)",
    ),
    Ok(
        "CSpiritGage::FadeOut(void)",
    ),
    Ok(
        "MapSpInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Mission_St(void)",
    ),
    Ok(
        "mmanageClearMdl(int)",
    ),
    Ok(
        "SetSpark(EFFECT_CONT *)",
    ),
    Ok(
        "GetPlyrDoorMoveFlg(void)",
    ),
    Ok(
        "Set3DPosTexure2(float (*)[4], DRAW_ENV *, int, float, float, unsigned char, unsigned char, unsigned char, unsigned char, int)",
    ),
    Ok(
        "DrawCmnTwoLineWindow(unsigned int, float, float, float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "MapObjSetHitArea(int)",
    ),
    Ok(
        "SetSave_PlyrSoulList(MC_SAVE_DATA *)",
    ),
    Ok(
        "MapDoorAnimOpen(void)",
    ),
    Ok(
        "EV_CHANGE_CTRL type_info function",
    ),
    Ok(
        "SPRT_DAT type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortRegistSis(void)",
    ),
    Ok(
        "MapDoorAnimClose(int)",
    ),
    Ok(
        "LogoMain(int, int, int, int)",
    ),
    Ok(
        "ReqPlayerMim(int, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_ptr",
        ),
    ),
    Ok(
        "one_Story_Mission_St(GPHASE_ENUM)",
    ),
    Ok(
        "ClearDrawEnv(void)",
    ),
    Ok(
        "PlyrNModeCtrl(void)",
    ),
    Ok(
        "ClearFlgEndingHardExe(void)",
    ),
    Ok(
        "SetClearFlgCtrl(CLEAR_FLG_CTRL)",
    ),
    Ok(
        "gra3dGetNumEnableLight(int)",
    ),
    Ok(
        "__ptmd_type_info type_info node",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_128_i1i0",
        ),
    ),
    Ok(
        "SetWhiteOut2(int)",
    ),
    Ok(
        "ClearMenuTopMemFree(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectTourouBaseRegist(void *, int)",
    ),
    Ok(
        "SavePointFadeInMain(void)",
    ),
    Ok(
        "KaiPzlDrawCancelWindow(unsigned char)",
    ),
    Ok(
        "one_GameResult_Top(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureUnlockGhost(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptSetOptWrk(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motSetHierarchy(SGDCOORDINATE *, unsigned int *)",
    ),
    Ok(
        "DrawCmnSelYes(unsigned int, float, float, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DISP_ITEM_DATA type_info node",
    ),
    Ok(
        "gra3dbbIsInFogArea(float const (*)[4], G3DFOG const *, float const (*)[4])",
    ),
    Ok(
        "long double type_info function",
    ),
    Ok(
        "SearchEneWrkNo(int, int)",
    ),
    Ok(
        "FurnWorkAlloc(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC41(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CVariable<char, 0, 3> type_info node",
    ),
    Ok(
        "SetDustLeaf(float *, int)",
    ),
    Ok(
        "Tim2CalcBufWidth(int, int)",
    ),
    Ok(
        "g3dCalcPlaneFromPoints(float *, float const *, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetClip(float, float)",
    ),
    Ok(
        "sgdCalcCoordinate(SGDFILEHEADER *, float const (*)[4])",
    ),
    Ok(
        "end_UBI_Mode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventMacroInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvTimerCtrl(MC_SAVE_DATA *)",
    ),
    Ok(
        "SisterNoMove(void)",
    ),
    Ok(
        "SetHaze(EFFECT_CONT *)",
    ),
    Ok(
        "C_PERFORMANCE_MEASURE::Get(void)",
    ),
    Ok(
        "SceneDecisionMovie(int)",
    ),
    Ok(
        "SaveLoadNonSelLineDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "EV_GHOST_CTRL * _fixed_array_verifyrange<EV_GHOST_CTRL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamTopDisp(void)",
    ),
    Ok(
        "gra3dcamSetFov(float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetProjectLogoTexMem(void)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow_bad_typeid",
        ),
    ),
    Ok(
        "TalkCamSet(unsigned char, unsigned char)",
    ),
    Ok(
        "SetEneDmgEffect2(void)",
    ),
    Ok(
        "gra3dLightEnablePop(void)",
    ),
    Ok(
        "MAPDOOR_HEAD * _fixed_array_verifyrange<MAPDOOR_HEAD>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitSisterTrace(void)",
    ),
    Ok(
        "OptionMemFree(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubFadeFrame(unsigned char, unsigned int)",
    ),
    Ok(
        "CompressFile(unsigned int *, char *, unsigned int, char)",
    ),
    Ok(
        "after_Story_Scene(GPHASE_ENUM)",
    ),
    Ok(
        "gra3dsgdGetData(void)",
    ),
    Ok(
        "PlayerCurseUnlock(void)",
    ),
    Ok(
        "MisDispClearAllS(unsigned char, int, int, int, void *, void *)",
    ),
    Ok(
        "MapObjInit(void)",
    ),
    Ok(
        "ResetOutReqFlg(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumThumbnailBaseNumberDisp(int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuFile(void)",
    ),
    Ok(
        "exception::exception(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameResultTopDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleMemFree(void)",
    ),
    Ok(
        "EJobM08(ENEALG_WRK *)",
    ),
    Ok(
        "SetTitleSoundID(int)",
    ),
    Ok(
        "EV_PRI_CTRL * _fixed_array_verifyrange<EV_PRI_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "EJobC25(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPlyrHaveBaseSoulListNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetRoomLabel(int, int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFileName::~CFileName(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSelDisp(void)",
    ),
    Ok(
        "mimStop(MIME_CTRL *)",
    ),
    Ok(
        "acsCalcCoordinate(SGDCOORDINATE *, ROPE_CTRL *)",
    ),
    Ok(
        "ReqFinderFadeIn(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPlyrDeadCameraCtrl(float *, float, float, float, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyDrawUnlock(void)",
    ),
    Err(
        InvalidRepeatingArgument(
            "N208_PLANE3D",
        ),
    ),
    Ok(
        "AlbumMcMsgWinDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile::ErrorString(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_sisInit(void)",
    ),
    Ok(
        "OptionEnd(void)",
    ),
    Ok(
        "CSPChance::Init(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "REGIST_TIMER type_info node",
    ),
    Ok(
        "unsigned short type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3ddbgNormalizeLightData(GRA3DLIGHTDATA *, GRA3DLIGHTDATA const *)",
    ),
    Ok(
        "EffOthTorch2SparkParameterPtrGet(int)",
    ),
    Ok(
        "dmaVif1CheckSync(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motInitAniCtrlMalloc(ANI_CTRL *, unsigned int *, unsigned int *, unsigned int, unsigned int)",
    ),
    Ok(
        "PlyrMoveChkV(MOVE_BOX *, float *, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlGetNextModelAddr(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC18(ENEALG_WRK *)",
    ),
    Ok(
        "EffectTourouBaseExecOne(TOUROU_BASE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motQuaternionSlerp(float *, float *, float *, float)",
    ),
    Ok(
        "one_SavePoint_Album(GPHASE_ENUM)",
    ),
    Ok(
        "__user_type_info::__user_type_info(char const *)",
    ),
    Ok(
        "CCenterCircle::aMainAlpha",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawSphere(float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Zero2Anim2D_SelAnimCtrl(char *)",
    ),
    Ok(
        "MenuCmnCrossFade(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraVCIReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_IngameWrk(MC_SAVE_DATA *)",
    ),
    Ok(
        "SaveLoadSnapShadowDisp(int, int, unsigned char, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::sub_func_seal_param",
    ),
    Ok(
        "SaveLoadSnapShotDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "SetDust2(float *)",
    ),
    Ok(
        "gra3dSetVertexColorPreset(SGDFILEHEADER *, int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumEditInfoPhotoNoDisp(int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AllPlyrEventItemLost(void)",
    ),
    Ok(
        "end_Story_Ene_Dead(void)",
    ),
    Ok(
        "Get2PosRot(float const *, float const *, float *, float *)",
    ),
    Ok(
        "ReqFinderFadeOut(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterSetFilmNo(int)",
    ),
    Ok(
        "MenuMemoTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraReq(void)",
    ),
    Ok(
        "HEAT_HAZE type_info node",
    ),
    Ok(
        "SetSave_AlbumInfoData(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "float type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SUBFUNC_PDEFORM_CTRL type_info function",
    ),
    Ok(
        "EffectButterflyTargetParameterPtrGetPublic(int)",
    ),
    Ok(
        "CFindFile::OnError(char const *, ...)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisStSubEnd(void)",
    ),
    Ok(
        "GetEnePos(float *, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisterMdlNo(int)",
    ),
    Ok(
        "CCameraPowerUp::AllRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Movie_PreLoad(void)",
    ),
    Ok(
        "after_GameResult(GPHASE_ENUM)",
    ),
    Ok(
        "CAutoGsRegisters<3> type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetFlyOne(FLY_WRK *, ENE_WRK *, unsigned char, float *, float *, PLCMN_WRK *)",
    ),
    Ok(
        "ReadMemo(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSelMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GalleryMain(void)",
    ),
    Ok(
        "CSpiritGage::Init(void)",
    ),
    Ok(
        "GetVifEndTimer(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadAnalogMain(void)",
    ),
    Ok(
        "CNEquipTrayWrk::IsHitBackON(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MANY_CANDLE_PARTICLE type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispTitleCursorR(float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "EffectTorch2SetAlphaRate(void *, float)",
    ),
    Ok(
        "__ptmf_type_info::~__ptmf_type_info(void)",
    ),
    Ok(
        "gra3dGetNumLightEnable(GRA3DLIGHTDATA const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecGetStaInfo(float *, int, float const *)",
    ),
    Ok(
        "MapLightSetPlayerReal(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisterTracePlayer(void)",
    ),
    Ok(
        "HcBaseIsNearSegTri(float const *, float const *, float const *, float const *, float const *)",
    ),
    Ok(
        "pre_Story_Game_Over(GPHASE_ENUM)",
    ),
    Ok(
        "release_typeSetSaveA(MC_SAVE_DATA *)",
    ),
    Ok(
        "MapAnimDeleteAll(void)",
    ),
    Ok(
        "sgdGetProcUnit(SGDPROCUNITHEADER const *, int, int)",
    ),
    Ok(
        "pre_Story_Puzzle(GPHASE_ENUM)",
    ),
    Ok(
        "MorphSetCtrl(void *, int)",
    ),
    Ok(
        "my_mallocMalloc(_MY_MALLOC *, int, int)",
    ),
    Ok(
        "g3ddbgInfinitePrintConsole(int)",
    ),
    Ok(
        "MapObjSetDrawEffect(MAPOBJ_DAT *, int)",
    ),
    Ok(
        "OptDispBgMask(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > > type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dSetLightData(GRA3DLIGHTDATA const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "VibrateRequest1(unsigned short, unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dGetGsRegisterRef(long)",
    ),
    Ok(
        "ENE_DMG_BLUR_CONTRAST_PARAMETER type_info node",
    ),
    Ok(
        "PlayData_BusterNumCount(void)",
    ),
    Ok(
        "acsInitRopeSub(unsigned int, unsigned int, unsigned int)",
    ),
    Ok(
        "photo_datObjInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mmanageReqItemMdl(int)",
    ),
    Ok(
        "EnemyAnimLock(void)",
    ),
    Ok(
        "spr_stackFreeMem(int)",
    ),
    Ok(
        "motGetKusabiPos(float *, ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_GetClipVolumeV(void)",
    ),
    Ok(
        "CompressData(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaAlgoTrace(SISALG_WRK *)",
    ),
    Ok(
        "g3dDmaSetGsRegister(unsigned long, unsigned long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KaiPzlTerm2(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneBlinkCtrl(ENE_WRK *)",
    ),
    Ok(
        "MapHitCollisionLine(float *, float *, float *, float *, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetPosition(float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetDoorBuffPtr(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_eneRegisterFile(int, int, int)",
    ),
    Ok(
        "CEneLife::Decrease(float)",
    ),
    Ok(
        "__si_type_info type_info function",
    ),
    Ok(
        "CNEquipTraySave::Absorb(int)",
    ),
    Ok(
        "AlbumMemMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugAllMapDisp(void)",
    ),
    Ok(
        "EvGetRot360(short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "long type_info node",
    ),
    Ok(
        "init_Story_Mission_St(void)",
    ),
    Ok(
        "add_particle(int, HEAT_HAZE *, float *, float *, float, float, float, float)",
    ),
    Ok(
        "PlayerShutterUnlock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MsgColChange(DISP_STR *, unsigned char)",
    ),
    Ok(
        "init_EventFile_Disp(void)",
    ),
    Ok(
        "MenuRadioDisp(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectThunderLightReq(float *, int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_sisRegister(int, int, int)",
    ),
    Ok(
        "SubContrast3(unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneGetAniCtrl(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneSetSquare(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile::OnError(char const *, ...)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitPlayer(void)",
    ),
    Ok(
        "acsRopeMoveVib(ROPE_CTRL *)",
    ),
    Ok(
        "Tim2GetMipMapPictureSize(TIM2_PICTUREHEADER *, int, int *, int *)",
    ),
    Ok(
        "void fill<SGDFILEHEADER **, SGDFILEHEADER *>(SGDFILEHEADER **, SGDFILEHEADER **, SGDFILEHEADER * const &)",
    ),
    Ok(
        "isDispLamp(void)",
    ),
    Ok(
        "SetupMenuInit(void)",
    ),
    Ok(
        "GameDataSaveMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RDLongFireFlareUpReq(int)",
    ),
    Ok(
        "MemoryCardSetDirName(char *, int)",
    ),
    Ok(
        "sgdRemapInverse(SGDFILEHEADER *)",
    ),
    Ok(
        "MemoryCardDirDelMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisDispGetTimerCnt(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Mission_Save(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFadeVariable<int>::Fade(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawSisDummy(void)",
    ),
    Ok(
        "EndPK2DbufWait(Q_WORDDATA *)",
    ),
    Ok(
        "MapObjItemOff(void)",
    ),
    Ok(
        "FurnCtlGetAttr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::ReqZoomIn(void)",
    ),
    Ok(
        "MissionGetRank3(int)",
    ),
    Ok(
        "HcBaseIsLineHitFace(float *, float const *, float const *, float const *, float const *, float const *)",
    ),
    Ok(
        "Get2PosRot2(float const *, float const *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GET_ZBUF_REGISTER(int)",
    ),
    Ok(
        "SortPhotoData_NonProtect(PFILE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodGetFirstCam(FOD_CAMERA_DATA *, FOD_CTRL *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispCharaRGB(int, unsigned char, float, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "IgEffectEneDmgReqZero(int, int)",
    ),
    Ok(
        "CCenterCircle::Draw(int, int, int, float)",
    ),
    Ok(
        "acsChodoSetWind(int, float, float, int)",
    ),
    Ok(
        "FurnCtlGetSize(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawSPhotoFromSmallPhotoAreaAddr(int, int, int, int, int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RegDatGetHitNum(void)",
    ),
    Ok(
        "acsDelEneCollision(ANI_CTRL *)",
    ),
    Ok(
        "sgdVerifyLightData(GRA3DLIGHTDATA *, ZERO2LIGHTDATAFILE const *)",
    ),
    Ok(
        "mem_utilInit(void *, int)",
    ),
    Ok(
        "ev_eneDeleteFile(int, int, int)",
    ),
    Ok(
        "one_Story_Debug(GPHASE_ENUM)",
    ),
    Ok(
        "UnPkGetFileAddr(char *, char *)",
    ),
    Ok(
        "GameOverMenuTopFirstInit(void)",
    ),
    Ok(
        "G3DLIGHT * _fixed_array_verifyrange<G3DLIGHT>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawHitCircle(float *, float, int, unsigned char, unsigned char, float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dSetGlobalState(G3DGLOBALSTATETYPE, unsigned int)",
    ),
    Ok(
        "MemoryCardCheckDirBroken(int)",
    ),
    Ok(
        "EventCameraSetFov(float)",
    ),
    Ok(
        "mimRequestNumContinue(ANI_CTRL *, int, unsigned char)",
    ),
    Ok(
        "ClearFlg_EasyGameClearExe(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniCodeReadTIMER(ANI_CTRL *, int *)",
    ),
    Ok(
        "SetPlyrFinderEnd1(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardMakeNewFileInit(int, int, char *, void *, int)",
    ),
    Ok(
        "EffectThunderLightGetG3dLight(G3DLIGHT *)",
    ),
    Ok(
        "EFFPOS * _fixed_array_verifyrange<EFFPOS>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtlDbOutObjPos(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulTexLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "C_ACS_CTRL type_info function",
    ),
    Ok(
        "ItemEffectReq(float *, int, int)",
    ),
    Ok(
        "SetASCIIString4(int, float, float, int, unsigned char, unsigned char, unsigned char, char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IgEffectParticleEndPosCalcFinder(float *)",
    ),
    Ok(
        "end_Story_Load_Mission(void)",
    ),
    Ok(
        "MapObjGetModelAddr(int, int)",
    ),
    Ok(
        "RegDatGetVecNum(int, int)",
    ),
    Ok(
        "motGetBukiSpeAPos(float *, ANI_CTRL *)",
    ),
    Ok(
        "SisterDisp(int)",
    ),
    Ok(
        "SavePointTopInit(void)",
    ),
    Ok(
        "mimClearAllVertex(ANI_CTRL *)",
    ),
    Ok(
        "init_Tecmo_Mode(void)",
    ),
    Ok(
        "void fill<float *, float>(float *, float *, float const &)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IEditObject type_info function",
    ),
    Ok(
        "__uint128_t type_info function",
    ),
    Ok(
        "TermPK2Dbuf(void)",
    ),
    Ok(
        "CFEneEntry::GetNearestAppearPos(int, float *)",
    ),
    Ok(
        "MakeTim2SendPacket_3Dpkt(unsigned int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSprite::~CSprite(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PadAnalogInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubHalo(float *, int, int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char, float)",
    ),
    Ok(
        "SIS_DATA type_info node",
    ),
    Ok(
        "RD_REG_HEAD type_info node",
    ),
    Ok(
        "GetPlayData_TotalScore(void)",
    ),
    Ok(
        "gra3dcamGetRoll(void)",
    ),
    Ok(
        "one_Ending_Hard(GPHASE_ENUM)",
    ),
    Ok(
        "GetOutGameCmnTexAddr(void)",
    ),
    Ok(
        "one_LangSel_Main(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlayData(MC_SAVE_DATA *)",
    ),
    Ok(
        "g3ddbgLoadVu0FloatingPointRegisters(float const (*)[4])",
    ),
    Ok(
        "IsReadyAllEnemy(void)",
    ),
    Ok(
        "SpCmnGetCenterX(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ModeSisTrace(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGetAmbientRef(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSavePointMainTexMem(void **, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GhostSealDoorAppear(int)",
    ),
    Ok(
        "CFilament::RTModeOff(void)",
    ),
    Ok(
        "MapLoadSetDrawFlgSub(int, int)",
    ),
    Ok(
        "SetEneMahiMode(ENE_WRK *, int, int, int)",
    ),
    Ok(
        "EffectSaeHazeCut(void *)",
    ),
    Err(
        InvalidSpecialMethod(
            "sce_sema_id",
        ),
    ),
    Ok(
        "ALBUM_INFO type_info node",
    ),
    Ok(
        "GetEneDrawFLG(void)",
    ),
    Ok(
        "SceneEffectDataFileNoGet(int)",
    ),
    Ok(
        "CheckSisAnimeEnd(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ModelMemoryFree(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_ClearVector(float *)",
    ),
    Ok(
        "CFile::Read(void *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "release_typeRegister(int, int, _ENE_RELASE_TYPE)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapObjEffCallback(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFilmNo::BlinkOff(void)",
    ),
    Ok(
        "g3dLogi2(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetLWS2(SGDCOORDINATE *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSaveCopyDat(void *, void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0CalcVertexColorSpotLightLambert(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsActEnemy(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MORPH_CTRL * _fixed_array_verifyrange<MORPH_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "CVariable<char, 0, 9> * _fixed_array_verifyrange<CVariable<char, 0, 9> >(unsigned int, unsigned int)",
    ),
    Ok(
        "Anim2D_CalcNowRGB(RGB_ANIM_TBL const *, int)",
    ),
    Ok(
        "MrecGetSeNo(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "sce_eh_sema_id",
        ),
    ),
    Ok(
        "TUBE * _fixed_array_verifyrange<TUBE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Vu0ApplyMatrix(float *, float (*)[4], float *)",
    ),
    Ok(
        "MapCamGra3dcamSetTargetMargin(float const *, float const *, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Set_McSaveLanguage(unsigned char)",
    ),
    Ok(
        "g3dCalcLightPower(G3DLIGHT const *, float const *)",
    ),
    Ok(
        "_Vu0LoadMaterialConstant(G3DMATERIAL const *)",
    ),
    Ok(
        "__si_type_info::do_find_public_subobj(int, type_info const &, void *, void *) const",
    ),
    Ok(
        "MovieRoomMenuEnd(void)",
    ),
    Ok(
        "SPRT_DAT * _fixed_array_verifyrange<SPRT_DAT>(unsigned int, unsigned int)",
    ),
    Ok(
        "CNEquipTrayWrk::BaseDraw(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileReadReq(int, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC15(ENEALG_WRK *)",
    ),
    Ok(
        "CFindFile::SetFileSpec(char const *)",
    ),
    Ok(
        "PlyrVibCheck(void)",
    ),
    Ok(
        "SystemDataSaveMain(void)",
    ),
    Ok(
        "FileLost(int, int)",
    ),
    Ok(
        "MapObjGetModelName(MAPOBJ_DAT *)",
    ),
    Err(
        UnrecognizedSpecialMethod(
            "EH_FRAME_BEGIN",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC35(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "float ()[4] * _fixed_array_verifyrange<float ()[4]>(unsigned int, unsigned int)",
    ),
    Ok(
        "gra3dSetFogColor(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetInteger(float, float, int)",
    ),
    Ok(
        "MenuRelease(void)",
    ),
    Ok(
        "init_Story_GameOver_Movie(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB2A(ENEALG_WRK *)",
    ),
    Ok(
        "SetNega(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EndModeSisAeneFind(void)",
    ),
    Ok(
        "PlyrDWalkTmCtrl(PLCMN_WRK *)",
    ),
    Ok(
        "SetEneSlowClear(ENE_WRK *)",
    ),
    Ok(
        "EffectSndEnd(void)",
    ),
    Ok(
        "plyr_mdlGetMATRIX(float (*)[4], int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemBankIsReady(void)",
    ),
    Ok(
        "SetSisAreaNo(int)",
    ),
    Ok(
        "gra3dSetLightIntens(G3DLIGHT const *, float)",
    ),
    Ok(
        "motGetEneNeckRot(float (*)[4], ANI_CTRL *, SGDCOORDINATE *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitSceneWork(void)",
    ),
    Ok(
        "FOD_LIT_SERIAL type_info node",
    ),
    Ok(
        "REGIST_TIMER type_info function",
    ),
    Ok(
        "MapObjDrawON(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "newAssert(char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TIME_INFO * _fixed_array_verifyrange<TIME_INFO>(unsigned int, unsigned int)",
    ),
    Ok(
        "CFile::GetLength(void) const",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorSetAnimID(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ItemFilmEquip(int)",
    ),
    Ok(
        "gra3dcamSetCoord(float const (*)[4])",
    ),
    Ok(
        "GameOverMenuTopMemFree(void)",
    ),
    Ok(
        "_Vu0CalcColorDataPhong(void *, void const *)",
    ),
    Ok(
        "PuzzleStartReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SCN_ANM_MDL * _fixed_array_verifyrange<SCN_ANM_MDL>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodSetMyLight(FOD_LIGHT *, char *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "photo_datObjMain(void)",
    ),
    Ok(
        "MapLoadSetOffSet(int, float, float, float)",
    ),
    Ok(
        "one_Story_Scene_Main(GPHASE_ENUM)",
    ),
    Ok(
        "MenuRefCtrlInit(MENU_REF_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectButterflyChangeType(int, int)",
    ),
    Ok(
        "SetDither3(EFFECT_CONT *)",
    ),
    Ok(
        "GetIconDataLabel(int, int)",
    ),
    Ok(
        "INGAME_WRK::Init(void)",
    ),
    Ok(
        "MapPutSetModelPtr(void *, unsigned int *)",
    ),
    Ok(
        "IG3DCompatible::s_pFuncSetTransform",
    ),
    Ok(
        "SetFilePhotoProtect(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> > >::custom_allocate(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadReqSe(int, unsigned char)",
    ),
    Ok(
        "AlbumEditMenuAnimCtrl(char *, char *, unsigned char *, float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneSlowMode(ENE_WRK *, int, float)",
    ),
    Ok(
        "EFFINFO2 type_info node",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_ZA19_10C_PARTICLE",
        ),
    ),
    Ok(
        "EJobC0C(ENEALG_WRK *)",
    ),
    Ok(
        "PlyrVibCtrlBig(unsigned char, unsigned char)",
    ),
    Ok(
        "mimInitWeight(ANI_CTRL *)",
    ),
    Ok(
        "ChangeForceTraceMode(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SystemBankRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MsgDispCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Chapter_Sel(GPHASE_ENUM)",
    ),
    Ok(
        "COLLISION_DAT * _fixed_array_verifyrange<COLLISION_DAT>(unsigned int, unsigned int)",
    ),
    Ok(
        "SetManmdlTm2(unsigned int *, int, char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortRegistEnem(ENE_WRK *)",
    ),
    Ok(
        "ENE_MOT_WRK * type_info node",
    ),
    Ok(
        "gra3dDrawSGDShadowEveryObject(SGDFILEHEADER *, G3DLIGHT const *)",
    ),
    Ok(
        "EffectCandleFlameYuramekiCtrl(float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_seInit(void)",
    ),
    Ok(
        "EJobC10(ENEALG_WRK *)",
    ),
    Ok(
        "MemoryCardFileDelInit(int, int, char *)",
    ),
    Ok(
        "void __push_heap<LIGHTCOMPAREDATA *, int, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, int, int, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "MapAnimRegist(int, unsigned int *, unsigned int *, float (*)[4][4], float *, float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dCosf(float)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMoveSpeed(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dCallMicroSubroutine4(unsigned int const *)",
    ),
    Ok(
        "g3ddbgDumpVu1MicroMemory(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffInKeepOutFlowCtrl(EFFECT_CONT *)",
    ),
    Err(
        InvalidSpecialMethod(
            "get_dynamic_handler_chain",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::SetBattleFlg(int)",
    ),
    Ok(
        "HcBasePointLineXZ(float *, float *, float *)",
    ),
    Ok(
        "CTexture::~CTexture(void)",
    ),
    Ok(
        "end_Story_Movie(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_i_60_i_15_i0",
        ),
    ),
    Ok(
        "QuakeCameraGetReq(void)",
    ),
    Ok(
        "EffectButterflyChangeTarget(int, float *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlFindInit(int)",
    ),
    Ok(
        "MrecGetCameraPos(float *)",
    ),
    Ok(
        "EJobC3F(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapDoorGetHitFlg(int)",
    ),
    Ok(
        "SaveLoadTitleFrameDisp(int, int, unsigned char, void *)",
    ),
    Ok(
        "SetEffSQITex(int, int *, int, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "EffectSndFileRelease(int)",
    ),
    Ok(
        "MapPutSetFunc(int, unsigned int *, int)",
    ),
    Ok(
        "MemoryCardIconSysInit(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DelFilePhotoProtect(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamSetDepth(float, float)",
    ),
    Ok(
        "MoveSisStairs(void)",
    ),
    Ok(
        "CameraMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "QuakeCameraReq(float, unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardCheckEmpty(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DebugAllItemGet(void)",
    ),
    Ok(
        "CNPlyrCamera::GetFOVRate(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SavePointMainTexLoadReq(void *, int)",
    ),
    Ok(
        "CallNega(int)",
    ),
    Ok(
        "wchar_t type_info node",
    ),
    Ok(
        "end_Title_SetupMenu(void)",
    ),
    Ok(
        "GetDoorLockState(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC44(ENEALG_WRK *)",
    ),
    Ok(
        "DbmSave(DEBUG_MENU *, char *, char *, char *)",
    ),
    Ok(
        "GetSoulList(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_EvTalkTbl(MC_SAVE_DATA *)",
    ),
    Ok(
        "MemoryCardAssert(char *, ...)",
    ),
    Ok(
        "FurnCtlGetType(char *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_100_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetWhiteIn2(int)",
    ),
    Ok(
        "gra3ddbgDrawProc(void)",
    ),
    Ok(
        "EffectLightComeInExecOne(LIGHT_COME_IN_DATA *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamSetFinCamera(float const (&)[4], float const (*)[4])",
    ),
    Ok(
        "CFadeVariable<float>::Work(void)",
    ),
    Ok(
        "MAPOBJ_HEAD type_info node",
    ),
    Ok(
        "Tim2GetTexel(TIM2_PICTUREHEADER *, int, int, int)",
    ),
    Ok(
        "LocalRotMatrixX(float (*)[4], float (*)[4], float)",
    ),
    Err(
        InvalidSpecialMethod(
            "cp_eh_info",
        ),
    ),
    Ok(
        "CFile::Open(char const *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM06(ENEALG_WRK *)",
    ),
    Ok(
        "TAIL_DMG2_DAT * _fixed_array_verifyrange<TAIL_DMG2_DAT>(unsigned int, unsigned int)",
    ),
    Ok(
        "SetScissorRegister(int, long)",
    ),
    Ok(
        "motSetInvMatrix(float (*)[4], float (*)[4])",
    ),
    Ok(
        "motInitAniCtrl(ANI_CTRL *, unsigned int *, unsigned int *, unsigned int *, unsigned int, unsigned int)",
    ),
    Ok(
        "__si_type_info type_info node",
    ),
    Ok(
        "init_Story_Pause(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_ClearMenu_Album(GPHASE_ENUM)",
    ),
    Ok(
        "GetCurrentAlbum(void)",
    ),
    Ok(
        "RegDatCheckBuff(int)",
    ),
    Ok(
        "MapDrawDeleteRoom(MLOAD_HEAD *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Menu(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BUTTERFLY_TARGET_PARAMETER * type_info function",
    ),
    Ok(
        "EFFRDR_RSV type_info node",
    ),
    Ok(
        "LiberateTitleTexMem(void **)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSisterMdlNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumSlotSelWinDisp(int, int, int, unsigned char)",
    ),
    Ok(
        "GetCamPhotoFile(void)",
    ),
    Ok(
        "acsCheckCollisionSphere(SPHERE *, float *, float *, float)",
    ),
    Ok(
        "MapDrawRoomOne(MLOAD_HEAD *, GRA3DLIGHTDATA *)",
    ),
    Ok(
        "MenuDispMain(void)",
    ),
    Ok(
        "gra3dChangeST(SGDFILEHEADER *, float, float)",
    ),
    Ok(
        "one_Story_Movie_Main(GPHASE_ENUM)",
    ),
    Ok(
        "EJobB16(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Title_Option(GPHASE_ENUM)",
    ),
    Ok(
        "IgEffectSubFuncParalyzeReq(int)",
    ),
    Ok(
        "ClearFlg_AddClearCnt(int)",
    ),
    Ok(
        "MenuRadio(void)",
    ),
    Ok(
        "EneFlyAnmctrlRelease(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mem_utiDrawMemory(void (*)(int, int, int, int, int), void (*)(int, int, int, int, int), int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearFlg_MissionAllClearExe(void)",
    ),
    Ok(
        "MapLightSetPlayerOnly(void)",
    ),
    Ok(
        "end_Story_Debug(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne * _fixed_array_verifyrange<CBonusShotOne>(unsigned int, unsigned int)",
    ),
    Ok(
        "SisterPosUpdate(void)",
    ),
    Ok(
        "MissionGetTassei(int)",
    ),
    Ok(
        "EV_EXE_CTRL type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetObjDrawFLG(int)",
    ),
    Ok(
        "photo_datFlgUp(int)",
    ),
    Ok(
        "SetTestRegister(int, long)",
    ),
    Ok(
        "PlayerModeIsFinder(void)",
    ),
    Ok(
        "MAPMANIM_HEAD * _fixed_array_verifyrange<MAPMANIM_HEAD>(unsigned int, unsigned int)",
    ),
    Ok(
        "EvDisp2DEndReq(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetMsgPage(char)",
    ),
    Ok(
        "InitEffectScrEF(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CDamageDisp::Work(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PictureHint1(void)",
    ),
    Ok(
        "GameResultTopInit(void)",
    ),
    Ok(
        "motGetANI_CTRL(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardMakeNewDirInit(int, int, char *)",
    ),
    Ok(
        "init_Title_SetupMenu(void)",
    ),
    Ok(
        "SetEneView(ENE_WRK *, int, int)",
    ),
    Ok(
        "GetTorchPartAddr(void *, int, int)",
    ),
    Ok(
        "MisDispGetAnimAlpha(ALPHA_ANIM_TBL const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TermPK3Dbuf(void)",
    ),
    Ok(
        "ENE_DMG_BLUR_CONTRAST_PARAMETER type_info function",
    ),
    Ok(
        "EffWrkFilamentOffSet(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_SAVE_POS_STREAM type_info function",
    ),
    Ok(
        "MovieRoomMenuMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFilePhotoAdrNo(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawLineTestOff(float *, unsigned char, unsigned char, unsigned char, unsigned char, float *, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "CFile type_info node",
    ),
    Err(
        InvalidSpecialMethod(
            "swrite",
        ),
    ),
    Ok(
        "MenuDBuffRelease(unsigned char)",
    ),
    Ok(
        "PrintMsg_T(int, int, int, int, int, int, int)",
    ),
    Ok(
        "init_SavePoint_FadeIn(void)",
    ),
    Ok(
        "ReqPlyrHPdown(PLCMN_WRK *, unsigned short)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShot::OutReqWrk(void)",
    ),
    Ok(
        "SetClampRegister(int, long)",
    ),
    Ok(
        "playerUseDoorLight(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPMANIM_MATRIX * _fixed_array_verifyrange<MAPMANIM_MATRIX>(unsigned int, unsigned int)",
    ),
    Ok(
        "MhCtrl type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "KazaPuzzleMain(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "malloc_trim_threshold",
        ),
    ),
    Ok(
        "SetLine(int, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "SearchRDPFireWork(int)",
    ),
    Ok(
        "SetSisNeckFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvBinChangeAddr4(unsigned char *, unsigned char *)",
    ),
    Ok(
        "SendEneVram(unsigned int *, int)",
    ),
    Ok(
        "ReqFinderDispIn(void)",
    ),
    Ok(
        "MapSkyGetTex0(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetInteger2(int, float, float, int, unsigned char, unsigned char, unsigned char, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::SetUp(void)",
    ),
    Ok(
        "CStdioFile::WriteString(char const *)",
    ),
    Ok(
        "AlbumEnd(void)",
    ),
    Ok(
        "CCameraFilm::aFilmMinPercentTbl",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneMotAttr(ENE_WRK *, ENE_MOT_WRK *)",
    ),
    Ok(
        "SisCondCheck(void)",
    ),
    Ok(
        "init_Title_Menu(void)",
    ),
    Ok(
        "EFFPOS type_info function",
    ),
    Ok(
        "DrawSPhotoFromSmallPhotoArea(int, int, int, int, int, unsigned char)",
    ),
    Ok(
        "SetWhiteIn(void)",
    ),
    Ok(
        "one_SavePoint_FadeIn(GPHASE_ENUM)",
    ),
    Ok(
        "g3dSetGsRegister(long, long, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTitleSoundBankID(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SubDither3(int, float, float, unsigned char, unsigned char)",
    ),
    Ok(
        "PICTURE_WRK * _fixed_array_verifyrange<PICTURE_WRK>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuSoulListCompFlgInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SCREEN_EFFECT_PARAMETER * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChrSortEnemCallback(void)",
    ),
    Ok(
        "CEditRoot::~CEditRoot(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CombRotate(float)",
    ),
    Err(
        InvalidSpecialMethod(
            "default_terminate",
        ),
    ),
    Ok(
        "gra3dDrawPrimitive(void const *, int)",
    ),
    Ok(
        "FurnCtlCheckKakuType(char *, char *)",
    ),
    Ok(
        "MenuCam(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_SetCoordCache(CoordCache const &)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MrecInitCameraInfo(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TORCH2_SPARK_PARAMETER * type_info node",
    ),
    Ok(
        "SceneTestEffectFlgGet(SCN_DB_EFF_TYPE)",
    ),
    Ok(
        "void sort_heap<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB03(ENEALG_WRK *)",
    ),
    Ok(
        "IsAliveEnemy(int)",
    ),
    Ok(
        "init_Story_Damage(void)",
    ),
    Ok(
        "FrameInsideChk(float *, float *, float *)",
    ),
    Ok(
        "int * _fixed_array_verifyrange<int>(unsigned int, unsigned int)",
    ),
    Ok(
        "CNEquipTraySave::NextFuncSet(void)",
    ),
    Ok(
        "FurnCtlGetMotAddrEx(int, char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitDeleteDoorRec(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventCameraSetTarget(float const *)",
    ),
    Ok(
        "StartDmaDirectTrans(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "mdiff",
        ),
    ),
    Ok(
        "SceneInitializeIngame(void)",
    ),
    Ok(
        "__attr_type_info::~__attr_type_info(void)",
    ),
    Ok(
        "end_Title_Top(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuRefMovePadLup(MENU_REF_CTRL *, int *, int, int)",
    ),
    Ok(
        "SetTextureToScene(void)",
    ),
    Ok(
        "GetSisTraceStatus(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionDrawSelect(void *, int, int, unsigned char)",
    ),
    Ok(
        "PrintNumber_N(int, int, int, int, unsigned char, unsigned char, int, unsigned char, unsigned char)",
    ),
    Ok(
        "SlideEncodeHeader(unsigned char *, unsigned char *, int)",
    ),
    Ok(
        "MAN_DATA type_info function",
    ),
    Ok(
        "ChangeSisterExPos(int, int)",
    ),
    Ok(
        "acsGetClothBufSize(unsigned int *, int)",
    ),
    Ok(
        "SaveLoadClearNumberDisp(int, int, int, unsigned char, int, unsigned char, int, void *)",
    ),
    Ok(
        "MisDispDeleteFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motGetTaimatuPos(float *, ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetFilePhotoState(unsigned char)",
    ),
    Ok(
        "PlayerDrawLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMsgLineLength(unsigned char *, unsigned char **)",
    ),
    Ok(
        "MAPSP_KAZ_HEAD type_info function",
    ),
    Ok(
        "SetSave_SisTrace(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DOOR_CTRL type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleCrossScreenDisp(int, int, unsigned char)",
    ),
    Ok(
        "ItemGet(int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPOBJ_HEAD type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_CHANGE_CTRL * _fixed_array_verifyrange<EV_CHANGE_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "MpaPutDeleteOneObj(void *)",
    ),
    Ok(
        "EneDmgScreenEffectReq(float *, int, int, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SIS_ANI_TBL * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OptionBackGroundLoadReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectPhotoPhase(void)",
    ),
    Ok(
        "IngameCameraMain(void)",
    ),
    Ok(
        "FurnWorkFree(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LeverGachaChk(void)",
    ),
    Ok(
        "SetWhiteOut(void)",
    ),
    Ok(
        "EvDbgMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM04(ENEALG_WRK *)",
    ),
    Ok(
        "type_info virtual table",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_class",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dDmaLoadVu1MicroProgram(unsigned int const *, int)",
    ),
    Ok(
        "EJobC13(ENEALG_WRK *)",
    ),
    Ok(
        "g3ddbgStoreVu0FloatingPointRegisters(float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "unsigned long type_info function",
    ),
    Err(
        InvalidSpecialMethod(
            "rtti_ptmf",
        ),
    ),
    Ok(
        "SceneFodSetNowFrame(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitMovie(int, int, int)",
    ),
    Ok(
        "GetToushuKatanaPos(float *, float *, ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsRopeMoveWind(ROPE_CTRL *, char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PK2SendVram(unsigned int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEneSealClear(ENE_WRK *)",
    ),
    Ok(
        "GameDataSaveTexMemFree(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_15_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC2C(ENEALG_WRK *)",
    ),
    Ok(
        "acsCheckCollisionPlane(CPLANE *, float *, float *, float, int)",
    ),
    Ok(
        "gra3dMonotoneDrawEnable(int)",
    ),
    Ok(
        "IgEffectSubFuncMetsuReq(int, int)",
    ),
    Ok(
        "DoorLock(int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetIngameEffectModeTime(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EneHitEffectMain(void)",
    ),
    Ok(
        "uncaught_exception(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "acsResetCloth(ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::Init(void)",
    ),
    Ok(
        "SIS_ANI_TBL type_info node",
    ),
    Ok(
        "motInitMotCtrl(MOT_CTRL *, unsigned int *, unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DispPhotoFrame1(int, float, float, int)",
    ),
    Ok(
        "mimSetVertex(ANI_CTRL *)",
    ),
    Ok(
        "CEditRoot type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallDeform2(int, int, int, int, int)",
    ),
    Ok(
        "SingleLinkListAllCellFree(SINGLE_LINK_LIST *)",
    ),
    Ok(
        "SaJump(SISALG_WRK *)",
    ),
    Ok(
        "EffectKusabiHazeCut(void *)",
    ),
    Ok(
        "MemoryCardFileCloseReq(int)",
    ),
    Ok(
        "motInitMsn(void)",
    ),
    Ok(
        "CFindFile::GetFileRef(int)",
    ),
    Ok(
        "GetSkyDrawFLG(void)",
    ),
    Ok(
        "SetNowTracePos(void)",
    ),
    Ok(
        "MissionSelInit(void)",
    ),
    Ok(
        "plyr_mdlResetReq(void)",
    ),
    Ok(
        "EffEneDmgLargeHitBlurParameterPtrGet(int)",
    ),
    Ok(
        "plyr_mdlMotionWork(void)",
    ),
    Ok(
        "ctl::custom_allocator<char> type_info function",
    ),
    Ok(
        "MemoryCardAllFileMakeInit(int, int, int, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimRequestLastFrame(MIME_CTRL *, unsigned char)",
    ),
    Ok(
        "EffectSprayAllCut(void)",
    ),
    Ok(
        "GetStrLength(unsigned char *)",
    ),
    Ok(
        "IngameWrkInit(int, int)",
    ),
    Ok(
        "MapObjUpdateFlg(void *, int)",
    ),
    Ok(
        "MapLightPreRenderObj2(void *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "sccl",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateGameOverMenuTexMem(void **)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionGetType(int)",
    ),
    Ok(
        "MenuPhotoTexLoadCancel(void)",
    ),
    Ok(
        "PhotoFlyChk(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuItemTexLoadCancel(void)",
    ),
    Ok(
        "MenuTop(void)",
    ),
    Ok(
        "GetRandomPositionXZ(float *, float *, float, float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrDead(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dshadowGetTarget(void)",
    ),
    Ok(
        "SetTitleLoadFlg(char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2GetUserSpace(TIM2_PICTUREHEADER *, int *)",
    ),
    Ok(
        "EJobM0A(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BURN_FIRE * _fixed_array_verifyrange<BURN_FIRE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SingleLinkListAlloc(unsigned int)",
    ),
    Ok(
        "SetSkyDrawFLG(int)",
    ),
    Ok(
        "SetForcusDepth(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimIsReqMimNum(ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShot::Req(int, BONUS_SHOT_SCORE, int)",
    ),
    Ok(
        "MissionSetPlyrStat(int)",
    ),
    Ok(
        "end_Puzzle_InConf(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SisterNAnimeCtrl(void)",
    ),
    Ok(
        "OL_LOAD::Req(int)",
    ),
    Ok(
        "AlbumTitleDisp(int, int, unsigned char)",
    ),
    Ok(
        "gra3dDrawSGDShadow(SGDFILEHEADER *, SGDCOORDINATE *, G3DLIGHT const *, float const (*)[4])",
    ),
    Ok(
        "MapDrawDeleteNoDraw(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterStop(void)",
    ),
    Ok(
        "GetLanguage(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadPCFile(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::GetPbyRand(int, int)",
    ),
    Ok(
        "gra3dSetObjectIdDrawNoShadow(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisSetClearType(int)",
    ),
    Ok(
        "CheckEneDepth(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_127_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SortPhotoData_Protect(PFILE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MemoryCardFileOpenReq(int, int, char *, int)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_100_",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "builtin_delete",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallBlur2(int, int, int, unsigned char, float, float)",
    ),
    Ok(
        "EFFECT_CONT type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ClearFlg_CheckMissionAllClear(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "moddi3",
        ),
    ),
    Ok(
        "SaEneOutTime(SISALG_WRK *)",
    ),
    Ok(
        "LocalCopyLtoBD(int, void *)",
    ),
    Ok(
        "KazaPuzzle2DispMain(void)",
    ),
    Ok(
        "SetSave_ClearFlg(MC_SAVE_DATA *)",
    ),
    Ok(
        "ENE_WRK type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motInitMotCtrlEx(MOT_CTRL *, unsigned int *, unsigned int *, int)",
    ),
    Ok(
        "EventEnd_StreamRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "playerCalcAlpha(ANI_CTRL const *)",
    ),
    Ok(
        "gra3dGenerateLightDataToChar(GRA3DLIGHTDATA *, GRA3DLIGHTDATA const *, GRA3DEMULATIONLIGHTDATACREATIONDATA const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetTrgtRotY(float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FadeInReq(unsigned char, unsigned char, unsigned char, unsigned int)",
    ),
    Ok(
        "ClearFlgCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFEneEntry::CamChangeFlg(int)",
    ),
    Ok(
        "CEditRoot::CEditRoot(char const *, CEditRoot *)",
    ),
    Ok(
        "TORCH2_SPARK_PARAMETER type_info node",
    ),
    Ok(
        "EffectSetTorch2(float (*)[4], int)",
    ),
    Ok(
        "ClearMenuFadeOutReq(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFinderBase::DrawKakiwari(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFile::CFile(void)",
    ),
    Ok(
        "SetTextureAfterScene(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3ddbgVerifyVifCode(tVIF_CODE const *)",
    ),
    Ok(
        "SetModeSisAeneFind(void)",
    ),
    Ok(
        "ReqPointSearchCamera(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_PlayTimer(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitCheckCol(float *, float, int, int)",
    ),
    Ok(
        "MapDoorGetDatListPtr(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motLinearSupValue(float, float, unsigned char, unsigned int, unsigned int)",
    ),
    Ok(
        "mmanageReqMdl(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "kernel_rem_pio2f",
        ),
    ),
    Ok(
        "CFilament::DrawLock(void)",
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::FuyuIsReady(void) const",
    ),
    Ok(
        "FlyRule(void)",
    ),
    Ok(
        "CStdioFile type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChapterSelDispMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC49(ENEALG_WRK *)",
    ),
    Ok(
        "EJobC02(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSPChance::Set(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::Init(void)",
    ),
    Ok(
        "MapLoadGetLabel(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEditRoot::operator delete [](void *, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFindFile::GetSubDirectoryAllRef(int)",
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "erminate",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<sce_dirent>::custom_allocate(unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MORPH_CTRL type_info function",
    ),
    Ok(
        "DrawSelItemMsg(int, int, int, int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetMemoryCardCheckDirEntryName(char *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadSetDrawOnly(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupDispMain(void)",
    ),
    Ok(
        "CNEquipTrayWrk::GetTargetFOV(void)",
    ),
    Ok(
        "AutoEnemyMain(void)",
    ),
    Ok(
        "FinderBankIsLoopSnd(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShot::Init(void)",
    ),
    Ok(
        "GetAlbumSlotSelTexAddr(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetHaveEquipFuncNum(void)",
    ),
    Ok(
        "MemoryCardFileWriteInit(int, void *, int)",
    ),
    Ok(
        "EneMotAlgCtrl(ENE_WRK *)",
    ),
    Err(
        InvalidSpecialMethod(
            "muldi3",
        ),
    ),
    Ok(
        "PlyrSpotMoveCtrl(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__builtin_type_info type_info function",
    ),
    Ok(
        "MrecGetDoorHitInfoIdNum(void)",
    ),
    Ok(
        "GetSisStandAnm(void)",
    ),
    Ok(
        "motGetBukiDownPos(float *, ANI_CTRL *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnCtlRegist(int, char *, char *, int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetAlbumPhotoNo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitOptionSetup(OPTION_WRK *)",
    ),
    Ok(
        "GetPlyrSoulListMaxScore(int)",
    ),
    Ok(
        "ReleaseSisMdl(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyGetMatrix(ENE_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_ClearMenu_Save(void)",
    ),
    Ok(
        "SaAlgoChg(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimdatGetMimeNo(ANI_CTRL *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsInCombo(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidCustomNameOnTemplate(
            "hrow_type_match_rtti_2",
        ),
    ),
    Err(
        InvalidSpecialMethod(
            "get_eh_table_version",
        ),
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Set_EvGhostID(unsigned char, int, int)",
    ),
    Ok(
        "Pk2GetNum(unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapAnimRegistEx(int, unsigned int *, unsigned int *, float (*)[4][4], float *, float *, int, int)",
    ),
    Ok(
        "MemoryCardIconSysMain(void)",
    ),
    Ok(
        "SceneTestInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dDmaClosePacket(void const *)",
    ),
    Ok(
        "PLYR_ITEM * _fixed_array_verifyrange<PLYR_ITEM>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void __insertion_sort<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "TitleMenuCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ChapterSelMain(void)",
    ),
    Ok(
        "AlbumLoadEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobB08(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaEndAct(SISALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EnemyPhotoMain(void)",
    ),
    Ok(
        "SubNega(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Ok(
        "ctl::custom_allocator<sce_dirent> type_info node",
    ),
    Ok(
        "GetAlbumMemAddr(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitPad(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HinaPuzzleCrossDispInit(void)",
    ),
    Ok(
        "SetPK2DImageTrans(unsigned int, int)",
    ),
    Ok(
        "SpCmnPrintMsg_K(int, int, int, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::sub_func_ren_param",
    ),
    Ok(
        "InitEffectSub(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetEventWaitFlg(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dGetProjectorSpot(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCamNumberDisp(int, int, int, int, unsigned char, int, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BUTTERFLY_TARGET_PARAMETER * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dbbApplyMatrix(float (*)[4], float const (*)[4], float const (*)[4])",
    ),
    Ok(
        "IG3DResource::PreLoad(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_70_i_90_i_15_i_40_",
        ),
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_128_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dPrelight(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlyrRoomID(int)",
    ),
    Ok(
        "FontDispSample(void)",
    ),
    Ok(
        "gra3ddbgVerifyVifCodex4(tVIF_CODE const *)",
    ),
    Ok(
        "SetDisplayPos(void)",
    ),
    Ok(
        "MrecGetHitInfoIdNum(void)",
    ),
    Ok(
        "SingleLinkListCellBodyPtr(_SLL_CELL const *)",
    ),
    Ok(
        "MapLoadGetFileID(int)",
    ),
    Ok(
        "CBuffTerm(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectControl(int)",
    ),
    Ok(
        "EV_CTRL_CENTER type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorMotionIsEnd(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EvSoundPause(void)",
    ),
    Ok(
        "EffectButterflyReq(float const *)",
    ),
    Ok(
        "SetSave_EvSaveStream(MC_SAVE_DATA *)",
    ),
    Ok(
        "init_Ending_Hard(void)",
    ),
    Ok(
        "EffectModelAlphaChangeDeleteGroup(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuCmnLineYokoDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "IgEffectEneParticleDmgReq(int, int)",
    ),
    Ok(
        "Vu0FTOI0Vector(int *, float *)",
    ),
    Ok(
        "GetMemoryCardCheckDirFileNum(void)",
    ),
    Ok(
        "MapLoadMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhInitMapHeight(int, float *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EFFPOS type_info node",
    ),
    Ok(
        "SetPlyrDrawFLG(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CSearchMark::Work(void)",
    ),
    Ok(
        "EJobC34(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "OL_LOAD_ONE::Release(void)",
    ),
    Ok(
        "FUYU_GHOST_ONE_DATA::SetAppearNum(int)",
    ),
    Ok(
        "AlbumSlotSelCaptionDisp(int, int, unsigned char)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20_ZA19_10C_PARTICLE",
        ),
    ),
    Ok(
        "MAPPUT_OBJ type_info node",
    ),
    Ok(
        "long long type_info node",
    ),
    Ok(
        "CFindFile::Scan(char const *, char const *)",
    ),
    Ok(
        "SetDrawFLG_PL_GameOver(void)",
    ),
    Ok(
        "PrintMsgDef_W(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC39(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "unsigned short type_info function",
    ),
    Ok(
        "LoadGameMain(void)",
    ),
    Ok(
        "CEditRoot::operator new(unsigned int)",
    ),
    Ok(
        "UnlockMoveTitleMovie(void)",
    ),
    Ok(
        "RegDatInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetAccessMemoryCardPort(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "assert",
        ),
    ),
    Ok(
        "MakeSmallPhotoV(float, float)",
    ),
    Ok(
        "long type_info function",
    ),
    Ok(
        "MemoryCardCheckInit(int, int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Boot_Init(void)",
    ),
    Ok(
        "CTexture::GetTextureDataRef(void) const",
    ),
    Ok(
        "acsGetEneCollisionBuf(void)",
    ),
    Ok(
        "__pointer_type_info type_info function",
    ),
    Ok(
        "DoorUnlock(int)",
    ),
    Ok(
        "BJobL05(ENE_WRK *)",
    ),
    Ok(
        "LocalCopyBtoL(int, int, int)",
    ),
    Ok(
        "DebugSetLevelGemMaxNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobE03(ENEALG_WRK *)",
    ),
    Ok(
        "FurnCtlClearBuff(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodSetFrame(FOD_CTRL *, unsigned int)",
    ),
    Ok(
        "acsMoveRopeEx(unsigned int, HeaderSection *, float (*)[4])",
    ),
    Ok(
        "MapSpAraCheck(void)",
    ),
    Ok(
        "ReqPlyrDoorMotion(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__user_type_info::find_public_subobj(int, type_info const &, void *, void *) const",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void __unguarded_insertion_sort_aux<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectInitAniCtrlButterflyOne(ANI_CTRL *)",
    ),
    Ok(
        "RegDatBuffID4Label(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "RST_DATA type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapHitSetDoorFlg(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlayData_Score(int)",
    ),
    Ok(
        "ENE_WRK * _fixed_array_verifyrange<ENE_WRK>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mem_dbgInit(void *, int)",
    ),
    Err(
        InvalidSpecialMethod(
            "srefill",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::RenzMarkOn(void)",
    ),
    Ok(
        "PrintMsg(DISP_STR *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motAniTimerCodeExec(ANI_CTRL *)",
    ),
    Ok(
        "DrawCmnLine(float, float, float, unsigned char, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Mission_Sel(void)",
    ),
    Ok(
        "EV_SAVE_STREAM type_info node",
    ),
    Ok(
        "CEditRoot::TypeString(void)",
    ),
    Ok(
        "GetPALMode(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PauseMain(void)",
    ),
    Ok(
        "ClearMenuTopBackGroundLoadReq(void)",
    ),
    Ok(
        "init_Puzzle_Kai1(void)",
    ),
    Ok(
        "motGetMotReso(void)",
    ),
    Ok(
        "EffectLightComeInDeleteMapBuffId(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MAPDOOR_HEAD type_info node",
    ),
    Ok(
        "MapHitDeleteOne(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ev_gazeSisSetSave(MC_SAVE_DATA *)",
    ),
    Ok(
        "Tim2SetTexel(TIM2_PICTUREHEADER *, int, int, int, unsigned int)",
    ),
    Ok(
        "mimGetKeymdlNum(unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::DrawLock(void)",
    ),
    Ok(
        "ENEDMG_PARTICLE_ONE * _fixed_array_verifyrange<ENEDMG_PARTICLE_ONE>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM13(ENEALG_WRK *)",
    ),
    Ok(
        "EffectGetNowScreenEffectParamPtr(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_127_c",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void __introsort_loop<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, int, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, int, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "PlayerLock(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mimLoopRequestNum(ANI_CTRL *, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::Init(void)",
    ),
    Ok(
        "TUBE type_info node",
    ),
    Ok(
        "GetMemoryCardPlayDataChapter(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisGetRankLast(int, int, int, int)",
    ),
    Ok(
        "motInitAniMdlBufSub(ANI_MDL_CTRL *)",
    ),
    Ok(
        "_Vu0CalcColorDataConstant(void *, void const *)",
    ),
    Ok(
        "playerSetFlashlightType(PLAYERFLASHLIGHTTYPE)",
    ),
    Ok(
        "DrawCrossLineLastReal(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhDrawHeight(int)",
    ),
    Ok(
        "EffectThunderLightGetLightningFlg(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HcBaseLineSide(float const *, float const *, float const *)",
    ),
    Ok(
        "DoorOpenInit(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_ClearPuzzle(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dFree(void *)",
    ),
    Ok(
        "__ptmf_type_info type_info function",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Story_Movie_Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CEditRoot::operator new [](unsigned int)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_50_i_127_c",
        ),
    ),
    Ok(
        "DebugAllSecondMemoGet(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "InitEffectEne(void)",
    ),
    Ok(
        "PlayMissionSelBGM(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ENE_DMG_LARGE_HIT_PARAMETER * type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisterAnime(unsigned char, unsigned char)",
    ),
    Ok(
        "C_PARTICLE type_info function",
    ),
    Ok(
        "foot_seSetRoom(int, int)",
    ),
    Ok(
        "SceneTestDrawCrossLine(float *, float, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MenuTim2SendVram(unsigned int *, int, int)",
    ),
    Ok(
        "MemoryCardSoftResetUnlock(void)",
    ),
    Ok(
        "EJobB1B(ENEALG_WRK *)",
    ),
    Ok(
        "SetupBlackBgDisp(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HcBaseLineIntersect2(float const *, float const *, float const *, float const *)",
    ),
    Ok(
        "EffectTorch2BigFreaMain(void)",
    ),
    Ok(
        "g3dCalcVertexColor(float *, float const *, float const *, float const *)",
    ),
    Ok(
        "Req_CompulsionSetEventState(int, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionGetRankPoint(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PLYR_PLYR_DATA type_info function",
    ),
    Ok(
        "EneFrameHitChk(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "TitleTexLoadReq(void *, int)",
    ),
    Ok(
        "PlyrMoveChk(MOVE_BOX *, float *, float)",
    ),
    Ok(
        "RegDatGetStPtr(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Story_Load_Mission_Event(void)",
    ),
    Ok(
        "ol_loadFreeHeap(void *)",
    ),
    Ok(
        "EV_CHANGE_CTRL type_info node",
    ),
    Ok(
        "EJobB06(ENEALG_WRK *)",
    ),
    Ok(
        "one_Ending_Normal1(GPHASE_ENUM)",
    ),
    Ok(
        "PLYR_PLYR_DATA::Setup(int, int, int, int, int)",
    ),
    Ok(
        "IsSisterTurn(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EV_EXE_CTRL type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Story_Load_Mission_Event(GPHASE_ENUM)",
    ),
    Ok(
        "ENE_MOT_WRK ** * _fixed_array_verifyrange<ENE_MOT_WRK **>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::GetFinderMovePos(float *, float *)",
    ),
    Ok(
        "FurnCtlTerm(void)",
    ),
    Ok(
        "IngameSceneInit(int)",
    ),
    Ok(
        "ProjectLogoTexLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrFinderIn(void)",
    ),
    Ok(
        "EV_SAVE_POS_STREAM * _fixed_array_verifyrange<EV_SAVE_POS_STREAM>(unsigned int, unsigned int)",
    ),
    Ok(
        "SetBlackOut(void)",
    ),
    Ok(
        "EffectSaeHazSetNoDrawFlg(int)",
    ),
    Ok(
        "SisterMain(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetAlbumSaveDataAddr(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SceneFodSetNowRezo(int, int)",
    ),
    Ok(
        "SetEventExeCtrl(int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlyrNeckRegisterTarget(_LOOK_AT_PARAM *, _LOOK_TARGET_PRIORITY_MIO)",
    ),
    Ok(
        "CallPartsDeform2(int, float, void *, unsigned int, unsigned int, unsigned int)",
    ),
    Ok(
        "EffectButterflyParticleAllCut(void)",
    ),
    Ok(
        "GetNearestDistFromPlyrToEnemy(void)",
    ),
    Ok(
        "MenuCmnConfirmPad(void)",
    ),
    Ok(
        "one_EventMsg_Disp(GPHASE_ENUM)",
    ),
    Ok(
        "GetPuzzleClearInfo(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "one_Puzzle_Kai1(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IsPlayerInBattle(void)",
    ),
    Ok(
        "AlbumViewTexLoadCancel(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "end_Ending_Normal2(void)",
    ),
    Ok(
        "ChrSortGetSisMatrix(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFindFile::CFindFile(void)",
    ),
    Ok(
        "GetPlyrFootPos(float *, ANI_CTRL *, unsigned char)",
    ),
    Ok(
        "motInterpMatrix(float (*)[4], float (*)[4], float (*)[4], float)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "void __unguarded_insertion_sort_aux<LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA, LIGHTCOMPAREDATA::greater>(LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA *, LIGHTCOMPAREDATA::greater)",
    ),
    Ok(
        "CCenterCircle::FrameReset(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CFadeVariable<int>::Work(void)",
    ),
    Ok(
        "CallAmuletFire(void)",
    ),
    Ok(
        "MapPutGetMatrixPtr(void *)",
    ),
    Ok(
        "CompPhotoFromWorkArea(int)",
    ),
    Ok(
        "SCREEN_SAVER_TEX * _fixed_array_verifyrange<SCREEN_SAVER_TEX>(unsigned int, unsigned int)",
    ),
    Ok(
        "EffectModelAlphaChangeDelete(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_15_ZA14_10C_ACS_CTRL",
        ),
    ),
    Ok(
        "IgEffectMain(void)",
    ),
    Ok(
        "PicturePre3(void)",
    ),
    Ok(
        "GetPlyrSoulListState(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "HcBaseIsInTriXZ(float const *, float const *, float const *, float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PrintNumber_One(int, int, int, unsigned char, unsigned char, int, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetupPlyrMdl(int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CAutoTransform<0>::~CAutoTransform(void)",
    ),
    Ok(
        "EffectSndPlay(int, int, int, int, float (*)[4])",
    ),
    Ok(
        "DrawCmnCapGroup(int, int, int, unsigned char, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobM0E(ENEALG_WRK *)",
    ),
    Ok(
        "gra3dcamSetTarget(float const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FreqCameraInit(void)",
    ),
    Ok(
        "TALK_DATA type_info function",
    ),
    Ok(
        "ContTorch2(TORCH_CTRL *, float *, int, TORCH2_PARAMETER *, TORCH2_BURST_PARAMETER *)",
    ),
    Ok(
        "UncompressData(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "_Vu0CalcVertexColorSpotLightConstant(float *)",
    ),
    Ok(
        "ClearPlyrDoorFlg(void)",
    ),
    Ok(
        "PLYR_PLYR_DATA virtual table",
    ),
    Ok(
        "ReqSisDead(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapLoadGetOffsetVector(float *, int)",
    ),
    Ok(
        "__class_type_info type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphInit(void)",
    ),
    Ok(
        "MENU_REF_CTRL type_info function",
    ),
    Ok(
        "CNEquipTraySave::sub_func_koku_param",
    ),
    Ok(
        "SendManMdlTex(void)",
    ),
    Ok(
        "one_Title_Movie_Mode(GPHASE_ENUM)",
    ),
    Ok(
        "EvSetSubId(unsigned char *, int *)",
    ),
    Ok(
        "CFilament::FadeOut(void)",
    ),
    Ok(
        "EV_SAVE_STREAM * _fixed_array_verifyrange<EV_SAVE_STREAM>(unsigned int, unsigned int)",
    ),
    Ok(
        "g3dDmaOpenPacket(void)",
    ),
    Ok(
        "CEditRoot::AddRoot(char const *, ...)",
    ),
    Ok(
        "utilTim2SendVram(unsigned int *, int, int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSaveGetStat(int, int)",
    ),
    Ok(
        "GetPhotoDatNum(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PlayerRunUnlock(void)",
    ),
    Ok(
        "RegDatResetNoRegistList(void)",
    ),
    Ok(
        "gra3dDrawSGDShadowCharacter(ANI_CTRL *, SGDCOORDINATE *, float const (*)[4], GRA3DEMULATIONLIGHTDATACREATIONDATA const *)",
    ),
    Ok(
        "MORPH_CTRL type_info node",
    ),
    Ok(
        "TalkTblInit(unsigned char)",
    ),
    Ok(
        "Set3DPosTexure(float (*)[4], DRAW_ENV *, int, float, float, unsigned char, unsigned char, unsigned char, unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapSpKayaDrawCallback(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dcamGetPositionOld(void)",
    ),
    Ok(
        "SetVibrate(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EJobC2D(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GameOverLoadDataLoadWait(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReadSoulList(int)",
    ),
    Ok(
        "SetBlackIn2(int)",
    ),
    Ok(
        "EFFRDR_RSV type_info function",
    ),
    Ok(
        "motGetNowFrame(MOT_CTRL *)",
    ),
    Ok(
        "LineStraddle(LINE_T *, POINT_T *, POINT_T *)",
    ),
    Ok(
        "DrawPhotoFilterPK2(unsigned int, float, float, SPRT_DAT const *, int, void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetPlayerHitRadius(float)",
    ),
    Ok(
        "LiberateMemoryCardIconDataMem(void)",
    ),
    Ok(
        "InitSister(void)",
    ),
    Ok(
        "g3dMatrixSetPosition(float (*)[4], float const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ResetRDLongFire(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaObjHit(SISALG_WRK *)",
    ),
    Ok(
        "after_Story_Game_Over(GPHASE_ENUM)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "register_frame_info_table",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MapCamGra3dcamSetTargetAddOffset(float const *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSprFile2(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::InCircleDrawLock(int)",
    ),
    Ok(
        "INGAME_WRK::MenuUnlock(void)",
    ),
    Ok(
        "EJobC0A(ENEALG_WRK *)",
    ),
    Ok(
        "sgdGetBoundingBox(SGDFILEHEADER *, float (*)[4])",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNPlyrCamera::DrawSpiritGageBase(int, int, int, float)",
    ),
    Ok(
        "MenuPhotoTexLoadReq(void)",
    ),
    Ok(
        "MAPHIT_HEAD type_info node",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dGetCamera(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "PLYR_ITEM type_info function",
    ),
    Ok(
        "g3dLogf2(float, float)",
    ),
    Ok(
        "basic_string<char, string_char_traits<char>, ctl::custom_allocator<char> >::replace(unsigned int, unsigned int, char const *, unsigned int)",
    ),
    Ok(
        "MenuCrossFadeTexLoadCancel(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ctl::custom_allocator<char> type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "bad_typeid::~bad_typeid(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DrawCrossLineA(float const *, unsigned char)",
    ),
    Ok(
        "pre_Title_Mode(GPHASE_ENUM)",
    ),
    Err(
        InvalidSpecialMethod(
            "sigtramp",
        ),
    ),
    Ok(
        "VibrateRequest(unsigned short, unsigned short, unsigned short)",
    ),
    Ok(
        "g3dCalcIntersectionEllipseAndLine(float (*)[4], float const (*)[4], float const *, float const *)",
    ),
    Ok(
        "SetScreenZ(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EventDataLoadReq(void)",
    ),
    Ok(
        "MapMeiInit(GRA3DLIGHTDATA *)",
    ),
    Ok(
        "_Alloc_traits<sce_dirent, ctl::custom_allocator<sce_dirent> >::_S_instanceless",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FodGetDropSpotPos(FOD_LIGHT *, char *, float *, float *)",
    ),
    Ok(
        "EffectModelAlphaChangeReq(int, int, int, int)",
    ),
    Ok(
        "MapManimProc(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        InvalidSpecialMethod(
            "register_frame_info",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "__array_type_info::~__array_type_info(void)",
    ),
    Ok(
        "SetFocus(EFFECT_CONT *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffectModelAlphaChangeExec(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSave_SisAlgoWrk(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SaSetMvsta(SISALG_WRK *)",
    ),
    Ok(
        "SaveLoadSelFlareDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "ItemEffectAllCut(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AlbumViewDispMain(void)",
    ),
    Ok(
        "RegDatSetTopAddr(int, void *)",
    ),
    Ok(
        "IgEffectLightComeInModelDraw(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CallBlur3(int, int, int, unsigned char, float, float, float, float)",
    ),
    Ok(
        "CFile::Close(void)",
    ),
    Ok(
        "bad_exception::~bad_exception(void)",
    ),
    Ok(
        "EV_CTRL_CENTER * _fixed_array_verifyrange<EV_CTRL_CENTER>(unsigned int, unsigned int)",
    ),
    Ok(
        "EFF_LEAF type_info node",
    ),
    Ok(
        "GetEnePowerDegree(void)",
    ),
    Ok(
        "HcBaseLineStraddle(float const *, float const *, float const *, float const *)",
    ),
    Ok(
        "EJobB25(ENEALG_WRK *)",
    ),
    Ok(
        "CVariable<char, 0, 9> type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "SetSisTurn(void)",
    ),
    Ok(
        "acsDelRopeCollision(ANI_CTRL *)",
    ),
    Ok(
        "g3ddbgVerifyVu1MemAddress(void)",
    ),
    Ok(
        "SetSave_EvSaveScreenEffect(MC_SAVE_DATA *)",
    ),
    Ok(
        "SetLeaf(float *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "mem_utilFreeMem(void *)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "int indexof<SGDCOORDINATE>(SGDCOORDINATE const *, SGDCOORDINATE const *)",
    ),
    Ok(
        "GetSisAreaNo(void)",
    ),
    Ok(
        "GetAlbumDataAddr(int)",
    ),
    Ok(
        "CBonusShot::ReqUnderLineWrk(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FileRead(int, int)",
    ),
    Ok(
        "SceneTestMain(void)",
    ),
    Ok(
        "ManmdlSetAlpha(void *, unsigned char)",
    ),
    Ok(
        "SubMessageV3(unsigned char *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "ReqPlyrSPdownP(PLCMN_WRK *, unsigned short)",
    ),
    Ok(
        "MrecLineCross(float const *, float const *, int, int)",
    ),
    Ok(
        "MisGetShot(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetPK3Dbuf(void)",
    ),
    Ok(
        "SetFrameBuffer(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "init_Title_Gallery(void)",
    ),
    Ok(
        "DoorLockStateExeInit(int)",
    ),
    Ok(
        "SaveLoadClearFlareDisp(int, int, unsigned char, void *, int)",
    ),
    Ok(
        "ChangeEneAlgorithm(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTraySave::PushGage(int *)",
    ),
    Ok(
        "ClearFlg_NormalGameClearExe(void)",
    ),
    Ok(
        "sgdGetLocalWorldMatrix(void const *, float (*)[4], int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LoadReq(int, unsigned int)",
    ),
    Ok(
        "GetFileSizeInPak(void *, int)",
    ),
    Ok(
        "SisActSet(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "IEditObject::ValueString(void)",
    ),
    Ok(
        "__builtin_type_info type_info node",
    ),
    Err(
        InvalidSpecialMethod(
            "eh_alloc",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AREA_PREFIX_TO_NO type_info node",
    ),
    Ok(
        "Vu0MulVector(float *, float *, float *)",
    ),
    Ok(
        "MissionSelSave(MC_SAVE_DATA *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "DoorLockStateExe(int)",
    ),
    Ok(
        "MapSpProc(void)",
    ),
    Ok(
        "MrecIsInEvent(float const *, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "motResetMdl(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MissionSetTimePal(int, int, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "EffWrkDispFlgGet(void)",
    ),
    Ok(
        "DispSqrD(DISP_SQAR *)",
    ),
    Ok(
        "GetItemDatAddr(int)",
    ),
    Ok(
        "FadeCtrlInit(void)",
    ),
    Ok(
        "ALBUM_INFO * _fixed_array_verifyrange<ALBUM_INFO>(unsigned int, unsigned int)",
    ),
    Err(
        InvalidSpecialMethod(
            "dynamic_cast",
        ),
    ),
    Ok(
        "mimSetMimeDat(MIME_DAT *, unsigned int *, unsigned int *, unsigned int *)",
    ),
    Ok(
        "EffectSetScreenEffectNo(int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dInit(void *, int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "GetSetupMsnslPk2Addr(void)",
    ),
    Ok(
        "MesSetBeforePage(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "dmaVif1ClearDMA(void)",
    ),
    Ok(
        "SetSave_PlyrCrystal(MC_SAVE_DATA *)",
    ),
    Ok(
        "GetMdlBonePos(float (*)[4], void *)",
    ),
    Err(
        InvalidSpecialMethod(
            "pack_d",
        ),
    ),
    Ok(
        "mimGetFlg(unsigned int *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::SetEffect(ENE_WRK *, _SHUTTER_CHANCE_STATE)",
    ),
    Ok(
        "SetInteger3(int, float, float, int, unsigned char, unsigned char, unsigned char, unsigned char, int)",
    ),
    Ok(
        "init_Story_Main(void)",
    ),
    Ok(
        "void __introsort_loop<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater)",
    ),
    Ok(
        "CNPlyrCamera::CaptureCircleDraw(int, int, int)",
    ),
    Ok(
        "float * _fixed_array_verifyrange<float>(unsigned int, unsigned int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateSavePointMainTexMem(void **)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "LiberateMenuRadioTexMem(void)",
    ),
    Ok(
        "IgEffectSubFuncPDeformClear(int)",
    ),
    Ok(
        "SetRDLongFire(float *, float, float, float, float, int)",
    ),
    Ok(
        "ResetEffects(void *)",
    ),
    Ok(
        "end_Story_Effect(void)",
    ),
    Ok(
        "void __make_heap<G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater, G3D_EMULATE_DIRECTIONALLIGHT_DATA, int>(G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, G3D_EMULATE_DIRECTIONALLIGHT_DATA::greater, G3D_EMULATE_DIRECTIONALLIGHT_DATA *, int *)",
    ),
    Ok(
        "IngameEventFileDispReq(int)",
    ),
    Ok(
        "PlyrDebug(void)",
    ),
    Ok(
        "MovieTitleBaseDisp(float, float, float, unsigned char, unsigned int)",
    ),
    Ok(
        "MrecIsDoorRectangleNum(void)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_90_i_112_i_11_i_90_",
        ),
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CheckHintTex(void)",
    ),
    Ok(
        "SetDebugMenuSwitch(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MhCtlGetObjStatStart(int, int)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "plyr_mdlBankPlay(int, int, int, int, _SND_3D_SET *, int, int)",
    ),
    Ok(
        "MemoryCardGetCardInfoMain(void)",
    ),
    Ok(
        "void type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MorphCheckId2(int)",
    ),
    Ok(
        "AlbumEditDispMain(void)",
    ),
    Ok(
        "long double type_info node",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "g3dGetGsRegisterRef(long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "AssignShadowPrim(SGDPROCUNITHEADER *)",
    ),
    Ok(
        "mimGetFrameNum(unsigned int *)",
    ),
    Ok(
        "SetOpenCondSwitch(unsigned char)",
    ),
    Ok(
        "CFindFile::IsMatchSpec(char const *, char const *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CMovieRoom::PlayFilm(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CAutoTransform<0> virtual table",
    ),
    Ok(
        "EJobB19(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "FurnLoadRegID(int, int, char *)",
    ),
    Ok(
        "EJobC2A(ENEALG_WRK *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisFadeSetMsg(int)",
    ),
    Ok(
        "CalcHermitePoint(float *, float *, float *, float *, float *, float)",
    ),
    Ok(
        "EvCondCtrlInit(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CNEquipTrayWrk::IsChargeResetOK(void)",
    ),
    Ok(
        "FinderModeCameraCtrl(void)",
    ),
    Ok(
        "SceneEndProc(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisEnSubEnd(void)",
    ),
    Ok(
        "SavePointTopMemFree(void)",
    ),
    Ok(
        "end_Puzzle_Roku(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "movie_projecterRelease(void)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "CBonusShotOne::InReqUnderLine(int)",
    ),
    Err(
        InvalidValueForIntegralTemplated(
            "_20__UiUi_PX01",
        ),
    ),
    Ok(
        "__user_type_info::do_upcast(__user_type_info::sub_kind, type_info const &, void *, __user_type_info::upcast_result &) const",
    ),
    Ok(
        "MenuCamGoToTopReq(void)",
    ),
    Ok(
        "_PICTURE_SUBJECT type_info node",
    ),
    Ok(
        "MENU_REF_CTRL * _fixed_array_verifyrange<MENU_REF_CTRL>(unsigned int, unsigned int)",
    ),
    Ok(
        "CSearchMark::Draw(int, int, int, float)",
    ),
    Ok(
        "OL_LOAD::Main(void)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MovieTitleInit(int)",
    ),
    Ok(
        "EneDmgLargeHitMakePacket(float (*)[4], int, float (*)[4], unsigned char *, unsigned char *, float (*)[4], unsigned long)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "MisSetScore(int)",
    ),
    Ok(
        "init_Story_Load_Mission(void)",
    ),
    Ok(
        "SetAlphaRegister(int, long)",
    ),
    Ok(
        "photo_datIsUp(int)",
    ),
    Err(
        InvalidSpecialMethod(
            "ieee754_atan2f",
        ),
    ),
    Ok(
        "GetFreqCamera(void)",
    ),
    Ok(
        "ChangeVideoMode(unsigned char)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "gra3dIsSpecialLightActive(void)",
    ),
    Err(
        InvalidSpecialMethod(
            "do_global_ctors",
        ),
    ),
    Ok(
        "CCameraPowerUp::aDistanceTbl",
    ),
    Ok(
        "FurnCtlGetFlgPtr(int, char *)",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "Tim2CheckFileHeaer(void *)",
    ),
    Ok(
        "AlbumBackGroundLoadReq(void *(*)(int), void (*)(void *))",
    ),
    Ok(
        "EJobB09(ENEALG_WRK *)",
    ),
    Ok(
        "SceneSubRoomNoGet(void)",
    ),
    Ok(
        "mmanageClearAnm(int)",
    ),
    Ok(
        "SavePointTopBackGroundLoadReq(void)",
    ),
    Ok(
        "DISP_SOUL_LIST_DATA type_info function",
    ),
    Err(
        NotMangled,
    ),
    Ok(
        "BUTTERFLY_TARGET_PARAMETER type_info function",
    ),
    Ok(
        "ev_eneChangeRoom(int)",
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
    Err(
        NotMangled,
    ),
]
