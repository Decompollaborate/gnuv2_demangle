---
source: src/gnuv2_demangle/tests/snapshots.rs
expression: "demangle_lines(contents, &config)"
---
[
    (
        "_start",
        Err(
            NotMangled,
        ),
    ),
    (
        "_exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "_root",
        Err(
            NotMangled,
        ),
    ),
    (
        "_args",
        Err(
            NotMangled,
        ),
    ),
    (
        "reg_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "dereg_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgFlash",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgSetColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgSetSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "msgOutYY",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgPrintUserPkt",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgClearUserPkt",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgSetColorUserPkt",
        Err(
            NotMangled,
        ),
    ),
    (
        "DbgMsgSetZ",
        Err(
            NotMangled,
        ),
    ),
    (
        "msg8x8data",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbgDmaC",
        Err(
            NotMangled,
        ),
    ),
    (
        "MSGCOL",
        Err(
            NotMangled,
        ),
    ),
    (
        "MSGSIZE",
        Err(
            NotMangled,
        ),
    ),
    (
        "MSGZPOP",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbgPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "gifPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "tinfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "SyoriLineInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "SyoriLineReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "SyoriLineCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "SyoriLineDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "tim2setinfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "gs_simage",
        Err(
            NotMangled,
        ),
    ),
    (
        "BekiDat",
        Err(
            NotMangled,
        ),
    ),
    (
        "VramSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "VramSaveBMP",
        Err(
            NotMangled,
        ),
    ),
    (
        "VramSaveBMPDouble",
        Err(
            NotMangled,
        ),
    ),
    (
        "VramTmpSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "VramTmpSaveOutBMP",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStackErrorCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcChangeThCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcExec",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcWait",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcKill",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcContinue",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcExit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcGetCondition",
        Err(
            NotMangled,
        ),
    ),
    (
        "MtcResetCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStackSizeTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcSemaPara",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcCurrentTask",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcSemaEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "th_id_Ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_CTRL",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_MAIN",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_03",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_04",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_05",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_06",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_07",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_08",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_09",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0A",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0B",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0C",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0D",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0E",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_0F",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcTaskConB",
        Err(
            NotMangled,
        ),
    ),
    (
        "mtcStack_Ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "th_para_Ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "WorkClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "GPadInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "GPadExit",
        Err(
            NotMangled,
        ),
    ),
    (
        "GPadSysRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "padMakeData",
        Err(
            NotMangled,
        ),
    ),
    (
        "pad0Clear",
        Err(
            NotMangled,
        ),
    ),
    (
        "padOneOffBitCLear",
        Err(
            NotMangled,
        ),
    ),
    (
        "padNormalRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "padAnaRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "padAnaRead0Clear",
        Err(
            NotMangled,
        ),
    ),
    (
        "padPrsRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "padPrsRead0Clear",
        Err(
            NotMangled,
        ),
    ),
    (
        "padPrsTreate",
        Err(
            NotMangled,
        ),
    ),
    (
        "padActSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "padActClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "padAnaMixPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "GPadRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPadbit2PressId",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPadbit2PressPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetBackColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeDrawArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeDrawAreaSetGifTag",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeDrawArea2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ClearFrameBufferGifTag",
        Err(
            NotMangled,
        ),
    ),
    (
        "GGsSetLocalMoveImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "GGsExecLocalMoveImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "randMakeMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "ByteStringSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "ByteString",
        Err(
            NotMangled,
        ),
    ),
    (
        "ReportHeapUsage",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMallcInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMalloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrFree",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMallcReport",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawGetDrawEnvP",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawGetFrameP",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawGetFbpPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawGetTbpPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "sysPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00391128",
        Err(
            NotMangled,
        ),
    ),
    (
        "pad_dma_buf",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeDrawAreaPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "exl_dmatag",
        Err(
            NotMangled,
        ),
    ),
    (
        "usr_malloc_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "s",
        Err(
            NotMangled,
        ),
    ),
    (
        "main",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetIopModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "firstClrFrameBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "initSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "exitSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetOsFuncAddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "osFunc",
        Err(
            NotMangled,
        ),
    ),
    (
        "systemCtrlMain",
        Err(
            NotMangled,
        ),
    ),
    (
        "FullAllocAndFree",
        Err(
            NotMangled,
        ),
    ),
    (
        "mallocInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "iop_module",
        Err(
            NotMangled,
        ),
    ),
    (
        "DBufDc",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawEnvP",
        Err(
            NotMangled,
        ),
    ),
    (
        "pad",
        Err(
            NotMangled,
        ),
    ),
    (
        "global_data",
        Err(
            NotMangled,
        ),
    ),
    (
        "game_status",
        Err(
            NotMangled,
        ),
    ),
    (
        "mc_rep_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "ingame_common_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "_end_addr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_stack_size_addr",
        Err(
            NotMangled,
        ),
    ),
    (
        "outbuf_idx",
        Err(
            NotMangled,
        ),
    ),
    (
        "oddeven_idx",
        Err(
            NotMangled,
        ),
    ),
    (
        "OsFuncAddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "hat_change_enum",
        Err(
            NotMangled,
        ),
    ),
    (
        "GifPkCommon",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawEnvSp",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawEnvZbuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawEnvEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifFlush",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifSetData",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifOpenCmnPk",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifCloseCmnPk",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifAdrsGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifAdrsEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifADPacketMake",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifADPacketMake2",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmnGifADPacketMakeTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmngif_pri",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmngif_pri_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnGifPkBase",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnGifPkCurrent",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnGifPkEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnGifTr",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnGifPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemClearTop",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemClearEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemGetAdr",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemGetSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemGetEndAdr",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemGetEndSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemAllocNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemAllocEndNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemAlloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemEndAlloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemFree",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrMemEndFree",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMemoryData",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMemPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMemPosCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMemPosEndCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "SPstrncmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTim2Info",
        Err(
            NotMangled,
        ),
    ),
    (
        "HsizeAdj",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2SetLoadImageI",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2SetLoadImageIX",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2SetLoadImageC",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2Load",
        Err(
            NotMangled,
        ),
    ),
    (
        "MODE_TR_P",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadSetX",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2Trans",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2TransX",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetModeMaxH",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2Trans_TBP_MODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2TransColor_TBP",
        Err(
            NotMangled,
        ),
    ),
    (
        "tim2ColorTypeTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "tp.87",
        Err(
            NotMangled,
        ),
    ),
    (
        "tp.94",
        Err(
            NotMangled,
        ),
    ),
    (
        "tp.98",
        Err(
            NotMangled,
        ),
    ),
    (
        "tp.111",
        Err(
            NotMangled,
        ),
    ),
    (
        "tp.115",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackIntGetDecodeSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackIntDecode",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackIntDecodeWait",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlMasterVolSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlSerch",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdctrlReadSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "intReadSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdctrlReadData",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdctrlReadDataOne",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlReadOne",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrMemcpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlMemIntgDecode",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlReadWait",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlGetFileSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2SetChannel",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2Set",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2SetFileSeek",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2SetFileSeekChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2Seek",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2Play",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2PlayEndCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2CheckBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2SetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWP2GetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2Stop",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2FileEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetSample",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlFrame2WP2sample",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetSndTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlSndTime2WP2sample",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetSampleTmpBuf",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetSampleTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetFrameTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2GetSndTimeTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2CdSample2SndTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlWp2CdSample2Frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlXTRset",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetIntAdrsCurrent",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetIntSizeCurrent",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdctrlSndFadeOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlSndFadeOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlSndFadeOutCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "CdctrlSndFadeOutWait",
        Err(
            NotMangled,
        ),
    ),
    (
        "current_intg_adrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "time_tmp_max",
        Err(
            NotMangled,
        ),
    ),
    (
        "sndFadeTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "RBuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdSampleTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdctrl_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "stDatFileSearch",
        Err(
            NotMangled,
        ),
    ),
    (
        "stDatFirstFileSearch",
        Err(
            NotMangled,
        ),
    ),
    (
        "file_str_logo_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "file_str_menu_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "file_str_extra_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st00",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_title",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st01",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st02",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st03",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st04",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st05",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st06",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st07",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st08",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_st09",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_bonus",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs01",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs02",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs03",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs04",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs05",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs06",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs07",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_dat_vs08",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_rec",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdat_rec_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetCurrentTblNumber",
        Err(
            NotMangled,
        ),
    ),
    (
        "RANK_LEVEL2DISP_LEVEL",
        Err(
            NotMangled,
        ),
    ),
    (
        "RANK_LEVEL2DISP_LEVEL_HK",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDbuffCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDbuffSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDbuffSetSp",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDbuffClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDataTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapDataTransCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTapReqStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_tbl_updownInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_tbl_updownSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_tbl_updownChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsTapdatSetMemorySave",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsTapdatSetMemoryLoad",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsTapdatSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsTapdatSetMoto",
        Err(
            NotMangled,
        ),
    ),
    (
        "followTapInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "followTapSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "followTapLoad",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrLincChangTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrLincChangTblRef",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrLineSafeRefMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrDrawTimeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrDrawTimeGetFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "KeyCntClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlCurrentSearch",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlIndvInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlExamClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlExamClearIndv",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlIndvNextTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlIndvNextReadLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "getLvlTblRand",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapLevelChangeSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapLevelChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlIndvNextRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "intIndvStatusSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "allIndvNextContinue",
        Err(
            NotMangled,
        ),
    ),
    (
        "allIndvGoContinue",
        Err(
            NotMangled,
        ),
    ),
    (
        "otherIndvPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "otherIndvTapReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "selectIndvTapResetPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "IndivMoveChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "useIndevAllMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "useIndevCodeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetTimeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "useIndevSndKill",
        Err(
            NotMangled,
        ),
    ),
    (
        "useAllClearKeySnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "useIndevSndKillOther",
        Err(
            NotMangled,
        ),
    ),
    (
        "TapKeyCheckNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "TapKeyGetDatPP",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapReqGroupInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapReqGroupTapClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapReqGroup",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapReqGroupPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "tapEventCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "otehon_all_make",
        Err(
            NotMangled,
        ),
    ),
    (
        "treateTimeChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "thnum_get",
        Err(
            NotMangled,
        ),
    ),
    (
        "MapNormalNumGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "on_th_make",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_normal_add",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_normal_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_nombar_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_mbar_key_out",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_mbar_time_out",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_mbar_num_out",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_yaku",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_yaku_original",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_yaku_hane",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_allkey_out",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_allkey_out_nh",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_command",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_renda_out",
        Err(
            NotMangled,
        ),
    ),
    (
        "manemane_check_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "manemane_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_mane",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_all_add",
        Err(
            NotMangled,
        ),
    ),
    (
        "IndvGetTapSetAdrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "nextExamTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSindvPcodeLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamScoreCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamScoreCheckSame",
        Err(
            NotMangled,
        ),
    ),
    (
        "levelChangeCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "levelUpRank",
        Err(
            NotMangled,
        ),
    ),
    (
        "levelDownRank",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrMoveSetSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrExamSetCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "subjobEvent",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlIndvJob",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrTimeRenew",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrMbarReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "allTimeCallbackTimeSetChanTempo",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetIndvDrawTblLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "otehonSetCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlMainLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTimeType",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTimeOfset",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSubtLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetDrawLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetLineTempo",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetLineChannel",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetIndvCdChannel",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckIndvCdChannel",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlInitCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrCtrlGoLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrEndCheckScore",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrEndCheckTitle",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrEndCheckFadeOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrEndWaitLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusGameInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusGameCntPls",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusPointSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "bngTapEventCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusGameParaReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusGameKoamaReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonus_minus_point_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonus_pls_point_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusGameCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "hex2dec",
        Err(
            NotMangled,
        ),
    ),
    (
        "bnNumberDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusScoreDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "set_lero_gifset",
        Err(
            NotMangled,
        ),
    ),
    (
        "LessonRoundDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "// dbg_tbl_msg",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_00398F10",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_str_normal",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_str_original",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_str_hane",
        Err(
            NotMangled,
        ),
    ),
    (
        "exh_str_hook",
        Err(
            NotMangled,
        ),
    ),
    (
        "thnum_tbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "tcl_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrprgstr",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrprgstr_hook",
        Err(
            NotMangled,
        ),
    ),
    (
        "tim2spr_tbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "bn_num_type",
        Err(
            NotMangled,
        ),
    ),
    (
        "lero_tim2_pt",
        Err(
            NotMangled,
        ),
    ),
    (
        "lero_pos_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "scr_snd_dbuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "score_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "vs_tapdat_tmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "titleStartKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "fadeoutStartKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameEndWaitLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "replayGuiOffFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "jimakuWakuOff",
        Err(
            NotMangled,
        ),
    ),
    (
        "currentTblNumber",
        Err(
            NotMangled,
        ),
    ),
    (
        "vs_tapdat_tmp_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrJimakuLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrDrawLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrMbarLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrRefLineTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbgmsg_on_off",
        Err(
            NotMangled,
        ),
    ),
    (
        "follow_scr_tap_memory_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "follow_scr_tap_memory_cnt_load",
        Err(
            NotMangled,
        ),
    ),
    (
        "commake_str_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "scr_sndtap_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "score_indv_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "follow_scr_tap_memory",
        Err(
            NotMangled,
        ),
    ),
    (
        "tap_groupe_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "commake_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "yaku_tmp_buf",
        Err(
            NotMangled,
        ),
    ),
    (
        "bng_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00392F70",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprPackSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprFlash",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprSetColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDatPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispAlp",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispZABnclr",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispZBnclr",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispZcheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispAcheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprDispAlphaSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprBox",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprWindow",
        Err(
            NotMangled,
        ),
    ),
    (
        "SprWindowDf",
        Err(
            NotMangled,
        ),
    ),
    (
        "sprSetNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "sprDmaC",
        Err(
            NotMangled,
        ),
    ),
    (
        "sprPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "gifPkSpr",
        Err(
            NotMangled,
        ),
    ),
    (
        "FadeCtrlMain",
        Err(
            NotMangled,
        ),
    ),
    (
        "FadeCtrlReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "bgcolor_tmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "fmode_ctrl_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtKanjiSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtFlash",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMcodeSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "codeKanjiCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "euc2sjis",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMsgPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtCtrlPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtTapPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMenuCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMenuCtrlPrint",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMsgDataKaijyouCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtMsgDataPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtTapPrintWake",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtCtrlPrintBoxyWipe",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcode_ascii",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtGsTex0",
        Err(
            NotMangled,
        ),
    ),
    (
        "SUBT_POSX",
        Err(
            NotMangled,
        ),
    ),
    (
        "SUBT_POSY",
        Err(
            NotMangled,
        ),
    ),
    (
        "subtSetNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "kanji_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "subtPkSpr",
        Err(
            NotMangled,
        ),
    ),
    (
        "subt_code",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcode_dat_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UseGsRegSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "UseGsSetXyOffset",
        Err(
            NotMangled,
        ),
    ),
    (
        "outsideDrawSceneClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "outsideDrawSceneReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "getOutsideCtrlScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_tap_GetNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_title_GetNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_ret_GetNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "XAnimationLinkOption",
        Err(
            NotMangled,
        ),
    ),
    (
        "XAnimationPositionLink",
        Err(
            NotMangled,
        ),
    ),
    (
        "XAnimationPositionUnLink",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowSetFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowInitDare",
        Err(
            NotMangled,
        ),
    ),
    (
        "vs06BomAdr",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowTarget",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "BallThrowPollScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "MozaikuPollSceneInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MozaikuPollSceneReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "MozaikuPollScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawTmpBuffInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawTmpBuffQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawTmpBuffGetArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjdatInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjdatReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjTapStrInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrTapReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjTapStrTapReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrTapQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjTapStrTapQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrKill",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSpfTimeCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "camOtherKill",
        Err(
            NotMangled,
        ),
    ),
    (
        "posAniOtherKill",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrDispTap",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneFirstSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "Cl2MixTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjPrReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjStrTapTimeNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawObjTapCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneObjData",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDoubleDispIn",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawVramClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawMoveDispIn",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawAlphaBlendDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawMozaikuDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawFadeDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawPlphaIndex8Disp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawTim2DIsp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawNoodlesDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawVramLocalCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawVramLocalCopy2",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawUseDrDispCheckInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawDispCheckSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawUseDispCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawDrDispCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawScenectrlReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrlTitle",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrlTitleDera",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mendRatioTitleGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrlTitleDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetMendererEnum",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCtrlScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceneConditionCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlMain",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneStrInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawSceneStrReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "resetDrawSceneObjData",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlTimeSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlTblChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawTapReqTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_sel",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_msg",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_scene_sel",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_scene_msg",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_scene_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_bmp_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_sub_bmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_tap_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_scene_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_tctrl_sub",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlMainDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawCtrlInitDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_tap",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_title",
        Err(
            NotMangled,
        ),
    ),
    (
        "bra_ret",
        Err(
            NotMangled,
        ),
    ),
    (
        "mozaiku_str_poll_00",
        Err(
            NotMangled,
        ),
    ),
    (
        "mozaiku_str_poll_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "mozaiku_str_poll_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "mozaiku_poll_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "mentitle_dat",
        Err(
            NotMangled,
        ),
    ),
    (
        "mentitle_dat_dera",
        Err(
            NotMangled,
        ),
    ),
    (
        "draw_dbg_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393128",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393140",
        Err(
            NotMangled,
        ),
    ),
    (
        "vclr_black_tmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "bthrow_ctrl_time",
        Err(
            NotMangled,
        ),
    ),
    (
        "mend_title_req",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_event_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_scene_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_go_event_scene",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_tap_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_bmp_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "ANI_BLUMOVE_ENUM",
        Err(
            NotMangled,
        ),
    ),
    (
        "dr_tap_req_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "scenectrl_outside_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "scenectrl_outside_read_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "mozaiku_poll_str_current_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawCurrentLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawCurrentTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawCurrentTimeOld",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawEventrec",
        Err(
            NotMangled,
        ),
    ),
    (
        "useDispFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "drDispFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "men_ctrl_ratio",
        Err(
            NotMangled,
        ),
    ),
    (
        "men_ctrl_enum",
        Err(
            NotMangled,
        ),
    ),
    (
        "ddbg_pause_f",
        Err(
            NotMangled,
        ),
    ),
    (
        "dr_tap_req",
        Err(
            NotMangled,
        ),
    ),
    (
        "octst_time",
        Err(
            NotMangled,
        ),
    ),
    (
        "octst_timeLoad",
        Err(
            NotMangled,
        ),
    ),
    (
        "scenectrl_outside",
        Err(
            NotMangled,
        ),
    ),
    (
        "bthrow_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmp_buf_adrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "check_scenectrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_WaveInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_WaveInitEasy",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_WaveDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_WaveDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_AlpDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_AlpDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_MozaikuDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_MozaikuDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_FadeDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_FadeDisp2",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_FadeDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "UG_NoodlesDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "CG_NoodlesDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "FD_MonocroDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393400",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393408",
        Err(
            NotMangled,
        ),
    ),
    (
        "gs_simage_EFFECTTMP",
        Err(
            NotMangled,
        ),
    ),
    (
        "gs_loadimg",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_00398F38",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_00398F3C",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "clrColorBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarMemberClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharBasic",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharScaleSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharCltSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharPosSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharUVWHSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharAlphaSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examCharKidoSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "NikoReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarNikoHookUse",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarNikoVsUse",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarNikoUnUse",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarNikoSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarNikoDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarHookUseInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarHookUnUse",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarHookUseOK",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarHookUseNG",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarHookPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsAnimationInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsAnimationReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsAnimationReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsScr2Move",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsAnimationPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "metColorInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "metColorSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "metFrameInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "conditionFrameInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispPlySet",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "examScore2Level",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispOn",
        Err(
            NotMangled,
        ),
    ),
    (
        "hex2dec_mbar_tmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "hex2decPlMi",
        Err(
            NotMangled,
        ),
    ),
    (
        "examNumDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "examScoreSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "examLevelDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExamDispSubt",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarSetCtrlTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarCl1CharSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarCharSetSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGifInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGifTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarCharSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarCharSet2",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarWindowSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetDispPosX",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetDispPosY",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetTimeArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetTimeArea2",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetStartTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetEndTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGetStartTap",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarSclRotMake",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarGuideLightMake",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarFlashMake",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarBackSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarOthSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarCurSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarTapSubt",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarPosOffsetSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_othon_frame_set",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispSceneDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispSceneVsDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispSceneVsDrawInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "guidisp_init_pr",
        Err(
            NotMangled,
        ),
    ),
    (
        "guidisp_draw_quit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispGuiScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDispGuiSceneMbarArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "lessonTim2InfoGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "lessonCl2InfoGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MbarDemoCharDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "tim2spr_tbl_tmp1",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmpColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "niko_chan_str_hook",
        Err(
            NotMangled,
        ),
    ),
    (
        "niko_chan_str_vs",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbhook_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "hook_fr_dat",
        Err(
            NotMangled,
        ),
    ),
    (
        "scr_tenmetu_col",
        Err(
            NotMangled,
        ),
    ),
    (
        "metcol_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "mba_char_data",
        Err(
            NotMangled,
        ),
    ),
    (
        "colp",
        Err(
            NotMangled,
        ),
    ),
    (
        "marSetPrgTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "guimap",
        Err(
            NotMangled,
        ),
    ),
    (
        "guimap_single",
        Err(
            NotMangled,
        ),
    ),
    (
        "guimap_vs",
        Err(
            NotMangled,
        ),
    ),
    (
        "guimap_sr",
        Err(
            NotMangled,
        ),
    ),
    (
        "guimap_hk",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_003934E8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393500",
        Err(
            NotMangled,
        ),
    ),
    (
        "niko_chan_str_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "niko_chan_str_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "hook_use_flag",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_disp_cursor_timer",
        Err(
            NotMangled,
        ),
    ),
    (
        "scoreTentouFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "otehonAniCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "othon_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "vs_mouse_disp_flag",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_pos_y_ofs",
        Err(
            NotMangled,
        ),
    ),
    (
        "SCR_TENMETU_ENUM",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_global_ply_current",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_ctrl_time",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_ctrl_stage",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_ctrl_stage_selT",
        Err(
            NotMangled,
        ),
    ),
    (
        "guime_hdl",
        Err(
            NotMangled,
        ),
    ),
    (
        "guime_camera_hdl",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_global_ply",
        Err(
            NotMangled,
        ),
    ),
    (
        "exam_global_ply_current_ply",
        Err(
            NotMangled,
        ),
    ),
    (
        "metFrameCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "metFrameCntLight",
        Err(
            NotMangled,
        ),
    ),
    (
        "scr_tenmetu_col_dat",
        Err(
            NotMangled,
        ),
    ),
    (
        "conditionFramCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsScoreMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsScoreAni",
        Err(
            NotMangled,
        ),
    ),
    (
        "vs_scr_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_req_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "mbar_gif",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackGetDecodeSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackDecode",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackGetAdrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackDbgList",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "clearStageCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalTimeInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalSetTempo",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalTimeJobChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalTimeJob",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalTimeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalSndTimeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalSndSampleGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetHatRound",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalMendererUseCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalLobcalCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "GlobalPlySet",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPcode2PadType",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackTimeGetChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackTimeSetChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackTimeSetChanTempo",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackTimeGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeCallbackTimeSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "Pcode2Pindex",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetKeyCode2Index",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetIndex2KeyCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetIndex2PressId",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetKeyCode2PressId",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeTapLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrPrInitScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrPrQuitScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "UsrPrSetScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpuBankSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpuBankSetAll",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnHookMaxLineCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnHookMaxLinePknum",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnHookSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnHook2GameCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "inCmnHook2GameSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "usrSceneHandle",
        Err(
            NotMangled,
        ),
    ),
    (
        "scr_snd_area",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_03",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_04",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_05",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_06",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pknum_07",
        Err(
            NotMangled,
        ),
    ),
    (
        "hkl_pkstr",
        Err(
            NotMangled,
        ),
    ),
    (
        "vsync_time",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeSndReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeSndStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeSndFileTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "LocalBufCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeTimeGetInWait",
        Err(
            NotMangled,
        ),
    ),
    (
        "lddisp_init_pr",
        Err(
            NotMangled,
        ),
    ),
    (
        "lddisp_draw_quit",
        Err(
            NotMangled,
        ),
    ),
    (
        "lddisp_draw_on",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeLoadInDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeLoadInDispNR",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeLoadOutDispNR",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeLoadOutDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeInReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeLoadInDispSame",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeInReqSame",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeOutReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeEndCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeYesNoDispTask",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeYesNoDispReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeYesNoDispEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeInitPrDataPara",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeQuitPrDataPara",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeDispPrDataPara",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeParaColorSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeParaInDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeParaInDispMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeParaOutDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeParaInReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeParaInReqByeBye",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeParaInReqMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeParaOutReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeBoxyInDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeBoxyInReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "WipeBoxyWaitDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipeBoxyWaitReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "sndtap_wipe",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipe_scratch_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "ldmap",
        Err(
            NotMangled,
        ),
    ),
    (
        "jimaku_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipe_para_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsDrawEnv1_tmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393680",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipe_type",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipe_end_flag",
        Err(
            NotMangled,
        ),
    ),
    (
        "loading_wipe_switch",
        Err(
            NotMangled,
        ),
    ),
    (
        "ldmove_rate",
        Err(
            NotMangled,
        ),
    ),
    (
        "ldrecode_rate",
        Err(
            NotMangled,
        ),
    ),
    (
        "ldlogo_rate",
        Err(
            NotMangled,
        ),
    ),
    (
        "wipe_para_spa_type",
        Err(
            NotMangled,
        ),
    ),
    (
        "vclr_para_disp",
        Err(
            NotMangled,
        ),
    ),
    (
        "ldmap_hdl",
        Err(
            NotMangled,
        ),
    ),
    (
        "setAscii2SjisCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqSaveInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqCtrlClr",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqScrSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqScrGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqLvlSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqLvlGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapResetSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapHoldSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqVSOTHSAVEset",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqVSOTHSAVEget",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapForward",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccReqTapForwardOwn",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccLocalGlobalCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "mccGlobalLocalCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "ascii2sjiscng_tbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mc_rep_str_local",
        Err(
            NotMangled,
        ),
    ),
    (
        "mc_rep_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mc_holdTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "mc_resetTmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbg_select_disp",
        Err(
            NotMangled,
        ),
    ),
    (
        "dummyPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "selPlayDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpHatChangeSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "selPlayDispTitleDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "xtrView",
        Err(
            NotMangled,
        ),
    ),
    (
        "logoDispOne",
        Err(
            NotMangled,
        ),
    ),
    (
        "uramenFileSearchTask",
        Err(
            NotMangled,
        ),
    ),
    (
        "uramenFileSearchSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "uramenFileSearchEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "startUpDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "selPlayDispType",
        Err(
            NotMangled,
        ),
    ),
    (
        "selPlayDispSetPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "selPlayDispSetPlayOne",
        Err(
            NotMangled,
        ),
    ),
    (
        "gamePlayDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "titleDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "urawazaKeyCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "ura_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "mainStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbg_select_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbg_tbl_msg",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbg_score_msg",
        Err(
            NotMangled,
        ),
    ),
    (
        "dbg_mode_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "tim2spr_tbl_tmp0",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393AA0",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00393AB0",
        Err(
            NotMangled,
        ),
    ),
    (
        "urawaza_skip_bottun",
        Err(
            NotMangled,
        ),
    ),
    (
        "urawaza_levelsel_bottun",
        Err(
            NotMangled,
        ),
    ),
    (
        "overlay_loadaddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "uramen_end_flag",
        Err(
            NotMangled,
        ),
    ),
    (
        "first_f",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_00398F44",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_00398F48",
        Err(
            NotMangled,
        ),
    ),
    (
        "menu_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmn_file_str_search",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnfTim2Trans",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnfGetFileAdrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmnfGetFileSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "common_ipk_start",
        Err(
            NotMangled,
        ),
    ),
    (
        "adrd_common_clr",
        Err(
            NotMangled,
        ),
    ),
    (
        "adrd_common_ck",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3strImage2RealPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "getTopSeekPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "getADRDnum",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrInitSd",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrQuitSdEach",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrDispDs",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_sort_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_sort_set",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_sort_disp",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3StrQuitSd",
        Err(
            NotMangled,
        ),
    ),
    (
        "current_time_old",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_pp",
        Err(
            NotMangled,
        ),
    ),
    (
        "adrd_common",
        Err(
            NotMangled,
        ),
    ),
    (
        "adrd_common_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_sort_cnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3str_sort",
        Err(
            NotMangled,
        ),
    ),
    (
        "setMakinDataMoto",
        Err(
            NotMangled,
        ),
    ),
    (
        "getMakingDataKeyKind",
        Err(
            NotMangled,
        ),
    ),
    (
        "getMakingDataKeyCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "setMakingDataCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "setMakingDataCopyCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "setMakingDataCOMMAKE_STR",
        Err(
            NotMangled,
        ),
    ),
    (
        "getMakinKeyKind2KeyKindNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSSmaxCntGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSSminCntGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubYure",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubYureReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubChangeKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubSwapKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubSwapCntKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubDoubleKey",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubSpaceSearch",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeSubUseKeyCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo0",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo1",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo2",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo3",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo5",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo6",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo7",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo8",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo9",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo15",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakingNo16",
        Err(
            NotMangled,
        ),
    ),
    (
        "comSelection",
        Err(
            NotMangled,
        ),
    ),
    (
        "computerMaking",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeingTblLevel0",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeingTblLevel1",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeingTblLevel2",
        Err(
            NotMangled,
        ),
    ),
    (
        "comMakeingTblLevel3",
        Err(
            NotMangled,
        ),
    ),
    (
        "cm_str_ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "menuDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "menuDrawReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "menuDrawQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMemCardCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuCtrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3LogInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "bFirst",
        Err(
            NotMangled,
        ),
    ),
    (
        "VsLev",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3Log_Val",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataGetIconSysHed",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndQuit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndSetVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndTrans",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndTransCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSndReqChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataSpuVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataDiskVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataDiskSndReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataDiskSndReady",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataDiskSndPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuDataDiskSndEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "menuDiskSndDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuVoiceBankSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuVoicePlayVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuVoicePlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuVoiceStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuVoiceSetVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMsgInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMsgPrintSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMsgPrintMc",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMsgGetMessageMc",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuMsgGetMessageSub",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuRoundTim2Trans",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuStageCl1Trans",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuCoolCl1Trans",
        Err(
            NotMangled,
        ),
    ),
    (
        "menumciconL",
        Err(
            NotMangled,
        ),
    ),
    (
        "menumciconR",
        Err(
            NotMangled,
        ),
    ),
    (
        "sndtap_menu",
        Err(
            NotMangled,
        ),
    ),
    (
        "sndtap_map",
        Err(
            NotMangled,
        ),
    ),
    (
        "sndtap_chall",
        Err(
            NotMangled,
        ),
    ),
    (
        "VoiceSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "mess_mc",
        Err(
            NotMangled,
        ),
    ),
    (
        "mess_menu",
        Err(
            NotMangled,
        ),
    ),
    (
        "rt2t_r1",
        Err(
            NotMangled,
        ),
    ),
    (
        "rt2t_r2",
        Err(
            NotMangled,
        ),
    ),
    (
        "rt2t_r3",
        Err(
            NotMangled,
        ),
    ),
    (
        "rt2t_r4",
        Err(
            NotMangled,
        ),
    ),
    (
        "rt2trans_str",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_r1",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_r2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_r3",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_r4",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_rndTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st1",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st3",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st4",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st5",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st6",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st7",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_st8",
        Err(
            NotMangled,
        ),
    ),
    (
        "ocl1_stageTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "_BankChan1Req",
        Err(
            NotMangled,
        ),
    ),
    (
        "_BankChan1Stat",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNSceneMusicFitTimerClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNSceneMusicFitTimerFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNSceneGetMusicFitTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_End",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetDrawEnv12",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_DispSw",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_SetAnimete",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_StartAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_ContinueAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_StopAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_ExecAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_CopyState",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_CopyStateMdl",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_SetAnimeSpeed",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_SetAnimeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_SetAnimeBankEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_isAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_isAnimeBank",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_isSeniAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNScene_ModelDispSw",
        Err(
            NotMangled,
        ),
    ),
    (
        "_myVu0Length",
        Err(
            NotMangled,
        ),
    ),
    (
        "MnMoveMode_InitRoot",
        Err(
            NotMangled,
        ),
    ),
    (
        "_MnParMovRoot_GetPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "MnMoveModelPosition",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_StageMapH",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_StageMapA",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_StageMapY",
        Err(
            NotMangled,
        ),
    ),
    (
        "Cam_StageMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "PRP_CTHAL",
        Err(
            NotMangled,
        ),
    ),
    (
        "PRP_RootTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeBB",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW1",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW2",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW3",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW4",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW5",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW6",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW7",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeCW8",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapCWptr",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeSEA",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimeBK",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapAnimePA",
        Err(
            NotMangled,
        ),
    ),
    (
        "StageMapBGMCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_CityHall",
        Err(
            NotMangled,
        ),
    ),
    (
        "Cam_CityHall",
        Err(
            NotMangled,
        ),
    ),
    (
        "CityHallAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "Cam_Notdef",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_OptCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_RepCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_StgCounterLoad",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_StgCounterSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "CounterAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mdl_JimakuBak",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_StageMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_StageMapA",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_StageMapY",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_CityHall",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_OptCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_RepCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_StgCounterLoad",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_StgCounterSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "Scene_JimakuBak",
        Err(
            NotMangled,
        ),
    ),
    (
        "AMusicFitTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetMenuPadIsRepeat",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSNDPLAY",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSNDSTOP",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSNDMASK_CHAN",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSND_SKIPSTOP",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSND_SKIPPLAY",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSSND_CHANISSTOP",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONEPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONEStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONEVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONETop",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONEflow",
        Err(
            NotMangled,
        ),
    ),
    (
        "tsBGMONEPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMMute",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMLoadCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMChangePos",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMPoll",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnPkOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnPkClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3DATA_SIZE",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetTm2Tex",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetTm2HedTex",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsClearMenuPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetMenuPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSndFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSNumMov",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSNumRBack",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSLOOP",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSLIMIT",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMENU_GetMapNo",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMENU_GetMapTimeState",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetScene_Map",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSet_ParappaCapColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsClearSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCheckEnding",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMENU_InitSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMENU_EndSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_RankingClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_End",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_InitFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenuMemcChk_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetRankingName",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetRanking2UData",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetSaveData",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsRestoreSaveData",
        Err(
            NotMangled,
        ),
    ),
    (
        "DateChgInt",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetRankScoreID",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsRanking_Set",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMENU_SetMapScreen",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCheckTimeMapChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsAnimeWait_withKeySkip",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMemCardCheck_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMap_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMakeUserWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSaveSuccessProc",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpSave_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHall_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHallParaStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHallFPHSSoundMask",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHallFPHSMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHallFPHOK",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpCityHallCharPosSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpPopMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "MpMapMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "_MapGetMovableDir",
        Err(
            NotMangled,
        ),
    ),
    (
        "McErrorMess",
        Err(
            NotMangled,
        ),
    ),
    (
        "McInitFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "McStartCheckFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "McUserCheckFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "McUserSaveFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "McUserLoadFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_GetSelect",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_IsON",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_SetPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_SetMes",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMCAMes_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCMPMes_SetPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCMPMes_SetMes",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCMPMes_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsANIME_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsANIME_Poll",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsANIME_Start",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsANIME_GetRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsSortSetRanking",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetRankingList",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopCusAOff",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopCusDim",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopCusInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopCusFlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopCusPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPUPCheckMove",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopMenu_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPopMenCus_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSaveMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSaveMenu_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSJukeCDObj_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsJkJacketPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsJkRecordPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "TSJukeCDObj_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsJukeIsObjAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsJukeObjAnime",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsJukeObjAnime2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsJKMoveCus",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsJKSetPadArrow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsJukeMenu_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsJukeMenu_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorSET",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorON",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorOFF",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorSEL",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorMASK",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCmnCell_CusorDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsOption_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsOption_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_GetCurFileNo",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_IsGetFileSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SortUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SetCurUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SetCurDispUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SetCurFileNoCusor",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SetType",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_TagChangeAble",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_SetCurTag",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUserList_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "NameSpaceCut",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsUser_PanelDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsNAMEINBox_SetName",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsNAMEINBox_GetName",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsNAMEINBox_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsNAMEINBox_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSCFADE_Set",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSCFADE_Flow",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSCFADE_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkMCMsgPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkMCMsgGetLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkSubMsgPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_CleanVram",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsMenu_CaptureVram",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetCTransSpr",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetSLTransSpr",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSetPNTransSpr",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatTexFnc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsPatSetPrm",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatGetSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatPutRZoom",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatPutMZoom",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatPutSwing",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsPatPutUneri",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCELBackInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCELBackEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsCELBackDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TsCELBackObjDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsHosiPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "mnmapMap1",
        Err(
            NotMangled,
        ),
    ),
    (
        "mnmapMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "mnmapMap2",
        Err(
            NotMangled,
        ),
    ),
    (
        "MapBgmTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsVoiceTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "VSNDSEQ_Tbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "TexTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "CellCusPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNOptMiniFrm",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNOptLRBtn",
        Err(
            NotMangled,
        ),
    ),
    (
        "Ranking_PatScroll",
        Err(
            NotMangled,
        ),
    ),
    (
        "JUKEBOX_Pos",
        Err(
            NotMangled,
        ),
    ),
    (
        "HosiColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "hTypeTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "RPPadBit",
        Err(
            NotMangled,
        ),
    ),
    (
        "McVoiceTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "McFaceTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_StageMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00395F20",
        Err(
            NotMangled,
        ),
    ),
    (
        "tblTex",
        Err(
            NotMangled,
        ),
    ),
    (
        "UserList_Sw",
        Err(
            NotMangled,
        ),
    ),
    (
        "OptionList_Sw",
        Err(
            NotMangled,
        ),
    ),
    (
        "PopMenu_Sw",
        Err(
            NotMangled,
        ),
    ),
    (
        "SaveMenu_Sw",
        Err(
            NotMangled,
        ),
    ),
    (
        "JukeMenu_Sw",
        Err(
            NotMangled,
        ),
    ),
    (
        "nTim",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00399800",
        Err(
            NotMangled,
        ),
    ),
    (
        "_TexFunc",
        Err(
            NotMangled,
        ),
    ),
    (
        "HOSIObj",
        Err(
            NotMangled,
        ),
    ),
    (
        "MapTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "state",
        Err(
            NotMangled,
        ),
    ),
    (
        "mesNo",
        Err(
            NotMangled,
        ),
    ),
    (
        "state_tmp_253",
        Err(
            NotMangled,
        ),
    ),
    (
        "_bMapCaptureReq",
        Err(
            NotMangled,
        ),
    ),
    (
        "pP3GameState",
        Err(
            NotMangled,
        ),
    ),
    (
        "_MNwaitTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "CurMapOldFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "CurMapBakFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "UserWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCStageRank",
        Err(
            NotMangled,
        ),
    ),
    (
        "UserLst",
        Err(
            NotMangled,
        ),
    ),
    (
        "UserDispWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "subStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "ret",
        Err(
            NotMangled,
        ),
    ),
    (
        "errorNo",
        Err(
            NotMangled,
        ),
    ),
    (
        "waitTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "MapCity_tmp_254",
        Err(
            NotMangled,
        ),
    ),
    (
        "menuPadState",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsSndChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsBGMState",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_StageMap2",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_CityHall",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_OptCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_RepCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_StgCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "MNS_JimakuBak",
        Err(
            NotMangled,
        ),
    ),
    (
        "CurFileInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "MnPkt",
        Err(
            NotMangled,
        ),
    ),
    (
        "MnLPkt",
        Err(
            NotMangled,
        ),
    ),
    (
        "FPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "MCMesWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "CmpMesWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "UserListMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScFade",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetIconSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetIconPtr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_SetUserDirName",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_GetFilePath",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_EUC2SJIS",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_ASC2SJIS",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_UserName_ASC2SJIS",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_SetBrowsInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_mainfile_chk",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_file_chk",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_InitReady",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetSaveSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_SetCheckSaveSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_freesize_chk",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_CheckChange",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_CheckChangeClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_CheckChangeSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_CheckIsNewSave",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_GetSaveDataSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_DeleteDataWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_MakeDataWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MCStrCmpLen",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MCStrNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_MemcCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetUserStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetUserEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_GetUserCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_AddUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_AddUserBroken",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_SortUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_CheckBrokenUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_OpeningCheckStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_OpeningCheckEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_OpeningCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_LoadUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_LoadCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_loadCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_SetUserWorkTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_SaveUser",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_SaveCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_SaveCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_proc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_dataCheckFunc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_CheckUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "_P3MC_CheckUserDataHead",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00396190",
        Err(
            NotMangled,
        ),
    ),
    (
        "HedderID",
        Err(
            NotMangled,
        ),
    ),
    (
        "FooterID",
        Err(
            NotMangled,
        ),
    ),
    (
        "pUChkWork",
        Err(
            NotMangled,
        ),
    ),
    (
        "FreeSizeFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "portCheckFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "NeedSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "UChkSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "isFileFlgCash",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3MC_Work",
        Err(
            NotMangled,
        ),
    ),
    (
        "filePath",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcmenu_info",
        Err(
            NotMangled,
        ),
    ),
    (
        "p3mcTblGetDir",
        Err(
            NotMangled,
        ),
    ),
    (
        "McLogFileFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "McReplayFileFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_setDirName",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_setSaveTitle",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_setIconSysHed",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_setSaveIcon",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_getfilename",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_getfilepath",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_checkFormat",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_getChangeState",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_setChangeState",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_SaveFileClust",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_clearMEMCINFO",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_searchDirTbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_port_info",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_del_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_load_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_loadFirst",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_save_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_seeksave_file",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_save_overwrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_port_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_format",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_chg_dir",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_get_dir",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_get_dir_continue",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_mansub_ErrChk",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_mansub_Open",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_mansub_Close",
        Err(
            NotMangled,
        ),
    ),
    (
        "memcsub_fileChk",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_mansub_GetInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_mansub_load",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_manager_save",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_manager_overwrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_manager_chk",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_manager",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_iconsys",
        Err(
            NotMangled,
        ),
    ),
    (
        "_memc_type",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmps0",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmps1",
        Err(
            NotMangled,
        ),
    ),
    (
        "memc_stat",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsGetTM2Hed",
        Err(
            NotMangled,
        ),
    ),
    (
        "menu_tm2_hed",
        Err(
            NotMangled,
        ),
    ),
    (
        "MenuFont_ASC2EUC",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUSubtSetKanji",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUSubt_PadFontSw",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUSubt_PadFontArrowSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUSubtGetLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUSubtPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUFontPutL",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUFontPutS",
        Err(
            NotMangled,
        ),
    ),
    (
        "MENUFontPutR",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PKFontPut",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PADArrow_Put",
        Err(
            NotMangled,
        ),
    ),
    (
        "_JPFont_GetSubtCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "_EGFont_GetSubtCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "codeKanjiCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "codeKanjiACheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "euc2sjis",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubtGsTex0_TmpMenuFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcode_ascii_TmpMenuFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcode_HalfSpace",
        Err(
            NotMangled,
        ),
    ),
    (
        "PadSymbolFontA",
        Err(
            NotMangled,
        ),
    ),
    (
        "ArowPat",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tbl_ASC2EUC",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PadFont_SW",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PadArrowState",
        Err(
            NotMangled,
        ),
    ),
    (
        "_AnimeFontFlg",
        Err(
            NotMangled,
        ),
    ),
    (
        "kanji_pp_TmpMenuFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcode_dat_pp_TmpMenuFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "MnSubtFontInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "_tsWorkEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_tsWorkInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsInitUPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsEndUPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "TsDrawUPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkTEX0_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkTEX1_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCLAMP_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkALPHA_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkTEST_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkSCISSOR_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkDefSCISSOR_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkOFFSET_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkPABE_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkFBA_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCCLAMP_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkDefReg_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkTEX0_SetAdd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetDToneColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetToneColorA",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetToneColorH",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetSprDefOfsXY",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetSprScreenXYWH",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkSprPkt_SetDrawEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkZBUFMask_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkSprPkt_SetTexVram",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkSprPkt_SetDefault",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkNSprite_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkNSprite_Add2",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkNSprite_AddAdj",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCRect_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCGRect_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "rotcossin",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotCosSin_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotCosSin_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "_rcossin_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_rcossin_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "_pkVU0RotMatrixZ",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkRSprite_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCLine2_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCLineS_AddStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCLineS_AddNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkPolyF3_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkPolyF4_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkPolyFT4_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_Create",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_Delete",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetXYWH",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetUVWH",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkCMesh_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkFTMesh_Add",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetHLinOfs",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetVLinOfs",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetHLinOfsLRX",
        Err(
            NotMangled,
        ),
    ),
    (
        "PkMesh_SetVLinOfsUDY",
        Err(
            NotMangled,
        ),
    ),
    (
        "S5432",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLT_003990DC",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkDefSCISSOR",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkDefZBUFFER",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkScrW",
        Err(
            NotMangled,
        ),
    ),
    (
        "_PkScrH",
        Err(
            NotMangled,
        ),
    ),
    (
        "WP2Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "WP2Ctrl",
        Err(
            NotMangled,
        ),
    ),
    (
        "sbuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "gCd",
        Err(
            NotMangled,
        ),
    ),
    (
        "TapCtInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "TapCt",
        Err(
            NotMangled,
        ),
    ),
    (
        "sbuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "gCd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Append__27PrDmaStripForSetGifRegisterUiRCUl",
        Ok(
            "PrDmaStripForSetGifRegister::Append(unsigned int, unsigned long const &)",
        ),
    ),
    (
        "Freeze__27PrDmaStripForSetGifRegisterUcPCv",
        Ok(
            "PrDmaStripForSetGifRegister::Freeze(unsigned char, void const *)",
        ),
    ),
    (
        "PrInitializeDmaStripGifRegister__FG9sceGsZbuf",
        Ok(
            "PrInitializeDmaStripGifRegister(sceGsZbuf)",
        ),
    ),
    (
        "PrGetDmaStripGifRegister__F20PrSetGifRegisterMode",
        Ok(
            "PrGetDmaStripGifRegister(PrSetGifRegisterMode)",
        ),
    ),
    (
        "_GLOBAL_$D$Append__27PrDmaStripForSetGifRegisterUiRCUl",
        Ok(
            "global destructors keyed to PrDmaStripForSetGifRegister::Append(unsigned int, unsigned long const &)",
        ),
    ),
    (
        "_GLOBAL_$I$Append__27PrDmaStripForSetGifRegisterUiRCUl",
        Ok(
            "global constructors keyed to PrDmaStripForSetGifRegister::Append(unsigned int, unsigned long const &)",
        ),
    ),
    (
        "_$_27PrDmaStripForSetGifRegister",
        Ok(
            "PrDmaStripForSetGifRegister::~PrDmaStripForSetGifRegister(void)",
        ),
    ),
    (
        "gifRegisterModeInitialized",
        Err(
            NotMangled,
        ),
    ),
    (
        "setGifRegisterMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetPostureWorkArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "AllocateFromWorkArea__FUi",
        Ok(
            "AllocateFromWorkArea(unsigned int)",
        ),
    ),
    (
        "__13PrModelObjectP13SpmFileHeader",
        Ok(
            "PrModelObject::PrModelObject(SpmFileHeader *)",
        ),
    ),
    (
        "_$_13PrModelObject",
        Ok(
            "PrModelObject::~PrModelObject(void)",
        ),
    ),
    (
        "Initialize__13PrModelObject",
        Ok(
            "PrModelObject::Initialize(void)",
        ),
    ),
    (
        "LinkAnimation__13PrModelObjectP13SpaFileHeader",
        Ok(
            "PrModelObject::LinkAnimation(SpaFileHeader *)",
        ),
    ),
    (
        "CleanupAnimation__13PrModelObject",
        Ok(
            "PrModelObject::CleanupAnimation(void)",
        ),
    ),
    (
        "LinkPositionAnimation__13PrModelObjectP13SpaFileHeader",
        Ok(
            "PrModelObject::LinkPositionAnimation(SpaFileHeader *)",
        ),
    ),
    (
        "CleanupPositionAnimation__13PrModelObject",
        Ok(
            "PrModelObject::CleanupPositionAnimation(void)",
        ),
    ),
    (
        "UnionBoundaryBox__13PrModelObjectPt8NaVECTOR2Zfi4T1",
        Ok(
            "PrModelObject::UnionBoundaryBox(NaVECTOR<float, 4> *, NaVECTOR<float, 4> *)",
        ),
    ),
    (
        "GetPrimitivePosition__13PrModelObjectPt8NaVECTOR2Zfi4",
        Ok(
            "PrModelObject::GetPrimitivePosition(NaVECTOR<float, 4> *)",
        ),
    ),
    (
        "GetScreenPosition__13PrModelObjectPt8NaVECTOR2Zfi4",
        Ok(
            "PrModelObject::GetScreenPosition(NaVECTOR<float, 4> *)",
        ),
    ),
    (
        "prSpramData_tmp_model",
        Err(
            NotMangled,
        ),
    ),
    (
        "workAreaTopAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "__16PrObjectDatabase",
        Ok(
            "PrObjectDatabase::PrObjectDatabase(void)",
        ),
    ),
    (
        "_$_16PrObjectDatabase",
        Ok(
            "PrObjectDatabase::~PrObjectDatabase(void)",
        ),
    ),
    (
        "Initialize__16PrObjectDatabase",
        Ok(
            "PrObjectDatabase::Initialize(void)",
        ),
    ),
    (
        "Cleanup__16PrObjectDatabase",
        Ok(
            "PrObjectDatabase::Cleanup(void)",
        ),
    ),
    (
        "CreateScene__16PrObjectDatabaseP13sceGsDrawEnv1PCcUi",
        Ok(
            "PrObjectDatabase::CreateScene(sceGsDrawEnv1 *, char const *, unsigned int)",
        ),
    ),
    (
        "DeleteScene__16PrObjectDatabaseP13PrSceneObject",
        Ok(
            "PrObjectDatabase::DeleteScene(PrSceneObject *)",
        ),
    ),
    (
        "_GLOBAL_$D$prObjectDatabase",
        Ok(
            "global destructors keyed to prObjectDatabase",
        ),
    ),
    (
        "_GLOBAL_$I$prObjectDatabase",
        Ok(
            "global constructors keyed to prObjectDatabase",
        ),
    ),
    (
        "prObjectDatabase",
        Err(
            NotMangled,
        ),
    ),
    (
        "databaseInitialized",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$_t11PrObjectSet1Z13SpcFileHeader",
        Ok(
            "PrObjectSet<SpcFileHeader>::~PrObjectSet(void)",
        ),
    ),
    (
        "_$_t11PrObjectSet1Z13SpaFileHeader",
        Ok(
            "PrObjectSet<SpaFileHeader>::~PrObjectSet(void)",
        ),
    ),
    (
        "_$_t11PrObjectSet1Z13PrSceneObject",
        Ok(
            "PrObjectSet<PrSceneObject>::~PrObjectSet(void)",
        ),
    ),
    (
        "__13PrRenderStuff",
        Ok(
            "PrRenderStuff::PrRenderStuff(void)",
        ),
    ),
    (
        "_$_13PrRenderStuff",
        Ok(
            "PrRenderStuff::~PrRenderStuff(void)",
        ),
    ),
    (
        "Initialize__13PrRenderStuffG9sceGsZbuf",
        Ok(
            "PrRenderStuff::Initialize(sceGsZbuf)",
        ),
    ),
    (
        "Cleanup__13PrRenderStuff",
        Ok(
            "PrRenderStuff::Cleanup(void)",
        ),
    ),
    (
        "GetZbufBits__C13PrRenderStuff",
        Ok(
            "PrRenderStuff::GetZbufBits(void) const",
        ),
    ),
    (
        "ResetStatistics__13PrRenderStuff",
        Ok(
            "PrRenderStuff::ResetStatistics(void)",
        ),
    ),
    (
        "StartRender__13PrRenderStuffP13PrSceneObject",
        Ok(
            "PrRenderStuff::StartRender(PrSceneObject *)",
        ),
    ),
    (
        "WaitRender__13PrRenderStuff",
        Ok(
            "PrRenderStuff::WaitRender(void)",
        ),
    ),
    (
        "AllocateTransmitDmaArray__13PrRenderStuffUi",
        Ok(
            "PrRenderStuff::AllocateTransmitDmaArray(unsigned int)",
        ),
    ),
    (
        "AppendTransmitDmaTag__13PrRenderStuffPC10_sceDmaTagUif",
        Ok(
            "PrRenderStuff::AppendTransmitDmaTag(_sceDmaTag const *, unsigned int, float)",
        ),
    ),
    (
        "CompareFunction__13PrRenderStuffPCvT1",
        Ok(
            "PrRenderStuff::CompareFunction(void const *, void const *)",
        ),
    ),
    (
        "SortTransmitDmaArray__13PrRenderStuff",
        Ok(
            "PrRenderStuff::SortTransmitDmaArray(void)",
        ),
    ),
    (
        "MergeRender__13PrRenderStuff",
        Ok(
            "PrRenderStuff::MergeRender(void)",
        ),
    ),
    (
        "_GLOBAL_$D$prRenderStuff",
        Ok(
            "global destructors keyed to prRenderStuff",
        ),
    ),
    (
        "_GLOBAL_$I$prRenderStuff",
        Ok(
            "global constructors keyed to prRenderStuff",
        ),
    ),
    (
        "AppendDmaTag__13PrRenderStuffPC10_sceDmaTag",
        Ok(
            "PrRenderStuff::AppendDmaTag(_sceDmaTag const *)",
        ),
    ),
    (
        "prRenderStuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "warned_tmp_renderstuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetFrameRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetFrameRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeSceneDBuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetSceneFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetSceneEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrPreprocessSceneModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrCleanupAllSceneModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetAnimationStartFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetAnimationEndFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCameraStartFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCameraEndFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetModelUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetAnimationUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetCameraUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetAnimationUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCameraUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrLinkAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrUnlinkAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetLinkedAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrLinkPositionAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrUnlinkPositionAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetLinkedPositionAnimation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSelectCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetSelectedCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCurrentCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetDefaultCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetAppropriateDefaultCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrShowModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelMatrix",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrHideModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelPrimitivePosition",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelScreenPosition",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrAnimateModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrAnimateModelPosition",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrAnimateSceneCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrRender",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrWaitRender",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetStage",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetDepthOfField",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetDepthOfFieldLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetFocalLength",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetDefocusLength",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetDepthOfFieldLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSaveContour",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrResetContour",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSavePosture",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrResetPosture",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetContourBlurAlpha",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetTransactionBlendRatio",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetContourBlurAlpha",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetContourBlurAlpha2",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetTransactionBlendRatio",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetModelDisturbance",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelDisturbance",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetVertexNum",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetAnimationName",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCameraName",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetSceneName",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetRenderingStatistics",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetModelVisibility",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetModelImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetAnimationImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetCameraImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetDebugParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetDebugParamFloat",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetDebugParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetDebugParamFloat",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitializeDebugParam__Fv",
        Ok(
            "InitializeDebugParam(void)",
        ),
    ),
    (
        "prFrameRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "prInverseFrameRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmp_0",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmp_1",
        Err(
            NotMangled,
        ),
    ),
    (
        "prCurrentStage",
        Err(
            NotMangled,
        ),
    ),
    (
        "debugParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "vector_0",
        Err(
            NotMangled,
        ),
    ),
    (
        "vector_1",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangePointer__13SpmFileHeader",
        Ok(
            "SpmFileHeader::ChangePointer(void)",
        ),
    ),
    (
        "ChangePointer__7SpmNodeP13SpmFileHeaderP7SpmNode",
        Ok(
            "SpmNode::ChangePointer(SpmFileHeader *, SpmNode *)",
        ),
    ),
    (
        "ChangePointer__13SpaFileHeader",
        Ok(
            "SpaFileHeader::ChangePointer(void)",
        ),
    ),
    (
        "ChangePointer__16SpaNodeAnimationP13SpaFileHeader",
        Ok(
            "SpaNodeAnimation::ChangePointer(SpaFileHeader *)",
        ),
    ),
    (
        "ChangePointer__13SpcFileHeader",
        Ok(
            "SpcFileHeader::ChangePointer(void)",
        ),
    ),
    (
        "Render__13PrSceneObject",
        Ok(
            "PrSceneObject::Render(void)",
        ),
    ),
    (
        "InitializeVu1__13PrSceneObject",
        Ok(
            "PrSceneObject::InitializeVu1(void)",
        ),
    ),
    (
        "PrepareScreenModelRender__13PrSceneObject",
        Ok(
            "PrSceneObject::PrepareScreenModelRender(void)",
        ),
    ),
    (
        "CalculateCurrentMatrix__13PrModelObject",
        Ok(
            "PrModelObject::CalculateCurrentMatrix(void)",
        ),
    ),
    (
        "CalculateCurrentMatrix__13SpmFileHeaderP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmFileHeader::CalculateCurrentMatrix(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "CalculateCurrentMatrixAnimation__13SpmFileHeaderP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmFileHeader::CalculateCurrentMatrixAnimation(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "CalculateClusterMatrix__13SpmFileHeaderP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmFileHeader::CalculateClusterMatrix(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "CalculateClusterMatrixAnimation__13SpmFileHeaderP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmFileHeader::CalculateClusterMatrixAnimation(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "RenderContext1Model__13PrModelObject",
        Ok(
            "PrModelObject::RenderContext1Model(void)",
        ),
    ),
    (
        "RenderContext1Model__13SpmFileHeaderP13PrModelObject",
        Ok(
            "SpmFileHeader::RenderContext1Model(PrModelObject *)",
        ),
    ),
    (
        "ModifySimpleDmaPacket__7SpmNodeP23PrVuNodeHeaderDmaPacket",
        Ok(
            "SpmNode::ModifySimpleDmaPacket(PrVuNodeHeaderDmaPacket *)",
        ),
    ),
    (
        "RenderContext1Node__7SpmNodeP13PrModelObject",
        Ok(
            "SpmNode::RenderContext1Node(PrModelObject *)",
        ),
    ),
    (
        "RenderScreenModelNode__13PrModelObject",
        Ok(
            "PrModelObject::RenderScreenModelNode(void)",
        ),
    ),
    (
        "RenderScreenModelNode__13SpmFileHeader",
        Ok(
            "SpmFileHeader::RenderScreenModelNode(void)",
        ),
    ),
    (
        "RenderScreenModelNode__7SpmNode",
        Ok(
            "SpmNode::RenderScreenModelNode(void)",
        ),
    ),
    (
        "RenderBackgroundScreenModel__13PrModelObject",
        Ok(
            "PrModelObject::RenderBackgroundScreenModel(void)",
        ),
    ),
    (
        "RenderBackgroundScreenModel__13SpmFileHeader",
        Ok(
            "SpmFileHeader::RenderBackgroundScreenModel(void)",
        ),
    ),
    (
        "RenderBackgroundScreenModel__7SpmNode",
        Ok(
            "SpmNode::RenderBackgroundScreenModel(void)",
        ),
    ),
    (
        "RenderContext2Model__13PrModelObject",
        Ok(
            "PrModelObject::RenderContext2Model(void)",
        ),
    ),
    (
        "RenderContext2Model__13SpmFileHeaderP13PrModelObject",
        Ok(
            "SpmFileHeader::RenderContext2Model(PrModelObject *)",
        ),
    ),
    (
        "RenderContext2Node__7SpmNodeP13PrModelObject",
        Ok(
            "SpmNode::RenderContext2Node(PrModelObject *)",
        ),
    ),
    (
        "ComposeGlobalMatrix__7SpmNodeP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmNode::ComposeGlobalMatrix(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "ComposeGlobalMatrixWithoutVisibility__7SpmNodeP13PrModelObjectRCt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmNode::ComposeGlobalMatrixWithoutVisibility(PrModelObject *, NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "InitializeEECore__13PrRenderStuffP13PrSceneObject",
        Ok(
            "PrRenderStuff::InitializeEECore(PrSceneObject *)",
        ),
    ),
    (
        "RenderVertexEECoreBothface__13PrRenderStuff",
        Ok(
            "PrRenderStuff::RenderVertexEECoreBothface(void)",
        ),
    ),
    (
        "RenderVertexEECoreNormal__13PrRenderStuff",
        Ok(
            "PrRenderStuff::RenderVertexEECoreNormal(void)",
        ),
    ),
    (
        "RenderVertexEECoreRefmap__13PrRenderStuff",
        Ok(
            "PrRenderStuff::RenderVertexEECoreRefmap(void)",
        ),
    ),
    (
        "RenderVertexEECoreContour__13PrRenderStuff",
        Ok(
            "PrRenderStuff::RenderVertexEECoreContour(void)",
        ),
    ),
    (
        "RenderNodeEECore__13PrRenderStuffP23PrVuNodeHeaderDmaPacket",
        Ok(
            "PrRenderStuff::RenderNodeEECore(PrVuNodeHeaderDmaPacket *)",
        ),
    ),
    (
        "RenderChunkEECore__13PrRenderStuffP25PrVuDataChunkPacketHeaderf",
        Ok(
            "PrRenderStuff::RenderChunkEECore(PrVuDataChunkPacketHeader *, float)",
        ),
    ),
    (
        "SavePosture__13PrModelObject",
        Ok(
            "PrModelObject::SavePosture(void)",
        ),
    ),
    (
        "ResetPosture__13PrModelObject",
        Ok(
            "PrModelObject::ResetPosture(void)",
        ),
    ),
    (
        "BlendTransitionMatrix__7SpmNodeP13PrModelObjectRt8NaMATRIX3Zfi4i4",
        Ok(
            "SpmNode::BlendTransitionMatrix(PrModelObject *, NaMATRIX<float, 4, 4> &)",
        ),
    ),
    (
        "BlendTransactionWeight__12SpmShapeNodeP13PrModelObjectfUi",
        Ok(
            "SpmShapeNode::BlendTransactionWeight(PrModelObject *, float, unsigned int)",
        ),
    ),
    (
        "CalculateEntryPoint__Fv",
        Ok(
            "CalculateEntryPoint(void)",
        ),
    ),
    (
        "PrLoadMicroPrograms__Fv",
        Ok(
            "PrLoadMicroPrograms(void)",
        ),
    ),
    (
        "PrGetMicroProgramAddress__F22PrMICRO_PROGRAM_MODULE",
        Ok(
            "PrGetMicroProgramAddress(PrMICRO_PROGRAM_MODULE)",
        ),
    ),
    (
        "PrGetInputVertexParameterNum__F22PrMICRO_PROGRAM_MODULE",
        Ok(
            "PrGetInputVertexParameterNum(PrMICRO_PROGRAM_MODULE)",
        ),
    ),
    (
        "PrGetInputVertexParameterSet__F22PrMICRO_PROGRAM_MODULE",
        Ok(
            "PrGetInputVertexParameterSet(PrMICRO_PROGRAM_MODULE)",
        ),
    ),
    (
        "PrGetOutputVertexParameterNum__F22PrMICRO_PROGRAM_MODULE",
        Ok(
            "PrGetOutputVertexParameterNum(PrMICRO_PROGRAM_MODULE)",
        ),
    ),
    (
        "PrGetOutputVertexParameterSet__F22PrMICRO_PROGRAM_MODULE",
        Ok(
            "PrGetOutputVertexParameterSet(PrMICRO_PROGRAM_MODULE)",
        ),
    ),
    (
        "PrGetMendererCreateTextureAddress__Fv",
        Ok(
            "PrGetMendererCreateTextureAddress(void)",
        ),
    ),
    (
        "PrGetMendererDrawMeshAddress__Fv",
        Ok(
            "PrGetMendererDrawMeshAddress(void)",
        ),
    ),
    (
        "MicroProgramEntryPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererCreateTextureEntryPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "MendererDrawMeshEntryPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "Initialize__12PrSPRAM_DATAP13PrSceneObject",
        Ok(
            "PrSPRAM_DATA::Initialize(PrSceneObject *)",
        ),
    ),
    (
        "InitializeModel__12PrSPRAM_DATAP13PrModelObject",
        Ok(
            "PrSPRAM_DATA::InitializeModel(PrModelObject *)",
        ),
    ),
    (
        "SendDisplayHeader__12PrSPRAM_DATA",
        Ok(
            "PrSPRAM_DATA::SendDisplayHeader(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Initialize__12PrSPRAM_DATAP13PrSceneObject",
        Ok(
            "global constructors keyed to PrSPRAM_DATA::Initialize(PrSceneObject *)",
        ),
    ),
    (
        "PrInitializeMfifo__Fv",
        Ok(
            "PrInitializeMfifo(void)",
        ),
    ),
    (
        "PrCleanupMfifo__Fv",
        Ok(
            "PrCleanupMfifo(void)",
        ),
    ),
    (
        "PrStartMfifo__Fv",
        Ok(
            "PrStartMfifo(void)",
        ),
    ),
    (
        "PrStopMfifo__Fv",
        Ok(
            "PrStopMfifo(void)",
        ),
    ),
    (
        "PrWaitMfifo__Fv",
        Ok(
            "PrWaitMfifo(void)",
        ),
    ),
    (
        "PrSendMfifo__FPC10_sceDmaTag",
        Ok(
            "PrSendMfifo(_sceDmaTag const *)",
        ),
    ),
    (
        "PrMfifoUnsentDataSize__Fv",
        Ok(
            "PrMfifoUnsentDataSize(void)",
        ),
    ),
    (
        "prSpramData",
        Err(
            NotMangled,
        ),
    ),
    (
        "mfifoProcessing",
        Err(
            NotMangled,
        ),
    ),
    (
        "mfifoBase",
        Err(
            NotMangled,
        ),
    ),
    (
        "SearchSegment__C12SpaTrackBasef",
        Ok(
            "SpaTrackBase::SearchSegment(float) const",
        ),
    ),
    (
        "GetValue__Ct8SpaTrack1Zif",
        Ok(
            "SpaTrack<int>::GetValue(float) const",
        ),
    ),
    (
        "GetMatrix__C12SpaTransformf",
        Ok(
            "SpaTransform::GetMatrix(float) const",
        ),
    ),
    (
        "GetMatrix__C16SpaNodeAnimationf",
        Ok(
            "SpaNodeAnimation::GetMatrix(float) const",
        ),
    ),
    (
        "IsVisible__C16SpaNodeAnimationf",
        Ok(
            "SpaNodeAnimation::IsVisible(float) const",
        ),
    ),
    (
        "IsNodeVisible__C13SpaFileHeaderP7SpmNodef",
        Ok(
            "SpaFileHeader::IsNodeVisible(SpmNode *, float) const",
        ),
    ),
    (
        "IsEverIdentical__12SpaTransform",
        Ok(
            "SpaTransform::IsEverIdentical(void)",
        ),
    ),
    (
        "Optimize__16SpaNodeAnimation",
        Ok(
            "SpaNodeAnimation::Optimize(void)",
        ),
    ),
    (
        "GetLinearValue__Ct8SpaTrack1Zt8NaVECTOR2Zfi4Uif",
        Ok(
            "SpaTrack<NaVECTOR<float, 4> >::GetLinearValue(unsigned int, float) const",
        ),
    ),
    (
        "GetValue__Ct8SpaTrack1Zt8NaVECTOR2Zfi4f",
        Ok(
            "SpaTrack<NaVECTOR<float, 4> >::GetValue(float) const",
        ),
    ),
    (
        "GetSprineValue__Ct8SpaTrack1ZfUif",
        Ok(
            "SpaTrack<float>::GetSprineValue(unsigned int, float) const",
        ),
    ),
    (
        "GetLinearValue__Ct8SpaTrack1ZfUif",
        Ok(
            "SpaTrack<float>::GetLinearValue(unsigned int, float) const",
        ),
    ),
    (
        "GetValue__Ct8SpaTrack1Zff",
        Ok(
            "SpaTrack<float>::GetValue(float) const",
        ),
    ),
    (
        "GetSprineValue__Ct8SpaTrack1Zt8NaMATRIX3Zfi4i4Uif",
        Ok(
            "SpaTrack<NaMATRIX<float, 4, 4> >::GetSprineValue(unsigned int, float) const",
        ),
    ),
    (
        "GetLinearValue__Ct8SpaTrack1Zt8NaMATRIX3Zfi4i4Uif",
        Ok(
            "SpaTrack<NaMATRIX<float, 4, 4> >::GetLinearValue(unsigned int, float) const",
        ),
    ),
    (
        "GetValue__Ct8SpaTrack1Zt8NaMATRIX3Zfi4i4f",
        Ok(
            "SpaTrack<NaMATRIX<float, 4, 4> >::GetValue(float) const",
        ),
    ),
    (
        "GetSprineValue__Ct8SpaTrack1Zt8NaVECTOR2Zfi4Uif",
        Ok(
            "SpaTrack<NaVECTOR<float, 4> >::GetSprineValue(unsigned int, float) const",
        ),
    ),
    (
        "tmp_0_1744",
        Err(
            NotMangled,
        ),
    ),
    (
        "return_buffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "__13PrSceneObjectP13sceGsDrawEnv1PCcUi",
        Ok(
            "PrSceneObject::PrSceneObject(sceGsDrawEnv1 *, char const *, unsigned int)",
        ),
    ),
    (
        "_$_13PrSceneObject",
        Ok(
            "PrSceneObject::~PrSceneObject(void)",
        ),
    ),
    (
        "SelectCamera__13PrSceneObjectP13SpcFileHeader",
        Ok(
            "PrSceneObject::SelectCamera(SpcFileHeader *)",
        ),
    ),
    (
        "GetCurrentCamera__13PrSceneObject",
        Ok(
            "PrSceneObject::GetCurrentCamera(void)",
        ),
    ),
    (
        "SetAppropriateDefaultCamera__13PrSceneObject",
        Ok(
            "PrSceneObject::SetAppropriateDefaultCamera(void)",
        ),
    ),
    (
        "GetFocalLength__C13PrSceneObject",
        Ok(
            "PrSceneObject::GetFocalLength(void) const",
        ),
    ),
    (
        "GetDefocusLength__C13PrSceneObject",
        Ok(
            "PrSceneObject::GetDefocusLength(void) const",
        ),
    ),
    (
        "GetDepthLevel__C13PrSceneObject",
        Ok(
            "PrSceneObject::GetDepthLevel(void) const",
        ),
    ),
    (
        "PreprocessModel__13PrSceneObject",
        Ok(
            "PrSceneObject::PreprocessModel(void)",
        ),
    ),
    (
        "_$_t11PrObjectSet1Z13PrModelObject",
        Ok(
            "PrObjectSet<PrModelObject>::~PrObjectSet(void)",
        ),
    ),
    (
        "RenderClusterNode__22SpmClusterGeometryNodeP13PrModelObject",
        Ok(
            "SpmClusterGeometryNode::RenderClusterNode(PrModelObject *)",
        ),
    ),
    (
        "AddShapePosition__12SpmShapeNodeUif",
        Ok(
            "SpmShapeNode::AddShapePosition(unsigned int, float)",
        ),
    ),
    (
        "RenderShapeNode__12SpmShapeNodeP13PrModelObject",
        Ok(
            "SpmShapeNode::RenderShapeNode(PrModelObject *)",
        ),
    ),
    (
        "CreateBillboardMatrix__FRCt8NaMATRIX3Zfi4i4",
        Ok(
            "CreateBillboardMatrix(NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "ApplyBillboardMatrix__7SpmNode",
        Ok(
            "SpmNode::ApplyBillboardMatrix(void)",
        ),
    ),
    (
        "ApplyDepthOfField__13PrSceneObject",
        Ok(
            "PrSceneObject::ApplyDepthOfField(void)",
        ),
    ),
    (
        "PrAddDrawAreaDefinition__FP11NaGifPacketRC11PrVRAM_RECTbbUl",
        Ok(
            "PrAddDrawAreaDefinition(NaGifPacket *, PrVRAM_RECT const &, bool, bool, unsigned long)",
        ),
    ),
    (
        "PrAddTextureAreaDefinition__FP11NaGifPacketRC11PrVRAM_RECTb",
        Ok(
            "PrAddTextureAreaDefinition(NaGifPacket *, PrVRAM_RECT const &, bool)",
        ),
    ),
    (
        "PrSetSpriteDefinitionZ__FUi",
        Ok(
            "PrSetSpriteDefinitionZ(unsigned int)",
        ),
    ),
    (
        "PrAddSpriteDefinition__FP11NaGifPacketRC11PrVRAM_RECTT1b",
        Ok(
            "PrAddSpriteDefinition(NaGifPacket *, PrVRAM_RECT const &, PrVRAM_RECT const &, bool)",
        ),
    ),
    (
        "PrAddSpriteDefinitionSuperSampled__FP11NaGifPacketRC11PrVRAM_RECTT1",
        Ok(
            "PrAddSpriteDefinitionSuperSampled(NaGifPacket *, PrVRAM_RECT const &, PrVRAM_RECT const &)",
        ),
    ),
    (
        "RawRandom__Fv",
        Ok(
            "RawRandom(void)",
        ),
    ),
    (
        "PrRandom__Fv",
        Ok(
            "PrRandom(void)",
        ),
    ),
    (
        "PrInitializeRandomPool__Fv",
        Ok(
            "PrInitializeRandomPool(void)",
        ),
    ),
    (
        "PrFloatRandom__Fv",
        Ok(
            "PrFloatRandom(void)",
        ),
    ),
    (
        "randomSeed",
        Err(
            NotMangled,
        ),
    ),
    (
        "poolIndex.1140",
        Err(
            NotMangled,
        ),
    ),
    (
        "randomPool",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitializeNoodleStripRendering__FUiUiUiUi",
        Ok(
            "InitializeNoodleStripRendering(unsigned int, unsigned int, unsigned int, unsigned int)",
        ),
    ),
    (
        "GetRandom__Fv",
        Ok(
            "GetRandom(void)",
        ),
    ),
    (
        "StageIndexForColor__Fv",
        Ok(
            "StageIndexForColor(void)",
        ),
    ),
    (
        "PushNoodleColor__FPUl",
        Ok(
            "PushNoodleColor(unsigned long *)",
        ),
    ),
    (
        "DrawNoodleStripChunk__FRCt8NaMATRIX3Zfi4i4",
        Ok(
            "DrawNoodleStripChunk(NaMATRIX<float, 4, 4> const &)",
        ),
    ),
    (
        "SetNoodleRotationMatrix__FRt8NaMATRIX3Zfi4i4f",
        Ok(
            "SetNoodleRotationMatrix(NaMATRIX<float, 4, 4> &, float)",
        ),
    ),
    (
        "PreDrawNoodleStrip__Fv",
        Ok(
            "PreDrawNoodleStrip(void)",
        ),
    ),
    (
        "DrawNoodleStrip__Fff",
        Ok(
            "DrawNoodleStrip(float, float)",
        ),
    ),
    (
        "StartNoodleRotation__Fv",
        Ok(
            "StartNoodleRotation(void)",
        ),
    ),
    (
        "UpdateNoodleRotation__Fv",
        Ok(
            "UpdateNoodleRotation(void)",
        ),
    ),
    (
        "PrUpdateMendererSpeed__Fv",
        Ok(
            "PrUpdateMendererSpeed(void)",
        ),
    ),
    (
        "PrDecelerateMenderer",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrRestartMenderer",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawMenderer__Fv",
        Ok(
            "DrawMenderer(void)",
        ),
    ),
    (
        "PrSetMendererRatio",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetMendererRatio",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetMendererDirection",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetMendererDirection",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrSetMendererColorModulation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrIsMendererColorModulation",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeMenderer",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrRenderMenderer",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$prMendererRatio",
        Ok(
            "global constructors keyed to prMendererRatio",
        ),
    ),
    (
        "PrSynchronizeMendererParameter__Ff",
        Ok(
            "PrSynchronizeMendererParameter(float)",
        ),
    ),
    (
        "PrInitializeTextureCreation__FUiUiUiUi",
        Ok(
            "PrInitializeTextureCreation(unsigned int, unsigned int, unsigned int, unsigned int)",
        ),
    ),
    (
        "CreateMendererTexture__Ff",
        Ok(
            "CreateMendererTexture(float)",
        ),
    ),
    (
        "PrCreateMendererTexture",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrWaitMendererTexture__FP13sceGsDrawEnv1RC10sceGsFrameRC13sceGsXyoffset",
        Ok(
            "PrWaitMendererTexture(sceGsDrawEnv1 *, sceGsFrame const &, sceGsXyoffset const &)",
        ),
    ),
    (
        "SetNextSwitchRotationTimer__Fv",
        Ok(
            "SetNextSwitchRotationTimer(void)",
        ),
    ),
    (
        "GetAwfulRotation__Fv",
        Ok(
            "GetAwfulRotation(void)",
        ),
    ),
    (
        "PrStartAwfulRotation__Fv",
        Ok(
            "PrStartAwfulRotation(void)",
        ),
    ),
    (
        "PrFadeFrameImage__Ff",
        Ok(
            "PrFadeFrameImage(float)",
        ),
    ),
    (
        "PrInitializeAwfulBackground__FPv",
        Ok(
            "PrInitializeAwfulBackground(void *)",
        ),
    ),
    (
        "PrDrawAwfulBackground__FG10sceGsFrame",
        Ok(
            "PrDrawAwfulBackground(sceGsFrame)",
        ),
    ),
    (
        "PrUpdateAwfulMenderer__Fv",
        Ok(
            "PrUpdateAwfulMenderer(void)",
        ),
    ),
    (
        "mendererFadeData",
        Err(
            NotMangled,
        ),
    ),
    (
        "mendererAwfulColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "awfulChangeTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrInitializeAlphaModulation__Fv",
        Ok(
            "PrInitializeAlphaModulation(void)",
        ),
    ),
    (
        "PrCreateAlphaModulation__Ff",
        Ok(
            "PrCreateAlphaModulation(float)",
        ),
    ),
    (
        "PrBlendNoodleImage__Fb",
        Ok(
            "PrBlendNoodleImage(bool)",
        ),
    ),
    (
        "SetNextTarget__FP20PrNoodlePositionData",
        Ok(
            "SetNextTarget(PrNoodlePositionData *)",
        ),
    ),
    (
        "InitializeNoodlePositionData__Fv",
        Ok(
            "InitializeNoodlePositionData(void)",
        ),
    ),
    (
        "UpdateNoodlePositionData__FP20PrNoodlePositionData",
        Ok(
            "UpdateNoodlePositionData(PrNoodlePositionData *)",
        ),
    ),
    (
        "GetSynchronizeRatio__FPC20PrNoodlePositionData",
        Ok(
            "GetSynchronizeRatio(PrNoodlePositionData const *)",
        ),
    ),
    (
        "PrInitializeNoodlePolygonPosition__Fv",
        Ok(
            "PrInitializeNoodlePolygonPosition(void)",
        ),
    ),
    (
        "PrGetNoodlePolygonPosition__FPt8NaVECTOR2Zfi4Ui",
        Ok(
            "PrGetNoodlePolygonPosition(NaVECTOR<float, 4> *, unsigned int)",
        ),
    ),
    (
        "CG_WaveInit__FP8WAVE_STR",
        Ok(
            "CG_WaveInit(WAVE_STR *)",
        ),
    ),
    (
        "CG_WaveInitEasy__FP8WAVE_STRssss10WMODE_ENUM",
        Ok(
            "CG_WaveInitEasy(WAVE_STR *, short, short, short, short, WMODE_ENUM)",
        ),
    ),
    (
        "UG_WaveDisp__FP8WAVE_STRP10sceGsFrameP12sceGifPacket",
        Ok(
            "UG_WaveDisp(WAVE_STR *, sceGsFrame *, sceGifPacket *)",
        ),
    ),
    (
        "CG_WaveDisp__FP8WAVE_STRP10sceGsFrame",
        Ok(
            "CG_WaveDisp(WAVE_STR *, sceGsFrame *)",
        ),
    ),
    (
        "WaveCtrlInit__FP8WAVE_STRss10WMODE_ENUM",
        Ok(
            "WaveCtrlInit(WAVE_STR *, short, short, WMODE_ENUM)",
        ),
    ),
    (
        "WaveCtrlDisp__FP8WAVE_STRP10sceGsFrame",
        Ok(
            "WaveCtrlDisp(WAVE_STR *, sceGsFrame *)",
        ),
    ),
    (
        "WaveCtrlUpdate__FP8WAVE_STRf",
        Ok(
            "WaveCtrlUpdate(WAVE_STR *, float)",
        ),
    ),
    (
        "__10PrDmaQueueUi",
        Ok(
            "PrDmaQueue::PrDmaQueue(unsigned int)",
        ),
    ),
    (
        "_$_10PrDmaQueue",
        Ok(
            "PrDmaQueue::~PrDmaQueue(void)",
        ),
    ),
    (
        "Initialize__10PrDmaQueue",
        Ok(
            "PrDmaQueue::Initialize(void)",
        ),
    ),
    (
        "Start__10PrDmaQueue",
        Ok(
            "PrDmaQueue::Start(void)",
        ),
    ),
    (
        "Append__10PrDmaQueuePv",
        Ok(
            "PrDmaQueue::Append(void *)",
        ),
    ),
    (
        "Wait__10PrDmaQueue",
        Ok(
            "PrDmaQueue::Wait(void)",
        ),
    ),
    (
        "warned",
        Err(
            NotMangled,
        ),
    ),
    (
        "PrGetBitSize__FUi",
        Ok(
            "PrGetBitSize(unsigned int)",
        ),
    ),
    (
        "Tim2CheckFileHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetPictureHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetMipMapPictureSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetMipMapHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetClut",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetClutColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2SetClutColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetTexel",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2SetTexel",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2GetTextureColor",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadPicture",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadClut",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tim2LoadTexture__FiUiiiiPUI80",
        Ok(
            "Tim2LoadTexture(int, unsigned int, int, int, int, __uint128_t *)",
        ),
    ),
    (
        "mmsize",
        Err(
            NotMangled,
        ),
    ),
    (
        "Initialize__13SpaFileHeader",
        Ok(
            "SpaFileHeader::Initialize(void)",
        ),
    ),
    (
        "Initialize__13SpcFileHeader",
        Ok(
            "SpcFileHeader::Initialize(void)",
        ),
    ),
    (
        "GetCamera__C13SpcFileHeaderf",
        Ok(
            "SpcFileHeader::GetCamera(float) const",
        ),
    ),
    (
        "SaveContour__13PrModelObject",
        Ok(
            "PrModelObject::SaveContour(void)",
        ),
    ),
    (
        "SaveContour__14SpmComplexNodeP13PrModelObject",
        Ok(
            "SpmComplexNode::SaveContour(PrModelObject *)",
        ),
    ),
    (
        "ResetContour__13PrModelObject",
        Ok(
            "PrModelObject::ResetContour(void)",
        ),
    ),
    (
        "RenderContour__14SpmComplexNodeP13PrModelObject",
        Ok(
            "SpmComplexNode::RenderContour(PrModelObject *)",
        ),
    ),
    (
        "PrWaitDmaFinish__FUi",
        Ok(
            "PrWaitDmaFinish(unsigned int)",
        ),
    ),
    (
        "chcr_table",
        Err(
            NotMangled,
        ),
    ),
    (
        "_t8NaMATRIX3Zfi4i4$IDENT",
        Ok(
            "NaMATRIX<float, 4, 4>::IDENT",
        ),
    ),
    (
        "vump_dmatag",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsResetGraph",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsResetPath",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetDefDrawEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetDefClear",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsPutDrawEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetDefLoadImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSyncV",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSyncPath",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetDefStoreImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsExecLoadImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsExecStoreImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSyncVCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetHalfOffset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetHalfOffset2",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSetDefDBuffDc",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSwapDBuffDc",
        Err(
            NotMangled,
        ),
    ),
    (
        "init_vif_regs.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaGetChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaSendN",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDevVu0Reset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDevVif0Reset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkTerminate",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkCnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkCall",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkRet",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkOpenGifTag",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkCloseGifTag",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGifPkAddGsAD",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadPortOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadPortClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetState",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetReqState",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadInfoAct",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadInfoMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetMainMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetActDirect",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetActAlign",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadInfoPressMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadEnterPressMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "srcfile",
        Err(
            NotMangled,
        ),
    ),
    (
        "eenull",
        Err(
            NotMangled,
        ),
    ),
    (
        "StartThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "SleepThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeleteThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExitDeleteThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "TerminateThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "WakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "RotateThreadReadyQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeleteSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "SignalSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaitSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlushCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePrintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifExitCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifInitRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifBindRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifCallRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceFsReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceLseek",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceWrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifSyncIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifRebootIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifLoadFileReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifLoadModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceVu0SubVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceVu0UnitMatrix",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceVu0ecossin",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ecossin_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ecossin_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceVu0RotMatrixZ",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixZ_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixZ_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "_loopRotMatrixZ",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceVu0RotMatrixX",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixX_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixX_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "_loopRotMatrixX",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceVu0RotMatrixY",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixY_01",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RotMatrixY_02",
        Err(
            NotMangled,
        ),
    ),
    (
        "_loopRotMatrixY",
        Err(
            NotMangled,
        ),
    ),
    (
        "init_vif_regs.126",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdSearchFile",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdMmode",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdSeek",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdGetError",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdReadClock",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcGetInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcGetDir",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcChdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcFormat",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcDelete",
        Err(
            NotMangled,
        ),
    ),
    (
        "sinf",
        Err(
            NotMangled,
        ),
    ),
    (
        "atan2f",
        Err(
            NotMangled,
        ),
    ),
    (
        "fmodf",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "__main",
        Err(
            InvalidSpecialMethod(
                "main",
            ),
        ),
    ),
    (
        "__divdi3",
        Err(
            InvalidSpecialMethod(
                "divdi3",
            ),
        ),
    ),
    (
        "exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "__fixsfdi",
        Err(
            InvalidSpecialMethod(
                "fixsfdi",
            ),
        ),
    ),
    (
        "__floatdisf",
        Err(
            InvalidSpecialMethod(
                "floatdisf",
            ),
        ),
    ),
    (
        "__udivdi3",
        Err(
            InvalidSpecialMethod(
                "udivdi3",
            ),
        ),
    ),
    (
        "__umoddi3",
        Err(
            InvalidSpecialMethod(
                "umoddi3",
            ),
        ),
    ),
    (
        "__DTOR_LIST__",
        Err(
            UnrecognizedSpecialMethod(
                "DTOR_LIST",
            ),
        ),
    ),
    (
        "dpadd",
        Err(
            NotMangled,
        ),
    ),
    (
        "dpsub",
        Err(
            NotMangled,
        ),
    ),
    (
        "dpcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "dptofp",
        Err(
            NotMangled,
        ),
    ),
    (
        "fptoui",
        Err(
            NotMangled,
        ),
    ),
    (
        "fptodp",
        Err(
            NotMangled,
        ),
    ),
    (
        "__builtin_new",
        Err(
            InvalidSpecialMethod(
                "builtin_new",
            ),
        ),
    ),
    (
        "__builtin_delete",
        Err(
            InvalidSpecialMethod(
                "builtin_delete",
            ),
        ),
    ),
    (
        "__builtin_vec_new",
        Err(
            InvalidSpecialMethod(
                "builtin_vec_new",
            ),
        ),
    ),
    (
        "memalign",
        Err(
            NotMangled,
        ),
    ),
    (
        "malloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "free",
        Err(
            NotMangled,
        ),
    ),
    (
        "__malloc_av_",
        Err(
            InvalidSpecialMethod(
                "malloc_av_",
            ),
        ),
    ),
    (
        "memcpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "memset",
        Err(
            NotMangled,
        ),
    ),
    (
        "mallinfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "printf",
        Err(
            NotMangled,
        ),
    ),
    (
        "qsort",
        Err(
            NotMangled,
        ),
    ),
    (
        "rand",
        Err(
            NotMangled,
        ),
    ),
    (
        "sprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "strcat",
        Err(
            NotMangled,
        ),
    ),
    (
        "strcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "strcpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "strlen",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_003938F8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_378",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_6D8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_A58",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_D88",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_11E8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_1388",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_15D8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_1A90",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_FFFF",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_8000",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_C25B8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_C26F8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_FFFFF",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00300000",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00168A48",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_00168BB0",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_001694D8",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_001695F4",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_001696C0",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_1DDE800",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_20000001",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_20000010",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_20000020",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_20000050",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_20000140",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_30000010",
        Err(
            NotMangled,
        ),
    ),
    (
        "D_70000004",
        Err(
            NotMangled,
        ),
    ),
]
