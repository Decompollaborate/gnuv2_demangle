---
source: src/gnuv2_demangle/tests/snapshots.rs
expression: "demangle_lines(contents, &config)"
---
[
    (
        "_root",
        Err(
            NotMangled,
        ),
    ),
    (
        "frame_table",
        Err(
            NotMangled,
        ),
    ),
    (
        "reg_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "dereg_frame",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pLightningModelNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "mediumFSMStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "tyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "bResourcesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "speedLines",
        Err(
            NotMangled,
        ),
    ),
    (
        "flinch.1752",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.1911",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "up",
        Err(
            NotMangled,
        ),
    ),
    (
        "airStuckCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "BSetReachAnim",
        Err(
            NotMangled,
        ),
    ),
    (
        "states",
        Err(
            NotMangled,
        ),
    ),
    (
        "offset.1500",
        Err(
            NotMangled,
        ),
    ),
    (
        "up.1501",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "nextQSHurt",
        Err(
            NotMangled,
        ),
    ),
    (
        "oldAng.1557",
        Err(
            NotMangled,
        ),
    ),
    (
        "wiggleRate.1561",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.1492",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "breakAndTurn",
        Err(
            NotMangled,
        ),
    ),
    (
        "idle",
        Err(
            NotMangled,
        ),
    ),
    (
        "idleTimeOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "pickTable.1496",
        Err(
            NotMangled,
        ),
    ),
    (
        "gFirstPersonTimeOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "up",
        Err(
            NotMangled,
        ),
    ),
    (
        "bLastPressed.1638",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterSprayMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterSpraySystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterSprayEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "slideStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "upVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "diveState",
        Err(
            NotMangled,
        ),
    ),
    (
        "diveYInc",
        Err(
            NotMangled,
        ),
    ),
    (
        "delayCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "speedTurnFactor",
        Err(
            NotMangled,
        ),
    ),
    (
        "curPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "stuckCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "learnToDiveStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "animEnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "modelCount.1836",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "FirstFrame.1887",
        Err(
            NotMangled,
        ),
    ),
    (
        "ln",
        Err(
            NotMangled,
        ),
    ),
    (
        "lnCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "Main_CheckInputs__Fv",
        Ok(
            "Main_CheckInputs(void)",
        ),
    ),
    (
        "Main_CheckJoypadButtons__FP6JoyPad",
        Ok(
            "Main_CheckJoypadButtons(JoyPad *)",
        ),
    ),
    (
        "Main_CheckJoypad__FP6JoyPad",
        Ok(
            "Main_CheckJoypad(JoyPad *)",
        ),
    ),
    (
        "DrawCheatLines__Fv",
        Ok(
            "DrawCheatLines(void)",
        ),
    ),
    (
        "cheats",
        Err(
            NotMangled,
        ),
    ),
    (
        "JumpCheat__Fv",
        Ok(
            "JumpCheat(void)",
        ),
    ),
    (
        "EnableBosses__Fv",
        Ok(
            "EnableBosses(void)",
        ),
    ),
    (
        "ShowWorldPosition__Fv",
        Ok(
            "ShowWorldPosition(void)",
        ),
    ),
    (
        "cheatCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.1958",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameData",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "postDrawModelIndex",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDisablePostDraw",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawEnvCube__Fv",
        Ok(
            "DrawEnvCube(void)",
        ),
    ),
    (
        "DrawGameScreen__Fv",
        Ok(
            "DrawGameScreen(void)",
        ),
    ),
    (
        "PostDrawSortFunc__FPCvT0",
        Ok(
            "PostDrawSortFunc(void const *, void const *)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameSubStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastLogicGameCount.1704",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "j.1599",
        Err(
            NotMangled,
        ),
    ),
    (
        "up.1603",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDropShadowsIsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "padKeyMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "padKeyMapSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bParticleResourcesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "bParticleManagerInited",
        Err(
            NotMangled,
        ),
    ),
    (
        "rrr.1944",
        Err(
            NotMangled,
        ),
    ),
    (
        "pscaler.2029",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "anims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "heroState",
        Err(
            NotMangled,
        ),
    ),
    (
        "maxLODEntries",
        Err(
            NotMangled,
        ),
    ),
    (
        "nextAvailableLODEntryIndex",
        Err(
            NotMangled,
        ),
    ),
    (
        "lodEntryPool",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "emuStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBarbedWireModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticSpikesModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SPIKEYICE_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSpikeyIceModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bBunyipLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticBunyipModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "growRate",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIsLastEventGroundHit",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "wakeMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "envMist",
        Err(
            NotMangled,
        ),
    ),
    (
        "envMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "Crate_FindSafeGemPos__FP6VectorT0",
        Ok(
            "Crate_FindSafeGemPos(Vector *, Vector *)",
        ),
    ),
    (
        "Crate_AddGems__FP9OpalCrate",
        Ok(
            "Crate_AddGems(OpalCrate *)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "boulderStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "rollBoulderStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIsHidden",
        Err(
            NotMangled,
        ),
    ),
    (
        "buttonSubObject",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bCheckpointsLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "flameRefIndex",
        Err(
            NotMangled,
        ),
    ),
    (
        "lightCol",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bLoadedHudResources",
        Err(
            NotMangled,
        ),
    ),
    (
        "clockFontMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "rDIGIT",
        Err(
            NotMangled,
        ),
    ),
    (
        "lDIGIT",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gateDoorStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAnimNameOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAnimNameClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAnimNameWobbleClosedLR",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAnimNameWobbleOpenL",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAnimNameWobbleOpenR",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bPathLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "bPathManagerLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Path_Deinit__Fv",
        Ok(
            "Path_Deinit(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "jeepStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "BOOMERANG_DEFAULT_TRAIL_MAT",
        Err(
            NotMangled,
        ),
    ),
    (
        "rangVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "boomerangInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBoomerangModules",
        Err(
            NotMangled,
        ),
    ),
    (
        "pOtherKaboomerang",
        Err(
            NotMangled,
        ),
    ),
    (
        "kAngle",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHeatFlares",
        Err(
            NotMangled,
        ),
    ),
    (
        "bScreenGrabbed",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticIceShardModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticIceCubeModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticIcebergModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMatIceEffect",
        Err(
            NotMangled,
        ),
    ),
    (
        "platformConfig",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ssLastLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "startFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "midFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "endFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "boomerangHitEventName",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetName",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "cogModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "eggModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticGoldenCogModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHideAll",
        Err(
            NotMangled,
        ),
    ),
    (
        "cogLodDesc",
        Err(
            NotMangled,
        ),
    ),
    (
        "thEggLodDesc",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStopwatchModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHasWon",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHasRaced",
        Err(
            NotMangled,
        ),
    ),
    (
        "onscreenTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "pauseTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "timeTrialState",
        Err(
            NotMangled,
        ),
    ),
    (
        "winState",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "PO_SMOKE_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "sparkEnvelope.1413",
        Err(
            NotMangled,
        ),
    ),
    (
        "dropPoStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bUnderWater",
        Err(
            NotMangled,
        ),
    ),
    (
        "inWaterScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "wobbleCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "quadColorScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bAllWaterfallTypesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterfallSprayOrder",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "upVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "stuckCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalcNewVel__FP6VectorT0fP15CollisionResult13CollisionType",
        Ok(
            "CalcNewVel(Vector *, Vector *, float, CollisionResult *, CollisionType)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bSaveLoadDDA",
        Err(
            NotMangled,
        ),
    ),
    (
        "bStealthMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "bWaitForResult",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmcState",
        Err(
            NotMangled,
        ),
    ),
    (
        "tmcSubState",
        Err(
            NotMangled,
        ),
    ),
    (
        "currentPort",
        Err(
            NotMangled,
        ),
    ),
    (
        "selectedPort",
        Err(
            NotMangled,
        ),
    ),
    (
        "selectedFile",
        Err(
            NotMangled,
        ),
    ),
    (
        "numCardsPresent",
        Err(
            NotMangled,
        ),
    ),
    (
        "formatConfirmed",
        Err(
            NotMangled,
        ),
    ),
    (
        "overwriteConfirmed",
        Err(
            NotMangled,
        ),
    ),
    (
        "createConfirmed",
        Err(
            NotMangled,
        ),
    ),
    (
        "bBootTest",
        Err(
            NotMangled,
        ),
    ),
    (
        "bNewGame",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "LF_TEXTURE_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "LF_SUNTEXTURE_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSunMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "pZRequest",
        Err(
            NotMangled,
        ),
    ),
    (
        "centre",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetBlend",
        Err(
            NotMangled,
        ),
    ),
    (
        "wait",
        Err(
            NotMangled,
        ),
    ),
    (
        "lensFlareImages",
        Err(
            NotMangled,
        ),
    ),
    (
        "sunImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "flares",
        Err(
            NotMangled,
        ),
    ),
    (
        "scales",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterLow",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterHigh",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterOutput",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIsInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "NodeOverride_ClampTargetRay__FP12NodeOverrideP6Vector",
        Ok(
            "NodeOverride_ClampTargetRay(NodeOverride *, Vector *)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "biteStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "upVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "testFrame.1371",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pGlobalEnt",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "lassoStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetRadius",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "smokeEnvelope.1395",
        Err(
            NotMangled,
        ),
    ),
    (
        "bigSmokeEnvelope.1396",
        Err(
            NotMangled,
        ),
    ),
    (
        "portalCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "portalEnvelope.1406",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterMistEnvelope.1416",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireEnvelope.1429",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireGlowEnvelope.1430",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero.1464",
        Err(
            NotMangled,
        ),
    ),
    (
        "iceEnvelope.1474",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDustMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "dustEnvelope.1496",
        Err(
            NotMangled,
        ),
    ),
    (
        "dustVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "pKickUpDustMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "pKickUpSplashMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "kickUpParticleEnvelope.1506",
        Err(
            NotMangled,
        ),
    ),
    (
        "kickUpParticleVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "pGooMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "gooEnvelope.1519",
        Err(
            NotMangled,
        ),
    ),
    (
        "gooVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "specialEnvelope.1529",
        Err(
            NotMangled,
        ),
    ),
    (
        "frostyBreathEnvelope.1539",
        Err(
            NotMangled,
        ),
    ),
    (
        "snowTrailEnvelope.1549",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterTrailEnvelope.1559",
        Err(
            NotMangled,
        ),
    ),
    (
        "bullSplashEnvelope.1569",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSprayMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "canSprayEnvelope.1579",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bv.1383",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCurrentEM.1368",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "positionMixer",
        Err(
            NotMangled,
        ),
    ),
    (
        "velocityMixer",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bBushPigLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "pigStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "sunPos.1722",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterSlideEnvelope.1371",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterSlideEnvelope1.1372",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "explodingMines",
        Err(
            NotMangled,
        ),
    ),
    (
        "seaMineStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHide",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSparkleMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "counter",
        Err(
            NotMangled,
        ),
    ),
    (
        "gemEnvelope.1371",
        Err(
            NotMangled,
        ),
    ),
    (
        "pos.1384",
        Err(
            NotMangled,
        ),
    ),
    (
        "volume.1385",
        Err(
            NotMangled,
        ),
    ),
    (
        "scaleLoadVar",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDDAMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDDADrawEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDDADrawCameraEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDDASaveEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDDAConvertToReadable",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "furnaceAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "furnaceEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "seed.1422",
        Err(
            NotMangled,
        ),
    ),
    (
        "seed.1426",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "deStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusPickupInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "bonusPickupStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bouncerAnimEntr",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "numBurnables",
        Err(
            NotMangled,
        ),
    ),
    (
        "vol.1533",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ringoAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "ringoArmAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "grabPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "ringoArmStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "CABLECAR_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "CRIKEYCHUM_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "CRIKEYCANISTER_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "smokeEnvelope.1377",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "lightCol",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pGlow",
        Err(
            NotMangled,
        ),
    ),
    (
        "bHideAll",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSystem",
        Err(
            NotMangled,
        ),
    ),
    (
        "numDynamicData",
        Err(
            NotMangled,
        ),
    ),
    (
        "gemElement",
        Err(
            NotMangled,
        ),
    ),
    (
        "elementInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "gemPartSysInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "counter.1539",
        Err(
            NotMangled,
        ),
    ),
    (
        "counter",
        Err(
            NotMangled,
        ),
    ),
    (
        "pos.1558",
        Err(
            NotMangled,
        ),
    ),
    (
        "volume.1559",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "GeneratorAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "kidInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "totalKids",
        Err(
            NotMangled,
        ),
    ),
    (
        "koalaKidStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "SendMessage_ToObjective__FP9MKMessage",
        Ok(
            "SendMessage_ToObjective(MKMessage *)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "lavaEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "totalLogs",
        Err(
            NotMangled,
        ),
    ),
    (
        "chuteLogStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "opalCollAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBonusBasket",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "rexStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "sentinelStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "sentinelAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pTyCage",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "spiderTrapdoorAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "spiderTrapdoorEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "PointInBoundingBox__FP5ModelP6Vectorf",
        Ok(
            "PointInBoundingBox(Model *, Vector *, float)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "warpFlStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "animEntries",
        Err(
            NotMangled,
        ),
    ),
    (
        "animEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "activeWeatherProp",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "EL_SMOKE_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "EL_COLLISION_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "telepAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "WHIRLYWIND_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "whirlyWindAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "YABBYSTALAC_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "TreasureChestAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bEventsEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "tempBoxRot",
        Err(
            NotMangled,
        ),
    ),
    (
        "letterBox",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInitialized",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInQuestion",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDialogFinished",
        Err(
            NotMangled,
        ),
    ),
    (
        "bYes",
        Err(
            NotMangled,
        ),
    ),
    (
        "bShowQuestion",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterPipeStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterPipeInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterPipeInfoCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "SendMessage_ToObjective__FP9MKMessage",
        Ok(
            "SendMessage_ToObjective(MKMessage *)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "anims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "geyserSprayEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "burningTreeAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "vol.1434",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "wvLoadInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterBoundingVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SONAR_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "STALACTITE_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "PIPE_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "VALVE_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSteamMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "steamEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "valveAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "talismanData",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "szCounterModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "szCounterName",
        Err(
            NotMangled,
        ),
    ),
    (
        "szThunderEggCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "szGoldenCogCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "szTensMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "szOnesMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "seagullMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "raptorMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bTyFliesInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireflyTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireflyHitCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bFishInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "mothAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "butterflyAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "FR_SUB_OBJECT_NAMES",
        Err(
            NotMangled,
        ),
    ),
    (
        "bFrogIsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "bWallabyIsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "bSubObjectsIsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "normal",
        Err(
            NotMangled,
        ),
    ),
    (
        "wallabyAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerFrogModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerFrogName",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "fishMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "guppyMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "seaHorseMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "seaHorseAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "clownFishMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterSkimmerMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterskimmerAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "smallCrabAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "snakeAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bTurtleInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "turtleSwimInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "turtleSwimFleeInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SP_SUB_OBJECT_NAMES",
        Err(
            NotMangled,
        ),
    ),
    (
        "bSpiderIsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ibisAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "walkMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "runMoveInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "ibisStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.1482",
        Err(
            NotMangled,
        ),
    ),
    (
        "GC_STUCK_ON_WORLD_MAG",
        Err(
            NotMangled,
        ),
    ),
    (
        "GC_FAKE_WALL_ACTIVATE_MAG",
        Err(
            NotMangled,
        ),
    ),
    (
        "GC_FAKE_WALL_DEACTIVATE_MAG",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameCameraModuleName",
        Err(
            NotMangled,
        ),
    ),
    (
        "cameraINIFileName",
        Err(
            NotMangled,
        ),
    ),
    (
        "pGameUpdateCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCurrGameCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "bEnableAutoCenter",
        Err(
            NotMangled,
        ),
    ),
    (
        "grassClipMag",
        Err(
            NotMangled,
        ),
    ),
    (
        "bEnableOverrides",
        Err(
            NotMangled,
        ),
    ),
    (
        "enableJumpAdjust",
        Err(
            NotMangled,
        ),
    ),
    (
        "jumpAdjustSourceRiseTimeInc",
        Err(
            NotMangled,
        ),
    ),
    (
        "jumpAdjustSourceFallTimeInc",
        Err(
            NotMangled,
        ),
    ),
    (
        "jumpAdjustSourceHeightDelta",
        Err(
            NotMangled,
        ),
    ),
    (
        "jumpAdjustSourceHoldSeconds",
        Err(
            NotMangled,
        ),
    ),
    (
        "jumpAdjustSourceAutoEnableHeight",
        Err(
            NotMangled,
        ),
    ),
    (
        "lastFrameTriedToUsePACamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "bEnableFakeWall",
        Err(
            NotMangled,
        ),
    ),
    (
        "bAnimateSingleStep",
        Err(
            NotMangled,
        ),
    ),
    (
        "bSnapOutOfTrouble",
        Err(
            NotMangled,
        ),
    ),
    (
        "bEnableNewSwimCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameCameraStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "fallStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastPitch.2261",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastDelta.2262",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastTargetX.2266",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastTargetZ.2267",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastSourceX.2268",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastSourceZ.2269",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastStart.2678",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastEnd.2679",
        Err(
            NotMangled,
        ),
    ),
    (
        "LastResult.2680",
        Err(
            NotMangled,
        ),
    ),
    (
        "bLastHit.2681",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.1377",
        Err(
            NotMangled,
        ),
    ),
    (
        "INITIAL_SPEED_DEFAULT",
        Err(
            NotMangled,
        ),
    ),
    (
        "cameraOverrideTypes",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.1380",
        Err(
            NotMangled,
        ),
    ),
    (
        "heightTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "up.1558",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bPlayingVideo",
        Err(
            NotMangled,
        ),
    ),
    (
        "bRequestStopVideo",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "bSetup",
        Err(
            NotMangled,
        ),
    ),
    (
        "bGalleryPackageLoading",
        Err(
            NotMangled,
        ),
    ),
    (
        "ReadGalleryINI__Fv",
        Ok(
            "ReadGalleryINI(void)",
        ),
    ),
    (
        "Gallery_CreateButtons__Fv",
        Ok(
            "Gallery_CreateButtons(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_ConfirmPage__Fv",
        Ok(
            "FrontEnd_Gallery_ConfirmPage(void)",
        ),
    ),
    (
        "ShowBio__Fv",
        Ok(
            "ShowBio(void)",
        ),
    ),
    (
        "UpdateBoomerang__Fv",
        Ok(
            "UpdateBoomerang(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_CheckInput__Fv",
        Ok(
            "FrontEnd_Gallery_CheckInput(void)",
        ),
    ),
    (
        "DrawBoomerang__Fv",
        Ok(
            "DrawBoomerang(void)",
        ),
    ),
    (
        "ShowNextItem__Fv",
        Ok(
            "ShowNextItem(void)",
        ),
    ),
    (
        "ShowPrevItem__Fv",
        Ok(
            "ShowPrevItem(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bMainMenuInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "envYaw",
        Err(
            NotMangled,
        ),
    ),
    (
        "pEnviro",
        Err(
            NotMangled,
        ),
    ),
    (
        "MainMenu_CreateButtons__Fv",
        Ok(
            "MainMenu_CreateButtons(void)",
        ),
    ),
    (
        "LoadEnvCube__Fv",
        Ok(
            "LoadEnvCube(void)",
        ),
    ),
    (
        "FrontEnd_MainMenu_ConfirmPage__Fv",
        Ok(
            "FrontEnd_MainMenu_ConfirmPage(void)",
        ),
    ),
    (
        "FrontEnd_MainMenu_CheckInput__Fv",
        Ok(
            "FrontEnd_MainMenu_CheckInput(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "subState",
        Err(
            NotMangled,
        ),
    ),
    (
        "bLoadLevelPackageLoading",
        Err(
            NotMangled,
        ),
    ),
    (
        "bLoadLevelInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBackground",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBackgroundName",
        Err(
            NotMangled,
        ),
    ),
    (
        "delay.1446",
        Err(
            NotMangled,
        ),
    ),
    (
        "updateCount.1447",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bPauseScreenInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInitialisedResources",
        Err(
            NotMangled,
        ),
    ),
    (
        "bStartEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIsHubLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIsInBossBattle",
        Err(
            NotMangled,
        ),
    ),
    (
        "changeLevelInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init_ThunderEggs__Fv",
        Ok(
            "Init_ThunderEggs(void)",
        ),
    ),
    (
        "PauseScreen_Reset__Fv",
        Ok(
            "PauseScreen_Reset(void)",
        ),
    ),
    (
        "PauseScreen_CheckInput__Fv",
        Ok(
            "PauseScreen_CheckInput(void)",
        ),
    ),
    (
        "DrawBackground__Fv",
        Ok(
            "DrawBackground(void)",
        ),
    ),
    (
        "Draw_ThunderEggs__Fv",
        Ok(
            "Draw_ThunderEggs(void)",
        ),
    ),
    (
        "DrawPauseHud__Fv",
        Ok(
            "DrawPauseHud(void)",
        ),
    ),
    (
        "PauseScreen_ConfirmPage__Fv",
        Ok(
            "PauseScreen_ConfirmPage(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCogModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStopWatchModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "bInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "nSelectedEgg",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateBilbies__Fv",
        Ok(
            "UpdateBilbies(void)",
        ),
    ),
    (
        "UpdateCogs__Fv",
        Ok(
            "UpdateCogs(void)",
        ),
    ),
    (
        "UpdateEggs__Fv",
        Ok(
            "UpdateEggs(void)",
        ),
    ),
    (
        "UpdateGem__Fv",
        Ok(
            "UpdateGem(void)",
        ),
    ),
    (
        "UpdateStopWatch__Fv",
        Ok(
            "UpdateStopWatch(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_CheckInput__Fv",
        Ok(
            "PauseScreen_GameInfo_CheckInput(void)",
        ),
    ),
    (
        "DrawBilbies__Fv",
        Ok(
            "DrawBilbies(void)",
        ),
    ),
    (
        "DrawCogs__Fv",
        Ok(
            "DrawCogs(void)",
        ),
    ),
    (
        "DrawCollectable__Fv",
        Ok(
            "DrawCollectable(void)",
        ),
    ),
    (
        "DrawEggs__Fv",
        Ok(
            "DrawEggs(void)",
        ),
    ),
    (
        "DrawGem__Fv",
        Ok(
            "DrawGem(void)",
        ),
    ),
    (
        "DrawStopWatch__Fv",
        Ok(
            "DrawStopWatch(void)",
        ),
    ),
    (
        "ResetBilbies__Fv",
        Ok(
            "ResetBilbies(void)",
        ),
    ),
    (
        "ResetCogs__Fv",
        Ok(
            "ResetCogs(void)",
        ),
    ),
    (
        "ResetCollectable__Fv",
        Ok(
            "ResetCollectable(void)",
        ),
    ),
    (
        "ResetEggs__Fv",
        Ok(
            "ResetEggs(void)",
        ),
    ),
    (
        "ResetGem__Fv",
        Ok(
            "ResetGem(void)",
        ),
    ),
    (
        "ResetStopWatch__Fv",
        Ok(
            "ResetStopWatch(void)",
        ),
    ),
    (
        "UpdateCollectable__Fv",
        Ok(
            "UpdateCollectable(void)",
        ),
    ),
    (
        "yaw.1665",
        Err(
            NotMangled,
        ),
    ),
    (
        "yaw.1672",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "timeBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_GameTotals_CheckInput__Fv",
        Ok(
            "PauseScreen_GameTotals_CheckInput(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SaveControlSettings__Fv",
        Ok(
            "SaveControlSettings(void)",
        ),
    ),
    (
        "CheckInputControllerConfig__Fv",
        Ok(
            "CheckInputControllerConfig(void)",
        ),
    ),
    (
        "PauseScreen_OptionControls_CheckInput__Fv",
        Ok(
            "PauseScreen_OptionControls_CheckInput(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "horizShift",
        Err(
            NotMangled,
        ),
    ),
    (
        "vertShift",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResetScreenSettings__Fv",
        Ok(
            "ResetScreenSettings(void)",
        ),
    ),
    (
        "SaveScreenSettings__Fv",
        Ok(
            "SaveScreenSettings(void)",
        ),
    ),
    (
        "CheckInputMenu__Fv",
        Ok(
            "CheckInputMenu(void)",
        ),
    ),
    (
        "CheckInputChangeScreen__Fv",
        Ok(
            "CheckInputChangeScreen(void)",
        ),
    ),
    (
        "CheckInputSetPosition__Fv",
        Ok(
            "CheckInputSetPosition(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "soundVol",
        Err(
            NotMangled,
        ),
    ),
    (
        "SaveSoundSettings__Fv",
        Ok(
            "SaveSoundSettings(void)",
        ),
    ),
    (
        "PauseScreen_OptionSound_CheckInput__Fv",
        Ok(
            "PauseScreen_OptionSound_CheckInput(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateBoomerang__Fv",
        Ok(
            "UpdateBoomerang(void)",
        ),
    ),
    (
        "PauseScreen_RangInfo_CheckInput__Fv",
        Ok(
            "PauseScreen_RangInfo_CheckInput(void)",
        ),
    ),
    (
        "DrawBoomerang__Fv",
        Ok(
            "DrawBoomerang(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "subState",
        Err(
            NotMangled,
        ),
    ),
    (
        "bCopyrightInitialised.1431",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "buttonStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckInput__Fv",
        Ok(
            "CheckInput(void)",
        ),
    ),
    (
        "OnConfirm__Fv",
        Ok(
            "OnConfirm(void)",
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "state",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "countDownTextBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "contPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "yesPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "noPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "countDownPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "tyPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "pTyModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "screenEffect",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bBoundingRegionsInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.1942",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "BADBOONIE_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "BADBOONIE_DESCR_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "badBoonieStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "BAT_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "BAT_MATERIAL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "batStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "btEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "blueTongueStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ROCK_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "BTROCK_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "btRockStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "btRockEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "snortSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "snortVelScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "breathSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "breathVelScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "levels",
        Err(
            NotMangled,
        ),
    ),
    (
        "bullStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "CAVEBAT_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "caveBatStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "CRIKEY_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "crikeyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "crikeyEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "nodeCrocHead",
        Err(
            NotMangled,
        ),
    ),
    (
        "nodeCrocTail",
        Err(
            NotMangled,
        ),
    ),
    (
        "nodeCrocBody",
        Err(
            NotMangled,
        ),
    ),
    (
        "crocStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "EEL_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "eelStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "frillbikeStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "vGroundCollide",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "frillEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "frillRepairerEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "frillStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "speedboatsLeft",
        Err(
            NotMangled,
        ),
    ),
    (
        "speedboatStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "GROPER_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "groperStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "groperEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "leechStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "LilNeddyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "muddieStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "neddyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ninjaGeckoStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "ninjaGeckoEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pubecrabStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "RHINO_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "rhinoStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "RHINO_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "RhinoGroundStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "ROACH_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "roachStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "rufusEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "rufusStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SHADOWBAT_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "shadowBatStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "shadowBatEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "sharkStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "DENNIS_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "DENNIS_DESCR_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "dennisStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_DESCR_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_CAMEO_1",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_CAMEO_2",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_CAMEO_3",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_KNOCKBACKDIST",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_SNOWBALL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_HEIGHT",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_SHOCKWAVE_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "FLUFFY_ICEBALL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "levels",
        Err(
            NotMangled,
        ),
    ),
    (
        "fluffyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireGlowEnvelope.1617",
        Err(
            NotMangled,
        ),
    ),
    (
        "fireExplodeEnvelope.1618",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SCRUBTURKEY_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "SCRUBTURKEY_DESCR_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "scrubTurkeyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SPEAR_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "SCUBAFRILL_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "scubaFrillStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "scubaFrillEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "skinkEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "states",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_LEFT_RANG_NODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_RIGHT_RANG_NODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_LEFT_RANG_SUBOBJ",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_RIGHT_RANG_SUBOBJ",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_LEFT_ARM_NODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_RIGHT_ARM_NODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "SLY_TORSO_NODE",
        Err(
            NotMangled,
        ),
    ),
    (
        "slyAnimEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "slyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "snowRooStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "SPIDER_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "spiderStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "tickStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "DIRT_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "SPIDER_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "spiderStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "WHITEBAT_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "BAT_MATERIAL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "whiteBatStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "wombatEvents",
        Err(
            NotMangled,
        ),
    ),
    (
        "wombatStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "YABBY_MODEL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "yabbyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "barracudaStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "speedMultiplier.1539",
        Err(
            NotMangled,
        ),
    ),
    (
        "fleeWaypoint.1540",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bossCassModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "bossCassName",
        Err(
            NotMangled,
        ),
    ),
    (
        "bossCassStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerFrillLizardModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerFrillLizardName",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerBlueTongueModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "synkerBlueTongueName",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "miniBoulderInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "miniBoulderColObjDesc",
        Err(
            NotMangled,
        ),
    ),
    (
        "miniBoulderDesc",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pos.1449",
        Err(
            NotMangled,
        ),
    ),
    (
        "volume.1450",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "vCamPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "auroraStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bUsePath",
        Err(
            NotMangled,
        ),
    ),
    (
        "auroraKidStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "c3ActorState",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "kenOathStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "bunyipElderStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "shazzaStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "sheilaStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "elleStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "juliusStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "maurieStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "farlappStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "lennyStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "avalancheEnvelope.1374",
        Err(
            NotMangled,
        ),
    ),
    (
        "cloudEnvelope.1375",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "pExplosionVol.1425",
        Err(
            NotMangled,
        ),
    ),
    (
        "vol.1426",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "envelope.1365",
        Err(
            NotMangled,
        ),
    ),
    (
        "pSmokeVol.1369",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawLightning",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbLightningInOrder",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbFixLightning",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawLightningDebugInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDebugModeNextLightning",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpInitMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "seed.1434",
        Err(
            NotMangled,
        ),
    ),
    (
        "seed.1441",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawRainModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawRainDebugInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpInitMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "envelope.1374",
        Err(
            NotMangled,
        ),
    ),
    (
        "pRainbowVol.1378",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "sawDustEnvelope.1371",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "smokeEnvelope.1365",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "footSnowEnvelope.1365",
        Err(
            NotMangled,
        ),
    ),
    (
        "footIceEnvelope.1366",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterDripEnvelope.1371",
        Err(
            NotMangled,
        ),
    ),
    (
        "colorVec.767",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "gNumTypes",
        Err(
            NotMangled,
        ),
    ),
    (
        "gCurType",
        Err(
            NotMangled,
        ),
    ),
    (
        "gCurTypeMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbEnableWeather",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpWeatherMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbPauseWeather",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbFixRain",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbProfileWeather",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.1435",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "defaultPushAway",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterRenderStub",
        Err(
            NotMangled,
        ),
    ),
    (
        "waterTypeInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "renders",
        Err(
            NotMangled,
        ),
    ),
    (
        "collapseLodWeights.702",
        Err(
            NotMangled,
        ),
    ),
    (
        "collapseIndex.703",
        Err(
            NotMangled,
        ),
    ),
    (
        "collapseLodWeights.710",
        Err(
            NotMangled,
        ),
    ),
    (
        "collapseIndex.711",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbWaterTypesLoadedInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDrawTypes",
        Err(
            NotMangled,
        ),
    ),
    (
        "pBoundingBoxDraws",
        Err(
            NotMangled,
        ),
    ),
    (
        "overideMatDrawn",
        Err(
            NotMangled,
        ),
    ),
    (
        "stripsPerSubDivLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "constants.678",
        Err(
            NotMangled,
        ),
    ),
    (
        "AnimDefCompareFunc__FP7AnimDefT0",
        Ok(
            "AnimDefCompareFunc(AnimDef *, AnimDef *)",
        ),
    ),
    (
        "modeNames.585",
        Err(
            NotMangled,
        ),
    ),
    (
        "bCollisionInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "bFound",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCollisionHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "collisionPolysAdded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Collision_Grid",
        Err(
            NotMangled,
        ),
    ),
    (
        "NearestPointOnTriEdge__FP6VectorT0T0T0",
        Ok(
            "NearestPointOnTriEdge(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "NearestPointOnQuadEdge__FP6VectorT0T0T0T0",
        Ok(
            "NearestPointOnQuadEdge(Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "NearestPointOnPolyEdge__FP6VectorT0Pii",
        Ok(
            "NearestPointOnPolyEdge(Vector *, Vector *, int *, int)",
        ),
    ),
    (
        "PointInPoly__FP6VectorT0T0Pii",
        Ok(
            "PointInPoly(Vector *, Vector *, Vector *, int *, int)",
        ),
    ),
    (
        "SweepSphereToPoly__FP9SphereRayP6VectorPiiT1T1P15CollisionResult",
        Ok(
            "SweepSphereToPoly(SphereRay *, Vector *, int *, int, Vector *, Vector *, CollisionResult *)",
        ),
    ),
    (
        "SweepSphereToTri__FP9SphereRayP6VectorT1T1T1T1P15CollisionResult",
        Ok(
            "SweepSphereToTri(SphereRay *, Vector *, Vector *, Vector *, Vector *, Vector *, CollisionResult *)",
        ),
    ),
    (
        "Collision_AddItem__FP4Item",
        Ok(
            "Collision_AddItem(Item *)",
        ),
    ),
    (
        "StoreSphereResult__FP4ItemP6VectorP15CollisionResultf",
        Ok(
            "StoreSphereResult(Item *, Vector *, CollisionResult *, float)",
        ),
    ),
    (
        "Collision_PolyCollide__FP6VectorT0T0P15CollisionResulti",
        Ok(
            "Collision_PolyCollide(Vector *, Vector *, Vector *, CollisionResult *, int)",
        ),
    ),
    (
        "Collision_PolySweepSphereCollide__FP9SphereRayP15CollisionResulti",
        Ok(
            "Collision_PolySweepSphereCollide(SphereRay *, CollisionResult *, int)",
        ),
    ),
    (
        "currentSubObject",
        Err(
            NotMangled,
        ),
    ),
    (
        "defaultLightSetup",
        Err(
            NotMangled,
        ),
    ),
    (
        "pLoadInterceptHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "pExistInterceptHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "EntryCompare__FPvT0",
        Ok(
            "EntryCompare(void *, void *)",
        ),
    ),
    (
        "pDebugShowFontWrapArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDebugCrossHair",
        Err(
            NotMangled,
        ),
    ),
    (
        "showFontWrapArea",
        Err(
            NotMangled,
        ),
    ),
    (
        "mungwallData",
        Err(
            NotMangled,
        ),
    ),
    (
        "disableTracking",
        Err(
            NotMangled,
        ),
    ),
    (
        "heapInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "pHeapMem",
        Err(
            NotMangled,
        ),
    ),
    (
        "pLockedTexture",
        Err(
            NotMangled,
        ),
    ),
    (
        "gMipBias",
        Err(
            NotMangled,
        ),
    ),
    (
        "ParseBadFile__FPcP20MKAnimScriptTemplate",
        Ok(
            "ParseBadFile(char *, MKAnimScriptTemplate *)",
        ),
    ),
    (
        "zero.453",
        Err(
            NotMangled,
        ),
    ),
    (
        "packageLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "pPackageExclusionPatterns",
        Err(
            NotMangled,
        ),
    ),
    (
        "afd",
        Err(
            NotMangled,
        ),
    ),
    (
        "asyncState",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAutoEntries",
        Err(
            NotMangled,
        ),
    ),
    (
        "pPreviousHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDebugDisableAsync",
        Err(
            NotMangled,
        ),
    ),
    (
        "disableAsyncPackages",
        Err(
            NotMangled,
        ),
    ),
    (
        "PackageIntercept__FPcPiPvT1",
        Ok(
            "PackageIntercept(char *, int *, void *, int *)",
        ),
    ),
    (
        "AddToPackage__FPc",
        Ok(
            "AddToPackage(char *)",
        ),
    ),
    (
        "ProcessPackageFilenames__Fv",
        Ok(
            "ProcessPackageFilenames(void)",
        ),
    ),
    (
        "MKPackage_LoadInternal__Fb",
        Ok(
            "MKPackage_LoadInternal(bool)",
        ),
    ),
    (
        "PackageSort__FPCvT0",
        Ok(
            "PackageSort(void const *, void const *)",
        ),
    ),
    (
        "gbDrawParticles",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawParticlesDebugInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbDrawParticlesBox",
        Err(
            NotMangled,
        ),
    ),
    (
        "gbMakeParticlesStandOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpInitMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "ves",
        Err(
            NotMangled,
        ),
    ),
    (
        "effectsPlaying",
        Err(
            NotMangled,
        ),
    ),
    (
        "vibrationPaused",
        Err(
            NotMangled,
        ),
    ),
    (
        "occlusionObjects",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalcBoundingBox__FP6MKPropP14BoundingVolume",
        Ok(
            "CalcBoundingBox(MKProp *, BoundingVolume *)",
        ),
    ),
    (
        "SMDrawProp__FPvif",
        Ok(
            "SMDrawProp(void *, int, float)",
        ),
    ),
    (
        "sd",
        Err(
            NotMangled,
        ),
    ),
    (
        "shadowDetail",
        Err(
            NotMangled,
        ),
    ),
    (
        "pPreviousView",
        Err(
            NotMangled,
        ),
    ),
    (
        "metreScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "last.684",
        Err(
            NotMangled,
        ),
    ),
    (
        "drawBoundingBoxesStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "pShowOnlyStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "stub",
        Err(
            NotMangled,
        ),
    ),
    (
        "nmbrModelRenderRegistryEntries",
        Err(
            NotMangled,
        ),
    ),
    (
        "modelRenderRegistry",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMatStrings.684",
        Err(
            NotMangled,
        ),
    ),
    (
        "dd",
        Err(
            NotMangled,
        ),
    ),
    (
        "key.804",
        Err(
            NotMangled,
        ),
    ),
    (
        "vu.805",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$tmp_0.887",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "",
            ),
        ),
    ),
    (
        "whack.888",
        Err(
            NotMangled,
        ),
    ),
    (
        "key.930",
        Err(
            NotMangled,
        ),
    ),
    (
        "vu.931",
        Err(
            NotMangled,
        ),
    ),
    (
        "defaultEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "numDefaultEnvelopeNodes",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDefaultInit.780",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sinTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "bufferIndex",
        Err(
            NotMangled,
        ),
    ),
    (
        "ascii_table",
        Err(
            NotMangled,
        ),
    ),
    (
        "putsInited",
        Err(
            NotMangled,
        ),
    ),
    (
        "first.334",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpTranslationBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "gLanguageDebugOption",
        Err(
            NotMangled,
        ),
    ),
    (
        "gLanguageInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "DebugOptionChanged__FPv",
        Ok(
            "DebugOptionChanged(void *)",
        ),
    ),
    (
        "pi.450",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdReadMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCdFileInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "directCD",
        Err(
            NotMangled,
        ),
    ),
    (
        "sectorSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "sectorShift",
        Err(
            NotMangled,
        ),
    ),
    (
        "readPendingFd",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdMediaType",
        Err(
            NotMangled,
        ),
    ),
    (
        "fileServerSource",
        Err(
            NotMangled,
        ),
    ),
    (
        "pFileServerPrefix",
        Err(
            NotMangled,
        ),
    ),
    (
        "prefixLength",
        Err(
            NotMangled,
        ),
    ),
    (
        "pATMonHomeDir",
        Err(
            NotMangled,
        ),
    ),
    (
        "ATMonPrefixLength",
        Err(
            NotMangled,
        ),
    ),
    (
        "lastCdFilename.343",
        Err(
            NotMangled,
        ),
    ),
    (
        "pButtonNameStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Input_UpdatePort__Fiii",
        Ok(
            "Input_UpdatePort(int, int, int)",
        ),
    ),
    (
        "soundEffectMasterVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicMasterVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "uniqueId",
        Err(
            NotMangled,
        ),
    ),
    (
        "maximumSoundId",
        Err(
            NotMangled,
        ),
    ),
    (
        "duckHandle",
        Err(
            NotMangled,
        ),
    ),
    (
        "leftRightEffect",
        Err(
            NotMangled,
        ),
    ),
    (
        "frontBackEffect",
        Err(
            NotMangled,
        ),
    ),
    (
        "count.334",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicFd",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMusicStreamMem",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicState",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "musicStereoIfPossible",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalculateDolbySurroundVolumes__FUci",
        Ok(
            "CalculateDolbySurroundVolumes(unsigned char, int)",
        ),
    ),
    (
        "pf_time",
        Err(
            NotMangled,
        ),
    ),
    (
        "pf_avgTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "pf_enabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "gFillModeOptStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "gTextureDispModeOptStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "gTextureDispLayoutOptStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "bExit",
        Err(
            NotMangled,
        ),
    ),
    (
        "displayFrequency",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDebugEnabled",
        Err(
            NotMangled,
        ),
    ),
    (
        "bShowDebugInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "bDebugModeActive",
        Err(
            NotMangled,
        ),
    ),
    (
        "bGamePausedInDebugMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "numFramesToSingleStep",
        Err(
            NotMangled,
        ),
    ),
    (
        "stopFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "pGameView",
        Err(
            NotMangled,
        ),
    ),
    (
        "bTargetLock",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmdLineArgCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "gVBInterruptHandlerID",
        Err(
            NotMangled,
        ),
    ),
    (
        "lastVBlankCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "disable_path3.813",
        Err(
            NotMangled,
        ),
    ),
    (
        "targetIterations.820",
        Err(
            NotMangled,
        ),
    ),
    (
        "iterationsAtThisRate.821",
        Err(
            NotMangled,
        ),
    ),
    (
        "slowmo.822",
        Err(
            NotMangled,
        ),
    ),
    (
        "syncData",
        Err(
            NotMangled,
        ),
    ),
    (
        "pVifNops",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalculateVRamSize__Fiiii",
        Ok(
            "CalculateVRamSize(int, int, int, int)",
        ),
    ),
    (
        "videoAllocated",
        Err(
            NotMangled,
        ),
    ),
    (
        "pVideoToDestroy",
        Err(
            NotMangled,
        ),
    ),
    (
        "unique.480",
        Err(
            NotMangled,
        ),
    ),
    (
        "getPicture.481",
        Err(
            NotMangled,
        ),
    ),
    (
        "flipFlop.501",
        Err(
            NotMangled,
        ),
    ),
    (
        "pUploadCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "crcTableComputed",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "atanhi",
        Err(
            NotMangled,
        ),
    ),
    (
        "atanlo",
        Err(
            NotMangled,
        ),
    ),
    (
        "aT",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_o_4",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_o_2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "ln2_hi",
        Err(
            NotMangled,
        ),
    ),
    (
        "ln2_lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "two54",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg1",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg2",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg3",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg4",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg5",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg6",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lg7",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "bp",
        Err(
            NotMangled,
        ),
    ),
    (
        "dp_h",
        Err(
            NotMangled,
        ),
    ),
    (
        "dp_l",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "two",
        Err(
            NotMangled,
        ),
    ),
    (
        "two53",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "L1",
        Err(
            NotMangled,
        ),
    ),
    (
        "L2",
        Err(
            NotMangled,
        ),
    ),
    (
        "L3",
        Err(
            NotMangled,
        ),
    ),
    (
        "L4",
        Err(
            NotMangled,
        ),
    ),
    (
        "L5",
        Err(
            NotMangled,
        ),
    ),
    (
        "L6",
        Err(
            NotMangled,
        ),
    ),
    (
        "P1",
        Err(
            NotMangled,
        ),
    ),
    (
        "P2",
        Err(
            NotMangled,
        ),
    ),
    (
        "P3",
        Err(
            NotMangled,
        ),
    ),
    (
        "P4",
        Err(
            NotMangled,
        ),
    ),
    (
        "P5",
        Err(
            NotMangled,
        ),
    ),
    (
        "lg2",
        Err(
            NotMangled,
        ),
    ),
    (
        "lg2_h",
        Err(
            NotMangled,
        ),
    ),
    (
        "lg2_l",
        Err(
            NotMangled,
        ),
    ),
    (
        "ovt",
        Err(
            NotMangled,
        ),
    ),
    (
        "cp",
        Err(
            NotMangled,
        ),
    ),
    (
        "cp_h",
        Err(
            NotMangled,
        ),
    ),
    (
        "cp_l",
        Err(
            NotMangled,
        ),
    ),
    (
        "ivln2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ivln2_h",
        Err(
            NotMangled,
        ),
    ),
    (
        "ivln2_l",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_hi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS0",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS1",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS3",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS4",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS5",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS1",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS3",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS4",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_hi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio4_hi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS0",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS1",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS3",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS4",
        Err(
            NotMangled,
        ),
    ),
    (
        "pS5",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS1",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS3",
        Err(
            NotMangled,
        ),
    ),
    (
        "qS4",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_o_4",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_o_2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi",
        Err(
            NotMangled,
        ),
    ),
    (
        "pi_lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "Zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "two_over_pi",
        Err(
            NotMangled,
        ),
    ),
    (
        "npio2_hw",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "half",
        Err(
            NotMangled,
        ),
    ),
    (
        "two8",
        Err(
            NotMangled,
        ),
    ),
    (
        "invpio2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_1",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_1t",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_2",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_2t",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_3",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio2_3t",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "init_jk",
        Err(
            NotMangled,
        ),
    ),
    (
        "PIo2",
        Err(
            NotMangled,
        ),
    ),
    (
        "zero",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "two8",
        Err(
            NotMangled,
        ),
    ),
    (
        "twon8",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio4",
        Err(
            NotMangled,
        ),
    ),
    (
        "pio4lo",
        Err(
            NotMangled,
        ),
    ),
    (
        "T",
        Err(
            NotMangled,
        ),
    ),
    (
        "atanhi",
        Err(
            NotMangled,
        ),
    ),
    (
        "atanlo",
        Err(
            NotMangled,
        ),
    ),
    (
        "aT",
        Err(
            NotMangled,
        ),
    ),
    (
        "one",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "TWO52",
        Err(
            NotMangled,
        ),
    ),
    (
        "two54",
        Err(
            NotMangled,
        ),
    ),
    (
        "twom54",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "two25",
        Err(
            NotMangled,
        ),
    ),
    (
        "twom25",
        Err(
            NotMangled,
        ),
    ),
    (
        "huge",
        Err(
            NotMangled,
        ),
    ),
    (
        "tiny",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "cb_thid",
        Err(
            NotMangled,
        ),
    ),
    (
        "scmd_sema_keep_cmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ncmd_sema_keep_cmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "cb_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init_seq",
        Err(
            NotMangled,
        ),
    ),
    (
        "CB_DelayTh",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ncmd_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "cmd_sem_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "cdvd_exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "_icmd_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "PowerOffCB",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCd_Poff_Intr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sf_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_scmd_dr_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_scmd_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_it_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "c_cnt.57",
        Err(
            NotMangled,
        ),
    ),
    (
        "q1.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "q2.4",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "gp.6",
        Err(
            NotMangled,
        ),
    ),
    (
        "init_mp3.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "memclr",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "isclr",
        Err(
            NotMangled,
        ),
    ),
    (
        "ststbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "stdtbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "mfdtbl",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "isInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "isWarning",
        Err(
            NotMangled,
        ),
    ),
    (
        "_send_to_iop",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetModVersion",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadInit2",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetDmaStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "PadStateStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetReqState",
        Err(
            NotMangled,
        ),
    ),
    (
        "ReqStateStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetButtonMask",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetButtonInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetVrefParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetPortMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "DPRINT",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "_getpic",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decodeOrSkip",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decodeOrSkipFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decodeOrSkipField",
        Err(
            NotMangled,
        ),
    ),
    (
        "_RefImageInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "_setDefaultQM",
        Err(
            NotMangled,
        ),
    ),
    (
        "_initRefImages",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sprtagdata.24",
        Err(
            NotMangled,
        ),
    ),
    (
        "_motionComp0",
        Err(
            NotMangled,
        ),
    ),
    (
        "dmaRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "_rix",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ri0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_doMC",
        Err(
            NotMangled,
        ),
    ),
    (
        "_slice0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sliceA0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decMB0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_skipMB0",
        Err(
            NotMangled,
        ),
    ),
    (
        "receiveDataFromIPU",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decode_motion_vector",
        Err(
            NotMangled,
        ),
    ),
    (
        "_updateTempTackData",
        Err(
            NotMangled,
        ),
    ),
    (
        "_isOutSizeOK",
        Err(
            NotMangled,
        ),
    ),
    (
        "_markOutput",
        Err(
            NotMangled,
        ),
    ),
    (
        "_getPtsDtsFlags",
        Err(
            NotMangled,
        ),
    ),
    (
        "_doCSC",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ch3dmaCSC",
        Err(
            NotMangled,
        ),
    ),
    (
        "_doCSC2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ch4dma",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sysbitFlush",
        Err(
            NotMangled,
        ),
    ),
    (
        "setD3_CHCR",
        Err(
            NotMangled,
        ),
    ),
    (
        "setD4_CHCR",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "iqval",
        Err(
            NotMangled,
        ),
    ),
    (
        "vqval",
        Err(
            NotMangled,
        ),
    ),
    (
        "setD4_CHCR",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "mcRunCmdNo",
        Err(
            NotMangled,
        ),
    ),
    (
        "semaidRegFunc",
        Err(
            NotMangled,
        ),
    ),
    (
        "mceIntrReadFixAlign",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcHearAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "mcDelayThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "mceGetInfoApdx",
        Err(
            NotMangled,
        ),
    ),
    (
        "mceStorePwd",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "gConfig",
        Err(
            NotMangled,
        ),
    ),
    (
        "gRomName",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetRomName",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsT10K",
        Err(
            NotMangled,
        ),
    ),
    (
        "tobcd",
        Err(
            NotMangled,
        ),
    ),
    (
        "frombcd",
        Err(
            NotMangled,
        ),
    ),
    (
        "convertfrombcd",
        Err(
            NotMangled,
        ),
    ),
    (
        "converttobcd",
        Err(
            NotMangled,
        ),
    ),
    (
        "adddate",
        Err(
            NotMangled,
        ),
    ),
    (
        "subdate",
        Err(
            NotMangled,
        ),
    ),
    (
        "addhour",
        Err(
            NotMangled,
        ),
    ),
    (
        "subhour",
        Err(
            NotMangled,
        ),
    ),
    (
        "AdjustTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "p.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "new_eh_context",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_eh_context",
        Err(
            NotMangled,
        ),
    ),
    (
        "eh_context_initialize",
        Err(
            NotMangled,
        ),
    ),
    (
        "eh_context_static",
        Err(
            NotMangled,
        ),
    ),
    (
        "old_find_exception_handler",
        Err(
            NotMangled,
        ),
    ),
    (
        "find_exception_handler",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_reg_addr",
        Err(
            NotMangled,
        ),
    ),
    (
        "copy_reg",
        Err(
            NotMangled,
        ),
    ),
    (
        "next_stack_level",
        Err(
            NotMangled,
        ),
    ),
    (
        "throw_helper",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fpadd_parts",
        Err(
            NotMangled,
        ),
    ),
    (
        "__unexpected_func",
        Err(
            InvalidSpecialMethod(
                "unexpected_func",
            ),
        ),
    ),
    (
        "_fpadd_parts",
        Err(
            NotMangled,
        ),
    ),
    (
        "object_mutex",
        Err(
            NotMangled,
        ),
    ),
    (
        "decode_uleb128",
        Err(
            NotMangled,
        ),
    ),
    (
        "decode_sleb128",
        Err(
            NotMangled,
        ),
    ),
    (
        "fde_merge",
        Err(
            NotMangled,
        ),
    ),
    (
        "end_fde_sort",
        Err(
            NotMangled,
        ),
    ),
    (
        "fde_split",
        Err(
            NotMangled,
        ),
    ),
    (
        "count_fdes",
        Err(
            NotMangled,
        ),
    ),
    (
        "add_fdes",
        Err(
            NotMangled,
        ),
    ),
    (
        "frame_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "find_fde",
        Err(
            NotMangled,
        ),
    ),
    (
        "extract_cie_info",
        Err(
            NotMangled,
        ),
    ),
    (
        "execute_cfa_insn",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ps2_libinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_libinfo",
            ),
        ),
    ),
    (
        "_sceSifMInitCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "_request_end",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcGetPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcFreePacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "load_inet_cnf",
        Err(
            NotMangled,
        ),
    ),
    (
        "set_config",
        Err(
            NotMangled,
        ),
    ),
    (
        "set_config_only",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_if_id",
        Err(
            NotMangled,
        ),
    ),
    (
        "wait_if_attached",
        Err(
            NotMangled,
        ),
    ),
    (
        "wait_if_started",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_myaddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "std",
        Err(
            NotMangled,
        ),
    ),
    (
        "impure_data",
        Err(
            NotMangled,
        ),
    ),
    (
        "malloc_extend_top",
        Err(
            NotMangled,
        ),
    ),
    (
        "lflush",
        Err(
            NotMangled,
        ),
    ),
    (
        "eofread",
        Err(
            NotMangled,
        ),
    ),
    (
        "__sprint",
        Err(
            InvalidSpecialMethod(
                "sprint",
            ),
        ),
    ),
    (
        "__sbprintf",
        Err(
            InvalidSpecialMethod(
                "sbprintf",
            ),
        ),
    ),
    (
        "blanks.12",
        Err(
            NotMangled,
        ),
    ),
    (
        "zeroes.13",
        Err(
            NotMangled,
        ),
    ),
    (
        "cvt",
        Err(
            NotMangled,
        ),
    ),
    (
        "exponent",
        Err(
            NotMangled,
        ),
    ),
    (
        "basefix.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "quorem",
        Err(
            NotMangled,
        ),
    ),
    (
        "lconv",
        Err(
            NotMangled,
        ),
    ),
    (
        "lc_ctype.3",
        Err(
            NotMangled,
        ),
    ),
    (
        "last_lc_ctype.4",
        Err(
            NotMangled,
        ),
    ),
    (
        "p05.27",
        Err(
            NotMangled,
        ),
    ),
    (
        "__sprint",
        Err(
            InvalidSpecialMethod(
                "sprint",
            ),
        ),
    ),
    (
        "__sbprintf",
        Err(
            InvalidSpecialMethod(
                "sbprintf",
            ),
        ),
    ),
    (
        "blanks.12",
        Err(
            NotMangled,
        ),
    ),
    (
        "zeroes.13",
        Err(
            NotMangled,
        ),
    ),
    (
        "ttyinit",
        Err(
            NotMangled,
        ),
    ),
    (
        "heap_ptr.30",
        Err(
            NotMangled,
        ),
    ),
    (
        "srcfile",
        Err(
            NotMangled,
        ),
    ),
    (
        "eenull",
        Err(
            NotMangled,
        ),
    ),
    (
        "setup",
        Err(
            NotMangled,
        ),
    ),
    (
        "Copy",
        Err(
            NotMangled,
        ),
    ),
    (
        "kCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "SysEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetEntryAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "topId",
        Err(
            NotMangled,
        ),
    ),
    (
        "topThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "QueueInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "QueuePeekWriteDone",
        Err(
            NotMangled,
        ),
    ),
    (
        "QueuePeekReadDone",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceTtyHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "count",
        Err(
            NotMangled,
        ),
    ),
    (
        "kputchar",
        Err(
            NotMangled,
        ),
    ),
    (
        "deci2Putchar",
        Err(
            NotMangled,
        ),
    ),
    (
        "serialPutchar",
        Err(
            NotMangled,
        ),
    ),
    (
        "_putchar",
        Err(
            NotMangled,
        ),
    ),
    (
        "ftoi",
        Err(
            NotMangled,
        ),
    ),
    (
        "printfloat",
        Err(
            NotMangled,
        ),
    ),
    (
        "_cmd_init_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "_set_sreg",
        Err(
            NotMangled,
        ),
    ),
    (
        "_change_addr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifCmdIntrHdlr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifSendCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifInitCheck",
        Err(
            NotMangled,
        ),
    ),
    (
        "_request_end",
        Err(
            NotMangled,
        ),
    ),
    (
        "_request_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_request_call",
        Err(
            NotMangled,
        ),
    ),
    (
        "_request_rdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcGetPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcFreePacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcGetFPacket",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceRpcGetFPacket2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_search_svdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fs_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fs_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fs_iob_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fs_fsq_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFsIobSemaMK",
        Err(
            NotMangled,
        ),
    ),
    (
        "new_iob",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_iob",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFs_Rcv_Intr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFsSemInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFsWaitS",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFsSigSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceFs_Poff_Intr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fswildcard",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fs_version",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCallCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_bind_check",
        Err(
            NotMangled,
        ),
    ),
    (
        "_lf_bind",
        Err(
            NotMangled,
        ),
    ),
    (
        "_lfwildcard",
        Err(
            NotMangled,
        ),
    ),
    (
        "_lf_version",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifLoadModuleBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifLoadModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceSifLoadElfPart",
        Err(
            NotMangled,
        ),
    ),
    (
        "supplement_crt0",
        Err(
            NotMangled,
        ),
    ),
    (
        "kFindAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "SysEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "FindAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSystemCallTableEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "setup",
        Err(
            NotMangled,
        ),
    ),
    (
        "osdsrc",
        Err(
            NotMangled,
        ),
    ),
    (
        "setup",
        Err(
            NotMangled,
        ),
    ),
    (
        "Copy",
        Err(
            NotMangled,
        ),
    ),
    (
        "kCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetEntryAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "PatchIsNeeded",
        Err(
            NotMangled,
        ),
    ),
    (
        "TerminateLibrary",
        Err(
            NotMangled,
        ),
    ),
    (
        "tlbsrc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Copy",
        Err(
            NotMangled,
        ),
    ),
    (
        "kCopy",
        Err(
            NotMangled,
        ),
    ),
    (
        "SysEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetEntryAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "setup",
        Err(
            NotMangled,
        ),
    ),
    (
        "_SetTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "kernelTLB",
        Err(
            NotMangled,
        ),
    ),
    (
        "defaultTLB",
        Err(
            NotMangled,
        ),
    ),
    (
        "extendTLB",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitTLB32MB",
        Err(
            NotMangled,
        ),
    ),
    (
        "__clz_tab",
        Err(
            InvalidSpecialMethod(
                "clz_tab",
            ),
        ),
    ),
    (
        "__clz_tab",
        Err(
            InvalidSpecialMethod(
                "clz_tab",
            ),
        ),
    ),
    (
        "__clz_tab",
        Err(
            InvalidSpecialMethod(
                "clz_tab",
            ),
        ),
    ),
    (
        "__clz_tab",
        Err(
            InvalidSpecialMethod(
                "clz_tab",
            ),
        ),
    ),
    (
        "CalcNextMixValues__11MKWaterPropP6VectorT1",
        Ok(
            "MKWaterProp::CalcNextMixValues(Vector *, Vector *)",
        ),
    ),
    (
        "FrontEnd_Init__Fv",
        Ok(
            "FrontEnd_Init(void)",
        ),
    ),
    (
        "CuttleFish_LoadResources__Fv",
        Ok(
            "CuttleFish_LoadResources(void)",
        ),
    ),
    (
        "ToLocalDir__13PlatformRiderP6Vector",
        Ok(
            "PlatformRider::ToLocalDir(Vector *)",
        ),
    ),
    (
        "__ps2_klibinfo__",
        Err(
            UnrecognizedSpecialMethod(
                "ps2_klibinfo",
            ),
        ),
    ),
    (
        "_vt$16CaveBatObjective",
        Ok(
            "CaveBatObjective virtual table",
        ),
    ),
    (
        "Reset__3Bat",
        Ok(
            "Bat::Reset(void)",
        ),
    ),
    (
        "Init__16A1FrillObjectiveP11GameObjDesc",
        Ok(
            "A1FrillObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "ChaseInit__11FrillLizard",
        Ok(
            "FrillLizard::ChaseInit(void)",
        ),
    ),
    (
        "LoadDone__21CritterField2LoadInfoP6Matrix",
        Ok(
            "CritterField2LoadInfo::LoadDone(Matrix *)",
        ),
    ),
    (
        "Init__17TyParticleManager",
        Ok(
            "TyParticleManager::Init(void)",
        ),
    ),
    (
        "InitModule__11BoulderTrap",
        Ok(
            "BoulderTrap::InitModule(void)",
        ),
    ),
    (
        "DrawDebugInfo__9LightningP4View",
        Ok(
            "Lightning::DrawDebugInfo(View *)",
        ),
    ),
    (
        "UpdateMovement__5Shark",
        Ok(
            "Shark::UpdateMovement(void)",
        ),
    ),
    (
        "CreateNewSplash__21WaterfallStreamStructfi",
        Ok(
            "WaterfallStreamStruct::CreateNewSplash(float, int)",
        ),
    ),
    (
        "UWWobbleView__Fv",
        Ok(
            "UWWobbleView(void)",
        ),
    ),
    (
        "GameCamera_View__Fv",
        Ok(
            "GameCamera_View(void)",
        ),
    ),
    (
        "Deinit__17BoomerangAnimInfo",
        Ok(
            "BoomerangAnimInfo::Deinit(void)",
        ),
    ),
    (
        "Idle__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Idle(void)",
        ),
    ),
    (
        "_10DDASession$bSessionStarted",
        Ok(
            "DDASession::bSessionStarted",
        ),
    ),
    (
        "ModelRender_ACExyT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__9Barracuda",
        Ok(
            "Barracuda::Reset(void)",
        ),
    ),
    (
        "Attack__5Leech",
        Ok(
            "Leech::Attack(void)",
        ),
    ),
    (
        "AttackDeinit__5Yabby",
        Ok(
            "Yabby::AttackDeinit(void)",
        ),
    ),
    (
        "Init__15BurnerObjectiveP11GameObjDesc",
        Ok(
            "BurnerObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "SaveStates_SetSecondRang__Fb",
        Ok(
            "SaveStates_SetSecondRang(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$TreasureChest_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to TreasureChest_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_CFO1T_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__4Rock",
        Ok(
            "Rock::Update(void)",
        ),
    ),
    (
        "ParticleSystemManager_Update__Fv",
        Ok(
            "ParticleSystemManager_Update(void)",
        ),
    ),
    (
        "Deinit__10StaticProp",
        Ok(
            "StaticProp::Deinit(void)",
        ),
    ),
    (
        "Deinit__11FrillLizard",
        Ok(
            "FrillLizard::Deinit(void)",
        ),
    ),
    (
        "DeathInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::DeathInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11WeatherProp",
        Ok(
            "ModuleInfo<WeatherProp>::Init(void)",
        ),
    ),
    (
        "pShine",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tfUi",
        Ok(
            "unsigned int type_info function",
        ),
    ),
    (
        "Jump__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Jump(void)",
        ),
    ),
    (
        "_vt$10TimeAttack",
        Ok(
            "TimeAttack virtual table",
        ),
    ),
    (
        "_waitBdecOut",
        Err(
            NotMangled,
        ),
    ),
    (
        "Path_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::Path_Create(void *)",
        ),
    ),
    (
        "Update__11ProgressBar",
        Ok(
            "ProgressBar::Update(void)",
        ),
    ),
    (
        "UpdateChecks__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::UpdateChecks(void)",
        ),
    ),
    (
        "_sceCd_scmdsdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnMudEffect__10FootEffectP6VectorfP14BoundingVolumefbT1",
        Ok(
            "FootEffect::SpawnMudEffect(Vector *, float, BoundingVolume *, float, bool, Vector *)",
        ),
    ),
    (
        "Init__13SoundMaterialP8KromeIniUcff",
        Ok(
            "SoundMaterial::Init(KromeIni *, unsigned char, float, float)",
        ),
    ),
    (
        "_9GreySmoke$pSmokeMat",
        Ok(
            "GreySmoke::pSmokeMat",
        ),
    ),
    (
        "Init__18SpeedboatCrestWakefPc",
        Ok(
            "SpeedboatCrestWake::Init(float, char *)",
        ),
    ),
    (
        "sceMpegAddCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_GetDistanceType__Fv",
        Ok(
            "GameCamera_GetDistanceType(void)",
        ),
    ),
    (
        "_EnableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__12BushPigAnims",
        Ok(
            "BushPigAnims::Init(void)",
        ),
    ),
    (
        "SpawnWaterDropGreen__17TyParticleManagerP6VectorT1f",
        Ok(
            "TyParticleManager::SpawnWaterDropGreen(Vector *, Vector *, float)",
        ),
    ),
    (
        "IsEndOfData__6Parser",
        Ok(
            "Parser::IsEndOfData(void)",
        ),
    ),
    (
        "SetAngle__9AuroraKid",
        Ok(
            "AuroraKid::SetAngle(void)",
        ),
    ),
    (
        "Deinit__5Neddy",
        Ok(
            "Neddy::Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11CollapsiblePv",
        Ok(
            "ModuleInfo<Collapsible>::ConstructObject(void *)",
        ),
    ),
    (
        "_mprec_log10",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11InvisiCrate",
        Ok(
            "ModuleInfo<InvisiCrate> virtual table",
        ),
    ),
    (
        "SpikeyIce_Init__Fv",
        Ok(
            "SpikeyIce_Init(void)",
        ),
    ),
    (
        "ModelRender_ACS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "FireIceInit__6Fluffy",
        Ok(
            "Fluffy::FireIceInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Leech",
        Ok(
            "ModuleInfo<Leech> virtual table",
        ),
    ),
    (
        "PickUpDeinit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::PickUpDeinit(void)",
        ),
    ),
    (
        "Update__17TriggerSphereProp",
        Ok(
            "TriggerSphereProp::Update(void)",
        ),
    ),
    (
        "Draw_DoDraws__Fv",
        Ok(
            "Draw_DoDraws(void)",
        ),
    ),
    (
        "InGameDraw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::InGameDraw(void)",
        ),
    ),
    (
        "_vt$16__attr_type_info",
        Ok(
            "__attr_type_info virtual table",
        ),
    ),
    (
        "scePadInfoPressMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Model_GetNmbrOfVertices__FP13ModelTemplateiii",
        Ok(
            "Model_GetNmbrOfVertices(ModelTemplate *, int, int, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7SnowGun",
        Ok(
            "ModuleInfo<SnowGun>::Init(void)",
        ),
    ),
    (
        "CameraOverrideFixedPoint_Reset__Fv",
        Ok(
            "CameraOverrideFixedPoint_Reset(void)",
        ),
    ),
    (
        "ExploreNextSubObject__5ModelP13ModelExplorer",
        Ok(
            "Model::ExploreNextSubObject(ModelExplorer *)",
        ),
    ),
    (
        "gpPushAwayPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "buttonType2",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__7C3Chest",
        Ok(
            "C3Chest::Reset(void)",
        ),
    ),
    (
        "GetSpeedFromJoyPad__2Tyf",
        Ok(
            "Ty::GetSpeedFromJoyPad(float)",
        ),
    ),
    (
        "_GLOBAL_$I$TrapdoorSpider_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to TrapdoorSpider_LoadResources(KromeIni *)",
        ),
    ),
    (
        "AddGifTag_LwrUpr__3DmaUlUl",
        Ok(
            "Dma::AddGifTag_LwrUpr(unsigned long, unsigned long)",
        ),
    ),
    (
        "LoadLevel_LoadString__FP12KromeIniLinePcT1ii",
        Ok(
            "LoadLevel_LoadString(KromeIniLine *, char *, char *, int, int)",
        ),
    ),
    (
        "Fire__5SpearP6VectorT1",
        Ok(
            "Spear::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "KissOfDeathChaseInit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathChaseInit(void)",
        ),
    ),
    (
        "stateNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "HasFired__16BoomerangManager",
        Ok(
            "BoomerangManager::HasFired(void)",
        ),
    ),
    (
        "StoreEnemyDeathInfo__10DDASession19DDAEnemyDamageCause",
        Ok(
            "DDASession::StoreEnemyDeathInfo(DDAEnemyDamageCause)",
        ),
    ),
    (
        "DrawNoMat__14Blitter_Line3Dif",
        Ok(
            "Blitter_Line3D::DrawNoMat(int, float)",
        ),
    ),
    (
        "Video_CreateInternal__FP5VideoPcP8Materialb",
        Ok(
            "Video_CreateInternal(Video *, char *, Material *, bool)",
        ),
    ),
    (
        "GetRefPointIndex__5Modeli",
        Ok(
            "Model::GetRefPointIndex(int)",
        ),
    ),
    (
        "FireInit__5Leech",
        Ok(
            "Leech::FireInit(void)",
        ),
    ),
    (
        "Load__12ShearsStructP14ShearsLoadInfo",
        Ok(
            "ShearsStruct::Load(ShearsLoadInfo *)",
        ),
    ),
    (
        "DeinitRelaxed__3Emu",
        Ok(
            "Emu::DeinitRelaxed(void)",
        ),
    ),
    (
        "GetNextRang__F13BoomerangType",
        Ok(
            "GetNextRang(BoomerangType)",
        ),
    ),
    (
        "Init__9TyContextff",
        Ok(
            "TyContext::Init(float, float)",
        ),
    ),
    (
        "GetDesc__6Friend",
        Ok(
            "Friend::GetDesc(void)",
        ),
    ),
    (
        "KenOath_LoadResources__FP8KromeIni",
        Ok(
            "KenOath_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__11BaseCritterP11GameObjDesc",
        Ok(
            "BaseCritter::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateGround__8ChuteLog",
        Ok(
            "ChuteLog::UpdateGround(void)",
        ),
    ),
    (
        "Load__17WaterSlideSectionP16WayPointLoadInfo",
        Ok(
            "WaterSlideSection::Load(WayPointLoadInfo *)",
        ),
    ),
    (
        "GetFreeStalactite__9ShadowBat",
        Ok(
            "ShadowBat::GetFreeStalactite(void)",
        ),
    ),
    (
        "_vt$9BadBoonie",
        Ok(
            "BadBoonie virtual table",
        ),
    ),
    (
        "Critters_cameraAngle",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadTypeData__10MKGrassGen",
        Ok(
            "MKGrassGen::UploadTypeData(void)",
        ),
    ),
    (
        "_GLOBAL_$I$ChuteLog_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to ChuteLog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceDread",
        Err(
            NotMangled,
        ),
    ),
    (
        "NewGameVideo_Update__Fv",
        Ok(
            "NewGameVideo_Update(void)",
        ),
    ),
    (
        "BlueTongue_HitWithBoulder__FP11EnemyObject",
        Ok(
            "BlueTongue_HitWithBoulder(EnemyObject *)",
        ),
    ),
    (
        "Deinit__10Projectile",
        Ok(
            "Projectile::Deinit(void)",
        ),
    ),
    (
        "randomFloats",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseInit__10ScubaFrill",
        Ok(
            "ScubaFrill::ChaseInit(void)",
        ),
    ),
    (
        "Update__6Basket",
        Ok(
            "Basket::Update(void)",
        ),
    ),
    (
        "__mprec_tinytens",
        Err(
            InvalidSpecialMethod(
                "mprec_tinytens",
            ),
        ),
    ),
    (
        "sceScfGetSpdif",
        Err(
            NotMangled,
        ),
    ),
    (
        "Shaking__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Shaking(void)",
        ),
    ),
    (
        "LoadLine__11SpinningLogP12KromeIniLine",
        Ok(
            "SpinningLog::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "GetNextPos__17PathFindingObject",
        Ok(
            "PathFindingObject::GetNextPos(void)",
        ),
    ),
    (
        "LoadTIFF__5ImagePUcUi",
        Ok(
            "Image::LoadTIFF(unsigned char *, unsigned int)",
        ),
    ),
    (
        "Particle_BiteGlow_Init__FPP14ParticleSystemP6Matrixi",
        Ok(
            "Particle_BiteGlow_Init(ParticleSystem **, Matrix *, int)",
        ),
    ),
    (
        "Init__9LevelData",
        Ok(
            "LevelData::Init(void)",
        ),
    ),
    (
        "Deinit__10SoundEvent",
        Ok(
            "SoundEvent::Deinit(void)",
        ),
    ),
    (
        "sceSifMUnBindRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "__throw_type_match",
        Err(
            InvalidCustomNameOnTemplate(
                "hrow_type_match",
            ),
        ),
    ),
    (
        "sceMtapPortClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadVUData__13MKParticleGenP4ViewP6VectorT2",
        Ok(
            "MKParticleGen::UploadVUData(View *, Vector *, Vector *)",
        ),
    ),
    (
        "TimeTrial_DidOpponentWin__Fv",
        Ok(
            "TimeTrial_DidOpponentWin(void)",
        ),
    ),
    (
        "Init__5LennyP11GameObjDesc",
        Ok(
            "Lenny::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10WarpFlower",
        Ok(
            "ModuleInfo<WarpFlower>::Init(void)",
        ),
    ),
    (
        "vRearCollSphere",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__16SoundEventHelperP9MKMessage",
        Ok(
            "SoundEventHelper::Message(MKMessage *)",
        ),
    ),
    (
        "_GLOBAL_$I$_11ScrubTurkey$checkToIncCatchAttemps",
        Ok(
            "global constructors keyed to ScrubTurkey::checkToIncCatchAttemps",
        ),
    ),
    (
        "SetAnimSpeedMultiplier__9Animationf",
        Ok(
            "Animation::SetAnimSpeedMultiplier(float)",
        ),
    ),
    (
        "Shears_Line__FP12KromeIniLine",
        Ok(
            "Shears_Line(KromeIniLine *)",
        ),
    ),
    (
        "strcpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "FallMove__2Tyfff",
        Ok(
            "Ty::FallMove(float, float, float)",
        ),
    ),
    (
        "MKWaterRender_WSEMFL2SCR_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z17SynkerFrillLizard",
        Ok(
            "ModuleInfo<SynkerFrillLizard> virtual table",
        ),
    ),
    (
        "MiniGame_A2_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_A2_Draw(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Fluffy_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Fluffy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__9SpeedboatP9MKMessage",
        Ok(
            "Speedboat::Message(MKMessage *)",
        ),
    ),
    (
        "LoadLine__4LavaP12KromeIniLine",
        Ok(
            "Lava::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Target",
        Ok(
            "ModuleInfo<Target> virtual table",
        ),
    ),
    (
        "detourData",
        Err(
            NotMangled,
        ),
    ),
    (
        "SharkCageLeaveInit__2Ty",
        Ok(
            "Ty::SharkCageLeaveInit(void)",
        ),
    ),
    (
        "PatrolInit__10BlueTongue",
        Ok(
            "BlueTongue::PatrolInit(void)",
        ),
    ),
    (
        "SetState__8BuzzSaw214BuzzSaw2States",
        Ok(
            "BuzzSaw2::SetState(BuzzSaw2States)",
        ),
    ),
    (
        "_vt$14FireworksCrate",
        Ok(
            "FireworksCrate virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8BossCass",
        Ok(
            "ModuleInfo<BossCass> virtual table",
        ),
    ),
    (
        "GetUpInit__3Sly",
        Ok(
            "Sly::GetUpInit(void)",
        ),
    ),
    (
        "_hi0bits",
        Err(
            NotMangled,
        ),
    ),
    (
        "Destroy__21CameraOverrideManagerP14CameraOverride",
        Ok(
            "CameraOverrideManager::Destroy(CameraOverride *)",
        ),
    ),
    (
        "StaticSpikes_End__Fv",
        Ok(
            "StaticSpikes_End(void)",
        ),
    ),
    (
        "SpecialPickup_LoadResources__FP8KromeIni",
        Ok(
            "SpecialPickup_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Reset__8UIButton",
        Ok(
            "UIButton::Reset(void)",
        ),
    ),
    (
        "LaunchedUpdate__7IceRamp",
        Ok(
            "IceRamp::LaunchedUpdate(void)",
        ),
    ),
    (
        "Update__8Bull_DDAP18MovementDescriptor",
        Ok(
            "Bull_DDA::Update(MovementDescriptor *)",
        ),
    ),
    (
        "Update__15BoomerangWeaponP6MatrixP6Vector",
        Ok(
            "BoomerangWeapon::Update(Matrix *, Vector *)",
        ),
    ),
    (
        "Julius_LoadResources__FP8KromeIni",
        Ok(
            "Julius_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IdleInit__9AuroraKid",
        Ok(
            "AuroraKid::IdleInit(void)",
        ),
    ),
    (
        "GetCurrentHomePos__9ShadowBat",
        Ok(
            "ShadowBat::GetCurrentHomePos(void)",
        ),
    ),
    (
        "_vt$14MobilePlatform",
        Ok(
            "MobilePlatform virtual table",
        ),
    ),
    (
        "Init__7CogsHud",
        Ok(
            "CogsHud::Init(void)",
        ),
    ),
    (
        "IsNormalised__12QuatRotation",
        Ok(
            "QuatRotation::IsNormalised(void)",
        ),
    ),
    (
        "__main",
        Err(
            InvalidSpecialMethod(
                "main",
            ),
        ),
    ),
    (
        "sceSifAddCmdHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10TeleporterP11GameObjDesc",
        Ok(
            "Teleporter::Init(GameObjDesc *)",
        ),
    ),
    (
        "InitAnimEventDesc__15EnemyDescriptorP15Tools_AnimEventib",
        Ok(
            "EnemyDescriptor::InitAnimEventDesc(Tools_AnimEvent *, int, bool)",
        ),
    ),
    (
        "Reset__9ShadowBat",
        Ok(
            "ShadowBat::Reset(void)",
        ),
    ),
    (
        "_7MKWater$pDebugMaterial",
        Ok(
            "MKWater::pDebugMaterial",
        ),
    ),
    (
        "Deinit__9Lightning",
        Ok(
            "Lightning::Deinit(void)",
        ),
    ),
    (
        "LoadDone__12StaticFXProp",
        Ok(
            "StaticFXProp::LoadDone(void)",
        ),
    ),
    (
        "BlockedUpdate__6Geyser",
        Ok(
            "Geyser::BlockedUpdate(void)",
        ),
    ),
    (
        "lastFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitFallDive__2Ty",
        Ok(
            "Ty::InitFallDive(void)",
        ),
    ),
    (
        "KnockedOffTowerInit__11FrillLizard",
        Ok(
            "FrillLizard::KnockedOffTowerInit(void)",
        ),
    ),
    (
        "_20WaterfallPointStruct$pointEnvelope",
        Ok(
            "WaterfallPointStruct::pointEnvelope",
        ),
    ),
    (
        "Message__11DropPontoonP9MKMessage",
        Ok(
            "DropPontoon::Message(MKMessage *)",
        ),
    ),
    (
        "__ti16__func_type_info",
        Ok(
            "__func_type_info type_info node",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6FluffyPv",
        Ok(
            "ModuleInfo<Fluffy>::ConstructObject(void *)",
        ),
    ),
    (
        "LearnToDive__2Ty",
        Ok(
            "Ty::LearnToDive(void)",
        ),
    ),
    (
        "ChargeDeinit__4Bull",
        Ok(
            "Bull::ChargeDeinit(void)",
        ),
    ),
    (
        "UpdateLogic__9SmallCrab",
        Ok(
            "SmallCrab::UpdateLogic(void)",
        ),
    ),
    (
        "InitRangChange__2Ty",
        Ok(
            "Ty::InitRangChange(void)",
        ),
    ),
    (
        "LoadDone__13TreasureChest",
        Ok(
            "TreasureChest::LoadDone(void)",
        ),
    ),
    (
        "gXAxis",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__21CritterField2LoadInfoP12KromeIniLine",
        Ok(
            "CritterField2LoadInfo::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Leap__10NinjaGecko",
        Ok(
            "NinjaGecko::Leap(void)",
        ),
    ),
    (
        "FinishLine_Show__Fv",
        Ok(
            "FinishLine_Show(void)",
        ),
    ),
    (
        "_GLOBAL_$F$__builtin_new.._.._src_gcc_cp_new1.ccKINnb5",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "GLOBAL_",
            ),
        ),
    ),
    (
        "Message__10WhirlyWindP9MKMessage",
        Ok(
            "WhirlyWind::Message(MKMessage *)",
        ),
    ),
    (
        "Load__16StaticFXPropDescP8KromeIni",
        Ok(
            "StaticFXPropDesc::Load(KromeIni *)",
        ),
    ),
    (
        "szIcicleObjName",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8Material$pRenderNodes",
        Ok(
            "Material::pRenderNodes",
        ),
    ),
    (
        "CheckForCollisionWithTurkeys__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CheckForCollisionWithTurkeys(void)",
        ),
    ),
    (
        "__tfx",
        Ok(
            "long long type_info function",
        ),
    ),
    (
        "DetachInit__4Tick",
        Ok(
            "Tick::DetachInit(void)",
        ),
    ),
    (
        "Spawn__6BasketP6Vector",
        Ok(
            "Basket::Spawn(Vector *)",
        ),
    ),
    (
        "Init__7UIImageP8Material",
        Ok(
            "UIImage::Init(Material *)",
        ),
    ),
    (
        "sceRemove",
        Err(
            NotMangled,
        ),
    ),
    (
        "_6Spider$bStateChange",
        Ok(
            "Spider::bStateChange",
        ),
    ),
    (
        "fmodf",
        Err(
            NotMangled,
        ),
    ),
    (
        "TransformPoint3Dto2D__4ViewP6VectorT1",
        Ok(
            "View::TransformPoint3Dto2D(Vector *, Vector *)",
        ),
    ),
    (
        "Draw__8Critter2",
        Ok(
            "Critter2::Draw(void)",
        ),
    ),
    (
        "MKAnimScript_DeinitModule__Fv",
        Ok(
            "MKAnimScript_DeinitModule(void)",
        ),
    ),
    (
        "PauseScreen_RangInfo_Update__Fv",
        Ok(
            "PauseScreen_RangInfo_Update(void)",
        ),
    ),
    (
        "DrawDynamicProps__14MKSceneManageri",
        Ok(
            "MKSceneManager::DrawDynamicProps(int)",
        ),
    ),
    (
        "SetAnim__12MKAnimScriptP6MKAnim",
        Ok(
            "MKAnimScript::SetAnim(MKAnim *)",
        ),
    ),
    (
        "Input_EnableKeyMapping__Fb",
        Ok(
            "Input_EnableKeyMapping(bool)",
        ),
    ),
    (
        "Init__14WaterSlideData",
        Ok(
            "WaterSlideData::Init(void)",
        ),
    ),
    (
        "fabs",
        Err(
            NotMangled,
        ),
    ),
    (
        "RetreatInit__5Skink",
        Ok(
            "Skink::RetreatInit(void)",
        ),
    ),
    (
        "Deinit__9ShadowBat",
        Ok(
            "ShadowBat::Deinit(void)",
        ),
    ),
    (
        "_lseek_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__13PhysicsObject",
        Ok(
            "PhysicsObject::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15KingFisherFieldPv",
        Ok(
            "ModuleInfo<KingFisherField>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__10LODManagerP5ModeliP13LODDescriptor",
        Ok(
            "LODManager::Init(Model *, int, LODDescriptor *)",
        ),
    ),
    (
        "UpdateRangs__3Sly",
        Ok(
            "Sly::UpdateRangs(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z18WaterPipeObjective",
        Ok(
            "ModuleInfo<WaterPipeObjective> virtual table",
        ),
    ),
    (
        "cheatDisplayCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__13LODDescriptorP8KromeIniPc",
        Ok(
            "LODDescriptor::Init(KromeIni *, char *)",
        ),
    ),
    (
        "RenderTexture_GetWaterBlend__Fv",
        Ok(
            "RenderTexture_GetWaterBlend(void)",
        ),
    ),
    (
        "Deinit__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Deinit(void)",
        ),
    ),
    (
        "_vt$18ElevatorDescriptor",
        Ok(
            "ElevatorDescriptor virtual table",
        ),
    ),
    (
        "log",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__7TendrilfP6Vectorf",
        Ok(
            "Tendril::Update(float, Vector *, float)",
        ),
    ),
    (
        "ThrowDeinit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::ThrowDeinit(void)",
        ),
    ),
    (
        "Deinit__15StopwatchStruct",
        Ok(
            "StopwatchStruct::Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$ROPE_MATERIAL_NAME",
        Ok(
            "global constructors keyed to ROPE_MATERIAL_NAME",
        ),
    ),
    (
        "Input_AllPadsWasButtonReleased__FP12InputDevicesi",
        Ok(
            "Input_AllPadsWasButtonReleased(InputDevices *, int)",
        ),
    ),
    (
        "Boomerang_GetModelName__F13BoomerangType",
        Ok(
            "Boomerang_GetModelName(BoomerangType)",
        ),
    ),
    (
        "DeckChairIdle__4Elle",
        Ok(
            "Elle::DeckChairIdle(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11WeatherProp",
        Ok(
            "ModuleInfo<WeatherProp> virtual table",
        ),
    ),
    (
        "GameCamera_GetPos__Fv",
        Ok(
            "GameCamera_GetPos(void)",
        ),
    ),
    (
        "FallIfActive__13MusicalIcicleb",
        Ok(
            "MusicalIcicle::FallIfActive(bool)",
        ),
    ),
    (
        "Setup_Line__FP12KromeIniLine",
        Ok(
            "Setup_Line(KromeIniLine *)",
        ),
    ),
    (
        "Str__14Tools_BitField",
        Ok(
            "Tools_BitField::Str(void)",
        ),
    ),
    (
        "FOV",
        Err(
            NotMangled,
        ),
    ),
    (
        "FakeWall_CanActivate__10GameCamera",
        Ok(
            "GameCamera::FakeWall_CanActivate(void)",
        ),
    ),
    (
        "GroundCollision__7BushPig",
        Ok(
            "BushPig::GroundCollision(void)",
        ),
    ),
    (
        "AddGif_REGLIST__3DmaUl",
        Ok(
            "Dma::AddGif_REGLIST(unsigned long)",
        ),
    ),
    (
        "Message__15YabbyStalactiteP9MKMessage",
        Ok(
            "YabbyStalactite::Message(MKMessage *)",
        ),
    ),
    (
        "LoadTIFF__5ImagePc",
        Ok(
            "Image::LoadTIFF(char *)",
        ),
    ),
    (
        "Heap_MemoryUsed__Fv",
        Ok(
            "Heap_MemoryUsed(void)",
        ),
    ),
    (
        "Init__9SpeedboatP11GameObjDesc",
        Ok(
            "Speedboat::Init(GameObjDesc *)",
        ),
    ),
    (
        "PickUpEgg__11ScrubTurkey",
        Ok(
            "ScrubTurkey::PickUpEgg(void)",
        ),
    ),
    (
        "Update__8RingoArm",
        Ok(
            "RingoArm::Update(void)",
        ),
    ),
    (
        "InitRelaxed__3Emu",
        Ok(
            "Emu::InitRelaxed(void)",
        ),
    ),
    (
        "sqrt",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13TreasureChestPv",
        Ok(
            "ModuleInfo<TreasureChest>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$10CuttleFish",
        Ok(
            "CuttleFish virtual table",
        ),
    ),
    (
        "Update__12ZoomerangHud",
        Ok(
            "ZoomerangHud::Update(void)",
        ),
    ),
    (
        "AntHillScanner__4BullPP10GameObjectb",
        Ok(
            "Bull::AntHillScanner(GameObject **, bool)",
        ),
    ),
    (
        "Init__11BilbyStructP13BilbyLoadInfo",
        Ok(
            "BilbyStruct::Init(BilbyLoadInfo *)",
        ),
    ),
    (
        "Idle__5Roach",
        Ok(
            "Roach::Idle(void)",
        ),
    ),
    (
        "InitIdle__5Lasso",
        Ok(
            "Lasso::InitIdle(void)",
        ),
    ),
    (
        "Deinit__11ProgressBar",
        Ok(
            "ProgressBar::Deinit(void)",
        ),
    ),
    (
        "_nextHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPosition__13UniformSplinef",
        Ok(
            "UniformSpline::GetPosition(float)",
        ),
    ),
    (
        "ExactMag__Fff",
        Ok(
            "ExactMag(float, float)",
        ),
    ),
    (
        "System_IsDebugEnabled__Fv",
        Ok(
            "System_IsDebugEnabled(void)",
        ),
    ),
    (
        "System_SetDebugCameraSpeedMultiplier__Ff",
        Ok(
            "System_SetDebugCameraSpeedMultiplier(float)",
        ),
    ),
    (
        "Reset__10SnowSpider",
        Ok(
            "SnowSpider::Reset(void)",
        ),
    ),
    (
        "AttackInit__10ScubaFrill",
        Ok(
            "ScubaFrill::AttackInit(void)",
        ),
    ),
    (
        "ModelRender_CFLSX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Speedboat",
        Ok(
            "ModuleInfo<Speedboat>::Init(void)",
        ),
    ),
    (
        "Draw__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Draw(void)",
        ),
    ),
    (
        "Appear__12BunyipStruct",
        Ok(
            "BunyipStruct::Appear(void)",
        ),
    ),
    (
        "bEnableHUD",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResetToStart__4Tick",
        Ok(
            "Tick::ResetToStart(void)",
        ),
    ),
    (
        "Update__11SpinningLog",
        Ok(
            "SpinningLog::Update(void)",
        ),
    ),
    (
        "Deinit__11EnemyObject",
        Ok(
            "EnemyObject::Deinit(void)",
        ),
    ),
    (
        "ObjectCollideCheck__7BushPigP10GameObjectP6Vector",
        Ok(
            "BushPig::ObjectCollideCheck(GameObject *, Vector *)",
        ),
    ),
    (
        "Reset__4Gate",
        Ok(
            "Gate::Reset(void)",
        ),
    ),
    (
        "MiniGame_B3_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B3_Update(void)",
        ),
    ),
    (
        "__ti9bad_alloc",
        Ok(
            "bad_alloc type_info node",
        ),
    ),
    (
        "_vt$9Generator",
        Ok(
            "Generator virtual table",
        ),
    ),
    (
        "_sequenceScalableExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "Drop__14RockProjectilef",
        Ok(
            "RockProjectile::Drop(float)",
        ),
    ),
    (
        "Init__15ParticleEmitterP14ParticleSystemf",
        Ok(
            "ParticleEmitter::Init(ParticleSystem *, float)",
        ),
    ),
    (
        "_GLOBAL_$I$BubbleSpawner_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BubbleSpawner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PoofUpdate__6Geyser",
        Ok(
            "Geyser::PoofUpdate(void)",
        ),
    ),
    (
        "_vt$6Julius",
        Ok(
            "Julius virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14TriggerBoxPropPv",
        Ok(
            "ModuleInfo<TriggerBoxProp>::ConstructObject(void *)",
        ),
    ),
    (
        "GetRefPointIndex__5ModelPc",
        Ok(
            "Model::GetRefPointIndex(char *)",
        ),
    ),
    (
        "_GLOBAL_$I$BossCass_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BossCass_LoadResources(KromeIni *)",
        ),
    ),
    (
        "AddGif_AD_ALPHA_1__3DmaUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_ALPHA_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Blitter_ParticleRender_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__5Lenny",
        Ok(
            "Lenny::Idle(void)",
        ),
    ),
    (
        "LoadDone__11BoulderTrap",
        Ok(
            "BoulderTrap::LoadDone(void)",
        ),
    ),
    (
        "Init__9LightningP13LightningInit",
        Ok(
            "Lightning::Init(LightningInit *)",
        ),
    ),
    (
        "UpdateModelNormal__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::UpdateModelNormal(void)",
        ),
    ),
    (
        "PatrolInit__5Roach",
        Ok(
            "Roach::PatrolInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Gem",
        Ok(
            "ModuleInfo<Gem>::Init(void)",
        ),
    ),
    (
        "_vt$5Ringo",
        Ok(
            "Ringo virtual table",
        ),
    ),
    (
        "_8DiveRing$diveRingCounter",
        Ok(
            "DiveRing::diveRingCounter",
        ),
    ),
    (
        "Draw__8SnowPile",
        Ok(
            "SnowPile::Draw(void)",
        ),
    ),
    (
        "_vt$20StaticPropDescriptor",
        Ok(
            "StaticPropDescriptor virtual table",
        ),
    ),
    (
        "CheckForEdge__2Ty",
        Ok(
            "Ty::CheckForEdge(void)",
        ),
    ),
    (
        "_sceCd_cd_scmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Fluffy_LoadResources__FP8KromeIni",
        Ok(
            "Fluffy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "szShardBase",
        Err(
            NotMangled,
        ),
    ),
    (
        "Disable__16BoomerangManager",
        Ok(
            "BoomerangManager::Disable(void)",
        ),
    ),
    (
        "AddGif_AD_TEX1_2__3DmaUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX1_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Deinit__8MorayEel",
        Ok(
            "MorayEel::Deinit(void)",
        ),
    ),
    (
        "GameCamera_SetNewEnemy__Fv",
        Ok(
            "GameCamera_SetNewEnemy(void)",
        ),
    ),
    (
        "UseGlideCamera__10GameCamerab",
        Ok(
            "GameCamera::UseGlideCamera(bool)",
        ),
    ),
    (
        "_vt$9ShoalFish",
        Ok(
            "ShoalFish virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8MorayEel",
        Ok(
            "ModuleInfo<MorayEel> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9BarracudaPv",
        Ok(
            "ModuleInfo<Barracuda>::ConstructObject(void *)",
        ),
    ),
    (
        "CameraOverridePath_Line__FP12KromeIniLine",
        Ok(
            "CameraOverridePath_Line(KromeIniLine *)",
        ),
    ),
    (
        "Sound_MusicGetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "BeerAttack__5Skink",
        Ok(
            "Skink::BeerAttack(void)",
        ),
    ),
    (
        "Idle__11RhinoGround",
        Ok(
            "RhinoGround::Idle(void)",
        ),
    ),
    (
        "UpdateWorldMatrix__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "__sflags",
        Err(
            InvalidSpecialMethod(
                "sflags",
            ),
        ),
    ),
    (
        "Enable__12FlameThrowerb",
        Ok(
            "FlameThrower::Enable(bool)",
        ),
    ),
    (
        "sceDmaSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "Heap_DeinitModule__Fv",
        Ok(
            "Heap_DeinitModule(void)",
        ),
    ),
    (
        "Reset__10BlueTongue",
        Ok(
            "BlueTongue::Reset(void)",
        ),
    ),
    (
        "AirToLandTransition__2Ty",
        Ok(
            "Ty::AirToLandTransition(void)",
        ),
    ),
    (
        "_alalcInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Charge__5Shark",
        Ok(
            "Shark::Charge(void)",
        ),
    ),
    (
        "InitIdleEdgeWobble__2Ty",
        Ok(
            "Ty::InitIdleEdgeWobble(void)",
        ),
    ),
    (
        "DeinitAfterDunny__2Ty",
        Ok(
            "Ty::DeinitAfterDunny(void)",
        ),
    ),
    (
        "CollisionCheckForTy__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::CollisionCheckForTy(void)",
        ),
    ),
    (
        "UpdatePickup__14RockProjectileP6Vector",
        Ok(
            "RockProjectile::UpdatePickup(Vector *)",
        ),
    ),
    (
        "DrawDebug__10GameCamera",
        Ok(
            "GameCamera::DrawDebug(void)",
        ),
    ),
    (
        "LoadDone__4Gate",
        Ok(
            "Gate::LoadDone(void)",
        ),
    ),
    (
        "LoadDone__6Portal",
        Ok(
            "Portal::LoadDone(void)",
        ),
    ),
    (
        "gDisableFrameCompensation",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKMem_InitModule__Fv",
        Ok(
            "MKMem_InitModule(void)",
        ),
    ),
    (
        "RunToWaypoint_Deinit__9BadBoonie",
        Ok(
            "BadBoonie::RunToWaypoint_Deinit(void)",
        ),
    ),
    (
        "sceSifMBindRpcParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "IdleState__5Gecko",
        Ok(
            "Gecko::IdleState(void)",
        ),
    ),
    (
        "Init__18BezierPathFollowerP6Vectoriffb",
        Ok(
            "BezierPathFollower::Init(Vector *, int, float, float, bool)",
        ),
    ),
    (
        "Load__17AnimatingPropDescP8KromeIni",
        Ok(
            "AnimatingPropDesc::Load(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$A1FrillObjective_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to A1FrillObjective_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PatrolAreaDeInit__11RhinoGround",
        Ok(
            "RhinoGround::PatrolAreaDeInit(void)",
        ),
    ),
    (
        "IsTyWithinBlockRange__5Rhino",
        Ok(
            "Rhino::IsTyWithinBlockRange(void)",
        ),
    ),
    (
        "RunInit__4Ibis",
        Ok(
            "Ibis::RunInit(void)",
        ),
    ),
    (
        "SetPosition__7UIModelP6VectorcP4View",
        Ok(
            "UIModel::SetPosition(Vector *, char, View *)",
        ),
    ),
    (
        "__tiSc",
        Ok(
            "signed char type_info node",
        ),
    ),
    (
        "RunToTree__11FrillLizard",
        Ok(
            "FrillLizard::RunToTree(void)",
        ),
    ),
    (
        "Fall__11CrateStruct",
        Ok(
            "CrateStruct::Fall(void)",
        ),
    ),
    (
        "DisableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__8KoalaKid",
        Ok(
            "KoalaKid::Reset(void)",
        ),
    ),
    (
        "__divdi3",
        Err(
            InvalidSpecialMethod(
                "divdi3",
            ),
        ),
    ),
    (
        "Fall_SetIdealDirection__10GameCameraP6Vector",
        Ok(
            "GameCamera::Fall_SetIdealDirection(Vector *)",
        ),
    ),
    (
        "_vt$8Critter2",
        Ok(
            "Critter2 virtual table",
        ),
    ),
    (
        "dcast__C17__class_type_infoRC9type_infoiPvPC9type_infoT3",
        Ok(
            "__class_type_info::dcast(type_info const &, int, void *, type_info const *, void *) const",
        ),
    ),
    (
        "ModelRender_FLW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "YMax__FP6Vectorf",
        Ok(
            "YMax(Vector *, float)",
        ),
    ),
    (
        "Draw__9RedButton",
        Ok(
            "RedButton::Draw(void)",
        ),
    ),
    (
        "ioctl",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetChestRefPoint__7C3Actor",
        Ok(
            "C3Actor::GetChestRefPoint(void)",
        ),
    ),
    (
        "Update__7BossHud",
        Ok(
            "BossHud::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10ScubaFrill",
        Ok(
            "ModuleInfo<ScubaFrill> virtual table",
        ),
    ),
    (
        "InitPatrol__5Rhino",
        Ok(
            "Rhino::InitPatrol(void)",
        ),
    ),
    (
        "CameraOverride_Update__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_Update(void)",
        ),
    ),
    (
        "TyMemCard_Init__Fv",
        Ok(
            "TyMemCard_Init(void)",
        ),
    ),
    (
        "_vt$17__class_type_info",
        Ok(
            "__class_type_info virtual table",
        ),
    ),
    (
        "_vt$8WhiteBat",
        Ok(
            "WhiteBat virtual table",
        ),
    ),
    (
        "GoingDownState__8Elevator",
        Ok(
            "Elevator::GoingDownState(void)",
        ),
    ),
    (
        "wait_get_addr_only",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcFormat",
        Err(
            NotMangled,
        ),
    ),
    (
        "ApplyGravity__4Tick",
        Ok(
            "Tick::ApplyGravity(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Flamerang",
        Ok(
            "ModuleInfo<Flamerang> virtual table",
        ),
    ),
    (
        "GenerateRandomPos__3Sly",
        Ok(
            "Sly::GenerateRandomPos(void)",
        ),
    ),
    (
        "FrontEnd_NewGame_OnEnter__Fv",
        Ok(
            "FrontEnd_NewGame_OnEnter(void)",
        ),
    ),
    (
        "Init__3RexP11GameObjDesc",
        Ok(
            "Rex::Init(GameObjDesc *)",
        ),
    ),
    (
        "FlinchInit__8LilNeddy",
        Ok(
            "LilNeddy::FlinchInit(void)",
        ),
    ),
    (
        "LoadLine__13CritterField2P12KromeIniLine",
        Ok(
            "CritterField2::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SetTyreMatrix__4JeepP6VectorP6Matrixff",
        Ok(
            "Jeep::SetTyreMatrix(Vector *, Matrix *, float, float)",
        ),
    ),
    (
        "System_CheckScreenMode__Fv",
        Ok(
            "System_CheckScreenMode(void)",
        ),
    ),
    (
        "SetLocalToWorldDirty__9Animation",
        Ok(
            "Animation::SetLocalToWorldDirty(void)",
        ),
    ),
    (
        "DoDeflection__9Boomerang",
        Ok(
            "Boomerang::DoDeflection(void)",
        ),
    ),
    (
        "Intro__6Portal",
        Ok(
            "Portal::Intro(void)",
        ),
    ),
    (
        "SetBounceOffFromPos__2TyP6Vectorfb",
        Ok(
            "Ty::SetBounceOffFromPos(Vector *, float, bool)",
        ),
    ),
    (
        "LogicUpdate__4Tick",
        Ok(
            "Tick::LogicUpdate(void)",
        ),
    ),
    (
        "Block__5Skink",
        Ok(
            "Skink::Block(void)",
        ),
    ),
    (
        "Init__13PickupCounterP11GameObjDesc",
        Ok(
            "PickupCounter::Init(GameObjDesc *)",
        ),
    ),
    (
        "ClampMagnitude__6VectorP6Vectorf",
        Ok(
            "Vector::ClampMagnitude(Vector *, float)",
        ),
    ),
    (
        "Init__10FrostyrangP11GameObjDescP15BoomerangWeapon",
        Ok(
            "Frostyrang::Init(GameObjDesc *, BoomerangWeapon *)",
        ),
    ),
    (
        "Bunyip_Show__Fv",
        Ok(
            "Bunyip_Show(void)",
        ),
    ),
    (
        "Hud_InitBoomerangs__Fv",
        Ok(
            "Hud_InitBoomerangs(void)",
        ),
    ),
    (
        "BonusPickup_Spawn__FP6Vector15BonusPickupType",
        Ok(
            "BonusPickup_Spawn(Vector *, BonusPickupType)",
        ),
    ),
    (
        "SetState__16CheckpointStruct15CheckpointState",
        Ok(
            "CheckpointStruct::SetState(CheckpointState)",
        ),
    ),
    (
        "Retarget__4Tick",
        Ok(
            "Tick::Retarget(void)",
        ),
    ),
    (
        "Controlled__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Controlled(void)",
        ),
    ),
    (
        "CheckKidsStatus__6Aurora",
        Ok(
            "Aurora::CheckKidsStatus(void)",
        ),
    ),
    (
        "CheckForExplosion__5Shark",
        Ok(
            "Shark::CheckForExplosion(void)",
        ),
    ),
    (
        "LoadLine__13ShadowBatPipeP12KromeIniLine",
        Ok(
            "ShadowBatPipe::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Str_GetFilenameWithoutExtensionFromPath__FPc",
        Ok(
            "Str_GetFilenameWithoutExtensionFromPath(char *)",
        ),
    ),
    (
        "Fire__15BoomerangWeaponP6VectorT1",
        Ok(
            "BoomerangWeapon::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "Init__6ShadowPcP5ModelfP6Vector",
        Ok(
            "Shadow::Init(char *, Model *, float, Vector *)",
        ),
    ),
    (
        "RemoveIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Aurora",
        Ok(
            "ModuleInfo<Aurora> virtual table",
        ),
    ),
    (
        "Jeep_Active__Fv",
        Ok(
            "Jeep_Active(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11SpiderCratePv",
        Ok(
            "ModuleInfo<SpiderCrate>::ConstructObject(void *)",
        ),
    ),
    (
        "SetAmbient__11DirectLightP6Vector",
        Ok(
            "DirectLight::SetAmbient(Vector *)",
        ),
    ),
    (
        "Dump__9Animation",
        Ok(
            "Animation::Dump(void)",
        ),
    ),
    (
        "icicleInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "pWaterfallOverlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCd_ncmd_prechk",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitModule__6Camera",
        Ok(
            "Camera::InitModule(void)",
        ),
    ),
    (
        "Hit__4Tick",
        Ok(
            "Tick::Hit(void)",
        ),
    ),
    (
        "Deinit__13SpeedboatWake",
        Ok(
            "SpeedboatWake::Deinit(void)",
        ),
    ),
    (
        "mkMessageMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "Shears_End__Fv",
        Ok(
            "Shears_End(void)",
        ),
    ),
    (
        "UnpackTemplate__20MKAnimScriptTemplate",
        Ok(
            "MKAnimScriptTemplate::UnpackTemplate(void)",
        ),
    ),
    (
        "RaceInit__6Wombat",
        Ok(
            "Wombat::RaceInit(void)",
        ),
    ),
    (
        "Resolve__12EventMessage",
        Ok(
            "EventMessage::Resolve(void)",
        ),
    ),
    (
        "Message__8RingoArmP9MKMessage",
        Ok(
            "RingoArm::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z17MiniGameObjective",
        Ok(
            "ModuleInfo<MiniGameObjective> virtual table",
        ),
    ),
    (
        "HitInit__4Tick",
        Ok(
            "Tick::HitInit(void)",
        ),
    ),
    (
        "Alert__6Muddie",
        Ok(
            "Muddie::Alert(void)",
        ),
    ),
    (
        "Update_HeroSucked__10WhirlyWind",
        Ok(
            "WhirlyWind::Update_HeroSucked(void)",
        ),
    ),
    (
        "Main_CheckKeyboard__Fv",
        Ok(
            "Main_CheckKeyboard(void)",
        ),
    ),
    (
        "System_GetCommandLineParameter__FPc",
        Ok(
            "System_GetCommandLineParameter(char *)",
        ),
    ),
    (
        "UpdateMove__14MobilePlatform",
        Ok(
            "MobilePlatform::UpdateMove(void)",
        ),
    ),
    (
        "GetDesc__4Bird",
        Ok(
            "Bird::GetDesc(void)",
        ),
    ),
    (
        "GetPos__11BilbyStruct",
        Ok(
            "BilbyStruct::GetPos(void)",
        ),
    ),
    (
        "Spider_Reset__Fv",
        Ok(
            "Spider_Reset(void)",
        ),
    ),
    (
        "RemoveWaterPropsFromType__7MKWater",
        Ok(
            "MKWater::RemoveWaterPropsFromType(void)",
        ),
    ),
    (
        "CheckForBunyip__11EnemyObject",
        Ok(
            "EnemyObject::CheckForBunyip(void)",
        ),
    ),
    (
        "Init__14CrikeyCanisterP11GameObjDesc",
        Ok(
            "CrikeyCanister::Init(GameObjDesc *)",
        ),
    ),
    (
        "strtok_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "gATWinMonConnectionID",
        Err(
            NotMangled,
        ),
    ),
    (
        "BoomerHit__8Elevator",
        Ok(
            "Elevator::BoomerHit(void)",
        ),
    ),
    (
        "Init__12StaticFXPropP11GameObjDesc",
        Ok(
            "StaticFXProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateLight__6GasJetf",
        Ok(
            "GasJet::UpdateLight(float)",
        ),
    ),
    (
        "SpeedUpCrate_Add__FP6Vectorff",
        Ok(
            "SpeedUpCrate_Add(Vector *, float, float)",
        ),
    ),
    (
        "_alalcRest",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitTLB",
        Err(
            NotMangled,
        ),
    ),
    (
        "__floatdidf",
        Err(
            InvalidSpecialMethod(
                "floatdidf",
            ),
        ),
    ),
    (
        "pCounterModelRender4th",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__12SpeedUpCrate",
        Ok(
            "SpeedUpCrate::Update(void)",
        ),
    ),
    (
        "sceMpegDelete",
        Err(
            NotMangled,
        ),
    ),
    (
        "UseFakeWall__10GameCamerab",
        Ok(
            "GameCamera::UseFakeWall(bool)",
        ),
    ),
    (
        "RestoreFreeState__11BilbyStruct",
        Ok(
            "BilbyStruct::RestoreFreeState(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11DropPontoonPv",
        Ok(
            "ModuleInfo<DropPontoon>::ConstructObject(void *)",
        ),
    ),
    (
        "Deactivate__9Boomerang",
        Ok(
            "Boomerang::Deactivate(void)",
        ),
    ),
    (
        "pActiveMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaterPipe_LoadResources__FP8KromeIni",
        Ok(
            "WaterPipe_LoadResources(KromeIni *)",
        ),
    ),
    (
        "TestPoint__11GCT_TriggerP6Vector",
        Ok(
            "GCT_Trigger::TestPoint(Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Aurora",
        Ok(
            "ModuleInfo<Aurora>::Init(void)",
        ),
    ),
    (
        "Reeds_Add__FiG6VectorT1",
        Ok(
            "Reeds_Add(int, Vector, Vector)",
        ),
    ),
    (
        "LoadLine__6PortalP12KromeIniLine",
        Ok(
            "Portal::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadLevel_LoadInt__FP12KromeIniLinePcPi",
        Ok(
            "LoadLevel_LoadInt(KromeIniLine *, char *, int *)",
        ),
    ),
    (
        "iGsGetIMR",
        Err(
            NotMangled,
        ),
    ),
    (
        "gDisableCatchupForThisFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__16SynkerBlueTongueP11GameObjDesc",
        Ok(
            "SynkerBlueTongue::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$7SnowRoo",
        Ok(
            "SnowRoo virtual table",
        ),
    ),
    (
        "Frog_LoadResources__Fv",
        Ok(
            "Frog_LoadResources(void)",
        ),
    ),
    (
        "IsAnimDone__8LilNeddy",
        Ok(
            "LilNeddy::IsAnimDone(void)",
        ),
    ),
    (
        "Hit__5Leech",
        Ok(
            "Leech::Hit(void)",
        ),
    ),
    (
        "Message__6CrikeyP9MKMessage",
        Ok(
            "Crikey::Message(MKMessage *)",
        ),
    ),
    (
        "GrabIniSection__6Parser",
        Ok(
            "Parser::GrabIniSection(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Yabby",
        Ok(
            "ModuleInfo<Yabby>::Init(void)",
        ),
    ),
    (
        "DeadDeinit__9ShadowBat",
        Ok(
            "ShadowBat::DeadDeinit(void)",
        ),
    ),
    (
        "Update__7CogsHud",
        Ok(
            "CogsHud::Update(void)",
        ),
    ),
    (
        "Reset__4Drum",
        Ok(
            "Drum::Reset(void)",
        ),
    ),
    (
        "bDrawSubtitles",
        Err(
            NotMangled,
        ),
    ),
    (
        "_kill_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "InterpNode2__FP11ScissorNodeT0T0fi",
        Ok(
            "InterpNode2(ScissorNode *, ScissorNode *, ScissorNode *, float, int)",
        ),
    ),
    (
        "Init__17MKParticleGenType",
        Ok(
            "MKParticleGenType::Init(void)",
        ),
    ),
    (
        "StartEatingChumInit__6Crikey",
        Ok(
            "Crikey::StartEatingChumInit(void)",
        ),
    ),
    (
        "StarTrail_LoadResources__Fv",
        Ok(
            "StarTrail_LoadResources(void)",
        ),
    ),
    (
        "Position_Line__FP12KromeIniLine",
        Ok(
            "Position_Line(KromeIniLine *)",
        ),
    ),
    (
        "Cruise__6Groper",
        Ok(
            "Groper::Cruise(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Moth",
        Ok(
            "ModuleInfo<Moth> virtual table",
        ),
    ),
    (
        "LandToAirTransition__2Ty",
        Ok(
            "Ty::LandToAirTransition(void)",
        ),
    ),
    (
        "MKGrass_InitSineTable__Fv",
        Ok(
            "MKGrass_InitSineTable(void)",
        ),
    ),
    (
        "GlideJumpTransition__2Ty",
        Ok(
            "Ty::GlideJumpTransition(void)",
        ),
    ),
    (
        "ModelRender_ACExyT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_AExy_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "BackOff__6Muddieb",
        Ok(
            "Muddie::BackOff(bool)",
        ),
    ),
    (
        "Init__10IceCoolantP11GameObjDesc",
        Ok(
            "IceCoolant::Init(GameObjDesc *)",
        ),
    ),
    (
        "gMKDefaults",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_DestroyASystem__FPP14ParticleSystemf",
        Ok(
            "Particle_DestroyASystem(ParticleSystem **, float)",
        ),
    ),
    (
        "Attack__3Eel",
        Ok(
            "Eel::Attack(void)",
        ),
    ),
    (
        "Turn__6Wombatf",
        Ok(
            "Wombat::Turn(float)",
        ),
    ),
    (
        "BlendToRetreat__8MorayEel",
        Ok(
            "MorayEel::BlendToRetreat(void)",
        ),
    ),
    (
        "InitIdle__4Jeep",
        Ok(
            "Jeep::InitIdle(void)",
        ),
    ),
    (
        "Init__14RockCollectioni",
        Ok(
            "RockCollection::Init(int)",
        ),
    ),
    (
        "LoadDone__3Rex",
        Ok(
            "Rex::LoadDone(void)",
        ),
    ),
    (
        "MKMemoryCard_Update__Fv",
        Ok(
            "MKMemoryCard_Update(void)",
        ),
    ),
    (
        "SwallowCruiseDeinit__6Groper",
        Ok(
            "Groper::SwallowCruiseDeinit(void)",
        ),
    ),
    (
        "ThrowBurningJunkDeinit__11FrillLizard",
        Ok(
            "FrillLizard::ThrowBurningJunkDeinit(void)",
        ),
    ),
    (
        "Init__15TyIdleAnimTableP12MKAnimScript",
        Ok(
            "TyIdleAnimTable::Init(MKAnimScript *)",
        ),
    ),
    (
        "Particle_Special_Create__FPP14ParticleSystemP6VectorT1T1",
        Ok(
            "Particle_Special_Create(ParticleSystem **, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Init__7ChumBoxP11GameObjDesc",
        Ok(
            "ChumBox::Init(GameObjDesc *)",
        ),
    ),
    (
        "File_IsBusy__Fi",
        Ok(
            "File_IsBusy(int)",
        ),
    ),
    (
        "Flip__5Rhino",
        Ok(
            "Rhino::Flip(void)",
        ),
    ),
    (
        "printf",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11Shatterable",
        Ok(
            "ModuleInfo<Shatterable> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Burner",
        Ok(
            "ModuleInfo<Burner>::Init(void)",
        ),
    ),
    (
        "Draw__16Blitter_Cylinderi",
        Ok(
            "Blitter_Cylinder::Draw(int)",
        ),
    ),
    (
        "_vt$5Rhino",
        Ok(
            "Rhino virtual table",
        ),
    ),
    (
        "DiveBiteToFall__6TyBite",
        Ok(
            "TyBite::DiveBiteToFall(void)",
        ),
    ),
    (
        "QueryIntrContext",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFO1_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$8LilNeddy",
        Ok(
            "LilNeddy virtual table",
        ),
    ),
    (
        "MKPackage_Free__Fv",
        Ok(
            "MKPackage_Free(void)",
        ),
    ),
    (
        "HeadTurningSetNewOffset__2Ty",
        Ok(
            "Ty::HeadTurningSetNewOffset(void)",
        ),
    ),
    (
        "Spawn__11BonusPickupP6VectorT1",
        Ok(
            "BonusPickup::Spawn(Vector *, Vector *)",
        ),
    ),
    (
        "Bird_LoadResources__Fv",
        Ok(
            "Bird_LoadResources(void)",
        ),
    ),
    (
        "__ti16__attr_type_info",
        Ok(
            "__attr_type_info type_info node",
        ),
    ),
    (
        "SharedUpdate__5Gecko",
        Ok(
            "Gecko::SharedUpdate(void)",
        ),
    ),
    (
        "vsprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Julius_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Julius_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__10WhirlyWind",
        Ok(
            "WhirlyWind::LoadDone(void)",
        ),
    ),
    (
        "DeinitLongFall__2Ty",
        Ok(
            "Ty::DeinitLongFall(void)",
        ),
    ),
    (
        "RFU083_iSetEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckSplash__6Crikey",
        Ok(
            "Crikey::CheckSplash(void)",
        ),
    ),
    (
        "Hud_DecrementBossHealth__Fv",
        Ok(
            "Hud_DecrementBossHealth(void)",
        ),
    ),
    (
        "gFrameCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__6MKWave",
        Ok(
            "MKWave::Update(void)",
        ),
    ),
    (
        "TyMemCard_FetchDDA__Fv",
        Ok(
            "TyMemCard_FetchDDA(void)",
        ),
    ),
    (
        "Update__14MobilePlatform",
        Ok(
            "MobilePlatform::Update(void)",
        ),
    ),
    (
        "_8Jitterer$offsets",
        Ok(
            "Jitterer::offsets",
        ),
    ),
    (
        "Deinit__5Flame",
        Ok(
            "Flame::Deinit(void)",
        ),
    ),
    (
        "Input_WasDirectionPressed__F12InputDevicesiP12InputDevices",
        Ok(
            "Input_WasDirectionPressed(InputDevices, int, InputDevices *)",
        ),
    ),
    (
        "Message__9ShadowBatP9MKMessage",
        Ok(
            "ShadowBat::Message(MKMessage *)",
        ),
    ),
    (
        "scePadSetMainMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__13OpalCollector",
        Ok(
            "OpalCollector::Idle(void)",
        ),
    ),
    (
        "SpawnBoulder__11BoulderTrap",
        Ok(
            "BoulderTrap::SpawnBoulder(void)",
        ),
    ),
    (
        "Init__8LODEntryP5Model",
        Ok(
            "LODEntry::Init(Model *)",
        ),
    ),
    (
        "EmitSteam__6Fluffy",
        Ok(
            "Fluffy::EmitSteam(void)",
        ),
    ),
    (
        "_10NinjaGecko$nThrowHandBone",
        Ok(
            "NinjaGecko::nThrowHandBone",
        ),
    ),
    (
        "Load__18BurnableDescriptorP8KromeIni",
        Ok(
            "BurnableDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "_vt$13BubbleSpawner",
        Ok(
            "BubbleSpawner virtual table",
        ),
    ),
    (
        "Game_Deinit__Fv",
        Ok(
            "Game_Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Lava_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Lava_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Clear__3Dma",
        Ok(
            "Dma::Clear(void)",
        ),
    ),
    (
        "DeinitBiteUncharge__6TyBite",
        Ok(
            "TyBite::DeinitBiteUncharge(void)",
        ),
    ),
    (
        "Saved__8KoalaKid",
        Ok(
            "KoalaKid::Saved(void)",
        ),
    ),
    (
        "UpdateParticleEffect__9Flamerang",
        Ok(
            "Flamerang::UpdateParticleEffect(void)",
        ),
    ),
    (
        "DeinitGlideJump__2Ty",
        Ok(
            "Ty::DeinitGlideJump(void)",
        ),
    ),
    (
        "UseFallCamera__10GameCamerab",
        Ok(
            "GameCamera::UseFallCamera(bool)",
        ),
    ),
    (
        "Idle__6Target",
        Ok(
            "Target::Idle(void)",
        ),
    ),
    (
        "Send__12EventMessage",
        Ok(
            "EventMessage::Send(void)",
        ),
    ),
    (
        "Draw__10HudCounter",
        Ok(
            "HudCounter::Draw(void)",
        ),
    ),
    (
        "CheckForTy__11MetalSpikes",
        Ok(
            "MetalSpikes::CheckForTy(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Croc_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Croc_LoadResources(KromeIni *)",
        ),
    ),
    (
        "RetreatDeinit__5Skink",
        Ok(
            "Skink::RetreatDeinit(void)",
        ),
    ),
    (
        "Reset__11DropPontoon",
        Ok(
            "DropPontoon::Reset(void)",
        ),
    ),
    (
        "StopAggressive__5Rhino",
        Ok(
            "Rhino::StopAggressive(void)",
        ),
    ),
    (
        "LoadDone__15WaterTankStruct",
        Ok(
            "WaterTankStruct::LoadDone(void)",
        ),
    ),
    (
        "RFU009",
        Err(
            NotMangled,
        ),
    ),
    (
        "_signal_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__11ScrubTurkeyP9MKMessage",
        Ok(
            "ScrubTurkey::Message(MKMessage *)",
        ),
    ),
    (
        "DeathDeinit__6Muddie",
        Ok(
            "Muddie::DeathDeinit(void)",
        ),
    ),
    (
        "Deinit__19DialogEffectManager",
        Ok(
            "DialogEffectManager::Deinit(void)",
        ),
    ),
    (
        "BiteCharge__6TyBite",
        Ok(
            "TyBite::BiteCharge(void)",
        ),
    ),
    (
        "Broken__7AntHill",
        Ok(
            "AntHill::Broken(void)",
        ),
    ),
    (
        "_GLOBAL_$I$AntHill_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to AntHill_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SyncDCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "Explosion_LoadResources__Fv",
        Ok(
            "Explosion_LoadResources(void)",
        ),
    ),
    (
        "Sheila_GetPos__Fv",
        Ok(
            "Sheila_GetPos(void)",
        ),
    ),
    (
        "LoadLine__10WarpFlowerP12KromeIniLine",
        Ok(
            "WarpFlower::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LOD_Init__Fi",
        Ok(
            "LOD_Init(int)",
        ),
    ),
    (
        "Message__7CaveBatP9MKMessage",
        Ok(
            "CaveBat::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9SharkCage",
        Ok(
            "ModuleInfo<SharkCage> virtual table",
        ),
    ),
    (
        "SetBossDefeated__8GameData10ZoneNumberb",
        Ok(
            "GameData::SetBossDefeated(ZoneNumber, bool)",
        ),
    ),
    (
        "AddGif_AD_FOGCOL__3DmaUlUlUl",
        Ok(
            "Dma::AddGif_AD_FOGCOL(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "TyOnPlatform__2Ty",
        Ok(
            "Ty::TyOnPlatform(void)",
        ),
    ),
    (
        "Init__14TrapdoorSpiderP11GameObjDesc",
        Ok(
            "TrapdoorSpider::Init(GameObjDesc *)",
        ),
    ),
    (
        "LoadLevel_LoadFloatRange__FP12KromeIniLinePcPfT2",
        Ok(
            "LoadLevel_LoadFloatRange(KromeIniLine *, char *, float *, float *)",
        ),
    ),
    (
        "GetEvent__12MKAnimScripti",
        Ok(
            "MKAnimScript::GetEvent(int)",
        ),
    ),
    (
        "sceSifFreeSysMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "_decPicture",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Talisman",
        Ok(
            "ModuleInfo<Talisman> virtual table",
        ),
    ),
    (
        "Deinit__12FlameThrower",
        Ok(
            "FlameThrower::Deinit(void)",
        ),
    ),
    (
        "CreateHitFX__7Boulder",
        Ok(
            "Boulder::CreateHitFX(void)",
        ),
    ),
    (
        "DoHurt__6CrikeyP6Vector",
        Ok(
            "Crikey::DoHurt(Vector *)",
        ),
    ),
    (
        "Update__10GameObject",
        Ok(
            "GameObject::Update(void)",
        ),
    ),
    (
        "Recover__5Roach",
        Ok(
            "Roach::Recover(void)",
        ),
    ),
    (
        "FollowState__9ShoalFish",
        Ok(
            "ShoalFish::FollowState(void)",
        ),
    ),
    (
        "RenderTexture_Update__Fv",
        Ok(
            "RenderTexture_Update(void)",
        ),
    ),
    (
        "SetLocalToWorldMatrix__4ViewP6Matrix",
        Ok(
            "View::SetLocalToWorldMatrix(Matrix *)",
        ),
    ),
    (
        "_10DDASession$bInitialised",
        Ok(
            "DDASession::bInitialised",
        ),
    ),
    (
        "MKMem_DeinitModule__Fv",
        Ok(
            "MKMem_DeinitModule(void)",
        ),
    ),
    (
        "collisionHeapIndex",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__8TalismanP11GameObjDesc",
        Ok(
            "Talisman::Init(GameObjDesc *)",
        ),
    ),
    (
        "Update_Normal__10WhirlyWind",
        Ok(
            "WhirlyWind::Update_Normal(void)",
        ),
    ),
    (
        "SetRotationToNone__6Matrix",
        Ok(
            "Matrix::SetRotationToNone(void)",
        ),
    ),
    (
        "Tools_GetTimeInSeconds__Fv",
        Ok(
            "Tools_GetTimeInSeconds(void)",
        ),
    ),
    (
        "__sseek",
        Err(
            InvalidSpecialMethod(
                "sseek",
            ),
        ),
    ),
    (
        "Assign__13SkinkDropTailP6VectorPP13SkinkDropTail",
        Ok(
            "SkinkDropTail::Assign(Vector *, SkinkDropTail **)",
        ),
    ),
    (
        "__sinit",
        Err(
            InvalidSpecialMethod(
                "sinit",
            ),
        ),
    ),
    (
        "Crc_Checksum__FPCvi",
        Ok(
            "Crc_Checksum(void const *, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Gecko",
        Ok(
            "ModuleInfo<Gecko>::Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Bouncer",
        Ok(
            "ModuleInfo<Bouncer> virtual table",
        ),
    ),
    (
        "InWater__7BushPig",
        Ok(
            "BushPig::InWater(void)",
        ),
    ),
    (
        "Update__16SoundEventHelperibbP10GameObjectP6Vectorfi",
        Ok(
            "SoundEventHelper::Update(int, bool, bool, GameObject *, Vector *, float, int)",
        ),
    ),
    (
        "ModelRender_ACW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "__5Image",
        Ok(
            "Image::Image(void)",
        ),
    ),
    (
        "DoLaunch__10WarpFlower",
        Ok(
            "WarpFlower::DoLaunch(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z23PerimeterCheckObjectivePv",
        Ok(
            "ModuleInfo<PerimeterCheckObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "MiniGameObjective_LoadResources__FP8KromeIni",
        Ok(
            "MiniGameObjective_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ScaleOut__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::ScaleOut(void)",
        ),
    ),
    (
        "sceMpegDispCenterOffX",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegIsEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Util_WildcardPatternMatch__FPcT0",
        Ok(
            "Util_WildcardPatternMatch(char *, char *)",
        ),
    ),
    (
        "JumpDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::JumpDeinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z16A1FrillObjectivePv",
        Ok(
            "ModuleInfo<A1FrillObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "Sound_MusicPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__11BurningJunk",
        Ok(
            "BurningJunk::Update(void)",
        ),
    ),
    (
        "_10ArsonTorch$refPoint",
        Ok(
            "ArsonTorch::refPoint",
        ),
    ),
    (
        "Trigger__14CameraOverride",
        Ok(
            "CameraOverride::Trigger(void)",
        ),
    ),
    (
        "Start__15LearnToDiveData",
        Ok(
            "LearnToDiveData::Start(void)",
        ),
    ),
    (
        "InitLobbingBarrel__9Speedboat",
        Ok(
            "Speedboat::InitLobbingBarrel(void)",
        ),
    ),
    (
        "_vt$14ShadowBatValve",
        Ok(
            "ShadowBatValve virtual table",
        ),
    ),
    (
        "sceOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8Material$pRenderNodeMemory",
        Ok(
            "Material::pRenderNodeMemory",
        ),
    ),
    (
        "RunForward__6Muddieb",
        Ok(
            "Muddie::RunForward(bool)",
        ),
    ),
    (
        "Update__10WhirlyWind",
        Ok(
            "WhirlyWind::Update(void)",
        ),
    ),
    (
        "Start__9WaterDripP6VectorP14BoundingVolumef",
        Ok(
            "WaterDrip::Start(Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "RFU090_iReferEventFlagStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetGetInterfaceList",
        Err(
            NotMangled,
        ),
    ),
    (
        "Leech_LoadResources__FP8KromeIni",
        Ok(
            "Leech_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_rix_101",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14StalactiteTrap",
        Ok(
            "ModuleInfo<StalactiteTrap>::Init(void)",
        ),
    ),
    (
        "_vt$16StaticFXPropDesc",
        Ok(
            "StaticFXPropDesc virtual table",
        ),
    ),
    (
        "STEAM_REF1",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetDirty__8GameDatab",
        Ok(
            "GameData::SetDirty(bool)",
        ),
    ),
    (
        "MKTrivialReject",
        Err(
            NotMangled,
        ),
    ),
    (
        "Animate__9Animation",
        Ok(
            "Animation::Animate(void)",
        ),
    ),
    (
        "IdleInit__6Aurora",
        Ok(
            "Aurora::IdleInit(void)",
        ),
    ),
    (
        "Load__15EnemyDescriptorP8KromeIni",
        Ok(
            "EnemyDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "Logic__12ShearsStruct",
        Ok(
            "ShearsStruct::Logic(void)",
        ),
    ),
    (
        "Message__7AntHillP9MKMessage",
        Ok(
            "AntHill::Message(MKMessage *)",
        ),
    ),
    (
        "Scale__6MatrixP6Vector",
        Ok(
            "Matrix::Scale(Vector *)",
        ),
    ),
    (
        "Stunned__6Groper",
        Ok(
            "Groper::Stunned(void)",
        ),
    ),
    (
        "BootTest_Update__Fv",
        Ok(
            "BootTest_Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10TyFlyField",
        Ok(
            "ModuleInfo<TyFlyField> virtual table",
        ),
    ),
    (
        "what__C9exception",
        Ok(
            "exception::what(void) const",
        ),
    ),
    (
        "Walk__5Neddy",
        Ok(
            "Neddy::Walk(void)",
        ),
    ),
    (
        "getIntersectCount__14BoundingRegionP6VectorT1",
        Ok(
            "BoundingRegion::getIntersectCount(Vector *, Vector *)",
        ),
    ),
    (
        "SetAbsolutePosition__2TyP6Vectorifb",
        Ok(
            "Ty::SetAbsolutePosition(Vector *, int, float, bool)",
        ),
    ),
    (
        "MKWaterRenderStub_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Spear",
        Ok(
            "ModuleInfo<Spear>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Rock",
        Ok(
            "ModuleInfo<Rock>::Init(void)",
        ),
    ),
    (
        "InitFromImage__7TexturePcP5Image",
        Ok(
            "Texture::InitFromImage(char *, Image *)",
        ),
    ),
    (
        "Run__10BlueTongueb",
        Ok(
            "BlueTongue::Run(bool)",
        ),
    ),
    (
        "High_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::High_Create(void *)",
        ),
    ),
    (
        "__register_frame",
        Err(
            InvalidSpecialMethod(
                "register_frame",
            ),
        ),
    ),
    (
        "DisableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_PRMODECONT__3DmaUl",
        Ok(
            "Dma::AddGif_AD_PRMODECONT(unsigned long)",
        ),
    ),
    (
        "Idle_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Idle_Update(void)",
        ),
    ),
    (
        "_setlocale_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsSjis__FPUc",
        Ok(
            "IsSjis(unsigned char *)",
        ),
    ),
    (
        "Tools_MapPadToKey__Fi",
        Ok(
            "Tools_MapPadToKey(int)",
        ),
    ),
    (
        "ResetPitchAndRoll__2Ty",
        Ok(
            "Ty::ResetPitchAndRoll(void)",
        ),
    ),
    (
        "Avalanche_LoadResources__Fv",
        Ok(
            "Avalanche_LoadResources(void)",
        ),
    ),
    (
        "TimeAttack_OnInit__Fv",
        Ok(
            "TimeAttack_OnInit(void)",
        ),
    ),
    (
        "LoadLine__13AnimatingPropP12KromeIniLine",
        Ok(
            "AnimatingProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadDone__10Teleporter",
        Ok(
            "Teleporter::LoadDone(void)",
        ),
    ),
    (
        "Reset__12AquarangProp",
        Ok(
            "AquarangProp::Reset(void)",
        ),
    ),
    (
        "SpawnStatic__3Gem",
        Ok(
            "Gem::SpawnStatic(void)",
        ),
    ),
    (
        "sceClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResetActivation__9Lightning",
        Ok(
            "Lightning::ResetActivation(void)",
        ),
    ),
    (
        "Copyright_Update__Fv",
        Ok(
            "Copyright_Update(void)",
        ),
    ),
    (
        "IceBlock_LoadResources__Fv",
        Ok(
            "IceBlock_LoadResources(void)",
        ),
    ),
    (
        "LoadDone__14CrikeyCanister",
        Ok(
            "CrikeyCanister::LoadDone(void)",
        ),
    ),
    (
        "Update__13ExplosionList",
        Ok(
            "ExplosionList::Update(void)",
        ),
    ),
    (
        "__sfmoreglue",
        Err(
            InvalidSpecialMethod(
                "sfmoreglue",
            ),
        ),
    ),
    (
        "Waterfall_Draw__Fv",
        Ok(
            "Waterfall_Draw(void)",
        ),
    ),
    (
        "SweepSphereCollide__10GameCameraP6VectorT1f13CollisionModei",
        Ok(
            "GameCamera::SweepSphereCollide(Vector *, Vector *, float, CollisionMode, int)",
        ),
    ),
    (
        "TransformPointPSX2__4ViewP9IntVectorP6Vector",
        Ok(
            "View::TransformPointPSX2(IntVector *, Vector *)",
        ),
    ),
    (
        "Fire__11KaboomerangP6VectorT1",
        Ok(
            "Kaboomerang::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "PerpAverage__6VectorP6VectorT1",
        Ok(
            "Vector::PerpAverage(Vector *, Vector *)",
        ),
    ),
    (
        "_14ParticleSystem$bDrawPos",
        Ok(
            "ParticleSystem::bDrawPos",
        ),
    ),
    (
        "Walk__3Sly",
        Ok(
            "Sly::Walk(void)",
        ),
    ),
    (
        "ChaseInit__5Shark",
        Ok(
            "Shark::ChaseInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11RhinoGround",
        Ok(
            "ModuleInfo<RhinoGround>::Init(void)",
        ),
    ),
    (
        "ungetc",
        Err(
            NotMangled,
        ),
    ),
    (
        "BuzzSaw2_LoadResources__FP8KromeIni",
        Ok(
            "BuzzSaw2_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceMcMkdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__10DialogProp",
        Ok(
            "DialogProp::LoadDone(void)",
        ),
    ),
    (
        "Translation_SetLanguage__F19TranslationLanguage",
        Ok(
            "Translation_SetLanguage(TranslationLanguage)",
        ),
    ),
    (
        "joystickDeadZone",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Message__11BunyipElderP9MKMessage",
        Ok(
            "global constructors keyed to BunyipElder::Message(MKMessage *)",
        ),
    ),
    (
        "sceMcChdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "TempAlloc__Fi",
        Ok(
            "TempAlloc(int)",
        ),
    ),
    (
        "TweenAnim__12MKAnimScriptP6MKAnims",
        Ok(
            "MKAnimScript::TweenAnim(MKAnim *, short)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11BurningTree",
        Ok(
            "ModuleInfo<BurningTree> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14SpiderTrapdoor",
        Ok(
            "ModuleInfo<SpiderTrapdoor> virtual table",
        ),
    ),
    (
        "DeinitLassoCaughtEmu__5Lasso",
        Ok(
            "Lasso::DeinitLassoCaughtEmu(void)",
        ),
    ),
    (
        "before__C9type_infoRC9type_info",
        Ok(
            "type_info::before(type_info const &) const",
        ),
    ),
    (
        "Reset__9SpiderWeb",
        Ok(
            "SpiderWeb::Reset(void)",
        ),
    ),
    (
        "Fish_Add__FP6Vector",
        Ok(
            "Fish_Add(Vector *)",
        ),
    ),
    (
        "MKShadow_SetUnlockedPixelColor__FUi",
        Ok(
            "MKShadow_SetUnlockedPixelColor(unsigned int)",
        ),
    ),
    (
        "_5Flame$type",
        Ok(
            "Flame::type",
        ),
    ),
    (
        "MKWaterManager_DrawDebugInfo__Fv",
        Ok(
            "MKWaterManager_DrawDebugInfo(void)",
        ),
    ),
    (
        "Flinch__6Crikey",
        Ok(
            "Crikey::Flinch(void)",
        ),
    ),
    (
        "LoadDone__14ShadowBatValve",
        Ok(
            "ShadowBatValve::LoadDone(void)",
        ),
    ),
    (
        "IdleEdgeWobbleTransition__2Ty",
        Ok(
            "Ty::IdleEdgeWobbleTransition(void)",
        ),
    ),
    (
        "GetDesc__11BoulderTrap",
        Ok(
            "BoulderTrap::GetDesc(void)",
        ),
    ),
    (
        "__malloc_unlock",
        Err(
            InvalidSpecialMethod(
                "malloc_unlock",
            ),
        ),
    ),
    (
        "ModelRender_FLS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deactivate__10BlueTongue",
        Ok(
            "BlueTongue::Deactivate(void)",
        ),
    ),
    (
        "_vt$13DDACheckpoint",
        Ok(
            "DDACheckpoint virtual table",
        ),
    ),
    (
        "Update__21WaterfallStreamStruct",
        Ok(
            "WaterfallStreamStruct::Update(void)",
        ),
    ),
    (
        "Update__11DropPontoon",
        Ok(
            "DropPontoon::Update(void)",
        ),
    ),
    (
        "Race__3Rex",
        Ok(
            "Rex::Race(void)",
        ),
    ),
    (
        "StopSound__8KoalaKid",
        Ok(
            "KoalaKid::StopSound(void)",
        ),
    ),
    (
        "SpyEgg_FindClosest__FP6VectorP5Model",
        Ok(
            "SpyEgg_FindClosest(Vector *, Model *)",
        ),
    ),
    (
        "Main_CheckShortcutKeys__Fv",
        Ok(
            "Main_CheckShortcutKeys(void)",
        ),
    ),
    (
        "CopyTranslation__6MatrixP6Matrix",
        Ok(
            "Matrix::CopyTranslation(Matrix *)",
        ),
    ),
    (
        "CheckEvents__4Bull",
        Ok(
            "Bull::CheckEvents(void)",
        ),
    ),
    (
        "Load__14GateDescriptorP8KromeIni",
        Ok(
            "GateDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "Doomarang_Update__10GameCamera",
        Ok(
            "GameCamera::Doomarang_Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9GeneratorPv",
        Ok(
            "ModuleInfo<Generator>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15WaterTankStruct",
        Ok(
            "ModuleInfo<WaterTankStruct>::Init(void)",
        ),
    ),
    (
        "Fall__2Ty",
        Ok(
            "Ty::Fall(void)",
        ),
    ),
    (
        "__rtti_ptmd",
        Err(
            InvalidSpecialMethod(
                "rtti_ptmd",
            ),
        ),
    ),
    (
        "libnet_init",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCounterModelTrianglesDrawn",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$14LevelObjective",
        Ok(
            "LevelObjective virtual table",
        ),
    ),
    (
        "FindGroup__21ParticleSystemManagerP18ParticleSystemType",
        Ok(
            "ParticleSystemManager::FindGroup(ParticleSystemType *)",
        ),
    ),
    (
        "descr_cast__H1ZP7FlyDesc_P16MKPropDescriptor_X01",
        Ok(
            "FlyDesc * descr_cast<FlyDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "CameraOverrideTopDown_Start__Fv",
        Ok(
            "CameraOverrideTopDown_Start(void)",
        ),
    ),
    (
        "iRotateThreadReadyQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__13Blitter_Planei",
        Ok(
            "Blitter_Plane::Draw(int)",
        ),
    ),
    (
        "LogicUpdate__6Groper",
        Ok(
            "Groper::LogicUpdate(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10Projectile",
        Ok(
            "ModuleInfo<Projectile> virtual table",
        ),
    ),
    (
        "System_SetScreenOffset__Fff",
        Ok(
            "System_SetScreenOffset(float, float)",
        ),
    ),
    (
        "Reset__6Fluffy",
        Ok(
            "Fluffy::Reset(void)",
        ),
    ),
    (
        "LoadLine__10TimeAttackP12KromeIniLine",
        Ok(
            "TimeAttack::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7ChumBoxPv",
        Ok(
            "ModuleInfo<ChumBox>::ConstructObject(void *)",
        ),
    ),
    (
        "Hidden__6Basket",
        Ok(
            "Basket::Hidden(void)",
        ),
    ),
    (
        "_19Tools_LevelOverride$DebugColor",
        Ok(
            "Tools_LevelOverride::DebugColor",
        ),
    ),
    (
        "ModelRender_FLST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlipInit__5Roach",
        Ok(
            "Roach::FlipInit(void)",
        ),
    ),
    (
        "Direction_Init__14CameraOverride",
        Ok(
            "CameraOverride::Direction_Init(void)",
        ),
    ),
    (
        "BurniningTree_IsTreeActive__FP10GameObject",
        Ok(
            "BurniningTree_IsTreeActive(GameObject *)",
        ),
    ),
    (
        "sceMcUnformat",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lassoed__9FrillBike",
        Ok(
            "FrillBike::Lassoed(void)",
        ),
    ),
    (
        "SetShowPos__19SpecialPickupStructP6Vector",
        Ok(
            "SpecialPickupStruct::SetShowPos(Vector *)",
        ),
    ),
    (
        "GetNodeMatrix__9Animationi",
        Ok(
            "Animation::GetNodeMatrix(int)",
        ),
    ),
    (
        "_7MKWater$bFixCameraPos",
        Ok(
            "MKWater::bFixCameraPos",
        ),
    ),
    (
        "ResetToStart__5Leech",
        Ok(
            "Leech::ResetToStart(void)",
        ),
    ),
    (
        "WalkInit__4Ibis",
        Ok(
            "Ibis::WalkInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z19SpecialPickupStruct",
        Ok(
            "ModuleInfo<SpecialPickupStruct>::Init(void)",
        ),
    ),
    (
        "scePadPortOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Rhino",
        Ok(
            "ModuleInfo<Rhino> virtual table",
        ),
    ),
    (
        "SetupPath__8CableCar",
        Ok(
            "CableCar::SetupPath(void)",
        ),
    ),
    (
        "Deinit__20WaterfallSprayStruct",
        Ok(
            "WaterfallSprayStruct::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z17MiniGameObjective",
        Ok(
            "ModuleInfo<MiniGameObjective>::Init(void)",
        ),
    ),
    (
        "_vt$6Wombat",
        Ok(
            "Wombat virtual table",
        ),
    ),
    (
        "Deinit__7SnowRoo",
        Ok(
            "SnowRoo::Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Bat",
        Ok(
            "ModuleInfo<Bat> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11WaterVolume",
        Ok(
            "ModuleInfo<WaterVolume>::Init(void)",
        ),
    ),
    (
        "_GLOBAL_$I$gVU0Manager",
        Ok(
            "global constructors keyed to gVU0Manager",
        ),
    ),
    (
        "Idle__5Leech",
        Ok(
            "Leech::Idle(void)",
        ),
    ),
    (
        "strlwr",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackPattern1Init__5Rufus",
        Ok(
            "Rufus::AttackPattern1Init(void)",
        ),
    ),
    (
        "InitLevel__17CritterField2Desc",
        Ok(
            "CritterField2Desc::InitLevel(void)",
        ),
    ),
    (
        "Publisher_Update__Fv",
        Ok(
            "Publisher_Update(void)",
        ),
    ),
    (
        "YabbyObjective_CheckForCompletion__Fv",
        Ok(
            "YabbyObjective_CheckForCompletion(void)",
        ),
    ),
    (
        "Range_WhichZone__FP6VectorPf",
        Ok(
            "Range_WhichZone(Vector *, float *)",
        ),
    ),
    (
        "DeinitLaunch__2Ty",
        Ok(
            "Ty::DeinitLaunch(void)",
        ),
    ),
    (
        "StruckInit__5Skink",
        Ok(
            "Skink::StruckInit(void)",
        ),
    ),
    (
        "LoadDescriptors__H1Z16StaticFXPropDesc_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<StaticFXPropDesc>(KromeIni *, char *, StaticFXPropDesc *)",
        ),
    ),
    (
        "AddSpin__10Projectile",
        Ok(
            "Projectile::AddSpin(void)",
        ),
    ),
    (
        "MKWaterRender_WSEMTM_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "OrthoEnd__4View",
        Ok(
            "View::OrthoEnd(void)",
        ),
    ),
    (
        "DyingInit__9ShadowBat",
        Ok(
            "ShadowBat::DyingInit(void)",
        ),
    ),
    (
        "InitFirstPerson__2Ty",
        Ok(
            "Ty::InitFirstPerson(void)",
        ),
    ),
    (
        "__tf13bad_exception",
        Ok(
            "bad_exception type_info function",
        ),
    ),
    (
        "AddGif_AD_FINISH__3Dma",
        Ok(
            "Dma::AddGif_AD_FINISH(void)",
        ),
    ),
    (
        "AddGif_AD_TRXPOS__3DmaUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TRXPOS(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "MKShadow_AddEdge__Fii",
        Ok(
            "MKShadow_AddEdge(int, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8WhiteBat",
        Ok(
            "ModuleInfo<WhiteBat>::Init(void)",
        ),
    ),
    (
        "_vt$4Lava",
        Ok(
            "Lava virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13GuideParticle",
        Ok(
            "ModuleInfo<GuideParticle>::Init(void)",
        ),
    ),
    (
        "_$_17__class_type_info",
        Ok(
            "__class_type_info::~__class_type_info(void)",
        ),
    ),
    (
        "LoadLine__6MKPropP12KromeIniLine",
        Ok(
            "MKProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Init__14RockProjectile",
        Ok(
            "RockProjectile::Init(void)",
        ),
    ),
    (
        "UpdateTilt__11IcePlatform",
        Ok(
            "IcePlatform::UpdateTilt(void)",
        ),
    ),
    (
        "Reset__13ShatterStruct",
        Ok(
            "ShatterStruct::Reset(void)",
        ),
    ),
    (
        "Fade__11FaderObjectQ211FaderObject8FadeModefffb",
        Ok(
            "FaderObject::Fade(FaderObject::FadeMode, float, float, float, bool)",
        ),
    ),
    (
        "LoadLine__12AquarangPropP12KromeIniLine",
        Ok(
            "AquarangProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$10Teleporter",
        Ok(
            "Teleporter virtual table",
        ),
    ),
    (
        "_strtod_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraDescriptor_Update__10GameCamera",
        Ok(
            "GameCamera::CameraDescriptor_Update(void)",
        ),
    ),
    (
        "SpeedUpCrate_Init__Fv",
        Ok(
            "SpeedUpCrate_Init(void)",
        ),
    ),
    (
        "DrawFire__8BurnableP6Vector",
        Ok(
            "Burnable::DrawFire(Vector *)",
        ),
    ),
    (
        "Reset__13GuideParticle",
        Ok(
            "GuideParticle::Reset(void)",
        ),
    ),
    (
        "Init__11PathManagerScP6Vectorf",
        Ok(
            "PathManager::Init(signed char, Vector *, float)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6MauriePv",
        Ok(
            "ModuleInfo<Maurie>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$10StaticProp",
        Ok(
            "StaticProp virtual table",
        ),
    ),
    (
        "GasJet_LoadResources__FP8KromeIni",
        Ok(
            "GasJet_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9ShadowBat",
        Ok(
            "ModuleInfo<ShadowBat> virtual table",
        ),
    ),
    (
        "LoadLine__16WaterSlideEffectP12KromeIniLine",
        Ok(
            "WaterSlideEffect::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "GetRefPointWorldPosition__5ModeliP6Vector",
        Ok(
            "Model::GetRefPointWorldPosition(int, Vector *)",
        ),
    ),
    (
        "_getAllRefs",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetLastFrame__9Animation",
        Ok(
            "Animation::GetLastFrame(void)",
        ),
    ),
    (
        "Unload__11MKWaterType",
        Ok(
            "MKWaterType::Unload(void)",
        ),
    ),
    (
        "LoadDone__9OpalCrate",
        Ok(
            "OpalCrate::LoadDone(void)",
        ),
    ),
    (
        "GotoLine__8KromeIniPcT1",
        Ok(
            "KromeIni::GotoLine(char *, char *)",
        ),
    ),
    (
        "CMultiply__6VectorP6Vector",
        Ok(
            "Vector::CMultiply(Vector *)",
        ),
    ),
    (
        "WaterSlide_Deinit__10GameCamera",
        Ok(
            "GameCamera::WaterSlide_Deinit(void)",
        ),
    ),
    (
        "MonitorScales__11BunyipElder",
        Ok(
            "BunyipElder::MonitorScales(void)",
        ),
    ),
    (
        "GC_Break__Fv",
        Ok(
            "GC_Break(void)",
        ),
    ),
    (
        "Reset__3Gem",
        Ok(
            "Gem::Reset(void)",
        ),
    ),
    (
        "Respawn__11CrateStruct",
        Ok(
            "CrateStruct::Respawn(void)",
        ),
    ),
    (
        "Turn__6Fluffy",
        Ok(
            "Fluffy::Turn(void)",
        ),
    ),
    (
        "Chase__10BlueTongue",
        Ok(
            "BlueTongue::Chase(void)",
        ),
    ),
    (
        "iSetAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLO1S_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomTargetPos__5RoachRC6Vectorf",
        Ok(
            "Roach::GenerateRandomTargetPos(Vector const &, float)",
        ),
    ),
    (
        "Message__21FrillProblemObjectiveP9MKMessage",
        Ok(
            "FrillProblemObjective::Message(MKMessage *)",
        ),
    ),
    (
        "JumpInit__7C3Actor",
        Ok(
            "C3Actor::JumpInit(void)",
        ),
    ),
    (
        "Deactivate__11EnemyObject",
        Ok(
            "EnemyObject::Deactivate(void)",
        ),
    ),
    (
        "SphereCheck__7BushPigP6VectorT1fP15CollisionResult",
        Ok(
            "BushPig::SphereCheck(Vector *, Vector *, float, CollisionResult *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10TimeAttack",
        Ok(
            "ModuleInfo<TimeAttack>::Init(void)",
        ),
    ),
    (
        "_8FireDrum$nMoreFlameSO",
        Ok(
            "FireDrum::nMoreFlameSO",
        ),
    ),
    (
        "InitAfterDunny__7BushPig",
        Ok(
            "BushPig::InitAfterDunny(void)",
        ),
    ),
    (
        "GameCamera_Update__FP18GameCameraHeroInfo",
        Ok(
            "GameCamera_Update(GameCameraHeroInfo *)",
        ),
    ),
    (
        "CheckForDogPaddleSplashes__Fv",
        Ok(
            "CheckForDogPaddleSplashes(void)",
        ),
    ),
    (
        "sceSifSearchModuleByAddress",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnIceEffect__10FootEffectP6VectorT1P14BoundingVolumefT1",
        Ok(
            "FootEffect::SpawnIceEffect(Vector *, Vector *, BoundingVolume *, float, Vector *)",
        ),
    ),
    (
        "Swim__3Eel",
        Ok(
            "Eel::Swim(void)",
        ),
    ),
    (
        "_vt$9SoundProp",
        Ok(
            "SoundProp virtual table",
        ),
    ),
    (
        "Burner_LoadResources__FP8KromeIni",
        Ok(
            "Burner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Setup_End__Fv",
        Ok(
            "Setup_End(void)",
        ),
    ),
    (
        "SetRenderTypeOverride__5Modeli",
        Ok(
            "Model::SetRenderTypeOverride(int)",
        ),
    ),
    (
        "Message__4CrocP9MKMessage",
        Ok(
            "Croc::Message(MKMessage *)",
        ),
    ),
    (
        "Message__10WarpFlowerP9MKMessage",
        Ok(
            "WarpFlower::Message(MKMessage *)",
        ),
    ),
    (
        "_5Lenny$currentLenny",
        Ok(
            "Lenny::currentLenny",
        ),
    ),
    (
        "JumpTurn__5Yabby",
        Ok(
            "Yabby::JumpTurn(void)",
        ),
    ),
    (
        "_vt$17KoalaKidObjective",
        Ok(
            "KoalaKidObjective virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15StopwatchStruct",
        Ok(
            "ModuleInfo<StopwatchStruct> virtual table",
        ),
    ),
    (
        "DeinitStartled__3Emu",
        Ok(
            "Emu::DeinitStartled(void)",
        ),
    ),
    (
        "_cpr8",
        Err(
            NotMangled,
        ),
    ),
    (
        "Boomerang_Init__Fv",
        Ok(
            "Boomerang_Init(void)",
        ),
    ),
    (
        "_vt$3Eel",
        Ok(
            "Eel virtual table",
        ),
    ),
    (
        "Moth_LoadResources__Fv",
        Ok(
            "Moth_LoadResources(void)",
        ),
    ),
    (
        "SetState__17MiniBoulderStructi",
        Ok(
            "MiniBoulderStruct::SetState(int)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15BurnerObjectivePv",
        Ok(
            "ModuleInfo<BurnerObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__8Burnable",
        Ok(
            "Burnable::Update(void)",
        ),
    ),
    (
        "MoveUnderWater__2Ty",
        Ok(
            "Ty::MoveUnderWater(void)",
        ),
    ),
    (
        "LogicUpdate__3Eel",
        Ok(
            "Eel::LogicUpdate(void)",
        ),
    ),
    (
        "Init__10BlueTongueP11GameObjDesc",
        Ok(
            "BlueTongue::Init(GameObjDesc *)",
        ),
    ),
    (
        "LavaBurner_LoadResources__FP8KromeIni",
        Ok(
            "LavaBurner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__17GameObjectManager",
        Ok(
            "GameObjectManager::Init(void)",
        ),
    ),
    (
        "Hurt__8TyHealth8HurtType",
        Ok(
            "TyHealth::Hurt(HurtType)",
        ),
    ),
    (
        "Draw__14Blitter_TriFanif",
        Ok(
            "Blitter_TriFan::Draw(int, float)",
        ),
    ),
    (
        "TauntDeinit__5Skink",
        Ok(
            "Skink::TauntDeinit(void)",
        ),
    ),
    (
        "_10TumbleWeed$desc",
        Ok(
            "TumbleWeed::desc",
        ),
    ),
    (
        "WaterTank_LoadResources__FP8KromeIni",
        Ok(
            "WaterTank_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__24SimpleParticleSystemTypePcP8Materialfffi",
        Ok(
            "SimpleParticleSystemType::Init(char *, Material *, float, float, float, int)",
        ),
    ),
    (
        "UpdateLoaded__8Megarang",
        Ok(
            "Megarang::UpdateLoaded(void)",
        ),
    ),
    (
        "Bunyip_Delete__Fv",
        Ok(
            "Bunyip_Delete(void)",
        ),
    ),
    (
        "cpuOutBuf",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpinningLog_SetRotVel__FP11SpinningLogf",
        Ok(
            "SpinningLog_SetRotVel(SpinningLog *, float)",
        ),
    ),
    (
        "ApproxMag__Ffff",
        Ok(
            "ApproxMag(float, float, float)",
        ),
    ),
    (
        "GetCentre__5ModelP6Vector",
        Ok(
            "Model::GetCentre(Vector *)",
        ),
    ),
    (
        "Update__10TumbleWeed",
        Ok(
            "TumbleWeed::Update(void)",
        ),
    ),
    (
        "SendMessage__14MKSceneManagerP9MKMessageUibP6Vectorf",
        Ok(
            "MKSceneManager::SendMessage(MKMessage *, unsigned int, bool, Vector *, float)",
        ),
    ),
    (
        "Reset__4Croc",
        Ok(
            "Croc::Reset(void)",
        ),
    ),
    (
        "DrawDebugInfo__13MKParticleGenP4View",
        Ok(
            "MKParticleGen::DrawDebugInfo(View *)",
        ),
    ),
    (
        "CloseDialog__10DialogProp",
        Ok(
            "DialogProp::CloseDialog(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z17BlueTongueThrower",
        Ok(
            "ModuleInfo<BlueTongueThrower>::Init(void)",
        ),
    ),
    (
        "Weather_Draw__FP4View",
        Ok(
            "Weather_Draw(View *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9AuroraKidPv",
        Ok(
            "ModuleInfo<AuroraKid>::ConstructObject(void *)",
        ),
    ),
    (
        "RunToWaypoint_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::RunToWaypoint_Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12TyAttributesPv",
        Ok(
            "ModuleInfo<TyAttributes>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitFallDive__2Ty",
        Ok(
            "Ty::DeinitFallDive(void)",
        ),
    ),
    (
        "Land__9ShadowBat",
        Ok(
            "ShadowBat::Land(void)",
        ),
    ),
    (
        "Chase__8PubeCrab",
        Ok(
            "PubeCrab::Chase(void)",
        ),
    ),
    (
        "Shattering__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Shattering(void)",
        ),
    ),
    (
        "DoFlamerangLighting__2Ty",
        Ok(
            "Ty::DoFlamerangLighting(void)",
        ),
    ),
    (
        "ParseData__8KromeIni",
        Ok(
            "KromeIni::ParseData(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9BadBoonie",
        Ok(
            "ModuleInfo<BadBoonie>::Init(void)",
        ),
    ),
    (
        "CustomCameraMatrix_Init__10GameCamera",
        Ok(
            "GameCamera::CustomCameraMatrix_Init(void)",
        ),
    ),
    (
        "pCounterModelRender3rd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACWT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitLevel__17CritterField2Desc",
        Ok(
            "CritterField2Desc::DeinitLevel(void)",
        ),
    ),
    (
        "Update__15StopwatchStruct",
        Ok(
            "StopwatchStruct::Update(void)",
        ),
    ),
    (
        "sitofp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__6Aurora",
        Ok(
            "Aurora::Reset(void)",
        ),
    ),
    (
        "LoadDone__14StalactiteTrap",
        Ok(
            "StalactiteTrap::LoadDone(void)",
        ),
    ),
    (
        "IsValidAlphaNum__Fc",
        Ok(
            "IsValidAlphaNum(char)",
        ),
    ),
    (
        "PipePart_LoadResources__FP8KromeIni",
        Ok(
            "PipePart_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MKGrass_InitTypes__FPc",
        Ok(
            "MKGrass_InitTypes(char *)",
        ),
    ),
    (
        "JumpIdleInit__6Wombat",
        Ok(
            "Wombat::JumpIdleInit(void)",
        ),
    ),
    (
        "LandInit__7CaveBat",
        Ok(
            "CaveBat::LandInit(void)",
        ),
    ),
    (
        "GameCamera_SetDistanceType__F18CameraDistanceTypef",
        Ok(
            "GameCamera_SetDistanceType(CameraDistanceType, float)",
        ),
    ),
    (
        "Animation_DeinitModule__Fv",
        Ok(
            "Animation_DeinitModule(void)",
        ),
    ),
    (
        "MKGrassRender_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7C3ActorPv",
        Ok(
            "ModuleInfo<C3Actor>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14CrikeyCanister",
        Ok(
            "ModuleInfo<CrikeyCanister>::Init(void)",
        ),
    ),
    (
        "Ty_Start__Fv",
        Ok(
            "Ty_Start(void)",
        ),
    ),
    (
        "AllocateCritter__17CritterField2Desc",
        Ok(
            "CritterField2Desc::AllocateCritter(void)",
        ),
    ),
    (
        "Wobble_Init__4Gate",
        Ok(
            "Gate::Wobble_Init(void)",
        ),
    ),
    (
        "sceDmaCurrentEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__11BilbyStruct",
        Ok(
            "BilbyStruct::Reset(void)",
        ),
    ),
    (
        "_vt$12ThrowingStar",
        Ok(
            "ThrowingStar virtual table",
        ),
    ),
    (
        "DeinitSplatOnGround__7BushPig",
        Ok(
            "BushPig::DeinitSplatOnGround(void)",
        ),
    ),
    (
        "MKMatrixMultiply4x4",
        Err(
            NotMangled,
        ),
    ),
    (
        "XMax__FP6Vectorf",
        Ok(
            "XMax(Vector *, float)",
        ),
    ),
    (
        "Reset__8Platform",
        Ok(
            "Platform::Reset(void)",
        ),
    ),
    (
        "WaterDragon_Init__Fv",
        Ok(
            "WaterDragon_Init(void)",
        ),
    ),
    (
        "ReferSemaStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__7MKWaterPc",
        Ok(
            "MKWater::Init(char *)",
        ),
    ),
    (
        "GenerateThrowDirtTargetPos__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::GenerateThrowDirtTargetPos(void)",
        ),
    ),
    (
        "GetSpawnerDesc__12EnemySpawner",
        Ok(
            "EnemySpawner::GetSpawnerDesc(void)",
        ),
    ),
    (
        "ElevatorPlayerAdjust_Update__10GameCamera",
        Ok(
            "GameCamera::ElevatorPlayerAdjust_Update(void)",
        ),
    ),
    (
        "Deinit__3Rex",
        Ok(
            "Rex::Deinit(void)",
        ),
    ),
    (
        "Success__17KoalaKidObjective",
        Ok(
            "KoalaKidObjective::Success(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6GroperPv",
        Ok(
            "ModuleInfo<Groper>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Deinit(void)",
        ),
    ),
    (
        "Deinit__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::Deinit(void)",
        ),
    ),
    (
        "SetCurrentZone__8GameData10ZoneNumber",
        Ok(
            "GameData::SetCurrentZone(ZoneNumber)",
        ),
    ),
    (
        "MKShadowVU0_Backface",
        Err(
            NotMangled,
        ),
    ),
    (
        "Burnt__11BurningTree",
        Ok(
            "BurningTree::Burnt(void)",
        ),
    ),
    (
        "LoadDone__9SoundProp",
        Ok(
            "SoundProp::LoadDone(void)",
        ),
    ),
    (
        "BuildLines__4FontPcffP12TextLineData",
        Ok(
            "Font::BuildLines(char *, float, float, TextLineData *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10WaterWheel",
        Ok(
            "ModuleInfo<WaterWheel> virtual table",
        ),
    ),
    (
        "Reset__6Maurie",
        Ok(
            "Maurie::Reset(void)",
        ),
    ),
    (
        "Reset__10Fluffy_DDA",
        Ok(
            "Fluffy_DDA::Reset(void)",
        ),
    ),
    (
        "Enemies_InitBoundingRegions__Fv",
        Ok(
            "Enemies_InitBoundingRegions(void)",
        ),
    ),
    (
        "CreateFromRawData__8MaterialPcPviii",
        Ok(
            "Material::CreateFromRawData(char *, void *, int, int, int)",
        ),
    ),
    (
        "_xlaunch",
        Err(
            NotMangled,
        ),
    ),
    (
        "HoverIdleInit__9ShadowBat",
        Ok(
            "ShadowBat::HoverIdleInit(void)",
        ),
    ),
    (
        "SetAnimIfNew__8Critter2Uibi",
        Ok(
            "Critter2::SetAnimIfNew(unsigned int, bool, int)",
        ),
    ),
    (
        "Init__11EnemyObjectP11GameObjDesc",
        Ok(
            "EnemyObject::Init(GameObjDesc *)",
        ),
    ),
    (
        "GameCamera_UsePlayerAdjustCamera__Fb",
        Ok(
            "GameCamera_UsePlayerAdjustCamera(bool)",
        ),
    ),
    (
        "Deinit__7Farlapp",
        Ok(
            "Farlapp::Deinit(void)",
        ),
    ),
    (
        "FlipInit__11RhinoGround",
        Ok(
            "RhinoGround::FlipInit(void)",
        ),
    ),
    (
        "RenderTexture_UpdateEffects__Fv",
        Ok(
            "RenderTexture_UpdateEffects(void)",
        ),
    ),
    (
        "Deinit__10LavaEffect",
        Ok(
            "LavaEffect::Deinit(void)",
        ),
    ),
    (
        "Draw__9Boomerang",
        Ok(
            "Boomerang::Draw(void)",
        ),
    ),
    (
        "UpdateRollNormal__7Boulder",
        Ok(
            "Boulder::UpdateRollNormal(void)",
        ),
    ),
    (
        "Hud_Init__FP2Ty",
        Ok(
            "Hud_Init(Ty *)",
        ),
    ),
    (
        "SetCollisionRadius__2Tyf",
        Ok(
            "Ty::SetCollisionRadius(float)",
        ),
    ),
    (
        "sceScfGetTimeNotation",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__4Rock",
        Ok(
            "Rock::Deinit(void)",
        ),
    ),
    (
        "Message__8ChuteLogP9MKMessage",
        Ok(
            "ChuteLog::Message(MKMessage *)",
        ),
    ),
    (
        "GetPos__6Friend",
        Ok(
            "Friend::GetPos(void)",
        ),
    ),
    (
        "DirtySourceData__7Texture",
        Ok(
            "Texture::DirtySourceData(void)",
        ),
    ),
    (
        "UpdatePosition__9ShadowBatP6Vectorbf",
        Ok(
            "ShadowBat::UpdatePosition(Vector *, bool, float)",
        ),
    ),
    (
        "UpdatePosition__6CrikeyP6Vectorbf",
        Ok(
            "Crikey::UpdatePosition(Vector *, bool, float)",
        ),
    ),
    (
        "_10TumbleWeed$moduleInfo",
        Ok(
            "TumbleWeed::moduleInfo",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Drum",
        Ok(
            "ModuleInfo<Drum>::Init(void)",
        ),
    ),
    (
        "sceSifUnloadModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "Attack__5Yabby",
        Ok(
            "Yabby::Attack(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z19BlitterCritterField",
        Ok(
            "ModuleInfo<BlitterCritterField>::Init(void)",
        ),
    ),
    (
        "Fish_Deinit__Fv",
        Ok(
            "Fish_Deinit(void)",
        ),
    ),
    (
        "LoadDone__4Lava",
        Ok(
            "Lava::LoadDone(void)",
        ),
    ),
    (
        "Shears_LoadResources__Fv",
        Ok(
            "Shears_LoadResources(void)",
        ),
    ),
    (
        "Idle__14WaterSlideData",
        Ok(
            "WaterSlideData::Idle(void)",
        ),
    ),
    (
        "memmove",
        Err(
            NotMangled,
        ),
    ),
    (
        "SharedUpdate__11BaseCritter",
        Ok(
            "BaseCritter::SharedUpdate(void)",
        ),
    ),
    (
        "LoadLine__13TreasureChestP12KromeIniLine",
        Ok(
            "TreasureChest::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Reset__8Teleport",
        Ok(
            "Teleport::Reset(void)",
        ),
    ),
    (
        "StartThrown__10CrikeyChumP6VectorT1",
        Ok(
            "CrikeyChum::StartThrown(Vector *, Vector *)",
        ),
    ),
    (
        "TY_COLLIDE_IGNORE_MAT",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaterToAirTransition__2Ty",
        Ok(
            "Ty::WaterToAirTransition(void)",
        ),
    ),
    (
        "_vt$6Shazza",
        Ok(
            "Shazza virtual table",
        ),
    ),
    (
        "Reset__8Elevator",
        Ok(
            "Elevator::Reset(void)",
        ),
    ),
    (
        "HeatFlare_Add__FP6Vectorf",
        Ok(
            "HeatFlare_Add(Vector *, float)",
        ),
    ),
    (
        "StandOnPipe__9ShadowBat",
        Ok(
            "ShadowBat::StandOnPipe(void)",
        ),
    ),
    (
        "SoundProp_LoadResources__FP8KromeIni",
        Ok(
            "SoundProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "TyMemCard_Update__Fv",
        Ok(
            "TyMemCard_Update(void)",
        ),
    ),
    (
        "Deinit__10CrikeyChum",
        Ok(
            "CrikeyChum::Deinit(void)",
        ),
    ),
    (
        "GetActor__12DialogPlayeri",
        Ok(
            "DialogPlayer::GetActor(int)",
        ),
    ),
    (
        "GetStringFromId__C10MessageMapi",
        Ok(
            "MessageMap::GetStringFromId(int) const",
        ),
    ),
    (
        "MKParticleGen_Render_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Shark_LoadResources__FP8KromeIni",
        Ok(
            "Shark_LoadResources(KromeIni *)",
        ),
    ),
    (
        "HasPunched__12BunyipStructP6Vector",
        Ok(
            "BunyipStruct::HasPunched(Vector *)",
        ),
    ),
    (
        "ShowKids__6Aurora",
        Ok(
            "Aurora::ShowKids(void)",
        ),
    ),
    (
        "_vt$12EnemySpawner",
        Ok(
            "EnemySpawner virtual table",
        ),
    ),
    (
        "AllStates_Deinit__10GameCamera",
        Ok(
            "GameCamera::AllStates_Deinit(void)",
        ),
    ),
    (
        "Doomarang_Deinit__10GameCamera",
        Ok(
            "GameCamera::Doomarang_Deinit(void)",
        ),
    ),
    (
        "BlockedInit__6Geyser",
        Ok(
            "Geyser::BlockedInit(void)",
        ),
    ),
    (
        "GetPos__10StaticProp",
        Ok(
            "StaticProp::GetPos(void)",
        ),
    ),
    (
        "scePadGetReqState",
        Err(
            NotMangled,
        ),
    ),
    (
        "AsStringRange__12KromeIniLineiPPcT2",
        Ok(
            "KromeIniLine::AsStringRange(int, char **, char **)",
        ),
    ),
    (
        "InitializeGameLevelData__9LevelData",
        Ok(
            "LevelData::InitializeGameLevelData(void)",
        ),
    ),
    (
        "Particle_FrostyBreath_Create__FPP14ParticleSystemP6VectorT1",
        Ok(
            "Particle_FrostyBreath_Create(ParticleSystem **, Vector *, Vector *)",
        ),
    ),
    (
        "DeathInit__7SnowRoo",
        Ok(
            "SnowRoo::DeathInit(void)",
        ),
    ),
    (
        "pFormatStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__11ScrubTurkeyP12KromeIniLine",
        Ok(
            "ScrubTurkey::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "IsTyWithinChaseArea__11FrillLizard",
        Ok(
            "FrillLizard::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Collision_FindSafePointSide__10GameCameraP6Vectoriif8GCT_SidePQ215SafePointResult4Side",
        Ok(
            "GameCamera::Collision_FindSafePointSide(Vector *, int, int, float, GCT_Side, SafePointResult::Side *)",
        ),
    ),
    (
        "RunUpdate__4Ibis",
        Ok(
            "Ibis::RunUpdate(void)",
        ),
    ),
    (
        "Update__3Rex",
        Ok(
            "Rex::Update(void)",
        ),
    ),
    (
        "StoreDamageInfo__10DDASession14DDADamageCause",
        Ok(
            "DDASession::StoreDamageInfo(DDADamageCause)",
        ),
    ),
    (
        "_8Material$pCurrMat",
        Ok(
            "Material::pCurrMat",
        ),
    ),
    (
        "_EatingCanister__6Crikey",
        Ok(
            "Crikey::_EatingCanister(void)",
        ),
    ),
    (
        "DrawSineWave__6MKWaveP11MKWaterProp",
        Ok(
            "MKWave::DrawSineWave(MKWaterProp *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8KoalaKidPv",
        Ok(
            "ModuleInfo<KoalaKid>::ConstructObject(void *)",
        ),
    ),
    (
        "Draw__15WaterfallStruct",
        Ok(
            "WaterfallStruct::Draw(void)",
        ),
    ),
    (
        "ModelRender_CFMTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "PlayerAdjust_AdjustTime__10GameCameraf",
        Ok(
            "GameCamera::PlayerAdjust_AdjustTime(float)",
        ),
    ),
    (
        "Gem_Add__F7GemTypeP6VectorT1b",
        Ok(
            "Gem_Add(GemType, Vector *, Vector *, bool)",
        ),
    ),
    (
        "_cleanup",
        Err(
            NotMangled,
        ),
    ),
    (
        "Floating__10CrikeyChum",
        Ok(
            "CrikeyChum::Floating(void)",
        ),
    ),
    (
        "DeinitManager__21CameraOverrideManager",
        Ok(
            "CameraOverrideManager::DeinitManager(void)",
        ),
    ),
    (
        "Unassign__11BaseCritterP13CritterField2",
        Ok(
            "BaseCritter::Unassign(CritterField2 *)",
        ),
    ),
    (
        "sceResetttyinit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__6Friend",
        Ok(
            "Friend::Reset(void)",
        ),
    ),
    (
        "Attach__5Leech",
        Ok(
            "Leech::Attach(void)",
        ),
    ),
    (
        "MiniGameC2_Init__10GameCamera",
        Ok(
            "GameCamera::MiniGameC2_Init(void)",
        ),
    ),
    (
        "SetMovementType__3Rex15RexMovementType",
        Ok(
            "Rex::SetMovementType(RexMovementType)",
        ),
    ),
    (
        "CameraOverrideFixedPoint_Start__Fv",
        Ok(
            "CameraOverrideFixedPoint_Start(void)",
        ),
    ),
    (
        "Fish_Draw__Fv",
        Ok(
            "Fish_Draw(void)",
        ),
    ),
    (
        "Draw__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Draw(void)",
        ),
    ),
    (
        "Spiral_Update__14CameraOverride",
        Ok(
            "CameraOverride::Spiral_Update(void)",
        ),
    ),
    (
        "GCT_IsPointUnderwater__FP6Vector",
        Ok(
            "GCT_IsPointUnderwater(Vector *)",
        ),
    ),
    (
        "Particle_CanSpray_Init__FPP14ParticleSystemP6VectorP14BoundingVolume",
        Ok(
            "Particle_CanSpray_Init(ParticleSystem **, Vector *, BoundingVolume *)",
        ),
    ),
    (
        "_GLOBAL_$I$Groper_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Groper_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_FLO1TW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "SmoothToYaw__7BushPigff",
        Ok(
            "BushPig::SmoothToYaw(float, float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Megarang",
        Ok(
            "ModuleInfo<Megarang> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14FireworksCrate",
        Ok(
            "ModuleInfo<FireworksCrate> virtual table",
        ),
    ),
    (
        "Multiply3x3__6MatrixP6Matrix",
        Ok(
            "Matrix::Multiply3x3(Matrix *)",
        ),
    ),
    (
        "__tf9exception",
        Ok(
            "exception type_info function",
        ),
    ),
    (
        "CalcAnalogCameraProp__6Camera12InputDevicesfbi",
        Ok(
            "Camera::CalcAnalogCameraProp(InputDevices, float, bool, int)",
        ),
    ),
    (
        "GetField__4Frog",
        Ok(
            "Frog::GetField(void)",
        ),
    ),
    (
        "CruiseState__4Bird",
        Ok(
            "Bird::CruiseState(void)",
        ),
    ),
    (
        "_vt$14TrapdoorSpider",
        Ok(
            "TrapdoorSpider virtual table",
        ),
    ),
    (
        "Draw__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Draw(void)",
        ),
    ),
    (
        "Update__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::Update(void)",
        ),
    ),
    (
        "FreeResources__17TyParticleManager",
        Ok(
            "TyParticleManager::FreeResources(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z2TyPv",
        Ok(
            "ModuleInfo<Ty>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__7BeerCan",
        Ok(
            "BeerCan::Deinit(void)",
        ),
    ),
    (
        "TopDown_Update__14CameraOverride",
        Ok(
            "CameraOverride::TopDown_Update(void)",
        ),
    ),
    (
        "System_SetDebugEnabled__Fb",
        Ok(
            "System_SetDebugEnabled(bool)",
        ),
    ),
    (
        "BurnBat__5Skink",
        Ok(
            "Skink::BurnBat(void)",
        ),
    ),
    (
        "AlertPause_Init__9BadBoonie",
        Ok(
            "BadBoonie::AlertPause_Init(void)",
        ),
    ),
    (
        "Hit__6Target",
        Ok(
            "Target::Hit(void)",
        ),
    ),
    (
        "_Balloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Bat",
        Ok(
            "ModuleInfo<Bat>::Init(void)",
        ),
    ),
    (
        "mkMessageStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_DropShadow_Deinit__Fv",
        Ok(
            "Tools_DropShadow_Deinit(void)",
        ),
    ),
    (
        "SetRotationQ__6MatrixP12QuatRotation",
        Ok(
            "Matrix::SetRotationQ(QuatRotation *)",
        ),
    ),
    (
        "GetNodeIndex__9AnimationPc",
        Ok(
            "Animation::GetNodeIndex(char *)",
        ),
    ),
    (
        "_8TyHealth$heathInfo",
        Ok(
            "TyHealth::heathInfo",
        ),
    ),
    (
        "gMaterialMaxAlphaRef",
        Err(
            NotMangled,
        ),
    ),
    (
        "Add__10WakeStructP6VectorT1fi",
        Ok(
            "WakeStruct::Add(Vector *, Vector *, float, int)",
        ),
    ),
    (
        "pMKWaterManager_UpdateFillState",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitLassoCaughtFrillBike__5Lasso",
        Ok(
            "Lasso::InitLassoCaughtFrillBike(void)",
        ),
    ),
    (
        "Target_LoadResources__FP8KromeIni",
        Ok(
            "Target_LoadResources(KromeIni *)",
        ),
    ),
    (
        "WaterSlide_Deinit__Fv",
        Ok(
            "WaterSlide_Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3RexPv",
        Ok(
            "ModuleInfo<Rex>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__8MorayEel",
        Ok(
            "MorayEel::Reset(void)",
        ),
    ),
    (
        "iReferThreadStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10WarpFlower",
        Ok(
            "ModuleInfo<WarpFlower> virtual table",
        ),
    ),
    (
        "DeathInit__8LilNeddy",
        Ok(
            "LilNeddy::DeathInit(void)",
        ),
    ),
    (
        "Reset__16CaveBatObjective",
        Ok(
            "CaveBatObjective::Reset(void)",
        ),
    ),
    (
        "UpdateLogic__3Fly",
        Ok(
            "Fly::UpdateLogic(void)",
        ),
    ),
    (
        "ATWinMonHomeDirectory",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseInit__9FrillBike",
        Ok(
            "FrillBike::ChaseInit(void)",
        ),
    ),
    (
        "UpdateLogic__10CuttleFish",
        Ok(
            "CuttleFish::UpdateLogic(void)",
        ),
    ),
    (
        "CountSounds__13SoundMaterialP8KromeIni",
        Ok(
            "SoundMaterial::CountSounds(KromeIni *)",
        ),
    ),
    (
        "SelectNext__13UIButtonGroup",
        Ok(
            "UIButtonGroup::SelectNext(void)",
        ),
    ),
    (
        "_vt$6Target",
        Ok(
            "Target virtual table",
        ),
    ),
    (
        "SetSubState__5Rufusi",
        Ok(
            "Rufus::SetSubState(int)",
        ),
    ),
    (
        "_vt$11EnemyObject",
        Ok(
            "EnemyObject virtual table",
        ),
    ),
    (
        "DeinitLassoThrow__5Lasso",
        Ok(
            "Lasso::DeinitLassoThrow(void)",
        ),
    ),
    (
        "TalkTextScale",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z16SynkerBlueTongue",
        Ok(
            "ModuleInfo<SynkerBlueTongue>::Init(void)",
        ),
    ),
    (
        "KissOfDeathChaseDeinit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathChaseDeinit(void)",
        ),
    ),
    (
        "Reset__10DialogProp",
        Ok(
            "DialogProp::Reset(void)",
        ),
    ),
    (
        "Reset__6Burner",
        Ok(
            "Burner::Reset(void)",
        ),
    ),
    (
        "TimeAttack_LoadResources__FP8KromeIni",
        Ok(
            "TimeAttack_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$_16MKPropDescriptor$pDrawListDescs",
        Ok(
            "global constructors keyed to MKPropDescriptor::pDrawListDescs",
        ),
    ),
    (
        "_GLOBAL_$I$Fly_LoadResources__Fv",
        Ok(
            "global constructors keyed to Fly_LoadResources(void)",
        ),
    ),
    (
        "RFU082_SetEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$9bad_alloc",
        Ok(
            "bad_alloc virtual table",
        ),
    ),
    (
        "CheckReachedWayPoint__6DennisP6Vector",
        Ok(
            "Dennis::CheckReachedWayPoint(Vector *)",
        ),
    ),
    (
        "_vt$8bad_cast",
        Ok(
            "bad_cast virtual table",
        ),
    ),
    (
        "MKWaterManager_GetDefaultTypeText__Fv",
        Ok(
            "MKWaterManager_GetDefaultTypeText(void)",
        ),
    ),
    (
        "Particle_Dust_Init__FPP14ParticleSystemP6Vectorf",
        Ok(
            "Particle_Dust_Init(ParticleSystem **, Vector *, float)",
        ),
    ),
    (
        "ChaseDeinit__6Crikey",
        Ok(
            "Crikey::ChaseDeinit(void)",
        ),
    ),
    (
        "_vt$13CausticEffect",
        Ok(
            "CausticEffect virtual table",
        ),
    ),
    (
        "Deinit__11IcePlatform",
        Ok(
            "IcePlatform::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12KidObjective",
        Ok(
            "ModuleInfo<KidObjective>::Init(void)",
        ),
    ),
    (
        "StartAggressive__5Rhino",
        Ok(
            "Rhino::StartAggressive(void)",
        ),
    ),
    (
        "ResetToStartInit__5Leech",
        Ok(
            "Leech::ResetToStartInit(void)",
        ),
    ),
    (
        "Update__15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp::Update(void)",
        ),
    ),
    (
        "_vt$15YabbyStalactite",
        Ok(
            "YabbyStalactite virtual table",
        ),
    ),
    (
        "Hud_BreakFinished__Fv",
        Ok(
            "Hud_BreakFinished(void)",
        ),
    ),
    (
        "WaterMediumInit__2Ty",
        Ok(
            "Ty::WaterMediumInit(void)",
        ),
    ),
    (
        "Deinit__9WaterPipe",
        Ok(
            "WaterPipe::Deinit(void)",
        ),
    ),
    (
        "Draw__19SaveGameInfoDisplay",
        Ok(
            "SaveGameInfoDisplay::Draw(void)",
        ),
    ),
    (
        "_vt$7Boulder",
        Ok(
            "Boulder virtual table",
        ),
    ),
    (
        "CameraOverride_CanActivate__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_CanActivate(void)",
        ),
    ),
    (
        "_GLOBAL_$I$WarpFlower_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WarpFlower_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_$_16__func_type_info",
        Ok(
            "__func_type_info::~__func_type_info(void)",
        ),
    ),
    (
        "BlockRecoilInit__8PubeCrab",
        Ok(
            "PubeCrab::BlockRecoilInit(void)",
        ),
    ),
    (
        "MoveSmoothlyTo__FPffff",
        Ok(
            "MoveSmoothlyTo(float *, float, float, float)",
        ),
    ),
    (
        "Fall_FindSafePoint_SetSource__10GameCamera",
        Ok(
            "GameCamera::Fall_FindSafePoint_SetSource(void)",
        ),
    ),
    (
        "ModelRender_CFLO1S_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "gModelDrawReferencePoints",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__7MKWater",
        Ok(
            "MKWater::Deinit(void)",
        ),
    ),
    (
        "_6Spider$subObjectIndices",
        Ok(
            "Spider::subObjectIndices",
        ),
    ),
    (
        "Message__17KoalaKidObjectiveP9MKMessage",
        Ok(
            "KoalaKidObjective::Message(MKMessage *)",
        ),
    ),
    (
        "Timer_GetDHMSInSeconds__FP9TimerInfo",
        Ok(
            "Timer_GetDHMSInSeconds(TimerInfo *)",
        ),
    ),
    (
        "C3_Ringo_LoadResources__FP8KromeIni",
        Ok(
            "C3_Ringo_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Idle__11BonusPickup",
        Ok(
            "BonusPickup::Idle(void)",
        ),
    ),
    (
        "Tools_DropShadow_Draw__Fv",
        Ok(
            "Tools_DropShadow_Draw(void)",
        ),
    ),
    (
        "__main_reference",
        Err(
            InvalidSpecialMethod(
                "main_reference",
            ),
        ),
    ),
    (
        "Accelerate__8LilNeddyf",
        Ok(
            "LilNeddy::Accelerate(float)",
        ),
    ),
    (
        "MakingOfVideo_Draw__Fv",
        Ok(
            "MakingOfVideo_Draw(void)",
        ),
    ),
    (
        "Update__6Portal",
        Ok(
            "Portal::Update(void)",
        ),
    ),
    (
        "Yank__3Emu",
        Ok(
            "Emu::Yank(void)",
        ),
    ),
    (
        "Failure__23PerimeterCheckObjective",
        Ok(
            "PerimeterCheckObjective::Failure(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3EmuPv",
        Ok(
            "ModuleInfo<Emu>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__17GameObjectManager",
        Ok(
            "GameObjectManager::Deinit(void)",
        ),
    ),
    (
        "_mstats_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomTargetPos__11RhinoGroundRC6Vectorf",
        Ok(
            "RhinoGround::GenerateRandomTargetPos(Vector const &, float)",
        ),
    ),
    (
        "SaveStates_GetLevelUnlocked__FPc",
        Ok(
            "SaveStates_GetLevelUnlocked(char *)",
        ),
    ),
    (
        "_ri0_001",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCd_ncmd_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetRotation__5ModelP6Vector",
        Ok(
            "Model::SetRotation(Vector *)",
        ),
    ),
    (
        "Update__13MKParticleGen",
        Ok(
            "MKParticleGen::Update(void)",
        ),
    ),
    (
        "WalkSideways__6Muddieb",
        Ok(
            "Muddie::WalkSideways(bool)",
        ),
    ),
    (
        "SpawnAntHillChunk__17TyParticleManagerP6VectorT1",
        Ok(
            "TyParticleManager::SpawnAntHillChunk(Vector *, Vector *)",
        ),
    ),
    (
        "SetState__6Target11TargetState",
        Ok(
            "Target::SetState(TargetState)",
        ),
    ),
    (
        "Init__11ThinIcePropP11GameObjDesc",
        Ok(
            "ThinIceProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13PickupCounterPv",
        Ok(
            "ModuleInfo<PickupCounter>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__9SharkCage",
        Ok(
            "SharkCage::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11MetalSpikesPv",
        Ok(
            "ModuleInfo<MetalSpikes>::ConstructObject(void *)",
        ),
    ),
    (
        "SwimInit__3Eel",
        Ok(
            "Eel::SwimInit(void)",
        ),
    ),
    (
        "LoadDone__15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp::LoadDone(void)",
        ),
    ),
    (
        "sceInetControl",
        Err(
            NotMangled,
        ),
    ),
    (
        "System_EndScene__Fv",
        Ok(
            "System_EndScene(void)",
        ),
    ),
    (
        "LoadDone__11EnemyObject",
        Ok(
            "EnemyObject::LoadDone(void)",
        ),
    ),
    (
        "CreateDebugMenus__13MKParticleGenP15DebugOptionMenu",
        Ok(
            "MKParticleGen::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Shazza",
        Ok(
            "ModuleInfo<Shazza> virtual table",
        ),
    ),
    (
        "Scared__5Yabby",
        Ok(
            "Yabby::Scared(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10TeleporterPv",
        Ok(
            "ModuleInfo<Teleporter>::ConstructObject(void *)",
        ),
    ),
    (
        "GrowInit__13MusicalIcicle",
        Ok(
            "MusicalIcicle::GrowInit(void)",
        ),
    ),
    (
        "__cp_push_exception",
        Err(
            InvalidSpecialMethod(
                "cp_push_exception",
            ),
        ),
    ),
    (
        "LoadLine__6CrikeyP12KromeIniLine",
        Ok(
            "Crikey::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "ModelRender_AW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "RunAwayInit__5Roach",
        Ok(
            "Roach::RunAwayInit(void)",
        ),
    ),
    (
        "EnableEnemyCollision__11EnemyObjectb",
        Ok(
            "EnemyObject::EnableEnemyCollision(bool)",
        ),
    ),
    (
        "GetStandingPos__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::GetStandingPos(void)",
        ),
    ),
    (
        "CameraOverrideHigh_Start__Fv",
        Ok(
            "CameraOverrideHigh_Start(void)",
        ),
    ),
    (
        "JumpFromHoleDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::JumpFromHoleDeinit(void)",
        ),
    ),
    (
        "AttackDeinit__10ScubaFrill",
        Ok(
            "ScubaFrill::AttackDeinit(void)",
        ),
    ),
    (
        "LoadLine__6FluffyP12KromeIniLine",
        Ok(
            "Fluffy::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "sceSifSetCmdBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResetPower__7BushPig",
        Ok(
            "BushPig::ResetPower(void)",
        ),
    ),
    (
        "SetHasPlacedTalisman__8GameData12TalismanTypeb",
        Ok(
            "GameData::SetHasPlacedTalisman(TalismanType, bool)",
        ),
    ),
    (
        "iGetCop0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sequenceExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFMTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Death__6Muddie",
        Ok(
            "Muddie::Death(void)",
        ),
    ),
    (
        "Floating__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Floating(void)",
        ),
    ),
    (
        "GetState__5TyFSM",
        Ok(
            "TyFSM::GetState(void)",
        ),
    ),
    (
        "blue",
        Err(
            NotMangled,
        ),
    ),
    (
        "EnteringWater__12TurtleStruct",
        Ok(
            "TurtleStruct::EnteringWater(void)",
        ),
    ),
    (
        "_vt$19EmuRoundupObjective",
        Ok(
            "EmuRoundupObjective virtual table",
        ),
    ),
    (
        "Yabby_LoadResources__FP8KromeIni",
        Ok(
            "Yabby_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__11CrateStructP9MKMessage",
        Ok(
            "CrateStruct::Message(MKMessage *)",
        ),
    ),
    (
        "Bitten__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Bitten(void)",
        ),
    ),
    (
        "Update__13SelectionRang",
        Ok(
            "SelectionRang::Update(void)",
        ),
    ),
    (
        "GetPointAlongPath__24GCT_WaypointPlaneManagerfP6Vector",
        Ok(
            "GCT_WaypointPlaneManager::GetPointAlongPath(float, Vector *)",
        ),
    ),
    (
        "descr_cast__H1ZP13SmallCrabDesc_P16MKPropDescriptor_X01",
        Ok(
            "SmallCrabDesc * descr_cast<SmallCrabDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Attach__4Tick",
        Ok(
            "Tick::Attach(void)",
        ),
    ),
    (
        "LookOut__5Shark",
        Ok(
            "Shark::LookOut(void)",
        ),
    ),
    (
        "GrabMadSection__6Parser",
        Ok(
            "Parser::GrabMadSection(void)",
        ),
    ),
    (
        "WalkToPipe__11FrillLizard",
        Ok(
            "FrillLizard::WalkToPipe(void)",
        ),
    ),
    (
        "Multiply__12QuatRotationP12QuatRotationT1",
        Ok(
            "QuatRotation::Multiply(QuatRotation *, QuatRotation *)",
        ),
    ),
    (
        "UseGunRecoil__10GameCameraf",
        Ok(
            "GameCamera::UseGunRecoil(float)",
        ),
    ),
    (
        "GetIdFromString__C10MessageMapPc",
        Ok(
            "MessageMap::GetIdFromString(char *) const",
        ),
    ),
    (
        "ModelRender_Ai_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_SetHero__FP2Ty",
        Ok(
            "GameCamera_SetHero(Ty *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11AirPlatform",
        Ok(
            "ModuleInfo<AirPlatform>::Init(void)",
        ),
    ),
    (
        "Init__10ScreenDataP6Vectorff",
        Ok(
            "ScreenData::Init(Vector *, float, float)",
        ),
    ),
    (
        "ApplyQuaternion__6VectorP6VectorP12QuatRotation",
        Ok(
            "Vector::ApplyQuaternion(Vector *, QuatRotation *)",
        ),
    ),
    (
        "InitAfterDunny__2Ty",
        Ok(
            "Ty::InitAfterDunny(void)",
        ),
    ),
    (
        "SetHasTalisman__8GameData12TalismanTypeb",
        Ok(
            "GameData::SetHasTalisman(TalismanType, bool)",
        ),
    ),
    (
        "__rtti_array",
        Err(
            InvalidSpecialMethod(
                "rtti_array",
            ),
        ),
    ),
    (
        "ChaseInit__8PubeCrab",
        Ok(
            "PubeCrab::ChaseInit(void)",
        ),
    ),
    (
        "bilbyAnims",
        Err(
            NotMangled,
        ),
    ),
    (
        "Unload__11MKGrassType",
        Ok(
            "MKGrassType::Unload(void)",
        ),
    ),
    (
        "Boomerang_GetDescription__F13BoomerangType",
        Ok(
            "Boomerang_GetDescription(BoomerangType)",
        ),
    ),
    (
        "GetTotalGoldenCogCount__8GameData",
        Ok(
            "GameData::GetTotalGoldenCogCount(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z19BlitterCritterField",
        Ok(
            "ModuleInfo<BlitterCritterField> virtual table",
        ),
    ),
    (
        "Update__12DialogEffect",
        Ok(
            "DialogEffect::Update(void)",
        ),
    ),
    (
        "Reset__14MobilePlatform",
        Ok(
            "MobilePlatform::Reset(void)",
        ),
    ),
    (
        "GCT_BuildMatrixFromFwd__FP6MatrixP6VectorT1",
        Ok(
            "GCT_BuildMatrixFromFwd(Matrix *, Vector *, Vector *)",
        ),
    ),
    (
        "Draw__13UIButtonGroup",
        Ok(
            "UIButtonGroup::Draw(void)",
        ),
    ),
    (
        "sceSifGetReg",
        Err(
            NotMangled,
        ),
    ),
    (
        "MoveState__5TyFSMi",
        Ok(
            "TyFSM::MoveState(int)",
        ),
    ),
    (
        "BarbedWire_Deinit__Fv",
        Ok(
            "BarbedWire_Deinit(void)",
        ),
    ),
    (
        "FileSys_Update__Fv",
        Ok(
            "FileSys_Update(void)",
        ),
    ),
    (
        "Scale__6Matrixf",
        Ok(
            "Matrix::Scale(float)",
        ),
    ),
    (
        "TryChangeState__2Tyi14HeroActorState",
        Ok(
            "Ty::TryChangeState(int, HeroActorState)",
        ),
    ),
    (
        "EvadeBite__11FrillLizard",
        Ok(
            "FrillLizard::EvadeBite(void)",
        ),
    ),
    (
        "ScrubTurkey_IncrementCatchAttemps__Fv",
        Ok(
            "ScrubTurkey_IncrementCatchAttemps(void)",
        ),
    ),
    (
        "Dialog_Update__Fv",
        Ok(
            "Dialog_Update(void)",
        ),
    ),
    (
        "IsTyVisible__5Yabby",
        Ok(
            "Yabby::IsTyVisible(void)",
        ),
    ),
    (
        "DeathByBiteInit__11FrillLizard",
        Ok(
            "FrillLizard::DeathByBiteInit(void)",
        ),
    ),
    (
        "Jump__7BushPig",
        Ok(
            "BushPig::Jump(void)",
        ),
    ),
    (
        "MoveTransition__2Ty",
        Ok(
            "Ty::MoveTransition(void)",
        ),
    ),
    (
        "wake",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$_16__user_type_info",
        Ok(
            "__user_type_info::~__user_type_info(void)",
        ),
    ),
    (
        "__errno",
        Err(
            InvalidSpecialMethod(
                "errno",
            ),
        ),
    ),
    (
        "sceUmount",
        Err(
            NotMangled,
        ),
    ),
    (
        "MissInit__4Tick",
        Ok(
            "Tick::MissInit(void)",
        ),
    ),
    (
        "ConfigureVRam__7TexturePP7Texture",
        Ok(
            "Texture::ConfigureVRam(Texture **)",
        ),
    ),
    (
        "IsTyWithinChaseArea__8PubeCrab",
        Ok(
            "PubeCrab::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Draw__13SpeedboatWake",
        Ok(
            "SpeedboatWake::Draw(void)",
        ),
    ),
    (
        "RadialRandomVector__FR6Vectorfff",
        Ok(
            "RadialRandomVector(Vector &, float, float, float)",
        ),
    ),
    (
        "Happy__6Aurora",
        Ok(
            "Aurora::Happy(void)",
        ),
    ),
    (
        "AddShadow__3Ice",
        Ok(
            "Ice::AddShadow(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9ShoalFish",
        Ok(
            "ModuleInfo<ShoalFish> virtual table",
        ),
    ),
    (
        "descr_cast__H1ZP13ShoalFishDesc_P16MKPropDescriptor_X01",
        Ok(
            "ShoalFishDesc * descr_cast<ShoalFishDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Sound_MusicPlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "Duck__14WaterSlideData",
        Ok(
            "WaterSlideData::Duck(void)",
        ),
    ),
    (
        "SetType__16BoomerangManager13BoomerangType",
        Ok(
            "BoomerangManager::SetType(BoomerangType)",
        ),
    ),
    (
        "ApproxMagnitude__Fff",
        Ok(
            "ApproxMagnitude(float, float)",
        ),
    ),
    (
        "Spawn__9FrillBike",
        Ok(
            "FrillBike::Spawn(void)",
        ),
    ),
    (
        "Reset__6Crikey",
        Ok(
            "Crikey::Reset(void)",
        ),
    ),
    (
        "pLightningModelNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$FlameThrower_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to FlameThrower_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$16__ptmf_type_info",
        Ok(
            "__ptmf_type_info virtual table",
        ),
    ),
    (
        "InitModule__8Material",
        Ok(
            "Material::InitModule(void)",
        ),
    ),
    (
        "BounceOffTransition__2Ty",
        Ok(
            "Ty::BounceOffTransition(void)",
        ),
    ),
    (
        "_MKMem_Realloc__FPviPci",
        Ok(
            "_MKMem_Realloc(void *, int, char *, int)",
        ),
    ),
    (
        "ApplyQuaternion__6VectorP12QuatRotation",
        Ok(
            "Vector::ApplyQuaternion(QuatRotation *)",
        ),
    ),
    (
        "ChaseInit__6Crikey",
        Ok(
            "Crikey::ChaseInit(void)",
        ),
    ),
    (
        "Yabby_StartBeingScared__Fv",
        Ok(
            "Yabby_StartBeingScared(void)",
        ),
    ),
    (
        "gToggleEnemyCamera",
        Err(
            NotMangled,
        ),
    ),
    (
        "RunToTreeInit__11FrillLizard",
        Ok(
            "FrillLizard::RunToTreeInit(void)",
        ),
    ),
    (
        "SwimPlayerAdjust_Update__10GameCamera",
        Ok(
            "GameCamera::SwimPlayerAdjust_Update(void)",
        ),
    ),
    (
        "MKWaterManager_Update__Fv",
        Ok(
            "MKWaterManager_Update(void)",
        ),
    ),
    (
        "Idle__7KenOath",
        Ok(
            "KenOath::Idle(void)",
        ),
    ),
    (
        "GetNextWayPoint__9AuroraKid",
        Ok(
            "AuroraKid::GetNextWayPoint(void)",
        ),
    ),
    (
        "Load__11GCT_TriggerP29CameraOverrideTriggerLoadInfo",
        Ok(
            "GCT_Trigger::Load(CameraOverrideTriggerLoadInfo *)",
        ),
    ),
    (
        "SceneLoad__12DialogPlayerPcP17dpActorInfoStructi",
        Ok(
            "DialogPlayer::SceneLoad(char *, dpActorInfoStruct *, int)",
        ),
    ),
    (
        "InitRollNormal__7Boulder",
        Ok(
            "Boulder::InitRollNormal(void)",
        ),
    ),
    (
        "ResetObjects__17GameObjectManager",
        Ok(
            "GameObjectManager::ResetObjects(void)",
        ),
    ),
    (
        "FinishInit__6Wombat",
        Ok(
            "Wombat::FinishInit(void)",
        ),
    ),
    (
        "SonarAttackDeinit__9ShadowBat",
        Ok(
            "ShadowBat::SonarAttackDeinit(void)",
        ),
    ),
    (
        "Sly_LoadResources__FP8KromeIni",
        Ok(
            "Sly_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$15EnemyDescriptor",
        Ok(
            "EnemyDescriptor virtual table",
        ),
    ),
    (
        "_mallinfo_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "CloseToPipeInit__11FrillLizard",
        Ok(
            "FrillLizard::CloseToPipeInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Cattle",
        Ok(
            "ModuleInfo<Cattle> virtual table",
        ),
    ),
    (
        "ApplyRotMatrix__6VectorP6VectorP6Matrix",
        Ok(
            "Vector::ApplyRotMatrix(Vector *, Matrix *)",
        ),
    ),
    (
        "PutFromFile__12StreamBufferii",
        Ok(
            "StreamBuffer::PutFromFile(int, int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14CrikeyCanister",
        Ok(
            "ModuleInfo<CrikeyCanister> virtual table",
        ),
    ),
    (
        "UploadMpeg__7Textureb",
        Ok(
            "Texture::UploadMpeg(bool)",
        ),
    ),
    (
        "SetCameraMatrixLookAt__6CameraP6Matrix",
        Ok(
            "Camera::SetCameraMatrixLookAt(Matrix *)",
        ),
    ),
    (
        "Init__2TyP11GameObjDesc",
        Ok(
            "Ty::Init(GameObjDesc *)",
        ),
    ),
    (
        "malloc_stats",
        Err(
            NotMangled,
        ),
    ),
    (
        "gameStateData",
        Err(
            NotMangled,
        ),
    ),
    (
        "UnderWaterMediumDeinit__2Ty",
        Ok(
            "Ty::UnderWaterMediumDeinit(void)",
        ),
    ),
    (
        "LogicUpdate__7SnowRoo",
        Ok(
            "SnowRoo::LogicUpdate(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12ThrowingStar",
        Ok(
            "ModuleInfo<ThrowingStar>::Init(void)",
        ),
    ),
    (
        "MKMemoryCard_IsPrepared__Fi",
        Ok(
            "MKMemoryCard_IsPrepared(int)",
        ),
    ),
    (
        "DamageTy__14SnowBallAttack",
        Ok(
            "SnowBallAttack::DamageTy(void)",
        ),
    ),
    (
        "_outputFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "VU0_Global_End",
        Err(
            NotMangled,
        ),
    ),
    (
        "_5Steam$envelope",
        Ok(
            "Steam::envelope",
        ),
    ),
    (
        "SetTarget__13SelectionRangP6VectorcP4View",
        Ok(
            "SelectionRang::SetTarget(Vector *, char, View *)",
        ),
    ),
    (
        "_vt$14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor virtual table",
        ),
    ),
    (
        "Path_GetTerminatorSegment__Fv",
        Ok(
            "Path_GetTerminatorSegment(void)",
        ),
    ),
    (
        "GetAttachPos__3EmuP6Vector",
        Ok(
            "Emu::GetAttachPos(Vector *)",
        ),
    ),
    (
        "_Error1",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13ShadowBatPipe",
        Ok(
            "ModuleInfo<ShadowBatPipe>::Init(void)",
        ),
    ),
    (
        "WaterDrip_LoadResources__Fv",
        Ok(
            "WaterDrip_LoadResources(void)",
        ),
    ),
    (
        "gRenderState",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__11RhinoGround",
        Ok(
            "RhinoGround::LogicUpdate(void)",
        ),
    ),
    (
        "AttackIdleInit__11FrillLizard",
        Ok(
            "FrillLizard::AttackIdleInit(void)",
        ),
    ),
    (
        "GameCamera_GetVectors__FP6VectorT0T0",
        Ok(
            "GameCamera_GetVectors(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Deinit__9Speedboat",
        Ok(
            "Speedboat::Deinit(void)",
        ),
    ),
    (
        "GetEffect__12DialogPlayer",
        Ok(
            "DialogPlayer::GetEffect(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4JeepPv",
        Ok(
            "ModuleInfo<Jeep>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z21FrillProblemObjective",
        Ok(
            "ModuleInfo<FrillProblemObjective> virtual table",
        ),
    ),
    (
        "GameData_Load__FPc",
        Ok(
            "GameData_Load(char *)",
        ),
    ),
    (
        "LetterBox_Deinit__Fv",
        Ok(
            "LetterBox_Deinit(void)",
        ),
    ),
    (
        "Windmill_End__Fv",
        Ok(
            "Windmill_End(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Emu",
        Ok(
            "ModuleInfo<Emu> virtual table",
        ),
    ),
    (
        "FadeOut__10ScreenDataii",
        Ok(
            "ScreenData::FadeOut(int, int)",
        ),
    ),
    (
        "sceCdCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__7SnowGunP12KromeIniLine",
        Ok(
            "SnowGun::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "PatrolDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::PatrolDeinit(void)",
        ),
    ),
    (
        "Deinit__17PathFindingObject",
        Ok(
            "PathFindingObject::Deinit(void)",
        ),
    ),
    (
        "SetWarp__2TyP6VectorT1T1f",
        Ok(
            "Ty::SetWarp(Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "Draw__11ThinIceProp",
        Ok(
            "ThinIceProp::Draw(void)",
        ),
    ),
    (
        "THUNDER_EGG_REF",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_SnowTrail_Init__FPP14ParticleSystemP6VectorP14BoundingVolume",
        Ok(
            "Particle_SnowTrail_Init(ParticleSystem **, Vector *, BoundingVolume *)",
        ),
    ),
    (
        "_vt$6Friend",
        Ok(
            "Friend virtual table",
        ),
    ),
    (
        "IsTyWithinChaseArea__6Wombat",
        Ok(
            "Wombat::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Crikey_LoadResources__FP8KromeIni",
        Ok(
            "Crikey_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_15ObjectiveFinder$bInitialised",
        Ok(
            "ObjectiveFinder::bInitialised",
        ),
    ),
    (
        "SetBackgroundBlitterUV__11ProgressBarffff",
        Ok(
            "ProgressBar::SetBackgroundBlitterUV(float, float, float, float)",
        ),
    ),
    (
        "Bilby_Add__FP13BilbyLoadInfo",
        Ok(
            "Bilby_Add(BilbyLoadInfo *)",
        ),
    ),
    (
        "_groupOfPicturesHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12ThrowingStarPv",
        Ok(
            "ModuleInfo<ThrowingStar>::ConstructObject(void *)",
        ),
    ),
    (
        "GetGoldenCog__8GameData13GoldenCogType",
        Ok(
            "GameData::GetGoldenCog(GoldenCogType)",
        ),
    ),
    (
        "Reset__8Megarang",
        Ok(
            "Megarang::Reset(void)",
        ),
    ),
    (
        "Message__17MiniGameObjectiveP9MKMessage",
        Ok(
            "MiniGameObjective::Message(MKMessage *)",
        ),
    ),
    (
        "SetNewEnemy__10GameCamera",
        Ok(
            "GameCamera::SetNewEnemy(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Gem",
        Ok(
            "ModuleInfo<Gem> virtual table",
        ),
    ),
    (
        "__tfSc",
        Ok(
            "signed char type_info function",
        ),
    ),
    (
        "Heap_FreeHeapProfile__FPviPcT2",
        Ok(
            "Heap_FreeHeapProfile(void *, int, char *, char *)",
        ),
    ),
    (
        "__tic",
        Ok(
            "char type_info node",
        ),
    ),
    (
        "__ieee754_rem_pio2f",
        Err(
            InvalidSpecialMethod(
                "ieee754_rem_pio2f",
            ),
        ),
    ),
    (
        "Lasso_LoadResources__Fv",
        Ok(
            "Lasso_LoadResources(void)",
        ),
    ),
    (
        "DeinitLobbingBarrel__9Speedboat",
        Ok(
            "Speedboat::DeinitLobbingBarrel(void)",
        ),
    ),
    (
        "_vt$19RedButtonDescriptor",
        Ok(
            "RedButtonDescriptor virtual table",
        ),
    ),
    (
        "__tf9bad_alloc",
        Ok(
            "bad_alloc type_info function",
        ),
    ),
    (
        "CheckEvents__6Fluffy",
        Ok(
            "Fluffy::CheckEvents(void)",
        ),
    ),
    (
        "RunToWaypoint_Init__9BadBoonie",
        Ok(
            "BadBoonie::RunToWaypoint_Init(void)",
        ),
    ),
    (
        "_13GuideParticle$gateTimeOutCounter",
        Ok(
            "GuideParticle::gateTimeOutCounter",
        ),
    ),
    (
        "Pitch__2Tyf",
        Ok(
            "Ty::Pitch(float)",
        ),
    ),
    (
        "ApplyTransMatrix__6VectorP6Matrix",
        Ok(
            "Vector::ApplyTransMatrix(Matrix *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8RingoArmPv",
        Ok(
            "ModuleInfo<RingoArm>::ConstructObject(void *)",
        ),
    ),
    (
        "Level_ParseScale__FP12KromeIniLineP6Vector",
        Ok(
            "Level_ParseScale(KromeIniLine *, Vector *)",
        ),
    ),
    (
        "_vt$11RhinoGround",
        Ok(
            "RhinoGround virtual table",
        ),
    ),
    (
        "Init__19Tools_AnimEventDescP15Tools_AnimEventiP12MKAnimScript",
        Ok(
            "Tools_AnimEventDesc::Init(Tools_AnimEvent *, int, MKAnimScript *)",
        ),
    ),
    (
        "Stomp__6Fluffy",
        Ok(
            "Fluffy::Stomp(void)",
        ),
    ),
    (
        "FlinchInit__8RingoArm",
        Ok(
            "RingoArm::FlinchInit(void)",
        ),
    ),
    (
        "Move__8Elevatorf",
        Ok(
            "Elevator::Move(float)",
        ),
    ),
    (
        "SpecialPickup_HideAll__Fv",
        Ok(
            "SpecialPickup_HideAll(void)",
        ),
    ),
    (
        "Deinit__4Tick",
        Ok(
            "Tick::Deinit(void)",
        ),
    ),
    (
        "Message__10DamageableP9MKMessage",
        Ok(
            "Damageable::Message(MKMessage *)",
        ),
    ),
    (
        "Basket_PlaceUnused__FP6Vector",
        Ok(
            "Basket_PlaceUnused(Vector *)",
        ),
    ),
    (
        "Wince__5Lenny",
        Ok(
            "Lenny::Wince(void)",
        ),
    ),
    (
        "DoCameraChecks__7BushPigUi",
        Ok(
            "BushPig::DoCameraChecks(unsigned int)",
        ),
    ),
    (
        "Load__11MKWaterType",
        Ok(
            "MKWaterType::Load(void)",
        ),
    ),
    (
        "Deinit__5Torch",
        Ok(
            "Torch::Deinit(void)",
        ),
    ),
    (
        "LoadLevel_LoadStringVar__FP12KromeIniLinePcPPci",
        Ok(
            "LoadLevel_LoadStringVar(KromeIniLine *, char *, char **, int)",
        ),
    ),
    (
        "SetCollected__19SpecialPickupStructb",
        Ok(
            "SpecialPickupStruct::SetCollected(bool)",
        ),
    ),
    (
        "GetName__9LevelData11LevelNumber",
        Ok(
            "LevelData::GetName(LevelNumber)",
        ),
    ),
    (
        "scePadSetActDirect",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitAfterDunny__7BushPig",
        Ok(
            "BushPig::DeinitAfterDunny(void)",
        ),
    ),
    (
        "Shatter_Add__FP5Modelffi",
        Ok(
            "Shatter_Add(Model *, float, float, int)",
        ),
    ),
    (
        "GameCamera_SnapBehindHero__Fb",
        Ok(
            "GameCamera_SnapBehindHero(bool)",
        ),
    ),
    (
        "IdleInit__11FrillLizard",
        Ok(
            "FrillLizard::IdleInit(void)",
        ),
    ),
    (
        "LoadLine__7FarlappP12KromeIniLine",
        Ok(
            "Farlapp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Attack__6Crikey",
        Ok(
            "Crikey::Attack(void)",
        ),
    ),
    (
        "Doomarang_Init__10GameCamera",
        Ok(
            "GameCamera::Doomarang_Init(void)",
        ),
    ),
    (
        "Detach__4Tick",
        Ok(
            "Tick::Detach(void)",
        ),
    ),
    (
        "AlertPause_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::AlertPause_Update(void)",
        ),
    ),
    (
        "ScurryState__9SmallCrab",
        Ok(
            "SmallCrab::ScurryState(void)",
        ),
    ),
    (
        "Update__6Burner",
        Ok(
            "Burner::Update(void)",
        ),
    ),
    (
        "LoadLine__6TargetP12KromeIniLine",
        Ok(
            "Target::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11MetalSpikes",
        Ok(
            "ModuleInfo<MetalSpikes> virtual table",
        ),
    ),
    (
        "AddGif_AD_TRXREG__3DmaUlUl",
        Ok(
            "Dma::AddGif_AD_TRXREG(unsigned long, unsigned long)",
        ),
    ),
    (
        "LassoAnimation__7BushPig",
        Ok(
            "BushPig::LassoAnimation(void)",
        ),
    ),
    (
        "GetGsVParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__4BullP9MKMessage",
        Ok(
            "Bull::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__9Avalanche",
        Ok(
            "Avalanche::Reset(void)",
        ),
    ),
    (
        "Sound_MusicStop",
        Err(
            NotMangled,
        ),
    ),
    (
        "RFU091",
        Err(
            NotMangled,
        ),
    ),
    (
        "MakeTerrainTree__14MKSceneManager",
        Ok(
            "MKSceneManager::MakeTerrainTree(void)",
        ),
    ),
    (
        "LinearTurn__11EnemyObjectf",
        Ok(
            "EnemyObject::LinearTurn(float)",
        ),
    ),
    (
        "Reset__19EmuRoundupObjective",
        Ok(
            "EmuRoundupObjective::Reset(void)",
        ),
    ),
    (
        "Update__11CrateStruct",
        Ok(
            "CrateStruct::Update(void)",
        ),
    ),
    (
        "Sound_MusicResume__Fi",
        Ok(
            "Sound_MusicResume(int)",
        ),
    ),
    (
        "AddGif_AD_DTHE__3DmaUl",
        Ok(
            "Dma::AddGif_AD_DTHE(unsigned long)",
        ),
    ),
    (
        "_6Camera$flipYAxis",
        Ok(
            "Camera::flipYAxis",
        ),
    ),
    (
        "Message__3RexP9MKMessage",
        Ok(
            "Rex::Message(MKMessage *)",
        ),
    ),
    (
        "GetYfromXZ__5Lassofffff",
        Ok(
            "Lasso::GetYfromXZ(float, float, float, float, float)",
        ),
    ),
    (
        "HappyInit__6Sheila",
        Ok(
            "Sheila::HappyInit(void)",
        ),
    ),
    (
        "GameCamera_UseFallCamera__Fb",
        Ok(
            "GameCamera_UseFallCamera(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$PubeCrab_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to PubeCrab_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$WaterTank_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WaterTank_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GameCamera_GetDir__Fv",
        Ok(
            "GameCamera_GetDir(void)",
        ),
    ),
    (
        "_vt$14SnowBallAttack",
        Ok(
            "SnowBallAttack virtual table",
        ),
    ),
    (
        "GameCamera_OverrideDir_Add__FP25CameraOverrideDirLoadInfo",
        Ok(
            "GameCamera_OverrideDir_Add(CameraOverrideDirLoadInfo *)",
        ),
    ),
    (
        "Tools_GetArcPos__FP6VectorT0T0ff",
        Ok(
            "Tools_GetArcPos(Vector *, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "LoadDone__10GameObject",
        Ok(
            "GameObject::LoadDone(void)",
        ),
    ),
    (
        "JumpStart__6Wombat",
        Ok(
            "Wombat::JumpStart(void)",
        ),
    ),
    (
        "DeathDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::DeathDeinit(void)",
        ),
    ),
    (
        "ResolveHit__7BeerCan",
        Ok(
            "BeerCan::ResolveHit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12ThrowingStar",
        Ok(
            "ModuleInfo<ThrowingStar> virtual table",
        ),
    ),
    (
        "FrontEnd_NewGame_Init__Fv",
        Ok(
            "FrontEnd_NewGame_Init(void)",
        ),
    ),
    (
        "Draw__9SpiderWeb",
        Ok(
            "SpiderWeb::Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11GuideBarrel",
        Ok(
            "ModuleInfo<GuideBarrel>::Init(void)",
        ),
    ),
    (
        "_d2b",
        Err(
            NotMangled,
        ),
    ),
    (
        "Model_CalculateViewToClipToScreenMatrices__FP6MatrixT0Pifffffffff",
        Ok(
            "Model_CalculateViewToClipToScreenMatrices(Matrix *, Matrix *, int *, float, float, float, float, float, float, float, float, float)",
        ),
    ),
    (
        "ModelRender_FWX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7SawDust$sawDustType",
        Ok(
            "SawDust::sawDustType",
        ),
    ),
    (
        "ceil",
        Err(
            NotMangled,
        ),
    ),
    (
        "Fall_RaiseHeight_Deinit__10GameCamera",
        Ok(
            "GameCamera::Fall_RaiseHeight_Deinit(void)",
        ),
    ),
    (
        "ResolveConnections__FP11PathSegment",
        Ok(
            "ResolveConnections(PathSegment *)",
        ),
    ),
    (
        "Update__17WaterSlideSectionP6VectorT1T1",
        Ok(
            "WaterSlideSection::Update(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "sceTtyInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTotalThunderEggCount__8GameData",
        Ok(
            "GameData::GetTotalThunderEggCount(void)",
        ),
    ),
    (
        "System_EnableDebugMode__Fb",
        Ok(
            "System_EnableDebugMode(bool)",
        ),
    ),
    (
        "Reset__11WeatherProp",
        Ok(
            "WeatherProp::Reset(void)",
        ),
    ),
    (
        "LensFlare_Init__Fv",
        Ok(
            "LensFlare_Init(void)",
        ),
    ),
    (
        "InterpolateLinear__6VectorP6VectorT1f",
        Ok(
            "Vector::InterpolateLinear(Vector *, Vector *, float)",
        ),
    ),
    (
        "_GLOBAL_$I$ShadowBatProps_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to ShadowBatProps_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_ExecPS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_multiply",
        Err(
            NotMangled,
        ),
    ),
    (
        "_rix_110",
        Err(
            NotMangled,
        ),
    ),
    (
        "pStaticCamEye",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_GameInfo_DeinitResources__Fv",
        Ok(
            "PauseScreen_GameInfo_DeinitResources(void)",
        ),
    ),
    (
        "LoadDone__16FinishLineStruct",
        Ok(
            "FinishLineStruct::LoadDone(void)",
        ),
    ),
    (
        "Texture_IsAlias",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_WSEMTMF_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CritterField_Register2__FP12CritterDesc2UiUifUi",
        Ok(
            "CritterField_Register2(CritterDesc2 *, unsigned int, unsigned int, float, unsigned int)",
        ),
    ),
    (
        "UpdatePos__12BunyipStruct",
        Ok(
            "BunyipStruct::UpdatePos(void)",
        ),
    ),
    (
        "Particle_LoadResources__Fv",
        Ok(
            "Particle_LoadResources(void)",
        ),
    ),
    (
        "MiniGameB1_Update__10GameCamera",
        Ok(
            "GameCamera::MiniGameB1_Update(void)",
        ),
    ),
    (
        "SetToIdle__2Tyb8TyMedium",
        Ok(
            "Ty::SetToIdle(bool, TyMedium)",
        ),
    ),
    (
        "_GLOBAL_$I$Basket_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Basket_LoadResources(KromeIni *)",
        ),
    ),
    (
        "RFU081_DeleteEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__3Hud",
        Ok(
            "Hud::Init(void)",
        ),
    ),
    (
        "FindString__24Tools_DynamicStringTablePcPi",
        Ok(
            "Tools_DynamicStringTable::FindString(char *, int *)",
        ),
    ),
    (
        "InitSplatLand__15LearnToDiveData",
        Ok(
            "LearnToDiveData::InitSplatLand(void)",
        ),
    ),
    (
        "GetPitch2Points__FP6VectorT0",
        Ok(
            "GetPitch2Points(Vector *, Vector *)",
        ),
    ),
    (
        "AddGif_AD_SCANMSK__3DmaUl",
        Ok(
            "Dma::AddGif_AD_SCANMSK(unsigned long)",
        ),
    ),
    (
        "ModelRender_FLO1S_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$waterCount",
        Ok(
            "MKWater::waterCount",
        ),
    ),
    (
        "DeathInit__6Muddie",
        Ok(
            "Muddie::DeathInit(void)",
        ),
    ),
    (
        "_7Texture$pBlank",
        Ok(
            "Texture::pBlank",
        ),
    ),
    (
        "MKMemoryCard_Format__Fi",
        Ok(
            "MKMemoryCard_Format(int)",
        ),
    ),
    (
        "HandleFootstepEvents__5NeddyPc",
        Ok(
            "Neddy::HandleFootstepEvents(char *)",
        ),
    ),
    (
        "PauseScreen_OptionControls_Init__Fv",
        Ok(
            "PauseScreen_OptionControls_Init(void)",
        ),
    ),
    (
        "MiniBoulder_Reset__Fv",
        Ok(
            "MiniBoulder_Reset(void)",
        ),
    ),
    (
        "UpdatePosition__10ScubaFrillP6Vectorf",
        Ok(
            "ScubaFrill::UpdatePosition(Vector *, float)",
        ),
    ),
    (
        "EventBite__2TyPc",
        Ok(
            "Ty::EventBite(char *)",
        ),
    ),
    (
        "ConstructWeightedTriStrip__11MKWaterPropP14Water_TriStripP6VectorT2P16WaterStripVertexP16WaterStripNormalP12WaterStripUVP15WaterStripColorT2PfP8Materiali",
        Ok(
            "MKWaterProp::ConstructWeightedTriStrip(Water_TriStrip *, Vector *, Vector *, WaterStripVertex *, WaterStripNormal *, WaterStripUV *, WaterStripColor *, Vector *, float *, Material *, int)",
        ),
    ),
    (
        "AddTag_Call__3DmaPvUl",
        Ok(
            "Dma::AddTag_Call(void *, unsigned long)",
        ),
    ),
    (
        "LoadDone__22MusicalIcicleObjective",
        Ok(
            "MusicalIcicleObjective::LoadDone(void)",
        ),
    ),
    (
        "GetCatchPos__9Boomerang",
        Ok(
            "Boomerang::GetCatchPos(void)",
        ),
    ),
    (
        "_fstat_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetFrameCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "DefInitCollisionsDesc__15EnemyDescriptor",
        Ok(
            "EnemyDescriptor::DefInitCollisionsDesc(void)",
        ),
    ),
    (
        "DrawFirstPerson__2Ty",
        Ok(
            "Ty::DrawFirstPerson(void)",
        ),
    ),
    (
        "Respawn__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Respawn(void)",
        ),
    ),
    (
        "Update__15WaterfallStruct",
        Ok(
            "WaterfallStruct::Update(void)",
        ),
    ),
    (
        "Deinit__11WeatherProp",
        Ok(
            "WeatherProp::Deinit(void)",
        ),
    ),
    (
        "scePowerOffHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__9OpalCrate",
        Ok(
            "OpalCrate::Update(void)",
        ),
    ),
    (
        "WinceInit__5Lenny",
        Ok(
            "Lenny::WinceInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14YabbyObjective",
        Ok(
            "ModuleInfo<YabbyObjective>::Init(void)",
        ),
    ),
    (
        "Sound_LoadBankFromMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__14ShadowBatValveP9MKMessage",
        Ok(
            "ShadowBatValve::Message(MKMessage *)",
        ),
    ),
    (
        "Message__19SpecialPickupStructP9MKMessage",
        Ok(
            "SpecialPickupStruct::Message(MKMessage *)",
        ),
    ),
    (
        "Deinit__15ObjectiveFinder",
        Ok(
            "ObjectiveFinder::Deinit(void)",
        ),
    ),
    (
        "_dispatchMpegCbNodata",
        Err(
            NotMangled,
        ),
    ),
    (
        "Collision_Init__FiP5Modelii",
        Ok(
            "Collision_Init(int, Model *, int, int)",
        ),
    ),
    (
        "Turtle_LoadResources__Fv",
        Ok(
            "Turtle_LoadResources(void)",
        ),
    ),
    (
        "UpdatePullPos__10WhirlyWind",
        Ok(
            "WhirlyWind::UpdatePullPos(void)",
        ),
    ),
    (
        "PauseScreen_DrawFraction2d__FPcT0ffff",
        Ok(
            "PauseScreen_DrawFraction2d(char *, char *, float, float, float, float)",
        ),
    ),
    (
        "_vt$17AnimatingPropDesc",
        Ok(
            "AnimatingPropDesc virtual table",
        ),
    ),
    (
        "Sound_Update3d",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitActors__12DialogPlayer",
        Ok(
            "DialogPlayer::InitActors(void)",
        ),
    ),
    (
        "AssignWayPtOrder__17WaterSlideManageriiP11SectionInfo",
        Ok(
            "WaterSlideManager::AssignWayPtOrder(int, int, SectionInfo *)",
        ),
    ),
    (
        "unreg_handler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Main_AutoLevelSwitch_Update__Fv",
        Ok(
            "Main_AutoLevelSwitch_Update(void)",
        ),
    ),
    (
        "MKMemoryCard_ReadWriteFile__FPcPviii",
        Ok(
            "MKMemoryCard_ReadWriteFile(char *, void *, int, int, int)",
        ),
    ),
    (
        "LoadDone__7C3Chest",
        Ok(
            "C3Chest::LoadDone(void)",
        ),
    ),
    (
        "StartThrowAnim__16BoomerangManager13BoomerangSide",
        Ok(
            "BoomerangManager::StartThrowAnim(BoomerangSide)",
        ),
    ),
    (
        "MoveOnFoot__2Ty",
        Ok(
            "Ty::MoveOnFoot(void)",
        ),
    ),
    (
        "__tf16__ptmd_type_info",
        Ok(
            "__ptmd_type_info type_info function",
        ),
    ),
    (
        "errno",
        Err(
            NotMangled,
        ),
    ),
    (
        "__make_dp",
        Err(
            InvalidSpecialMethod(
                "make_dp",
            ),
        ),
    ),
    (
        "HandleFire__9Boomerang",
        Ok(
            "Boomerang::HandleFire(void)",
        ),
    ),
    (
        "Jump__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Jump(void)",
        ),
    ),
    (
        "FrontEnd_LoadLevel_Init__Fv",
        Ok(
            "FrontEnd_LoadLevel_Init(void)",
        ),
    ),
    (
        "buttonType1",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z17KoalaKidObjective",
        Ok(
            "ModuleInfo<KoalaKidObjective> virtual table",
        ),
    ),
    (
        "SceneReset__12DialogPlayerUi",
        Ok(
            "DialogPlayer::SceneReset(unsigned int)",
        ),
    ),
    (
        "Bilby_Init__Fv",
        Ok(
            "Bilby_Init(void)",
        ),
    ),
    (
        "floor",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__12StaticFXProp",
        Ok(
            "StaticFXProp::Reset(void)",
        ),
    ),
    (
        "System_InitCommandLineArgs__FPPci",
        Ok(
            "System_InitCommandLineArgs(char **, int)",
        ),
    ),
    (
        "__svfscanf",
        Err(
            InvalidSpecialMethod(
                "svfscanf",
            ),
        ),
    ),
    (
        "Update__10Fluffy_DDA",
        Ok(
            "Fluffy_DDA::Update(void)",
        ),
    ),
    (
        "Assign__10KingFisherP13CritterField2",
        Ok(
            "KingFisher::Assign(CritterField2 *)",
        ),
    ),
    (
        "_vt$8SnowPile",
        Ok(
            "SnowPile virtual table",
        ),
    ),
    (
        "TimeTrial_StopTimer__Fv",
        Ok(
            "TimeTrial_StopTimer(void)",
        ),
    ),
    (
        "_11DirectLight$pDefaultLight",
        Ok(
            "DirectLight::pDefaultLight",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11SpiderCrate",
        Ok(
            "ModuleInfo<SpiderCrate> virtual table",
        ),
    ),
    (
        "Deinit__8DiveRing",
        Ok(
            "DiveRing::Deinit(void)",
        ),
    ),
    (
        "Deinit__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Deinit(void)",
        ),
    ),
    (
        "_vt$11WeatherProp",
        Ok(
            "WeatherProp virtual table",
        ),
    ),
    (
        "MiniGame_B1_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B1_Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6GeyserPv",
        Ok(
            "ModuleInfo<Geyser>::ConstructObject(void *)",
        ),
    ),
    (
        "InitRolyPoly__6TyBite",
        Ok(
            "TyBite::InitRolyPoly(void)",
        ),
    ),
    (
        "TLBInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__6Geyser",
        Ok(
            "Geyser::Reset(void)",
        ),
    ),
    (
        "Message__19EmuRoundupObjectiveP9MKMessage",
        Ok(
            "EmuRoundupObjective::Message(MKMessage *)",
        ),
    ),
    (
        "OmniLight_Reposition__FP9OmniLightP6Vector",
        Ok(
            "OmniLight_Reposition(OmniLight *, Vector *)",
        ),
    ),
    (
        "IsTyVisible__3Eel",
        Ok(
            "Eel::IsTyVisible(void)",
        ),
    ),
    (
        "Direction_CanActivate__14CameraOverride",
        Ok(
            "CameraOverride::Direction_CanActivate(void)",
        ),
    ),
    (
        "LoadAnimPropDescriptors__H1Z17AnimatingPropDesc_P8KromeIniPcPX01_v",
        Ok(
            "void LoadAnimPropDescriptors<AnimatingPropDesc>(KromeIni *, char *, AnimatingPropDesc *)",
        ),
    ),
    (
        "Hud_SetZoomerangProjection__Fv",
        Ok(
            "Hud_SetZoomerangProjection(void)",
        ),
    ),
    (
        "MoveOnWater__2Ty",
        Ok(
            "Ty::MoveOnWater(void)",
        ),
    ),
    (
        "SetInitialGroundPlane__13ShatterStruct",
        Ok(
            "ShatterStruct::SetInitialGroundPlane(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9SoundProp",
        Ok(
            "ModuleInfo<SoundProp> virtual table",
        ),
    ),
    (
        "fpdiv",
        Err(
            NotMangled,
        ),
    ),
    (
        "DebugCameraState__15GameCameraState11CameraState",
        Ok(
            "GameCameraState::DebugCameraState(CameraState)",
        ),
    ),
    (
        "IdleStandActionTransition__2Ty",
        Ok(
            "Ty::IdleStandActionTransition(void)",
        ),
    ),
    (
        "gDisplay",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdDelayThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeleteEnemy__12EnemySpawnerP11EnemyObject",
        Ok(
            "EnemySpawner::DeleteEnemy(EnemyObject *)",
        ),
    ),
    (
        "TimeTrial_Init__Fv",
        Ok(
            "TimeTrial_Init(void)",
        ),
    ),
    (
        "RotateHead__6Fluffy",
        Ok(
            "Fluffy::RotateHead(void)",
        ),
    ),
    (
        "Reset__10ScriptProp",
        Ok(
            "ScriptProp::Reset(void)",
        ),
    ),
    (
        "DiveBiteStart__6TyBite",
        Ok(
            "TyBite::DiveBiteStart(void)",
        ),
    ),
    (
        "_pack_header",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__5Neddy",
        Ok(
            "Neddy::LogicUpdate(void)",
        ),
    ),
    (
        "_vt$11FrillLizard",
        Ok(
            "FrillLizard virtual table",
        ),
    ),
    (
        "PE_BiteGlow_LoadResources__Fv",
        Ok(
            "PE_BiteGlow_LoadResources(void)",
        ),
    ),
    (
        "DrawStrip_HighDetail__11MKWaterPropP16WaterStripHeaderP6VectorP8Material",
        Ok(
            "MKWaterProp::DrawStrip_HighDetail(WaterStripHeader *, Vector *, Material *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z23PerimeterCheckObjective",
        Ok(
            "ModuleInfo<PerimeterCheckObjective>::Init(void)",
        ),
    ),
    (
        "Message__7C3ActorP9MKMessage",
        Ok(
            "C3Actor::Message(MKMessage *)",
        ),
    ),
    (
        "FrontEnd_Extras_OnEnter__Fv",
        Ok(
            "FrontEnd_Extras_OnEnter(void)",
        ),
    ),
    (
        "_vt$11AirPlatform",
        Ok(
            "AirPlatform virtual table",
        ),
    ),
    (
        "DeinitIdleDogPaddle__2Ty",
        Ok(
            "Ty::DeinitIdleDogPaddle(void)",
        ),
    ),
    (
        "Reset__8Talisman",
        Ok(
            "Talisman::Reset(void)",
        ),
    ),
    (
        "DoGainFX__8TyHealth",
        Ok(
            "TyHealth::DoGainFX(void)",
        ),
    ),
    (
        "Message__11BoulderTrapP9MKMessage",
        Ok(
            "BoulderTrap::Message(MKMessage *)",
        ),
    ),
    (
        "Grow__12BunyipStruct",
        Ok(
            "BunyipStruct::Grow(void)",
        ),
    ),
    (
        "_vt$18MobilePlatformDesc",
        Ok(
            "MobilePlatformDesc virtual table",
        ),
    ),
    (
        "Update__17Tools_ParticleRefP5Model",
        Ok(
            "Tools_ParticleRef::Update(Model *)",
        ),
    ),
    (
        "InitHeightTable__11MKGrassType",
        Ok(
            "MKGrassType::InitHeightTable(void)",
        ),
    ),
    (
        "AttackIdleStand__11FrillLizardb",
        Ok(
            "FrillLizard::AttackIdleStand(bool)",
        ),
    ),
    (
        "Draw__8HudImage",
        Ok(
            "HudImage::Draw(void)",
        ),
    ),
    (
        "MiniGame_C3_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C3_Update(void)",
        ),
    ),
    (
        "Sinking__7Coconut",
        Ok(
            "Coconut::Sinking(void)",
        ),
    ),
    (
        "Reset__8CableCar",
        Ok(
            "CableCar::Reset(void)",
        ),
    ),
    (
        "STEAM_REF0",
        Err(
            NotMangled,
        ),
    ),
    (
        "Fire__8MegarangP6VectorT1",
        Ok(
            "Megarang::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "GetElementType__9LevelData",
        Ok(
            "LevelData::GetElementType(void)",
        ),
    ),
    (
        "_ratio",
        Err(
            NotMangled,
        ),
    ),
    (
        "System_StartScene__Fi",
        Ok(
            "System_StartScene(int)",
        ),
    ),
    (
        "HitWithBoulder__10BlueTongue",
        Ok(
            "BlueTongue::HitWithBoulder(void)",
        ),
    ),
    (
        "LongFall__2Ty",
        Ok(
            "Ty::LongFall(void)",
        ),
    ),
    (
        "_$_19__builtin_type_info",
        Ok(
            "__builtin_type_info::~__builtin_type_info(void)",
        ),
    ),
    (
        "SpyEggIdle__6SpyEgg",
        Ok(
            "SpyEgg::SpyEggIdle(void)",
        ),
    ),
    (
        "PauseScreen_OptionControls_LoadResources__Fv",
        Ok(
            "PauseScreen_OptionControls_LoadResources(void)",
        ),
    ),
    (
        "IntraSwimTransition__2Ty",
        Ok(
            "Ty::IntraSwimTransition(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Target",
        Ok(
            "ModuleInfo<Target>::Init(void)",
        ),
    ),
    (
        "Init__19EmuRoundupObjectiveP11GameObjDesc",
        Ok(
            "EmuRoundupObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "CheckSplash__6Groper",
        Ok(
            "Groper::CheckSplash(void)",
        ),
    ),
    (
        "Message__23BlueTongueRockObjectiveP9MKMessage",
        Ok(
            "BlueTongueRockObjective::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10WaterWheel",
        Ok(
            "ModuleInfo<WaterWheel>::Init(void)",
        ),
    ),
    (
        "Destroy__9Animation",
        Ok(
            "Animation::Destroy(void)",
        ),
    ),
    (
        "BlockInit__6Muddie",
        Ok(
            "Muddie::BlockInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8BeachHut",
        Ok(
            "ModuleInfo<BeachHut>::Init(void)",
        ),
    ),
    (
        "Message__8ElevatorP9MKMessage",
        Ok(
            "Elevator::Message(MKMessage *)",
        ),
    ),
    (
        "Particle_Goo_Init__FPP14ParticleSystemP6Vectorf",
        Ok(
            "Particle_Goo_Init(ParticleSystem **, Vector *, float)",
        ),
    ),
    (
        "IceBlock_Add__FP6VectorT0P15CollisionResultPP14IceBlockStruct",
        Ok(
            "IceBlock_Add(Vector *, Vector *, CollisionResult *, IceBlockStruct **)",
        ),
    ),
    (
        "_sequenceHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__6UIText",
        Ok(
            "UIText::Draw(void)",
        ),
    ),
    (
        "_table_sinf__Ff",
        Ok(
            "_table_sinf(float)",
        ),
    ),
    (
        "System_CheckZRequests__Fv",
        Ok(
            "System_CheckZRequests(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Farlapp",
        Ok(
            "ModuleInfo<Farlapp>::Init(void)",
        ),
    ),
    (
        "_vt$13bad_exception",
        Ok(
            "bad_exception virtual table",
        ),
    ),
    (
        "IdleWaterShakeTransition__2Ty",
        Ok(
            "Ty::IdleWaterShakeTransition(void)",
        ),
    ),
    (
        "AddWake__5Shark",
        Ok(
            "Shark::AddWake(void)",
        ),
    ),
    (
        "AddObject__17GameObjectManagerP10GameObjectP6MatrixP14BoundingVolume",
        Ok(
            "GameObjectManager::AddObject(GameObject *, Matrix *, BoundingVolume *)",
        ),
    ),
    (
        "__make_fp",
        Err(
            InvalidSpecialMethod(
                "make_fp",
            ),
        ),
    ),
    (
        "TossRock__4Bull",
        Ok(
            "Bull::TossRock(void)",
        ),
    ),
    (
        "_vt$11BurningTree",
        Ok(
            "BurningTree virtual table",
        ),
    ),
    (
        "ModelRender_CFT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Spline_GetVelocity__FP6VectorT0T0T0f",
        Ok(
            "Spline_GetVelocity(Vector *, Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "_vt$6Portal",
        Ok(
            "Portal virtual table",
        ),
    ),
    (
        "Input_GetButtonsPressed__F12InputDevicesP12InputDevices",
        Ok(
            "Input_GetButtonsPressed(InputDevices, InputDevices *)",
        ),
    ),
    (
        "Off__9Generator",
        Ok(
            "Generator::Off(void)",
        ),
    ),
    (
        "IsPointWithin__14BoundingRegionP6Vector",
        Ok(
            "BoundingRegion::IsPointWithin(Vector *)",
        ),
    ),
    (
        "WeatherProp_LoadResources__FP8KromeIni",
        Ok(
            "WeatherProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Shattering__15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp::Shattering(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7ChumBox",
        Ok(
            "ModuleInfo<ChumBox> virtual table",
        ),
    ),
    (
        "iTerminateThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle_CanGoToState__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Idle_CanGoToState(void)",
        ),
    ),
    (
        "Idle__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Idle(void)",
        ),
    ),
    (
        "DrawVelocities__18BezierPathFollowerf",
        Ok(
            "BezierPathFollower::DrawVelocities(float)",
        ),
    ),
    (
        "DrawHighDetail__11MKWaterProp",
        Ok(
            "MKWaterProp::DrawHighDetail(void)",
        ),
    ),
    (
        "RecoverInit__11RhinoGround",
        Ok(
            "RhinoGround::RecoverInit(void)",
        ),
    ),
    (
        "Init__24Tools_DynamicStringTable",
        Ok(
            "Tools_DynamicStringTable::Init(void)",
        ),
    ),
    (
        "IsBiting__7BushPig",
        Ok(
            "BushPig::IsBiting(void)",
        ),
    ),
    (
        "Deinit__7Boulder",
        Ok(
            "Boulder::Deinit(void)",
        ),
    ),
    (
        "ClearSpecialPickups__8GameData",
        Ok(
            "GameData::ClearSpecialPickups(void)",
        ),
    ),
    (
        "Draw__5ModelPUs",
        Ok(
            "Model::Draw(unsigned short *)",
        ),
    ),
    (
        "DrawModule__10GameObject",
        Ok(
            "GameObject::DrawModule(void)",
        ),
    ),
    (
        "DeinitRangChange__2Ty",
        Ok(
            "Ty::DeinitRangChange(void)",
        ),
    ),
    (
        "_MKMem_TAlloc__FiPci",
        Ok(
            "_MKMem_TAlloc(int, char *, int)",
        ),
    ),
    (
        "CheckCollected__3Gemf",
        Ok(
            "Gem::CheckCollected(float)",
        ),
    ),
    (
        "Init__13RainbowEffectP6Vector",
        Ok(
            "RainbowEffect::Init(Vector *)",
        ),
    ),
    (
        "_dispRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$TyAttributes_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to TyAttributes_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Video_InitModule__Fv",
        Ok(
            "Video_InitModule(void)",
        ),
    ),
    (
        "Draw__12QuadTriStripP6Vector",
        Ok(
            "QuadTriStrip::Draw(Vector *)",
        ),
    ),
    (
        "Update__14TriggerBoxProp",
        Ok(
            "TriggerBoxProp::Update(void)",
        ),
    ),
    (
        "Draw__6Friend",
        Ok(
            "Friend::Draw(void)",
        ),
    ),
    (
        "Show__5Lenny",
        Ok(
            "Lenny::Show(void)",
        ),
    ),
    (
        "FollowTy__6Wombat",
        Ok(
            "Wombat::FollowTy(void)",
        ),
    ),
    (
        "Load__14WaterSlideDataP16WayPointLoadInfo",
        Ok(
            "WaterSlideData::Load(WayPointLoadInfo *)",
        ),
    ),
    (
        "sceCdNcmdDiskReady",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACWX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z22MusicalIcicleObjective",
        Ok(
            "ModuleInfo<MusicalIcicleObjective> virtual table",
        ),
    ),
    (
        "Deinit__9LevelData",
        Ok(
            "LevelData::Deinit(void)",
        ),
    ),
    (
        "UWDisableWobble__Fv",
        Ok(
            "UWDisableWobble(void)",
        ),
    ),
    (
        "MKGrass_FindGrassType__FPc",
        Ok(
            "MKGrass_FindGrassType(char *)",
        ),
    ),
    (
        "LoadLine__6MaurieP12KromeIniLine",
        Ok(
            "Maurie::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "FlinchInit__6Groper",
        Ok(
            "Groper::FlinchInit(void)",
        ),
    ),
    (
        "LoadLevel_LoadSoundEvent__FP12KromeIniLinePcPii",
        Ok(
            "LoadLevel_LoadSoundEvent(KromeIniLine *, char *, int *, int)",
        ),
    ),
    (
        "sceDmaRecvI",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__11BonusPickupP11GameObjDesc",
        Ok(
            "BonusPickup::Init(GameObjDesc *)",
        ),
    ),
    (
        "ModelRender_CFLT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Rail_Update__14CameraOverride",
        Ok(
            "CameraOverride::Rail_Update(void)",
        ),
    ),
    (
        "Slide__8ChuteLog",
        Ok(
            "ChuteLog::Slide(void)",
        ),
    ),
    (
        "InitCatching__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::InitCatching(void)",
        ),
    ),
    (
        "SpawnBubbles__6Target",
        Ok(
            "Target::SpawnBubbles(void)",
        ),
    ),
    (
        "EnableDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__9BadBoonieP11GameObjDesc",
        Ok(
            "BadBoonie::Init(GameObjDesc *)",
        ),
    ),
    (
        "FrontEnd_MainMenu_OnEnter__Fv",
        Ok(
            "FrontEnd_MainMenu_OnEnter(void)",
        ),
    ),
    (
        "sceMpegGetPicture",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitHitAntHill__7BushPig",
        Ok(
            "BushPig::InitHitAntHill(void)",
        ),
    ),
    (
        "Init__10StaticPropP11GameObjDesc",
        Ok(
            "StaticProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "bWakeLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__17WaterSlideManagerP6Vector",
        Ok(
            "WaterSlideManager::Update(Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7CaveBatPv",
        Ok(
            "ModuleInfo<CaveBat>::ConstructObject(void *)",
        ),
    ),
    (
        "descr_cast__H1ZP10CattleDesc_P16MKPropDescriptor_X01",
        Ok(
            "CattleDesc * descr_cast<CattleDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Recover__11RhinoGround",
        Ok(
            "RhinoGround::Recover(void)",
        ),
    ),
    (
        "_s2b",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Farlapp",
        Ok(
            "ModuleInfo<Farlapp> virtual table",
        ),
    ),
    (
        "PickUpInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::PickUpInit(void)",
        ),
    ),
    (
        "SharkCage_GetTyCage__Fv",
        Ok(
            "SharkCage_GetTyCage(void)",
        ),
    ),
    (
        "InitWalk__7BushPig",
        Ok(
            "BushPig::InitWalk(void)",
        ),
    ),
    (
        "LensFlare_LoadResources__Fv",
        Ok(
            "LensFlare_LoadResources(void)",
        ),
    ),
    (
        "List__5Model",
        Ok(
            "Model::List(void)",
        ),
    ),
    (
        "Update__14ParticleSystem",
        Ok(
            "ParticleSystem::Update(void)",
        ),
    ),
    (
        "RotateTurret__7SnowGun",
        Ok(
            "SnowGun::RotateTurret(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10StaticPropPv",
        Ok(
            "ModuleInfo<StaticProp>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitFiring__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::DeinitFiring(void)",
        ),
    ),
    (
        "_copyAddRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__4RockP11GameObjDesc",
        Ok(
            "Rock::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__6GasJetP11GameObjDesc",
        Ok(
            "GasJet::Init(GameObjDesc *)",
        ),
    ),
    (
        "Range_IsVisible__FP6Vector",
        Ok(
            "Range_IsVisible(Vector *)",
        ),
    ),
    (
        "LoadDone__6Wombat",
        Ok(
            "Wombat::LoadDone(void)",
        ),
    ),
    (
        "UpdatePhysics__2Ty",
        Ok(
            "Ty::UpdatePhysics(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SmallCrab_LoadResources__Fv",
        Ok(
            "global constructors keyed to SmallCrab_LoadResources(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14TriggerBoxProp",
        Ok(
            "ModuleInfo<TriggerBoxProp> virtual table",
        ),
    ),
    (
        "Model_GetNmbrOfMaterials__FP13ModelTemplatei",
        Ok(
            "Model_GetNmbrOfMaterials(ModelTemplate *, int)",
        ),
    ),
    (
        "_6Wombat$WSMan",
        Ok(
            "Wombat::WSMan",
        ),
    ),
    (
        "_i2b",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__8TalismanP9MKMessage",
        Ok(
            "Talisman::Message(MKMessage *)",
        ),
    ),
    (
        "NormalPlayerAdjust_Update__10GameCamera",
        Ok(
            "GameCamera::NormalPlayerAdjust_Update(void)",
        ),
    ),
    (
        "AddVif_SET_DIRECT__3DmaUi",
        Ok(
            "Dma::AddVif_SET_DIRECT(unsigned int)",
        ),
    ),
    (
        "Init__8BuzzSaw2P11GameObjDesc",
        Ok(
            "BuzzSaw2::Init(GameObjDesc *)",
        ),
    ),
    (
        "Update__13CausticEffect",
        Ok(
            "CausticEffect::Update(void)",
        ),
    ),
    (
        "InitBreakout__3Emu",
        Ok(
            "Emu::InitBreakout(void)",
        ),
    ),
    (
        "NormaliseRot__6Vector",
        Ok(
            "Vector::NormaliseRot(void)",
        ),
    ),
    (
        "ShakeCage__9SharkCage",
        Ok(
            "SharkCage::ShakeCage(void)",
        ),
    ),
    (
        "SnowBallExplode_LoadResources__Fv",
        Ok(
            "SnowBallExplode_LoadResources(void)",
        ),
    ),
    (
        "LoadDone__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::LoadDone(void)",
        ),
    ),
    (
        "LensFlare_Draw__Fv",
        Ok(
            "LensFlare_Draw(void)",
        ),
    ),
    (
        "InitIdleSwim__2Ty",
        Ok(
            "Ty::InitIdleSwim(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14FishShoalFieldPv",
        Ok(
            "ModuleInfo<FishShoalField>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$11TriggerProp",
        Ok(
            "TriggerProp virtual table",
        ),
    ),
    (
        "WaterToLandTransition__2Ty",
        Ok(
            "Ty::WaterToLandTransition(void)",
        ),
    ),
    (
        "MiniGameA2_Deinit__Fv",
        Ok(
            "MiniGameA2_Deinit(void)",
        ),
    ),
    (
        "Deactivate__11WeatherProp",
        Ok(
            "WeatherProp::Deactivate(void)",
        ),
    ),
    (
        "Tools_CapsuleTest__FP6VectorT0ffT0",
        Ok(
            "Tools_CapsuleTest(Vector *, Vector *, float, float, Vector *)",
        ),
    ),
    (
        "Tools_RandomBox__FP6Vectorf",
        Ok(
            "Tools_RandomBox(Vector *, float)",
        ),
    ),
    (
        "Alert__11RhinoGround",
        Ok(
            "RhinoGround::Alert(void)",
        ),
    ),
    (
        "GameCamera_UseNormalCamera__Fv",
        Ok(
            "GameCamera_UseNormalCamera(void)",
        ),
    ),
    (
        "Reset__10TimeAttack",
        Ok(
            "TimeAttack::Reset(void)",
        ),
    ),
    (
        "Hit__11GuideBarrel",
        Ok(
            "GuideBarrel::Hit(void)",
        ),
    ),
    (
        "MKGrass_Draw__Fv",
        Ok(
            "MKGrass_Draw(void)",
        ),
    ),
    (
        "StartRangSpecialAnimation__2Ty13BoomerangSideP6MKAnim",
        Ok(
            "Ty::StartRangSpecialAnimation(BoomerangSide, MKAnim *)",
        ),
    ),
    (
        "Dump__8KromeIniPc",
        Ok(
            "KromeIni::Dump(char *)",
        ),
    ),
    (
        "ChaseDeinit__10ScubaFrill",
        Ok(
            "ScubaFrill::ChaseDeinit(void)",
        ),
    ),
    (
        "DrawPreWater__17TyParticleManager",
        Ok(
            "TyParticleManager::DrawPreWater(void)",
        ),
    ),
    (
        "MiniGame_Init__Fv",
        Ok(
            "MiniGame_Init(void)",
        ),
    ),
    (
        "__rtti_attr",
        Err(
            InvalidSpecialMethod(
                "rtti_attr",
            ),
        ),
    ),
    (
        "Idle_Update__9BadBoonie",
        Ok(
            "BadBoonie::Idle_Update(void)",
        ),
    ),
    (
        "CheckCommonAnimEvents__11EnemyObject",
        Ok(
            "EnemyObject::CheckCommonAnimEvents(void)",
        ),
    ),
    (
        "Deinit__10Teleporter",
        Ok(
            "Teleporter::Deinit(void)",
        ),
    ),
    (
        "FrontEnd_Draw__Fv",
        Ok(
            "FrontEnd_Draw(void)",
        ),
    ),
    (
        "UpdateFinal__10GameCamera",
        Ok(
            "GameCamera::UpdateFinal(void)",
        ),
    ),
    (
        "getpid",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdInitEeCB",
        Err(
            NotMangled,
        ),
    ),
    (
        "Death__11FrillLizard",
        Ok(
            "FrillLizard::Death(void)",
        ),
    ),
    (
        "UpdateLogic__6Cattle",
        Ok(
            "Cattle::UpdateLogic(void)",
        ),
    ),
    (
        "GameCamera_UseGunRecoil__Ff",
        Ok(
            "GameCamera_UseGunRecoil(float)",
        ),
    ),
    (
        "SunBaking__12TurtleStruct",
        Ok(
            "TurtleStruct::SunBaking(void)",
        ),
    ),
    (
        "Vibrate__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Vibrate(void)",
        ),
    ),
    (
        "globalMessageMap",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpikeyIce_End__Fv",
        Ok(
            "SpikeyIce_End(void)",
        ),
    ),
    (
        "Reset__6Target",
        Ok(
            "Target::Reset(void)",
        ),
    ),
    (
        "UnderWaterKnockBackDeinit__2Ty",
        Ok(
            "Ty::UnderWaterKnockBackDeinit(void)",
        ),
    ),
    (
        "GetNodeName__9Animationi",
        Ok(
            "Animation::GetNodeName(int)",
        ),
    ),
    (
        "Deinit__12EnemySpawner",
        Ok(
            "EnemySpawner::Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Dennis_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Dennis_LoadResources(KromeIni *)",
        ),
    ),
    (
        "CreateSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCd_ncmdrdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "_14ParticleSystem$bProfileParticles",
        Ok(
            "ParticleSystem::bProfileParticles",
        ),
    ),
    (
        "IsWithinCameraView__11EnemyObject",
        Ok(
            "EnemyObject::IsWithinCameraView(void)",
        ),
    ),
    (
        "Crash__5Shark",
        Ok(
            "Shark::Crash(void)",
        ),
    ),
    (
        "Update__11WeatherProp",
        Ok(
            "WeatherProp::Update(void)",
        ),
    ),
    (
        "CollisionCheck__7BushPigf",
        Ok(
            "BushPig::CollisionCheck(float)",
        ),
    ),
    (
        "DrawText3d__4FontPcP6Vectorff11FontJustifyT2iiPUiii",
        Ok(
            "Font::DrawText3d(char *, Vector *, float, float, FontJustify, Vector *, int, int, unsigned int *, int, int)",
        ),
    ),
    (
        "Fall_Normal_SetSource__10GameCamera",
        Ok(
            "GameCamera::Fall_Normal_SetSource(void)",
        ),
    ),
    (
        "_vt$7LilyPad",
        Ok(
            "LilyPad virtual table",
        ),
    ),
    (
        "Deinit__9GreySmoke",
        Ok(
            "GreySmoke::Deinit(void)",
        ),
    ),
    (
        "gToggle1stPerson",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$_16CaveBatObjective$bActivated",
        Ok(
            "global constructors keyed to CaveBatObjective::bActivated",
        ),
    ),
    (
        "ShatteredUpdate__7Boulder",
        Ok(
            "Boulder::ShatteredUpdate(void)",
        ),
    ),
    (
        "Tools_Log__FiPc",
        Ok(
            "Tools_Log(int, char *)",
        ),
    ),
    (
        "FlinchInit__9Barracuda",
        Ok(
            "Barracuda::FlinchInit(void)",
        ),
    ),
    (
        "TopDown_Init__14CameraOverride",
        Ok(
            "CameraOverride::TopDown_Init(void)",
        ),
    ),
    (
        "CMultiply__6VectorP6VectorT1",
        Ok(
            "Vector::CMultiply(Vector *, Vector *)",
        ),
    ),
    (
        "FindNextNode__4Bull",
        Ok(
            "Bull::FindNextNode(void)",
        ),
    ),
    (
        "SetSpawnDelay__12EnemySpawnerf",
        Ok(
            "EnemySpawner::SetSpawnDelay(float)",
        ),
    ),
    (
        "Update__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4MothPv",
        Ok(
            "ModuleInfo<Moth>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__13PhysicsObjectbf",
        Ok(
            "PhysicsObject::Update(bool, float)",
        ),
    ),
    (
        "SetCollectionCamera__19SpecialPickupStructP6VectorT1",
        Ok(
            "SpecialPickupStruct::SetCollectionCamera(Vector *, Vector *)",
        ),
    ),
    (
        "CompareAngle__Fff",
        Ok(
            "CompareAngle(float, float)",
        ),
    ),
    (
        "Draw__6Fluffy",
        Ok(
            "Fluffy::Draw(void)",
        ),
    ),
    (
        "_vt$5Leech",
        Ok(
            "Leech virtual table",
        ),
    ),
    (
        "SnowRoo_LoadResources__FP8KromeIni",
        Ok(
            "SnowRoo_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Draw__11GuideBarrel",
        Ok(
            "GuideBarrel::Draw(void)",
        ),
    ),
    (
        "qsort",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_GetYaw__Fv",
        Ok(
            "GameCamera_GetYaw(void)",
        ),
    ),
    (
        "Init__13LightningInit",
        Ok(
            "LightningInit::Init(void)",
        ),
    ),
    (
        "Message__13MusicalIcicleP9MKMessage",
        Ok(
            "MusicalIcicle::Message(MKMessage *)",
        ),
    ),
    (
        "gGameCameraDesc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7Texture$pCfgVRamLocked",
        Ok(
            "Texture::pCfgVRamLocked",
        ),
    ),
    (
        "WalkInit__5Yabby",
        Ok(
            "Yabby::WalkInit(void)",
        ),
    ),
    (
        "Init__7CaveBatP11GameObjDesc",
        Ok(
            "CaveBat::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateWorldMatrix__10KingFisher",
        Ok(
            "KingFisher::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13FallGuidePropPv",
        Ok(
            "ModuleInfo<FallGuideProp>::ConstructObject(void *)",
        ),
    ),
    (
        "Reeds_Init__Fv",
        Ok(
            "Reeds_Init(void)",
        ),
    ),
    (
        "Message__10LavaBurnerP9MKMessage",
        Ok(
            "LavaBurner::Message(MKMessage *)",
        ),
    ),
    (
        "Tools_Dampen__FP6VectorT0f",
        Ok(
            "Tools_Dampen(Vector *, Vector *, float)",
        ),
    ),
    (
        "GetStateByRange__5Skinki",
        Ok(
            "Skink::GetStateByRange(int)",
        ),
    ),
    (
        "LoadLine__21ConditionalScriptPropP12KromeIniLine",
        Ok(
            "ConditionalScriptProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Reset__14LevelObjective",
        Ok(
            "LevelObjective::Reset(void)",
        ),
    ),
    (
        "Rescued__11BilbyStruct",
        Ok(
            "BilbyStruct::Rescued(void)",
        ),
    ),
    (
        "FarLapp_LoadResources__FP8KromeIni",
        Ok(
            "FarLapp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GeneratePointInField__13CritterField2P6Vectorbf",
        Ok(
            "CritterField2::GeneratePointInField(Vector *, bool, float)",
        ),
    ),
    (
        "_17MiniGameObjective$pActiveMiniGame",
        Ok(
            "MiniGameObjective::pActiveMiniGame",
        ),
    ),
    (
        "ChaseAttack__10BlueTongue",
        Ok(
            "BlueTongue::ChaseAttack(void)",
        ),
    ),
    (
        "_vt$10WarpFlower",
        Ok(
            "WarpFlower virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11Collapsible",
        Ok(
            "ModuleInfo<Collapsible>::Init(void)",
        ),
    ),
    (
        "_7SeaMine$bFirst",
        Ok(
            "SeaMine::bFirst",
        ),
    ),
    (
        "Idle__7BushPig",
        Ok(
            "BushPig::Idle(void)",
        ),
    ),
    (
        "Reset__18BezierPathFollower",
        Ok(
            "BezierPathFollower::Reset(void)",
        ),
    ),
    (
        "CreateFromRawData__7TexturePcPvT2iii",
        Ok(
            "Texture::CreateFromRawData(char *, void *, void *, int, int, int)",
        ),
    ),
    (
        "FrontEnd_Extras_Update__Fv",
        Ok(
            "FrontEnd_Extras_Update(void)",
        ),
    ),
    (
        "fscanf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__3Sly",
        Ok(
            "Sly::Idle(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11GrasshopperPv",
        Ok(
            "ModuleInfo<Grasshopper>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadSubTitleBank__12DialogPlayerPc",
        Ok(
            "DialogPlayer::LoadSubTitleBank(char *)",
        ),
    ),
    (
        "SetCurrentPath__11PathManagerP11PathSegmenti",
        Ok(
            "PathManager::SetCurrentPath(PathSegment *, int)",
        ),
    ),
    (
        "Init__13MKParticleGenP17MKParticleGenType",
        Ok(
            "MKParticleGen::Init(MKParticleGenType *)",
        ),
    ),
    (
        "MKWaterManager_CreateDebugMenus__Fv",
        Ok(
            "MKWaterManager_CreateDebugMenus(void)",
        ),
    ),
    (
        "_15StopwatchStruct$targetTime",
        Ok(
            "StopwatchStruct::targetTime",
        ),
    ),
    (
        "ClearBuffer__4Viewiiii",
        Ok(
            "View::ClearBuffer(int, int, int, int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11GuideBarrel",
        Ok(
            "ModuleInfo<GuideBarrel> virtual table",
        ),
    ),
    (
        "sceMtapGetModVersion",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__9DustTrail",
        Ok(
            "DustTrail::Deinit(void)",
        ),
    ),
    (
        "IdleTransition__2Ty",
        Ok(
            "Ty::IdleTransition(void)",
        ),
    ),
    (
        "__ti10bad_typeid",
        Ok(
            "bad_typeid type_info node",
        ),
    ),
    (
        "UpdateFillState__5Modeli",
        Ok(
            "Model::UpdateFillState(int)",
        ),
    ),
    (
        "SpawnSnowFlake__17TyParticleManagerP6VectorT1ffi",
        Ok(
            "TyParticleManager::SpawnSnowFlake(Vector *, Vector *, float, float, int)",
        ),
    ),
    (
        "MKMatrixMultiply3x4",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__7Furnace",
        Ok(
            "Furnace::Reset(void)",
        ),
    ),
    (
        "RenderTexture_ResetVRam__Fv",
        Ok(
            "RenderTexture_ResetVRam(void)",
        ),
    ),
    (
        "ModelRender_CFLX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Lenny_LoadResources__FP8KromeIni",
        Ok(
            "Lenny_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11ScrubTurkey",
        Ok(
            "ModuleInfo<ScrubTurkey> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7C1WaterPv",
        Ok(
            "ModuleInfo<C1Water>::ConstructObject(void *)",
        ),
    ),
    (
        "Animate__12DialogPlayerUiP12EffectStructRi",
        Ok(
            "DialogPlayer::Animate(unsigned int, EffectStruct *, int &)",
        ),
    ),
    (
        "Scale__12QuatRotationP12QuatRotationf",
        Ok(
            "QuatRotation::Scale(QuatRotation *, float)",
        ),
    ),
    (
        "Deinit__4Rain",
        Ok(
            "Rain::Deinit(void)",
        ),
    ),
    (
        "Init__Q27DataVal2WS",
        Ok(
            "DataVal::WS::Init(void)",
        ),
    ),
    (
        "Tools_RenderToTarget__FP8Materialfffffff",
        Ok(
            "Tools_RenderToTarget(Material *, float, float, float, float, float, float, float)",
        ),
    ),
    (
        "_GLOBAL_$I$BlueTongue_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BlueTongue_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__6DennisP11GameObjDesc",
        Ok(
            "Dennis::Init(GameObjDesc *)",
        ),
    ),
    (
        "sceGsSetDefStoreImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "AnimatingCamera_Init__10GameCamera",
        Ok(
            "GameCamera::AnimatingCamera_Init(void)",
        ),
    ),
    (
        "_GLOBAL_$I$THUNDER_EGG_REF",
        Ok(
            "global constructors keyed to THUNDER_EGG_REF",
        ),
    ),
    (
        "Falling__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Falling(void)",
        ),
    ),
    (
        "RestoreLives__8GameData",
        Ok(
            "GameData::RestoreLives(void)",
        ),
    ),
    (
        "BarbedWire_Delete__FP16BarbedWireStruct",
        Ok(
            "BarbedWire_Delete(BarbedWireStruct *)",
        ),
    ),
    (
        "_motionVectors",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$bDrawDebugInfo",
        Ok(
            "MKWater::bDrawDebugInfo",
        ),
    ),
    (
        "FollowBossInit__8WhiteBat",
        Ok(
            "WhiteBat::FollowBossInit(void)",
        ),
    ),
    (
        "Reset__8Burnable",
        Ok(
            "Burnable::Reset(void)",
        ),
    ),
    (
        "WaterSlideTransition__2Ty",
        Ok(
            "Ty::WaterSlideTransition(void)",
        ),
    ),
    (
        "pDolbyDebugStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Load__11MKGrassType",
        Ok(
            "MKGrassType::Load(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15ZoneBlockerPropPv",
        Ok(
            "ModuleInfo<ZoneBlockerProp>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__5SpearP11GameObjDesc",
        Ok(
            "Spear::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__10LogicState9GameState",
        Ok(
            "LogicState::Init(GameState)",
        ),
    ),
    (
        "PreInitializeLevel__Fi",
        Ok(
            "PreInitializeLevel(int)",
        ),
    ),
    (
        "SetIdleAnimation__2Ty",
        Ok(
            "Ty::SetIdleAnimation(void)",
        ),
    ),
    (
        "sceDmaWatch",
        Err(
            NotMangled,
        ),
    ),
    (
        "SlerpQuat__FP6VectorT0fT0",
        Ok(
            "SlerpQuat(Vector *, Vector *, float, Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Roach",
        Ok(
            "ModuleInfo<Roach>::Init(void)",
        ),
    ),
    (
        "TyIn__6Geyser",
        Ok(
            "Geyser::TyIn(void)",
        ),
    ),
    (
        "StartSession__10DDASession",
        Ok(
            "DDASession::StartSession(void)",
        ),
    ),
    (
        "RolyPoly__6TyBite",
        Ok(
            "TyBite::RolyPoly(void)",
        ),
    ),
    (
        "Update_Fall__3Fly",
        Ok(
            "Fly::Update_Fall(void)",
        ),
    ),
    (
        "CreateParticle__14ParticleSystem",
        Ok(
            "ParticleSystem::CreateParticle(void)",
        ),
    ),
    (
        "Magnitude__6Vector",
        Ok(
            "Vector::Magnitude(void)",
        ),
    ),
    (
        "StartSubObjectDraw__5Model",
        Ok(
            "Model::StartSubObjectDraw(void)",
        ),
    ),
    (
        "Message__9GeneratorP9MKMessage",
        Ok(
            "Generator::Message(MKMessage *)",
        ),
    ),
    (
        "FleeInit__9Barracuda",
        Ok(
            "Barracuda::FleeInit(void)",
        ),
    ),
    (
        "Eel_LoadResources__FP8KromeIni",
        Ok(
            "Eel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "DeinitClaim__7BushPig",
        Ok(
            "BushPig::DeinitClaim(void)",
        ),
    ),
    (
        "Deinit__4Frog",
        Ok(
            "Frog::Deinit(void)",
        ),
    ),
    (
        "sceCdCbfunc_number",
        Err(
            NotMangled,
        ),
    ),
    (
        "Gem_PickupParticle_LoadResources__Fv",
        Ok(
            "Gem_PickupParticle_LoadResources(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Sheila",
        Ok(
            "ModuleInfo<Sheila>::Init(void)",
        ),
    ),
    (
        "SetPosition__13SelectionRangP6VectorcP4View",
        Ok(
            "SelectionRang::SetPosition(Vector *, char, View *)",
        ),
    ),
    (
        "LoadDescriptors__H1Z21ShatterableDescriptor_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<ShatterableDescriptor>(KromeIni *, char *, ShatterableDescriptor *)",
        ),
    ),
    (
        "eventArray",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tfc",
        Ok(
            "char type_info function",
        ),
    ),
    (
        "ModelRender_AW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "RunAwayDeinit__5Roach",
        Ok(
            "Roach::RunAwayDeinit(void)",
        ),
    ),
    (
        "Patrol__5Skink",
        Ok(
            "Skink::Patrol(void)",
        ),
    ),
    (
        "InitPhrase__12DialogPlayer",
        Ok(
            "DialogPlayer::InitPhrase(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11InvisiCrate",
        Ok(
            "ModuleInfo<InvisiCrate>::Init(void)",
        ),
    ),
    (
        "NormaliseToSlope__2Tyf",
        Ok(
            "Ty::NormaliseToSlope(float)",
        ),
    ),
    (
        "Update__21ParticleSystemManager",
        Ok(
            "ParticleSystemManager::Update(void)",
        ),
    ),
    (
        "AddTag_End__3DmaUlUlUl",
        Ok(
            "Dma::AddTag_End(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "DeinitModule__14MKSceneManager",
        Ok(
            "MKSceneManager::DeinitModule(void)",
        ),
    ),
    (
        "ConstructTriStripVertex__11MKWaterPropP14Water_TriStripiP16WaterStripVertexP12WaterStripUVP15WaterStripColorP16WaterStripNormalP6Vector",
        Ok(
            "MKWaterProp::ConstructTriStripVertex(Water_TriStrip *, int, WaterStripVertex *, WaterStripUV *, WaterStripColor *, WaterStripNormal *, Vector *)",
        ),
    ),
    (
        "Init__13AnimatingPropP11GameObjDesc",
        Ok(
            "AnimatingProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "GameData_Init__Fv",
        Ok(
            "GameData_Init(void)",
        ),
    ),
    (
        "Safe__9AuroraKid",
        Ok(
            "AuroraKid::Safe(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10BlueTongue",
        Ok(
            "ModuleInfo<BlueTongue>::Init(void)",
        ),
    ),
    (
        "Round__Ff",
        Ok(
            "Round(float)",
        ),
    ),
    (
        "Update__18SpeedboatObjective",
        Ok(
            "SpeedboatObjective::Update(void)",
        ),
    ),
    (
        "DeathDeinit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::DeathDeinit(void)",
        ),
    ),
    (
        "Init__11ScrubTurkeyP11GameObjDesc",
        Ok(
            "ScrubTurkey::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__12MKAnimScriptP12MKAnimScript",
        Ok(
            "MKAnimScript::Init(MKAnimScript *)",
        ),
    ),
    (
        "StunnedInit__6Groper",
        Ok(
            "Groper::StunnedInit(void)",
        ),
    ),
    (
        "Sheila_BeHappy__Fv",
        Ok(
            "Sheila_BeHappy(void)",
        ),
    ),
    (
        "Deinit__8Platform",
        Ok(
            "Platform::Deinit(void)",
        ),
    ),
    (
        "ModelRender_ACExyX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "dpsub",
        Err(
            NotMangled,
        ),
    ),
    (
        "IdleAttack__10BlueTongue",
        Ok(
            "BlueTongue::IdleAttack(void)",
        ),
    ),
    (
        "UpdateWorldMatrix__10CrikeyChum",
        Ok(
            "CrikeyChum::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_23BlueTongueRockObjective$bActivated",
        Ok(
            "global constructors keyed to BlueTongueRockObjective::bActivated",
        ),
    ),
    (
        "GetSubObjectOrigin__7MKWateri",
        Ok(
            "MKWater::GetSubObjectOrigin(int)",
        ),
    ),
    (
        "Watch__8Sentinel",
        Ok(
            "Sentinel::Watch(void)",
        ),
    ),
    (
        "UpdateLogic__4Ibis",
        Ok(
            "Ibis::UpdateLogic(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10CuttleFish",
        Ok(
            "ModuleInfo<CuttleFish>::Init(void)",
        ),
    ),
    (
        "Tools_Wobble__Ffi",
        Ok(
            "Tools_Wobble(float, int)",
        ),
    ),
    (
        "ModelRender_CFLS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_LDTM_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalcPerpPos__14WaterSlideData",
        Ok(
            "WaterSlideData::CalcPerpPos(void)",
        ),
    ),
    (
        "PlayerAdjustState__15GameCameraState11CameraStateb",
        Ok(
            "GameCameraState::PlayerAdjustState(CameraState, bool)",
        ),
    ),
    (
        "BeginAmmo__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::BeginAmmo(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8SnowPile",
        Ok(
            "ModuleInfo<SnowPile>::Init(void)",
        ),
    ),
    (
        "IsSubObjectEnabled__5Modeli",
        Ok(
            "Model::IsSubObjectEnabled(int)",
        ),
    ),
    (
        "IsStripVisible__11MKWaterPropP16WaterStripHeader",
        Ok(
            "MKWaterProp::IsStripVisible(WaterStripHeader *)",
        ),
    ),
    (
        "CheckMagnetism__11BonusPickupf",
        Ok(
            "BonusPickup::CheckMagnetism(float)",
        ),
    ),
    (
        "DrawRope__FPt13CircularQueue1Z6VectorP8Materialf",
        Ok(
            "DrawRope(CircularQueue<Vector> *, Material *, float)",
        ),
    ),
    (
        "_20WaterfallSprayStruct$splashEnvelope",
        Ok(
            "WaterfallSprayStruct::splashEnvelope",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Julius",
        Ok(
            "ModuleInfo<Julius>::Init(void)",
        ),
    ),
    (
        "GuideParticle_LoadResources__FP8KromeIni",
        Ok(
            "GuideParticle_LoadResources(KromeIni *)",
        ),
    ),
    (
        "isceSifSendCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNextNode__18BezierPathFollower",
        Ok(
            "BezierPathFollower::GetNextNode(void)",
        ),
    ),
    (
        "Deinit__17TyParticleManager",
        Ok(
            "TyParticleManager::Deinit(void)",
        ),
    ),
    (
        "GameCamera_UseGlideCamera__Fb",
        Ok(
            "GameCamera_UseGlideCamera(bool)",
        ),
    ),
    (
        "ChaseAttackInit__10BlueTongue",
        Ok(
            "BlueTongue::ChaseAttackInit(void)",
        ),
    ),
    (
        "Reset__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Reset(void)",
        ),
    ),
    (
        "Stopwatch_Enable__Fb",
        Ok(
            "Stopwatch_Enable(bool)",
        ),
    ),
    (
        "iPutTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "SCE_CD_debug",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_FBA_2__3DmaUl",
        Ok(
            "Dma::AddGif_AD_FBA_2(unsigned long)",
        ),
    ),
    (
        "Update__16A1FrillObjective",
        Ok(
            "A1FrillObjective::Update(void)",
        ),
    ),
    (
        "Message__14LevelObjectiveP9MKMessage",
        Ok(
            "LevelObjective::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7C3Actor",
        Ok(
            "ModuleInfo<C3Actor> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9SharkCage",
        Ok(
            "ModuleInfo<SharkCage>::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z21FrillProblemObjectivePv",
        Ok(
            "ModuleInfo<FrillProblemObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "_$_14__si_type_info",
        Ok(
            "__si_type_info::~__si_type_info(void)",
        ),
    ),
    (
        "Update__6Friend",
        Ok(
            "Friend::Update(void)",
        ),
    ),
    (
        "Reset__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Reset(void)",
        ),
    ),
    (
        "LoadDone__8BuzzSaw2",
        Ok(
            "BuzzSaw2::LoadDone(void)",
        ),
    ),
    (
        "entityInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadVUSubObjectData__11MKWaterProp",
        Ok(
            "MKWaterProp::UploadVUSubObjectData(void)",
        ),
    ),
    (
        "UseFluffyCamera__10GameCamerabP5Model",
        Ok(
            "GameCamera::UseFluffyCamera(bool, Model *)",
        ),
    ),
    (
        "Intro__14IceBlockStruct",
        Ok(
            "IceBlockStruct::Intro(void)",
        ),
    ),
    (
        "CheckForCollisions__4BullPbT1",
        Ok(
            "Bull::CheckForCollisions(bool *, bool *)",
        ),
    ),
    (
        "gZAxis",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__21ExtendedAnalogControlff",
        Ok(
            "ExtendedAnalogControl::Update(float, float)",
        ),
    ),
    (
        "PauseScreen_GameTotals_Init__Fv",
        Ok(
            "PauseScreen_GameTotals_Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13TreasureChest",
        Ok(
            "ModuleInfo<TreasureChest>::Init(void)",
        ),
    ),
    (
        "Update__8MorayEel",
        Ok(
            "MorayEel::Update(void)",
        ),
    ),
    (
        "Setup_LoadLevel__Fv",
        Ok(
            "Setup_LoadLevel(void)",
        ),
    ),
    (
        "DrawDebug__3Eel",
        Ok(
            "Eel::DrawDebug(void)",
        ),
    ),
    (
        "Dormant__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Dormant(void)",
        ),
    ),
    (
        "_7MKWater$debugNumHighDetailQuads",
        Ok(
            "MKWater::debugNumHighDetailQuads",
        ),
    ),
    (
        "GetNodePositions__4Bull",
        Ok(
            "Bull::GetNodePositions(void)",
        ),
    ),
    (
        "HappyInit__8KoalaKid",
        Ok(
            "KoalaKid::HappyInit(void)",
        ),
    ),
    (
        "iReferSemaStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceLseek",
        Err(
            NotMangled,
        ),
    ),
    (
        "Bunyip_Deinit__Fv",
        Ok(
            "Bunyip_Deinit(void)",
        ),
    ),
    (
        "Block__6Muddie",
        Ok(
            "Muddie::Block(void)",
        ),
    ),
    (
        "CameraOverride_CanUsePlayerAdjust__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_CanUsePlayerAdjust(void)",
        ),
    ),
    (
        "Turtle_Add__FP6Vectorf",
        Ok(
            "Turtle_Add(Vector *, float)",
        ),
    ),
    (
        "Str_GetDirectoryFromPath__FPc",
        Ok(
            "Str_GetDirectoryFromPath(char *)",
        ),
    ),
    (
        "DrawQuads__13MKParticleGenP4ViewP6Vector",
        Ok(
            "MKParticleGen::DrawQuads(View *, Vector *)",
        ),
    ),
    (
        "IdleInit__4Tick",
        Ok(
            "Tick::IdleInit(void)",
        ),
    ),
    (
        "FireAtTarget__4RockP6VectorT1fi",
        Ok(
            "Rock::FireAtTarget(Vector *, Vector *, float, int)",
        ),
    ),
    (
        "VictoryInit__4Bull",
        Ok(
            "Bull::VictoryInit(void)",
        ),
    ),
    (
        "Init__16ReflectionStruct",
        Ok(
            "ReflectionStruct::Init(void)",
        ),
    ),
    (
        "pCounterModelSubObjectsClipped",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$14RockProjectile",
        Ok(
            "RockProjectile virtual table",
        ),
    ),
    (
        "FreeCritter__17CritterField2DescP11BaseCritter",
        Ok(
            "CritterField2Desc::FreeCritter(BaseCritter *)",
        ),
    ),
    (
        "GetStartPosition__18BezierPathFollowerP6Vector",
        Ok(
            "BezierPathFollower::GetStartPosition(Vector *)",
        ),
    ),
    (
        "Waterfall_Init__Fv",
        Ok(
            "Waterfall_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Shark",
        Ok(
            "ModuleInfo<Shark> virtual table",
        ),
    ),
    (
        "Closing_Update__4Gate",
        Ok(
            "Gate::Closing_Update(void)",
        ),
    ),
    (
        "SaveStates_Save__Fv",
        Ok(
            "SaveStates_Save(void)",
        ),
    ),
    (
        "Draw__2Ty",
        Ok(
            "Ty::Draw(void)",
        ),
    ),
    (
        "CheckConditions__21ConditionalScriptProp",
        Ok(
            "ConditionalScriptProp::CheckConditions(void)",
        ),
    ),
    (
        "System_UseDebugCamera__Fv",
        Ok(
            "System_UseDebugCamera(void)",
        ),
    ),
    (
        "LoadDone__8ChuteLog",
        Ok(
            "ChuteLog::LoadDone(void)",
        ),
    ),
    (
        "descr_cast__H1ZP14KingFisherDesc_P16MKPropDescriptor_X01",
        Ok(
            "KingFisherDesc * descr_cast<KingFisherDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "unexpected__Fv",
        Ok(
            "unexpected(void)",
        ),
    ),
    (
        "ModelRender_FLTW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKShadow_SetLockedPixelColor__FUi",
        Ok(
            "MKShadow_SetLockedPixelColor(unsigned int)",
        ),
    ),
    (
        "Chase__10ScubaFrill",
        Ok(
            "ScubaFrill::Chase(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_Reset__Fv",
        Ok(
            "PauseScreen_GameInfo_Reset(void)",
        ),
    ),
    (
        "Up__8RingoArm",
        Ok(
            "RingoArm::Up(void)",
        ),
    ),
    (
        "Deinit__14LevelObjective",
        Ok(
            "LevelObjective::Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z19SpecialPickupStructPv",
        Ok(
            "ModuleInfo<SpecialPickupStruct>::ConstructObject(void *)",
        ),
    ),
    (
        "_10TumbleWeed$totalWeeds",
        Ok(
            "TumbleWeed::totalWeeds",
        ),
    ),
    (
        "Idle__8MorayEel",
        Ok(
            "MorayEel::Idle(void)",
        ),
    ),
    (
        "Maurie_ComeOverHere__FP8SignPost",
        Ok(
            "Maurie_ComeOverHere(SignPost *)",
        ),
    ),
    (
        "SetVCommonHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "IdleInit__5Roach",
        Ok(
            "Roach::IdleInit(void)",
        ),
    ),
    (
        "WalkSideways__8PubeCrabb",
        Ok(
            "PubeCrab::WalkSideways(bool)",
        ),
    ),
    (
        "CountEntities__17GameObjectManagerP8KromeIniP12KromeIniLine",
        Ok(
            "GameObjectManager::CountEntities(KromeIni *, KromeIniLine *)",
        ),
    ),
    (
        "DisableDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "OmniLight_CreateScene__FiP14BoundingVolume",
        Ok(
            "OmniLight_CreateScene(int, BoundingVolume *)",
        ),
    ),
    (
        "Patrol__8PubeCrab",
        Ok(
            "PubeCrab::Patrol(void)",
        ),
    ),
    (
        "FixedPoint_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::FixedPoint_Create(void *)",
        ),
    ),
    (
        "EnableDispatchThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "gAssertInt",
        Err(
            NotMangled,
        ),
    ),
    (
        "CatchEgg__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CatchEgg(void)",
        ),
    ),
    (
        "ResetManager__21CameraOverrideManager",
        Ok(
            "CameraOverrideManager::ResetManager(void)",
        ),
    ),
    (
        "lvlNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "FastDive__2Ty",
        Ok(
            "Ty::FastDive(void)",
        ),
    ),
    (
        "BuildClipMatrix__4ViewP6Matrix",
        Ok(
            "View::BuildClipMatrix(Matrix *)",
        ),
    ),
    (
        "Flip__11RhinoGround",
        Ok(
            "RhinoGround::Flip(void)",
        ),
    ),
    (
        "PauseScreen_GameTotals_Draw__Fv",
        Ok(
            "PauseScreen_GameTotals_Draw(void)",
        ),
    ),
    (
        "SurfacingTransition__2Ty",
        Ok(
            "Ty::SurfacingTransition(void)",
        ),
    ),
    (
        "GetBreakAndTurnAngle__2Ty",
        Ok(
            "Ty::GetBreakAndTurnAngle(void)",
        ),
    ),
    (
        "Search__4Bull",
        Ok(
            "Bull::Search(void)",
        ),
    ),
    (
        "DumpVRam__7Texture",
        Ok(
            "Texture::DumpVRam(void)",
        ),
    ),
    (
        "SnapSource__10GameCameraP6Vector",
        Ok(
            "GameCamera::SnapSource(Vector *)",
        ),
    ),
    (
        "TumbleWeed_LoadResources__FP8KromeIni",
        Ok(
            "TumbleWeed_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Alert__10NinjaGecko",
        Ok(
            "NinjaGecko::Alert(void)",
        ),
    ),
    (
        "WarpFlower_LoadResources__FP8KromeIni",
        Ok(
            "WarpFlower_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GetFrameOfNormalPosition__12MKAnimScriptfP6MKAnim",
        Ok(
            "MKAnimScript::GetFrameOfNormalPosition(float, MKAnim *)",
        ),
    ),
    (
        "ChaseInit__5Rufus",
        Ok(
            "Rufus::ChaseInit(void)",
        ),
    ),
    (
        "Developer_Update__Fv",
        Ok(
            "Developer_Update(void)",
        ),
    ),
    (
        "InPlane3D__FP6VectorT0T0T0T0",
        Ok(
            "InPlane3D(Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "ManuallyScrollTextures__Fv",
        Ok(
            "ManuallyScrollTextures(void)",
        ),
    ),
    (
        "ApproxMag__Fff",
        Ok(
            "ApproxMag(float, float)",
        ),
    ),
    (
        "Weather_GetEnabled__Fv",
        Ok(
            "Weather_GetEnabled(void)",
        ),
    ),
    (
        "Walk__5Yabby",
        Ok(
            "Yabby::Walk(void)",
        ),
    ),
    (
        "FlyInit__5Roach",
        Ok(
            "Roach::FlyInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z19EmuRoundupObjectivePv",
        Ok(
            "ModuleInfo<EmuRoundupObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "SetCPUTimer",
        Err(
            NotMangled,
        ),
    ),
    (
        "DebugUVs__FP11MKWaterPropP11MKWaterType",
        Ok(
            "DebugUVs(MKWaterProp *, MKWaterType *)",
        ),
    ),
    (
        "Init__3GemP11GameObjDesc",
        Ok(
            "Gem::Init(GameObjDesc *)",
        ),
    ),
    (
        "SetShakeOffset__10GameCameraP6Vector",
        Ok(
            "GameCamera::SetShakeOffset(Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12TyAttributes",
        Ok(
            "ModuleInfo<TyAttributes> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Torch",
        Ok(
            "ModuleInfo<Torch> virtual table",
        ),
    ),
    (
        "GetStomachPos__6Groper",
        Ok(
            "Groper::GetStomachPos(void)",
        ),
    ),
    (
        "memcpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPos__11TriggerProp",
        Ok(
            "TriggerProp::GetPos(void)",
        ),
    ),
    (
        "Video_GetSize__FP5VideoPiT1",
        Ok(
            "Video_GetSize(Video *, int *, int *)",
        ),
    ),
    (
        "AddGif_AD_FRAME_1__3DmaUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_FRAME_1(unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Draw__7AntHill",
        Ok(
            "AntHill::Draw(void)",
        ),
    ),
    (
        "LoadLine__7C3ActorP12KromeIniLine",
        Ok(
            "C3Actor::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9AuroraKid",
        Ok(
            "ModuleInfo<AuroraKid>::Init(void)",
        ),
    ),
    (
        "Spawn__10FootEffectP6VectorT1P14BoundingVolumefifT1b",
        Ok(
            "FootEffect::Spawn(Vector *, Vector *, BoundingVolume *, float, int, float, Vector *, bool)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9WaterPipe",
        Ok(
            "ModuleInfo<WaterPipe> virtual table",
        ),
    ),
    (
        "LoadLine__10DialogPropP12KromeIniLine",
        Ok(
            "DialogProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Ty_FreeResources__Fv",
        Ok(
            "Ty_FreeResources(void)",
        ),
    ),
    (
        "Draw__13SkinkDropTail",
        Ok(
            "SkinkDropTail::Draw(void)",
        ),
    ),
    (
        "descr_cast__H1ZP23BlitterCritterFieldDesc_P16MKPropDescriptor_X01",
        Ok(
            "BlitterCritterFieldDesc * descr_cast<BlitterCritterFieldDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "_GLOBAL_$I$SignPost_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SignPost_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_6Camera$logModeChanges",
        Ok(
            "Camera::logModeChanges",
        ),
    ),
    (
        "LoadDone__8KoalaKid",
        Ok(
            "KoalaKid::LoadDone(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8SnowBallPv",
        Ok(
            "ModuleInfo<SnowBall>::ConstructObject(void *)",
        ),
    ),
    (
        "FindClosestWayPoint__7Farlappf",
        Ok(
            "Farlapp::FindClosestWayPoint(float)",
        ),
    ),
    (
        "InitializeLevel__Fv",
        Ok(
            "InitializeLevel(void)",
        ),
    ),
    (
        "AddTag_End__3DmaUl",
        Ok(
            "Dma::AddTag_End(unsigned long)",
        ),
    ),
    (
        "SpinningLog_Find__FP15TyCollisionInfo",
        Ok(
            "SpinningLog_Find(TyCollisionInfo *)",
        ),
    ),
    (
        "StaticSpikes_Add__FP6VectorT0",
        Ok(
            "StaticSpikes_Add(Vector *, Vector *)",
        ),
    ),
    (
        "Dialog_Init__Fv",
        Ok(
            "Dialog_Init(void)",
        ),
    ),
    (
        "CalcCameraProp__6Camera12InputDevicesfbii",
        Ok(
            "Camera::CalcCameraProp(InputDevices, float, bool, int, int)",
        ),
    ),
    (
        "Alert_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Alert_Init(void)",
        ),
    ),
    (
        "GCT_TestFloor__FP6VectorffibP15CollisionResult",
        Ok(
            "GCT_TestFloor(Vector *, float, float, int, bool, CollisionResult *)",
        ),
    ),
    (
        "MOVE_ANIM_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "SharedUpdate__3Fly",
        Ok(
            "Fly::SharedUpdate(void)",
        ),
    ),
    (
        "DrawDigits__3Hudifff11FontJustify",
        Ok(
            "Hud::DrawDigits(int, float, float, float, FontJustify)",
        ),
    ),
    (
        "_GLOBAL_$I$_5Skink$nBeerObj",
        Ok(
            "global constructors keyed to Skink::nBeerObj",
        ),
    ),
    (
        "ChaseInit__6Wombat",
        Ok(
            "Wombat::ChaseInit(void)",
        ),
    ),
    (
        "HasBitten__6TyBiteP5ModelP6Vectorf",
        Ok(
            "TyBite::HasBitten(Model *, Vector *, float)",
        ),
    ),
    (
        "VersionNumber",
        Err(
            NotMangled,
        ),
    ),
    (
        "CanBeAttacked__2Ty",
        Ok(
            "Ty::CanBeAttacked(void)",
        ),
    ),
    (
        "Update__16BoomerangManagerP6MatrixT1P6Vector",
        Ok(
            "BoomerangManager::Update(Matrix *, Matrix *, Vector *)",
        ),
    ),
    (
        "sceDmaRecv",
        Err(
            NotMangled,
        ),
    ),
    (
        "Opening_Update__4Gate",
        Ok(
            "Gate::Opening_Update(void)",
        ),
    ),
    (
        "Draw__5Torch",
        Ok(
            "Torch::Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9BoomerangPv",
        Ok(
            "ModuleInfo<Boomerang>::ConstructObject(void *)",
        ),
    ),
    (
        "Confront__5Rufus",
        Ok(
            "Rufus::Confront(void)",
        ),
    ),
    (
        "SetTextureAlias__8MaterialP7Texture",
        Ok(
            "Material::SetTextureAlias(Texture *)",
        ),
    ),
    (
        "SwapRangs__2TyPc",
        Ok(
            "Ty::SwapRangs(char *)",
        ),
    ),
    (
        "Message__7C3ChestP9MKMessage",
        Ok(
            "C3Chest::Message(MKMessage *)",
        ),
    ),
    (
        "ModelRender_AExyT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetTarget__11EnemyObjectP6Vector",
        Ok(
            "EnemyObject::SetTarget(Vector *)",
        ),
    ),
    (
        "_vt$14FishShoalField",
        Ok(
            "FishShoalField virtual table",
        ),
    ),
    (
        "LoadLine__10LavaEffectP12KromeIniLine",
        Ok(
            "LavaEffect::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SoundBank_Play__FiP6VectorUi",
        Ok(
            "SoundBank_Play(int, Vector *, unsigned int)",
        ),
    ),
    (
        "EndFlyInit__5Roach",
        Ok(
            "Roach::EndFlyInit(void)",
        ),
    ),
    (
        "vFrontCollSphere",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_XYOFFSET_1__3DmaUlUl",
        Ok(
            "Dma::AddGif_AD_XYOFFSET_1(unsigned long, unsigned long)",
        ),
    ),
    (
        "_vt$5Yabby",
        Ok(
            "Yabby virtual table",
        ),
    ),
    (
        "UpdateSubObjVisibility__6Crikeyi",
        Ok(
            "Crikey::UpdateSubObjVisibility(int)",
        ),
    ),
    (
        "ModelRender_FST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "StaticSpikes_Reset__Fv",
        Ok(
            "StaticSpikes_Reset(void)",
        ),
    ),
    (
        "RecalcMatrices__11DirectLight",
        Ok(
            "DirectLight::RecalcMatrices(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9AuroraKid",
        Ok(
            "ModuleInfo<AuroraKid> virtual table",
        ),
    ),
    (
        "_vt$9FrogField",
        Ok(
            "FrogField virtual table",
        ),
    ),
    (
        "_sceCd_cd_ncmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "TurnSideOn__6Muddief",
        Ok(
            "Muddie::TurnSideOn(float)",
        ),
    ),
    (
        "__infinity",
        Err(
            InvalidSpecialMethod(
                "infinity",
            ),
        ),
    ),
    (
        "GenerateNextPosition__5Gecko",
        Ok(
            "Gecko::GenerateNextPosition(void)",
        ),
    ),
    (
        "AttackDeinit__10SnowSpider",
        Ok(
            "SnowSpider::AttackDeinit(void)",
        ),
    ),
    (
        "Init__3EelP11GameObjDesc",
        Ok(
            "Eel::Init(GameObjDesc *)",
        ),
    ),
    (
        "DeinitRun__5Rhino",
        Ok(
            "Rhino::DeinitRun(void)",
        ),
    ),
    (
        "RunToBunker__11FrillLizard",
        Ok(
            "FrillLizard::RunToBunker(void)",
        ),
    ),
    (
        "Wobble__9WaterPipe",
        Ok(
            "WaterPipe::Wobble(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14StalactiteTrap",
        Ok(
            "ModuleInfo<StalactiteTrap> virtual table",
        ),
    ),
    (
        "InitClaim__7BushPig",
        Ok(
            "BushPig::InitClaim(void)",
        ),
    ),
    (
        "Gate_LoadResources__FP8KromeIni",
        Ok(
            "Gate_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__6AuroraP9MKMessage",
        Ok(
            "Aurora::Message(MKMessage *)",
        ),
    ),
    (
        "SetTextureAlias__8MaterialP8Material",
        Ok(
            "Material::SetTextureAlias(Material *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8SnowPilePv",
        Ok(
            "ModuleInfo<SnowPile>::ConstructObject(void *)",
        ),
    ),
    (
        "levelInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Apply__12MKAnimScriptP9Animation",
        Ok(
            "MKAnimScript::Apply(Animation *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10WarpFlowerPv",
        Ok(
            "ModuleInfo<WarpFlower>::ConstructObject(void *)",
        ),
    ),
    (
        "sceSifMExitRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Render__16WaterSlideEffect",
        Ok(
            "WaterSlideEffect::Render(void)",
        ),
    ),
    (
        "UpdateFired__9Doomerang",
        Ok(
            "Doomerang::UpdateFired(void)",
        ),
    ),
    (
        "System_GameDraw__Fv",
        Ok(
            "System_GameDraw(void)",
        ),
    ),
    (
        "Translation_DeinitModule__Fv",
        Ok(
            "Translation_DeinitModule(void)",
        ),
    ),
    (
        "_7MKWater$bProfile",
        Ok(
            "MKWater::bProfile",
        ),
    ),
    (
        "_5Skink$nCrispyBatObj",
        Ok(
            "Skink::nCrispyBatObj",
        ),
    ),
    (
        "DeathInit__4Croc",
        Ok(
            "Croc::DeathInit(void)",
        ),
    ),
    (
        "__cp_exception_info",
        Err(
            InvalidSpecialMethod(
                "cp_exception_info",
            ),
        ),
    ),
    (
        "InitSplatOnGround__7BushPig",
        Ok(
            "BushPig::InitSplatOnGround(void)",
        ),
    ),
    (
        "sceSifCheckStatRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_3Dma$pStack",
        Ok(
            "Dma::pStack",
        ),
    ),
    (
        "_vt$8SnowBall",
        Ok(
            "SnowBall virtual table",
        ),
    ),
    (
        "DeinitIdle__3Emu",
        Ok(
            "Emu::DeinitIdle(void)",
        ),
    ),
    (
        "_cleanup_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__12StaticFXPropP9MKMessage",
        Ok(
            "StaticFXProp::Message(MKMessage *)",
        ),
    ),
    (
        "Update__10CrikeyChum",
        Ok(
            "CrikeyChum::Update(void)",
        ),
    ),
    (
        "LandToWaterTransition__2Ty",
        Ok(
            "Ty::LandToWaterTransition(void)",
        ),
    ),
    (
        "QuickSand__2Ty",
        Ok(
            "Ty::QuickSand(void)",
        ),
    ),
    (
        "Idle_Init__9BadBoonie",
        Ok(
            "BadBoonie::Idle_Init(void)",
        ),
    ),
    (
        "PieSlice_End__Fv",
        Ok(
            "PieSlice_End(void)",
        ),
    ),
    (
        "LoadDone__7ChumBox",
        Ok(
            "ChumBox::LoadDone(void)",
        ),
    ),
    (
        "_8DiveRing$pSystem",
        Ok(
            "DiveRing::pSystem",
        ),
    ),
    (
        "Fluffy_GetModel__Fv",
        Ok(
            "Fluffy_GetModel(void)",
        ),
    ),
    (
        "Init__8KoalaKidP11GameObjDesc",
        Ok(
            "KoalaKid::Init(GameObjDesc *)",
        ),
    ),
    (
        "FrontEnd_LoadGame_OnEnter__Fv",
        Ok(
            "FrontEnd_LoadGame_OnEnter(void)",
        ),
    ),
    (
        "Init__13SkinkDropTail",
        Ok(
            "SkinkDropTail::Init(void)",
        ),
    ),
    (
        "LoadDone__10ScubaFrill",
        Ok(
            "ScubaFrill::LoadDone(void)",
        ),
    ),
    (
        "Reset__11FaderObject",
        Ok(
            "FaderObject::Reset(void)",
        ),
    ),
    (
        "Waterfall_Unlock__Fv",
        Ok(
            "Waterfall_Unlock(void)",
        ),
    ),
    (
        "File_InitModule__Fv",
        Ok(
            "File_InitModule(void)",
        ),
    ),
    (
        "MKPackage_Update__Fv",
        Ok(
            "MKPackage_Update(void)",
        ),
    ),
    (
        "Swing__10GameCamera",
        Ok(
            "GameCamera::Swing(void)",
        ),
    ),
    (
        "_7Furnace$fColorDelta",
        Ok(
            "Furnace::fColorDelta",
        ),
    ),
    (
        "Pop__3Dma",
        Ok(
            "Dma::Pop(void)",
        ),
    ),
    (
        "Draw__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::Draw(void)",
        ),
    ),
    (
        "Deinit__7ChumBox",
        Ok(
            "ChumBox::Deinit(void)",
        ),
    ),
    (
        "Message__5NeddyP9MKMessage",
        Ok(
            "Neddy::Message(MKMessage *)",
        ),
    ),
    (
        "CableCar_LoadResources__FP8KromeIni",
        Ok(
            "CableCar_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__14FishShoalField",
        Ok(
            "FishShoalField::LoadDone(void)",
        ),
    ),
    (
        "FrillProblem_HouseSaved__Fv",
        Ok(
            "FrillProblem_HouseSaved(void)",
        ),
    ),
    (
        "Message__18SpeedboatObjectiveP9MKMessage",
        Ok(
            "SpeedboatObjective::Message(MKMessage *)",
        ),
    ),
    (
        "SweepInit__3Bat",
        Ok(
            "Bat::SweepInit(void)",
        ),
    ),
    (
        "InitHitWall__7BushPig",
        Ok(
            "BushPig::InitHitWall(void)",
        ),
    ),
    (
        "BushPig_Line__FP12KromeIniLine",
        Ok(
            "BushPig_Line(KromeIniLine *)",
        ),
    ),
    (
        "SuckInit__5Leech",
        Ok(
            "Leech::SuckInit(void)",
        ),
    ),
    (
        "Init__12FlameThrowerP11GameObjDesc",
        Ok(
            "FlameThrower::Init(GameObjDesc *)",
        ),
    ),
    (
        "ModelRender_FLO1TW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_12DialogEffect$pDialogPlayer",
        Ok(
            "DialogEffect::pDialogPlayer",
        ),
    ),
    (
        "_7MKWater$minV",
        Ok(
            "MKWater::minV",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12KidObjective",
        Ok(
            "ModuleInfo<KidObjective> virtual table",
        ),
    ),
    (
        "DrawStrip__11MKWaterPropP16WaterStripHeaderP8Material",
        Ok(
            "MKWaterProp::DrawStrip(WaterStripHeader *, Material *)",
        ),
    ),
    (
        "GetDesc__11EnemyObject",
        Ok(
            "EnemyObject::GetDesc(void)",
        ),
    ),
    (
        "Dialog_Deinit__Fv",
        Ok(
            "Dialog_Deinit(void)",
        ),
    ),
    (
        "Init__11CrateStructP11GameObjDesc",
        Ok(
            "CrateStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "StopAttack__5Rufusb",
        Ok(
            "Rufus::StopAttack(bool)",
        ),
    ),
    (
        "LoadLine__14ShadowBatValveP12KromeIniLine",
        Ok(
            "ShadowBatValve::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SetOrientation__9Boomerangff",
        Ok(
            "Boomerang::SetOrientation(float, float)",
        ),
    ),
    (
        "DeinitLevel__17GameObjectManager",
        Ok(
            "GameObjectManager::DeinitLevel(void)",
        ),
    ),
    (
        "JumpFromRang_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::JumpFromRang_Update(void)",
        ),
    ),
    (
        "GetDesc__8Critter2",
        Ok(
            "Critter2::GetDesc(void)",
        ),
    ),
    (
        "Main_InitStaticModules__Fv",
        Ok(
            "Main_InitStaticModules(void)",
        ),
    ),
    (
        "SetCameraShake__10GameCameraP6Vector",
        Ok(
            "GameCamera::SetCameraShake(Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12StaticFXProp",
        Ok(
            "ModuleInfo<StaticFXProp>::Init(void)",
        ),
    ),
    (
        "Update__7SeaMine",
        Ok(
            "SeaMine::Update(void)",
        ),
    ),
    (
        "DeinitPullLasso__7BushPig",
        Ok(
            "BushPig::DeinitPullLasso(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z21FrillProblemObjective",
        Ok(
            "ModuleInfo<FrillProblemObjective>::Init(void)",
        ),
    ),
    (
        "mstats",
        Err(
            NotMangled,
        ),
    ),
    (
        "Delete__13ShatterStruct",
        Ok(
            "ShatterStruct::Delete(void)",
        ),
    ),
    (
        "AddTag_End_DIRECT__3DmaUl",
        Ok(
            "Dma::AddTag_End_DIRECT(unsigned long)",
        ),
    ),
    (
        "_vt$5Shark",
        Ok(
            "Shark virtual table",
        ),
    ),
    (
        "gDefaultRenderSpritePrim",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnParticles__14WaterSlideData",
        Ok(
            "WaterSlideData::SpawnParticles(void)",
        ),
    ),
    (
        "FireSnowBall__6Fluffy",
        Ok(
            "Fluffy::FireSnowBall(void)",
        ),
    ),
    (
        "SetHasFreedBilby__8GameData9BilbyTypeb",
        Ok(
            "GameData::SetHasFreedBilby(BilbyType, bool)",
        ),
    ),
    (
        "AutoPlayerAdjust_Init__10GameCamera",
        Ok(
            "GameCamera::AutoPlayerAdjust_Init(void)",
        ),
    ),
    (
        "DrawDebug__6Crikey",
        Ok(
            "Crikey::DrawDebug(void)",
        ),
    ),
    (
        "Deinit__14MKSceneManager",
        Ok(
            "MKSceneManager::Deinit(void)",
        ),
    ),
    (
        "Input_GetButtonName__Fi",
        Ok(
            "Input_GetButtonName(int)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4RockPv",
        Ok(
            "ModuleInfo<Rock>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$7AntHill",
        Ok(
            "AntHill virtual table",
        ),
    ),
    (
        "_vt$9Barracuda",
        Ok(
            "Barracuda virtual table",
        ),
    ),
    (
        "HasHeadCharged__7BushPigP6Vector",
        Ok(
            "BushPig::HasHeadCharged(Vector *)",
        ),
    ),
    (
        "_ri0_110",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegSetDecodeMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dodge__5Skink",
        Ok(
            "Skink::Dodge(void)",
        ),
    ),
    (
        "_vt$8KoalaKid",
        Ok(
            "KoalaKid virtual table",
        ),
    ),
    (
        "_vt$13AnimatingProp",
        Ok(
            "AnimatingProp virtual table",
        ),
    ),
    (
        "GameCamera_GetTargetVelocity__Fv",
        Ok(
            "GameCamera_GetTargetVelocity(void)",
        ),
    ),
    (
        "CircleCage__5Shark",
        Ok(
            "Shark::CircleCage(void)",
        ),
    ),
    (
        "Idle__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Idle(void)",
        ),
    ),
    (
        "DeinitFall__14WaterSlideData",
        Ok(
            "WaterSlideData::DeinitFall(void)",
        ),
    ),
    (
        "LoadLine__14StalactiteTrapP12KromeIniLine",
        Ok(
            "StalactiteTrap::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "IceBlock_Delete__FP14IceBlockStruct",
        Ok(
            "IceBlock_Delete(IceBlockStruct *)",
        ),
    ),
    (
        "Tools_SmoothToAngle2__Ffffff",
        Ok(
            "Tools_SmoothToAngle2(float, float, float, float, float)",
        ),
    ),
    (
        "iEnableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "NextWaypoint__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::NextWaypoint(void)",
        ),
    ),
    (
        "Bunyip_Reset__Fv",
        Ok(
            "Bunyip_Reset(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Load__17AnimatingPropDescP8KromeIni",
        Ok(
            "global constructors keyed to AnimatingPropDesc::Load(KromeIni *)",
        ),
    ),
    (
        "KoalaKidsActivate__Fv",
        Ok(
            "KoalaKidsActivate(void)",
        ),
    ),
    (
        "InitRiding__9Speedboat",
        Ok(
            "Speedboat::InitRiding(void)",
        ),
    ),
    (
        "TeleportInit__6Wombat",
        Ok(
            "Wombat::TeleportInit(void)",
        ),
    ),
    (
        "DeathInit__10ScubaFrill",
        Ok(
            "ScubaFrill::DeathInit(void)",
        ),
    ),
    (
        "_vt$7CaveBat",
        Ok(
            "CaveBat virtual table",
        ),
    ),
    (
        "_vt$8BuzzSaw2",
        Ok(
            "BuzzSaw2 virtual table",
        ),
    ),
    (
        "LoadLine__13RenderTextureP12KromeIniLine",
        Ok(
            "RenderTexture::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "HideInHoleInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::HideInHoleInit(void)",
        ),
    ),
    (
        "Crawl__10NinjaGecko",
        Ok(
            "NinjaGecko::Crawl(void)",
        ),
    ),
    (
        "Sound_PauseAll",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__4Jeep",
        Ok(
            "Jeep::Idle(void)",
        ),
    ),
    (
        "Draw__13Blitter_ImageiP7Texture",
        Ok(
            "Blitter_Image::Draw(int, Texture *)",
        ),
    ),
    (
        "MKMemoryCard_ProcessState__Fi",
        Ok(
            "MKMemoryCard_ProcessState(int)",
        ),
    ),
    (
        "iDisableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomPosAtCeiling__7CaveBatP6Vector",
        Ok(
            "CaveBat::GenerateRandomPosAtCeiling(Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7BushPig",
        Ok(
            "ModuleInfo<BushPig>::Init(void)",
        ),
    ),
    (
        "Basket_LoadResources__FP8KromeIni",
        Ok(
            "Basket_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MKShadow_DrawCPU__FP8MKShadowP6Vector",
        Ok(
            "MKShadow_DrawCPU(MKShadow *, Vector *)",
        ),
    ),
    (
        "KipupInit__10NinjaGecko",
        Ok(
            "NinjaGecko::KipupInit(void)",
        ),
    ),
    (
        "Magnetic__7SeaMineP6Vector",
        Ok(
            "SeaMine::Magnetic(Vector *)",
        ),
    ),
    (
        "GetPropsInRange__14MKSceneManagerPP6MKPropiP6Vectorfiib",
        Ok(
            "MKSceneManager::GetPropsInRange(MKProp **, int, Vector *, float, int, int, bool)",
        ),
    ),
    (
        "Draw__3Gem",
        Ok(
            "Gem::Draw(void)",
        ),
    ),
    (
        "_vt$18BurnableDescriptor",
        Ok(
            "BurnableDescriptor virtual table",
        ),
    ),
    (
        "CreateObject__11GameObjDesc",
        Ok(
            "GameObjDesc::CreateObject(void)",
        ),
    ),
    (
        "EndSubObjectDraw__5Model",
        Ok(
            "Model::EndSubObjectDraw(void)",
        ),
    ),
    (
        "GetState__6Friend",
        Ok(
            "Friend::GetState(void)",
        ),
    ),
    (
        "_vt$17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard virtual table",
        ),
    ),
    (
        "FallInit__11DropPontoon",
        Ok(
            "DropPontoon::FallInit(void)",
        ),
    ),
    (
        "Sound_Update",
        Err(
            NotMangled,
        ),
    ),
    (
        "FrontEnd_Gallery_DestroyVideo__Fv",
        Ok(
            "FrontEnd_Gallery_DestroyVideo(void)",
        ),
    ),
    (
        "GCT_Dampen__FP6VectorT0f",
        Ok(
            "GCT_Dampen(Vector *, Vector *, float)",
        ),
    ),
    (
        "Init__17PathFindingObjectifffff",
        Ok(
            "PathFindingObject::Init(int, float, float, float, float, float)",
        ),
    ),
    (
        "_13SkinkDropTail$nRefCount",
        Ok(
            "SkinkDropTail::nRefCount",
        ),
    ),
    (
        "descr_cast__H1ZP14ProjectileDesc_P16MKPropDescriptor_X01",
        Ok(
            "ProjectileDesc * descr_cast<ProjectileDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "CollideWithTy__11EnemyObjectP6Vector",
        Ok(
            "EnemyObject::CollideWithTy(Vector *)",
        ),
    ),
    (
        "Init__11BurningTreeP11GameObjDesc",
        Ok(
            "BurningTree::Init(GameObjDesc *)",
        ),
    ),
    (
        "Reset__15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp::Reset(void)",
        ),
    ),
    (
        "Close__13TreasureChest",
        Ok(
            "TreasureChest::Close(void)",
        ),
    ),
    (
        "UpdateNormal__7Boulder",
        Ok(
            "Boulder::UpdateNormal(void)",
        ),
    ),
    (
        "Draw__21ParticleSystemManager",
        Ok(
            "ParticleSystemManager::Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Shark",
        Ok(
            "ModuleInfo<Shark>::Init(void)",
        ),
    ),
    (
        "CheckForCollisionWithAntHills__4BullP5Model",
        Ok(
            "Bull::CheckForCollisionWithAntHills(Model *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Basket",
        Ok(
            "ModuleInfo<Basket> virtual table",
        ),
    ),
    (
        "UpdateLocalToWorld__6Basket",
        Ok(
            "Basket::UpdateLocalToWorld(void)",
        ),
    ),
    (
        "ResolveCollisions__FP6VectorT0f",
        Ok(
            "ResolveCollisions(Vector *, Vector *, float)",
        ),
    ),
    (
        "GetFrontXZ__7SnowGun",
        Ok(
            "SnowGun::GetFrontXZ(void)",
        ),
    ),
    (
        "_10FootEffect$footMudType",
        Ok(
            "FootEffect::footMudType",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8KoalaKid",
        Ok(
            "ModuleInfo<KoalaKid>::Init(void)",
        ),
    ),
    (
        "Update__7Bouncer",
        Ok(
            "Bouncer::Update(void)",
        ),
    ),
    (
        "animatingSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__21WaterfallStreamStruct",
        Ok(
            "WaterfallStreamStruct::Draw(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Boomerang",
        Ok(
            "ModuleInfo<Boomerang> virtual table",
        ),
    ),
    (
        "JumpingState__4Frog",
        Ok(
            "Frog::JumpingState(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z19EmuRoundupObjective",
        Ok(
            "ModuleInfo<EmuRoundupObjective> virtual table",
        ),
    ),
    (
        "SetType__8TyHealth12TyHealthType",
        Ok(
            "TyHealth::SetType(TyHealthType)",
        ),
    ),
    (
        "AddWake__4Croc",
        Ok(
            "Croc::AddWake(void)",
        ),
    ),
    (
        "_vt$9SmallCrab",
        Ok(
            "SmallCrab virtual table",
        ),
    ),
    (
        "Activate__11WeatherProp",
        Ok(
            "WeatherProp::Activate(void)",
        ),
    ),
    (
        "Aquarang_LoadResources__FP8KromeIni",
        Ok(
            "Aquarang_LoadResources(KromeIni *)",
        ),
    ),
    (
        "DrawShadow__9BoomerangP6Vector",
        Ok(
            "Boomerang::DrawShadow(Vector *)",
        ),
    ),
    (
        "InitWarp__2Ty",
        Ok(
            "Ty::InitWarp(void)",
        ),
    ),
    (
        "PitchGun__7SnowGun",
        Ok(
            "SnowGun::PitchGun(void)",
        ),
    ),
    (
        "LogicGameOver__Fv",
        Ok(
            "LogicGameOver(void)",
        ),
    ),
    (
        "GetDesc__13CritterField2",
        Ok(
            "CritterField2::GetDesc(void)",
        ),
    ),
    (
        "Reset__16FinishLineStruct",
        Ok(
            "FinishLineStruct::Reset(void)",
        ),
    ),
    (
        "ExactMag__Ffff",
        Ok(
            "ExactMag(float, float, float)",
        ),
    ),
    (
        "Reset__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Reset(void)",
        ),
    ),
    (
        "Draw__15ObjectiveFinder",
        Ok(
            "ObjectiveFinder::Draw(void)",
        ),
    ),
    (
        "Update__8FireDrum",
        Ok(
            "FireDrum::Update(void)",
        ),
    ),
    (
        "Str_Printf__FPce",
        Ok(
            "Str_Printf(char *,...)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11SnowGunAmmo",
        Ok(
            "ModuleInfo<SnowGunAmmo>::Init(void)",
        ),
    ),
    (
        "PerimeterCheck__4Jeep",
        Ok(
            "Jeep::PerimeterCheck(void)",
        ),
    ),
    (
        "Boomerang_Draw__Fv",
        Ok(
            "Boomerang_Draw(void)",
        ),
    ),
    (
        "sceCdRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__12FlameThrower",
        Ok(
            "FlameThrower::LoadDone(void)",
        ),
    ),
    (
        "sceIpuInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitLassoCaughtWaterTank__5Lasso",
        Ok(
            "Lasso::InitLassoCaughtWaterTank(void)",
        ),
    ),
    (
        "Windmill_Reset__Fv",
        Ok(
            "Windmill_Reset(void)",
        ),
    ),
    (
        "SoundBank_Deinit__Fv",
        Ok(
            "SoundBank_Deinit(void)",
        ),
    ),
    (
        "nothrow",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_Portal_Init__FPP14ParticleSystemP6VectorP14BoundingVolumef",
        Ok(
            "Particle_Portal_Init(ParticleSystem **, Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "ResetPathVariables__9AuroraKid",
        Ok(
            "AuroraKid::ResetPathVariables(void)",
        ),
    ),
    (
        "TyMemCard_CopyToCard__FiPcT1",
        Ok(
            "TyMemCard_CopyToCard(int, char *, char *)",
        ),
    ),
    (
        "FrontEnd_LoadLevel_Deinit__Fv",
        Ok(
            "FrontEnd_LoadLevel_Deinit(void)",
        ),
    ),
    (
        "DrawRecursiveProps__14MKSceneManagerP6SMNodei",
        Ok(
            "MKSceneManager::DrawRecursiveProps(SMNode *, int)",
        ),
    ),
    (
        "_7MKWater$bDrawNormals",
        Ok(
            "MKWater::bDrawNormals",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5NeddyPv",
        Ok(
            "ModuleInfo<Neddy>::ConstructObject(void *)",
        ),
    ),
    (
        "Message__11WeatherPropP9MKMessage",
        Ok(
            "WeatherProp::Message(MKMessage *)",
        ),
    ),
    (
        "Catching__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Catching(void)",
        ),
    ),
    (
        "Run__11FrillLizardb",
        Ok(
            "FrillLizard::Run(bool)",
        ),
    ),
    (
        "LinearSpaceAvailable__12StreamBuffer",
        Ok(
            "StreamBuffer::LinearSpaceAvailable(void)",
        ),
    ),
    (
        "LoadDescriptors__H1Z19RedButtonDescriptor_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<RedButtonDescriptor>(KromeIni *, char *, RedButtonDescriptor *)",
        ),
    ),
    (
        "set_terminate__FPFv_v",
        Ok(
            "set_terminate(void (*)(void))",
        ),
    ),
    (
        "pCounterModelSubObjectsUnclipped",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateWaterSlideManager__6Wombat",
        Ok(
            "Wombat::CreateWaterSlideManager(void)",
        ),
    ),
    (
        "BeingDamaged__10Damageable",
        Ok(
            "Damageable::BeingDamaged(void)",
        ),
    ),
    (
        "PlayShatterSound__11Shatterable",
        Ok(
            "Shatterable::PlayShatterSound(void)",
        ),
    ),
    (
        "SpawnPickup__6Basket",
        Ok(
            "Basket::SpawnPickup(void)",
        ),
    ),
    (
        "Avalanche__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Avalanche(void)",
        ),
    ),
    (
        "Hide__16BoomerangManager13BoomerangSide",
        Ok(
            "BoomerangManager::Hide(BoomerangSide)",
        ),
    ),
    (
        "Video_IsEnd__FP5Video",
        Ok(
            "Video_IsEnd(Video *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14TrapdoorSpider",
        Ok(
            "ModuleInfo<TrapdoorSpider> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10Damageable",
        Ok(
            "ModuleInfo<Damageable> virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$Barracuda_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Barracuda_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Str_Lower__FPc",
        Ok(
            "Str_Lower(char *)",
        ),
    ),
    (
        "dpmul",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Script_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Script_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceInetGetRoutingTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitAntHillTransition__7BushPig",
        Ok(
            "BushPig::HitAntHillTransition(void)",
        ),
    ),
    (
        "AttackInit__11RhinoGround",
        Ok(
            "RhinoGround::AttackInit(void)",
        ),
    ),
    (
        "_8BeachHut$beachHutModule",
        Ok(
            "BeachHut::beachHutModule",
        ),
    ),
    (
        "MakeMatrix__FP6MatrixP6VectorT1T1",
        Ok(
            "MakeMatrix(Matrix *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Draw__6Target",
        Ok(
            "Target::Draw(void)",
        ),
    ),
    (
        "ReverseInit__5Yabby",
        Ok(
            "Yabby::ReverseInit(void)",
        ),
    ),
    (
        "LoadLine__13PlatformRiderP12KromeIniLine",
        Ok(
            "PlatformRider::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Path_Init__Fv",
        Ok(
            "Path_Init(void)",
        ),
    ),
    (
        "Waterfall_Update__Fv",
        Ok(
            "Waterfall_Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$KenOath_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to KenOath_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MKWaterRender_Init_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ShootInit__10ScubaFrill",
        Ok(
            "ScubaFrill::ShootInit(void)",
        ),
    ),
    (
        "Init__10ScubaFrillP11GameObjDesc",
        Ok(
            "ScubaFrill::Init(GameObjDesc *)",
        ),
    ),
    (
        "SlideInit__8ChuteLog",
        Ok(
            "ChuteLog::SlideInit(void)",
        ),
    ),
    (
        "SetDistances__22BaseParticleSystemTypefff",
        Ok(
            "BaseParticleSystemType::SetDistances(float, float, float)",
        ),
    ),
    (
        "_10FootEffect$pMudMat",
        Ok(
            "FootEffect::pMudMat",
        ),
    ),
    (
        "DoCollisions__2Ty",
        Ok(
            "Ty::DoCollisions(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7KenOath",
        Ok(
            "ModuleInfo<KenOath>::Init(void)",
        ),
    ),
    (
        "__ne__C9type_infoRC9type_info",
        Ok(
            "type_info::operator!=(type_info const &) const",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Groper",
        Ok(
            "ModuleInfo<Groper>::Init(void)",
        ),
    ),
    (
        "projectileModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_AlignDirectionToGround__FP6VectorT0",
        Ok(
            "Tools_AlignDirectionToGround(Vector *, Vector *)",
        ),
    ),
    (
        "Boomerang_Deinit__Fv",
        Ok(
            "Boomerang_Deinit(void)",
        ),
    ),
    (
        "AddGif_AD_DIMX__3DmaUlUlUlUlUlUlUlUlUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_DIMX(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "FlinchInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::FlinchInit(void)",
        ),
    ),
    (
        "extrasEaTyLogoPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__6Basket",
        Ok(
            "Basket::Idle(void)",
        ),
    ),
    (
        "InitFast__14WaterSlideData",
        Ok(
            "WaterSlideData::InitFast(void)",
        ),
    ),
    (
        "sceSifMCallRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__8Sentinel",
        Ok(
            "Sentinel::Idle(void)",
        ),
    ),
    (
        "UseControlConfig__10ControlVali",
        Ok(
            "ControlVal::UseControlConfig(int)",
        ),
    ),
    (
        "FreeParticleChunk__21ParticleSystemManagerP13ParticleChunk",
        Ok(
            "ParticleSystemManager::FreeParticleChunk(ParticleChunk *)",
        ),
    ),
    (
        "UpdateMovement__6Fluffy",
        Ok(
            "Fluffy::UpdateMovement(void)",
        ),
    ),
    (
        "GetControlPoints__5LassoP6VectorT1T1",
        Ok(
            "Lasso::GetControlPoints(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Ascii2Sjis__Fc",
        Ok(
            "Ascii2Sjis(char)",
        ),
    ),
    (
        "DrawDebugInfo__4RainP4View",
        Ok(
            "Rain::DrawDebugInfo(View *)",
        ),
    ),
    (
        "TestPoint__24GCT_WaypointPlaneManagerP6Vector",
        Ok(
            "GCT_WaypointPlaneManager::TestPoint(Vector *)",
        ),
    ),
    (
        "CreateModel__6Target",
        Ok(
            "Target::CreateModel(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Portal",
        Ok(
            "ModuleInfo<Portal>::Init(void)",
        ),
    ),
    (
        "vDOUT__FPce",
        Ok(
            "vDOUT(char *,...)",
        ),
    ),
    (
        "CheckEvents__6Muddie",
        Ok(
            "Muddie::CheckEvents(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Zappyrang",
        Ok(
            "ModuleInfo<Zappyrang>::Init(void)",
        ),
    ),
    (
        "Init__19WaterfallBaseStructP6VectorT1T1T1",
        Ok(
            "WaterfallBaseStruct::Init(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Input_WasButtonPressed__F12InputDevicesiP12InputDevices",
        Ok(
            "Input_WasButtonPressed(InputDevices, int, InputDevices *)",
        ),
    ),
    (
        "Fly_ShowTyFlies__Fv",
        Ok(
            "Fly_ShowTyFlies(void)",
        ),
    ),
    (
        "FindNearestPortal__FP6Vector",
        Ok(
            "FindNearestPortal(Vector *)",
        ),
    ),
    (
        "Death__7BushPig",
        Ok(
            "BushPig::Death(void)",
        ),
    ),
    (
        "LoadDone__13GuideParticle",
        Ok(
            "GuideParticle::LoadDone(void)",
        ),
    ),
    (
        "LoadDone__5Torch",
        Ok(
            "Torch::LoadDone(void)",
        ),
    ),
    (
        "GetTotalTime__8GameData",
        Ok(
            "GameData::GetTotalTime(void)",
        ),
    ),
    (
        "Fire__4RockP6Vector",
        Ok(
            "Rock::Fire(Vector *)",
        ),
    ),
    (
        "Barracuda_LoadResources__FP8KromeIni",
        Ok(
            "Barracuda_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__15YabbyStalactite",
        Ok(
            "YabbyStalactite::LoadDone(void)",
        ),
    ),
    (
        "LoadLine__3EmuP12KromeIniLine",
        Ok(
            "Emu::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Fire__16BoomerangManagerP6VectorT1b",
        Ok(
            "BoomerangManager::Fire(Vector *, Vector *, bool)",
        ),
    ),
    (
        "GetAnim__15TyIdleAnimTablebUi14IdleAnimNumberf",
        Ok(
            "TyIdleAnimTable::GetAnim(bool, unsigned int, IdleAnimNumber, float)",
        ),
    ),
    (
        "CommonPreUpdateChecks__10GameCamera",
        Ok(
            "GameCamera::CommonPreUpdateChecks(void)",
        ),
    ),
    (
        "pWaterMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitMove__2Ty",
        Ok(
            "Ty::DeinitMove(void)",
        ),
    ),
    (
        "DieDeinit__5Skink",
        Ok(
            "Skink::DieDeinit(void)",
        ),
    ),
    (
        "FireDrum_IsLit__FP10GameObject",
        Ok(
            "FireDrum_IsLit(GameObject *)",
        ),
    ),
    (
        "Ty_Draw__Fv",
        Ok(
            "Ty_Draw(void)",
        ),
    ),
    (
        "MKWaterRender_LD_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__6Target",
        Ok(
            "Target::Deinit(void)",
        ),
    ),
    (
        "Draw__8OpalsHud",
        Ok(
            "OpalsHud::Draw(void)",
        ),
    ),
    (
        "Ty_Update__Fv",
        Ok(
            "Ty_Update(void)",
        ),
    ),
    (
        "WaterWheel_LoadResources__FP8KromeIni",
        Ok(
            "WaterWheel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PickUpEggInit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::PickUpEggInit(void)",
        ),
    ),
    (
        "SlideInit__4Bull",
        Ok(
            "Bull::SlideInit(void)",
        ),
    ),
    (
        "IceBlock_Deinit__Fv",
        Ok(
            "IceBlock_Deinit(void)",
        ),
    ),
    (
        "what__C9bad_alloc",
        Ok(
            "bad_alloc::what(void) const",
        ),
    ),
    (
        "malloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructWeightedTriStripVertex__11MKWaterPropP14Water_TriStripPfP16WaterStripVertexP12WaterStripUVP15WaterStripColorP16WaterStripNormalP6VectorT7iT7",
        Ok(
            "MKWaterProp::ConstructWeightedTriStripVertex(Water_TriStrip *, float *, WaterStripVertex *, WaterStripUV *, WaterStripColor *, WaterStripNormal *, Vector *, Vector *, int, Vector *)",
        ),
    ),
    (
        "Draw__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Draw(void)",
        ),
    ),
    (
        "AddGif_UV__3DmaUlUl",
        Ok(
            "Dma::AddGif_UV(unsigned long, unsigned long)",
        ),
    ),
    (
        "Bite_DrawEdgeGlow__FP6Shadow",
        Ok(
            "Bite_DrawEdgeGlow(Shadow *)",
        ),
    ),
    (
        "_printf_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Back__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Back(void)",
        ),
    ),
    (
        "ExploreClose__5ModelP13ModelExplorer",
        Ok(
            "Model::ExploreClose(ModelExplorer *)",
        ),
    ),
    (
        "FlinchDeinit__6Crikey",
        Ok(
            "Crikey::FlinchDeinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$WaterWheel_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WaterWheel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Update__19DialogEffectManager",
        Ok(
            "DialogEffectManager::Update(void)",
        ),
    ),
    (
        "LoadLevel_Path_Line__FP12KromeIniLine",
        Ok(
            "LoadLevel_Path_Line(KromeIniLine *)",
        ),
    ),
    (
        "JogWalkInit__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::JogWalkInit(void)",
        ),
    ),
    (
        "Particle_Fire_Create__FPP14ParticleSystemP6Vectorfb",
        Ok(
            "Particle_Fire_Create(ParticleSystem **, Vector *, float, bool)",
        ),
    ),
    (
        "RFU000_FullReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeTrial_SetState__F14TimeTrialState",
        Ok(
            "TimeTrial_SetState(TimeTrialState)",
        ),
    ),
    (
        "_GLOBAL_$I$_7SnowGun$animFire",
        Ok(
            "global constructors keyed to SnowGun::animFire",
        ),
    ),
    (
        "GrabData__6Parser",
        Ok(
            "Parser::GrabData(void)",
        ),
    ),
    (
        "isatty",
        Err(
            NotMangled,
        ),
    ),
    (
        "ShockWaveInit__4Bull",
        Ok(
            "Bull::ShockWaveInit(void)",
        ),
    ),
    (
        "Damage__9ShadowBat",
        Ok(
            "ShadowBat::Damage(void)",
        ),
    ),
    (
        "BonusPickup_LoadResources__FP8KromeIni",
        Ok(
            "BonusPickup_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Swim_Update__10GameCamera",
        Ok(
            "GameCamera::Swim_Update(void)",
        ),
    ),
    (
        "IdleUpdate__4Ibis",
        Ok(
            "Ibis::IdleUpdate(void)",
        ),
    ),
    (
        "PE_Special_LoadResources__Fv",
        Ok(
            "PE_Special_LoadResources(void)",
        ),
    ),
    (
        "MKWaterManager_Calc2DPerp__FffffPfT4",
        Ok(
            "MKWaterManager_Calc2DPerp(float, float, float, float, float *, float *)",
        ),
    ),
    (
        "InitDeath__5Rhino",
        Ok(
            "Rhino::InitDeath(void)",
        ),
    ),
    (
        "FixedPoint_Init__14CameraOverride",
        Ok(
            "CameraOverride::FixedPoint_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14YabbyObjective",
        Ok(
            "ModuleInfo<YabbyObjective> virtual table",
        ),
    ),
    (
        "LoadDone__13AnimatingProp",
        Ok(
            "AnimatingProp::LoadDone(void)",
        ),
    ),
    (
        "DebugDeinit__9FrillBike",
        Ok(
            "FrillBike::DebugDeinit(void)",
        ),
    ),
    (
        "_raise_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateModule__13GuideParticle",
        Ok(
            "GuideParticle::UpdateModule(void)",
        ),
    ),
    (
        "SetActivePoint__14MKSceneManagerP6Vector",
        Ok(
            "MKSceneManager::SetActivePoint(Vector *)",
        ),
    ),
    (
        "gDisableFreezeDetector",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__6Sheila",
        Ok(
            "Sheila::Idle(void)",
        ),
    ),
    (
        "ConvertMatrix__12QuatRotationP6Matrix",
        Ok(
            "QuatRotation::ConvertMatrix(Matrix *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6GasJet",
        Ok(
            "ModuleInfo<GasJet> virtual table",
        ),
    ),
    (
        "GetID__13SoundMaterial",
        Ok(
            "SoundMaterial::GetID(void)",
        ),
    ),
    (
        "SetPosition__7UIImageP6Vectorc",
        Ok(
            "UIImage::SetPosition(Vector *, char)",
        ),
    ),
    (
        "Animate__12MKAnimScript",
        Ok(
            "MKAnimScript::Animate(void)",
        ),
    ),
    (
        "SetCPUTimerHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "__uncatch_exception",
        Err(
            InvalidSpecialMethod(
                "uncatch_exception",
            ),
        ),
    ),
    (
        "_10FootEffect$footSnowType",
        Ok(
            "FootEffect::footSnowType",
        ),
    ),
    (
        "DeckChairIdleInit__4Elle",
        Ok(
            "Elle::DeckChairIdleInit(void)",
        ),
    ),
    (
        "GetUp__3Sly",
        Ok(
            "Sly::GetUp(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7WallabyPv",
        Ok(
            "ModuleInfo<Wallaby>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__3Rex",
        Ok(
            "Rex::Reset(void)",
        ),
    ),
    (
        "NextPhrase__12DialogPlayer",
        Ok(
            "DialogPlayer::NextPhrase(void)",
        ),
    ),
    (
        "Heap_InitModule__Fi",
        Ok(
            "Heap_InitModule(int)",
        ),
    ),
    (
        "SetPitchAndRoll__2Tyff",
        Ok(
            "Ty::SetPitchAndRoll(float, float)",
        ),
    ),
    (
        "_19WaterfallBaseStruct$sprayEnvelope",
        Ok(
            "WaterfallBaseStruct::sprayEnvelope",
        ),
    ),
    (
        "InitDogPaddle__2Ty",
        Ok(
            "Ty::InitDogPaddle(void)",
        ),
    ),
    (
        "Deinit__19SaveGameInfoDisplay",
        Ok(
            "SaveGameInfoDisplay::Deinit(void)",
        ),
    ),
    (
        "Reset__13AnimatingProp",
        Ok(
            "AnimatingProp::Reset(void)",
        ),
    ),
    (
        "_sliceB",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateModelFillState__5Modeli",
        Ok(
            "Model::UpdateModelFillState(int)",
        ),
    ),
    (
        "Happy__6Sheila",
        Ok(
            "Sheila::Happy(void)",
        ),
    ),
    (
        "SetState__4Crocib",
        Ok(
            "Croc::SetState(int, bool)",
        ),
    ),
    (
        "PauseScreen_OptionScreen_Draw__Fv",
        Ok(
            "PauseScreen_OptionScreen_Draw(void)",
        ),
    ),
    (
        "ClearTyControls__12BunyipStruct",
        Ok(
            "BunyipStruct::ClearTyControls(void)",
        ),
    ),
    (
        "CheckEvents__3Emu",
        Ok(
            "Emu::CheckEvents(void)",
        ),
    ),
    (
        "Blitter_DeinitModule__Fv",
        Ok(
            "Blitter_DeinitModule(void)",
        ),
    ),
    (
        "Init__11MKGrassTypePcP11MKGrassType",
        Ok(
            "MKGrassType::Init(char *, MKGrassType *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10SnowSpider",
        Ok(
            "ModuleInfo<SnowSpider>::Init(void)",
        ),
    ),
    (
        "WaterSlide_Update__10GameCamera",
        Ok(
            "GameCamera::WaterSlide_Update(void)",
        ),
    ),
    (
        "Init__12MKAnimScriptPc",
        Ok(
            "MKAnimScript::Init(char *)",
        ),
    ),
    (
        "JumpStartInit__6Wombat",
        Ok(
            "Wombat::JumpStartInit(void)",
        ),
    ),
    (
        "StartCatchAnim__16BoomerangManager13BoomerangSide",
        Ok(
            "BoomerangManager::StartCatchAnim(BoomerangSide)",
        ),
    ),
    (
        "Steam_LoadResources__Fv",
        Ok(
            "Steam_LoadResources(void)",
        ),
    ),
    (
        "_vt$11CrateStruct",
        Ok(
            "CrateStruct virtual table",
        ),
    ),
    (
        "_14CameraOverride$camDescBefore",
        Ok(
            "CameraOverride::camDescBefore",
        ),
    ),
    (
        "__mprec_tens",
        Err(
            InvalidSpecialMethod(
                "mprec_tens",
            ),
        ),
    ),
    (
        "Message__7KenOathP9MKMessage",
        Ok(
            "KenOath::Message(MKMessage *)",
        ),
    ),
    (
        "PlayerAdjust_SetQuadratics__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjust_SetQuadratics(void)",
        ),
    ),
    (
        "SetState__10WhirlyWind15WhirlyWindState",
        Ok(
            "WhirlyWind::SetState(WhirlyWindState)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9SmallCrab",
        Ok(
            "ModuleInfo<SmallCrab>::Init(void)",
        ),
    ),
    (
        "LoadLine__15TurningPlatformP12KromeIniLine",
        Ok(
            "TurningPlatform::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_pictureSpatialScalableExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_OptionControls_Deinit__Fv",
        Ok(
            "PauseScreen_OptionControls_Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10SynkerFrogPv",
        Ok(
            "ModuleInfo<SynkerFrog>::ConstructObject(void *)",
        ),
    ),
    (
        "Spawn__11EnemyObject",
        Ok(
            "EnemyObject::Spawn(void)",
        ),
    ),
    (
        "MiniGameA2_Init__Fv",
        Ok(
            "MiniGameA2_Init(void)",
        ),
    ),
    (
        "Snort__4Bull",
        Ok(
            "Bull::Snort(void)",
        ),
    ),
    (
        "ModelRender_ACTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitModule__9AuroraKid",
        Ok(
            "AuroraKid::DeinitModule(void)",
        ),
    ),
    (
        "Flinch__10SnowSpider",
        Ok(
            "SnowSpider::Flinch(void)",
        ),
    ),
    (
        "ThrowingInit__7SnowRoo",
        Ok(
            "SnowRoo::ThrowingInit(void)",
        ),
    ),
    (
        "SetAnimationFrame__10GameCameraf",
        Ok(
            "GameCamera::SetAnimationFrame(float)",
        ),
    ),
    (
        "UpdateWorldMatrix__10CuttleFish",
        Ok(
            "CuttleFish::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "Build__17MKShadow_AnimatedPc",
        Ok(
            "MKShadow_Animated::Build(char *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10ScriptProp",
        Ok(
            "ModuleInfo<ScriptProp>::Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15KingFisherField",
        Ok(
            "ModuleInfo<KingFisherField> virtual table",
        ),
    ),
    (
        "Draw__7SeaMine",
        Ok(
            "SeaMine::Draw(void)",
        ),
    ),
    (
        "IdleStandAction__2Ty",
        Ok(
            "Ty::IdleStandAction(void)",
        ),
    ),
    (
        "Tools_ReverseMatrixXZ__FP6Matrix",
        Ok(
            "Tools_ReverseMatrixXZ(Matrix *)",
        ),
    ),
    (
        "Deinit__6Geyser",
        Ok(
            "Geyser::Deinit(void)",
        ),
    ),
    (
        "InitCamera__12DialogPlayer",
        Ok(
            "DialogPlayer::InitCamera(void)",
        ),
    ),
    (
        "sceScfGetLocalTimefromRTC",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaterTooCloseBelow__2Ty",
        Ok(
            "Ty::WaterTooCloseBelow(void)",
        ),
    ),
    (
        "MKShadow_LockBuffer__Fv",
        Ok(
            "MKShadow_LockBuffer(void)",
        ),
    ),
    (
        "WaitForRespawn__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::WaitForRespawn(void)",
        ),
    ),
    (
        "Critters_Draw__Fv",
        Ok(
            "Critters_Draw(void)",
        ),
    ),
    (
        "SplatLand__15LearnToDiveData",
        Ok(
            "LearnToDiveData::SplatLand(void)",
        ),
    ),
    (
        "ScalarProj__6VectorP6Vector",
        Ok(
            "Vector::ScalarProj(Vector *)",
        ),
    ),
    (
        "Attack__10SnowSpider",
        Ok(
            "SnowSpider::Attack(void)",
        ),
    ),
    (
        "Fall_Update__10GameCamera",
        Ok(
            "GameCamera::Fall_Update(void)",
        ),
    ),
    (
        "IsValid__15TyIdleAnimEntryb13MaterialIndex14IdleAnimNumber15IdleAnimMoveVel",
        Ok(
            "TyIdleAnimEntry::IsValid(bool, MaterialIndex, IdleAnimNumber, IdleAnimMoveVel)",
        ),
    ),
    (
        "ModelRender_AExyW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__11GuideBarrel",
        Ok(
            "GuideBarrel::Reset(void)",
        ),
    ),
    (
        "IdleInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::IdleInit(void)",
        ),
    ),
    (
        "descr_cast__H1ZP21ShatterableDescriptor_P16MKPropDescriptor_X01",
        Ok(
            "ShatterableDescriptor * descr_cast<ShatterableDescriptor *>(MKPropDescriptor *)",
        ),
    ),
    (
        "MKWaterManager_GetWaterType__Fi",
        Ok(
            "MKWaterManager_GetWaterType(int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Rock",
        Ok(
            "ModuleInfo<Rock> virtual table",
        ),
    ),
    (
        "StartAnimIfNew__2TyP12MKAnimScriptP6MKAnimib",
        Ok(
            "Ty::StartAnimIfNew(MKAnimScript *, MKAnim *, int, bool)",
        ),
    ),
    (
        "__13bad_exception",
        Ok(
            "bad_exception::bad_exception(void)",
        ),
    ),
    (
        "Waterfall_FreeResources__Fv",
        Ok(
            "Waterfall_FreeResources(void)",
        ),
    ),
    (
        "BootTest_Draw__Fv",
        Ok(
            "BootTest_Draw(void)",
        ),
    ),
    (
        "BlinkLogic__2Ty",
        Ok(
            "Ty::BlinkLogic(void)",
        ),
    ),
    (
        "Update__14EnemyRefPointsP5Model",
        Ok(
            "EnemyRefPoints::Update(Model *)",
        ),
    ),
    (
        "SetState__8SignPost13SignPostState",
        Ok(
            "SignPost::SetState(SignPostState)",
        ),
    ),
    (
        "ThrowDirtInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::ThrowDirtInit(void)",
        ),
    ),
    (
        "WaterSlide_LoadResources__Fv",
        Ok(
            "WaterSlide_LoadResources(void)",
        ),
    ),
    (
        "gpSineTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__13WobbleTexture",
        Ok(
            "WobbleTexture::Deinit(void)",
        ),
    ),
    (
        "SpawnBridgeChunk__17TyParticleManagerP6VectorP5Model",
        Ok(
            "TyParticleManager::SpawnBridgeChunk(Vector *, Model *)",
        ),
    ),
    (
        "Doomerang__2Ty",
        Ok(
            "Ty::Doomerang(void)",
        ),
    ),
    (
        "UploadCode__10VU1ManagerPUiT1",
        Ok(
            "VU1Manager::UploadCode(unsigned int *, unsigned int *)",
        ),
    ),
    (
        "Snore__6Julius",
        Ok(
            "Julius::Snore(void)",
        ),
    ),
    (
        "GameCamera_OverrideRail_Add__FP26CameraOverrideRailLoadInfo",
        Ok(
            "GameCamera_OverrideRail_Add(CameraOverrideRailLoadInfo *)",
        ),
    ),
    (
        "Init__17Tools_ParticleRefP5ModelPc",
        Ok(
            "Tools_ParticleRef::Init(Model *, char *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9SpiderWeb",
        Ok(
            "ModuleInfo<SpiderWeb> virtual table",
        ),
    ),
    (
        "Init__11ShatterableP11GameObjDesc",
        Ok(
            "Shatterable::Init(GameObjDesc *)",
        ),
    ),
    (
        "Begin__11GameObjDesc",
        Ok(
            "GameObjDesc::Begin(void)",
        ),
    ),
    (
        "strtodf",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_Continue_OnExit__Fv",
        Ok(
            "PauseScreen_Continue_OnExit(void)",
        ),
    ),
    (
        "dptofp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__4Drum",
        Ok(
            "Drum::Update(void)",
        ),
    ),
    (
        "DeinitGlide__2Ty",
        Ok(
            "Ty::DeinitGlide(void)",
        ),
    ),
    (
        "SetState__4Moth10MothStates",
        Ok(
            "Moth::SetState(MothStates)",
        ),
    ),
    (
        "_vt$16CheckpointStruct",
        Ok(
            "CheckpointStruct virtual table",
        ),
    ),
    (
        "SetRotationToScale__6Matrixf",
        Ok(
            "Matrix::SetRotationToScale(float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11AirPlatform",
        Ok(
            "ModuleInfo<AirPlatform> virtual table",
        ),
    ),
    (
        "PauseScreen_OptionScreen_Init__Fv",
        Ok(
            "PauseScreen_OptionScreen_Init(void)",
        ),
    ),
    (
        "Moving__8CableCar",
        Ok(
            "CableCar::Moving(void)",
        ),
    ),
    (
        "sceGsResetPath",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__6MaurieP11GameObjDesc",
        Ok(
            "Maurie::Init(GameObjDesc *)",
        ),
    ),
    (
        "SwallowCruise__6Groper",
        Ok(
            "Groper::SwallowCruise(void)",
        ),
    ),
    (
        "ExplodeInit__7SeaMine",
        Ok(
            "SeaMine::ExplodeInit(void)",
        ),
    ),
    (
        "iGetTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckEvents__5Skink",
        Ok(
            "Skink::CheckEvents(void)",
        ),
    ),
    (
        "AddWake__7BushPig",
        Ok(
            "BushPig::AddWake(void)",
        ),
    ),
    (
        "PipePart_RepairPipe__FP10GameObject",
        Ok(
            "PipePart_RepairPipe(GameObject *)",
        ),
    ),
    (
        "Message__11AirPlatformP9MKMessage",
        Ok(
            "AirPlatform::Message(MKMessage *)",
        ),
    ),
    (
        "WalkDeinit__3Sly",
        Ok(
            "Sly::WalkDeinit(void)",
        ),
    ),
    (
        "Chase__6Muddie",
        Ok(
            "Muddie::Chase(void)",
        ),
    ),
    (
        "UpdateChaseTarget__9FrillBikeff",
        Ok(
            "FrillBike::UpdateChaseTarget(float, float)",
        ),
    ),
    (
        "Main_GetCameraDistanceTypeForLevel__Fv",
        Ok(
            "Main_GetCameraDistanceTypeForLevel(void)",
        ),
    ),
    (
        "Sjis2AsciiString__FPcT0",
        Ok(
            "Sjis2AsciiString(char *, char *)",
        ),
    ),
    (
        "Reset__6Shazza",
        Ok(
            "Shazza::Reset(void)",
        ),
    ),
    (
        "SetSubState__4Bulli",
        Ok(
            "Bull::SetSubState(int)",
        ),
    ),
    (
        "LoadLine__8FireDrumP12KromeIniLine",
        Ok(
            "FireDrum::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "GetMass__4Jeep",
        Ok(
            "Jeep::GetMass(void)",
        ),
    ),
    (
        "AppendString__24Tools_DynamicStringTablePc",
        Ok(
            "Tools_DynamicStringTable::AppendString(char *)",
        ),
    ),
    (
        "GameCamera_SetShakeOffset__FP6Vector",
        Ok(
            "GameCamera_SetShakeOffset(Vector *)",
        ),
    ),
    (
        "crs",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeTrial_Reset__Fv",
        Ok(
            "TimeTrial_Reset(void)",
        ),
    ),
    (
        "SetState__5Torch10TorchStatei",
        Ok(
            "Torch::SetState(TorchState, int)",
        ),
    ),
    (
        "ModelRender_ACTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__4Croc",
        Ok(
            "Croc::Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10StaticProp",
        Ok(
            "ModuleInfo<StaticProp>::Init(void)",
        ),
    ),
    (
        "_GLOBAL_$I$bushPig",
        Ok(
            "global constructors keyed to bushPig",
        ),
    ),
    (
        "Sound_BatchRPC__Fii",
        Ok(
            "Sound_BatchRPC(int, int)",
        ),
    ),
    (
        "CrawlDeinit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlDeinit(void)",
        ),
    ),
    (
        "DeinitIdle__7BushPig",
        Ok(
            "BushPig::DeinitIdle(void)",
        ),
    ),
    (
        "sceMpegAddStrCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14SpiderTrapdoorPv",
        Ok(
            "ModuleInfo<SpiderTrapdoor>::ConstructObject(void *)",
        ),
    ),
    (
        "FileSys_Exists__FPcPi",
        Ok(
            "FileSys_Exists(char *, int *)",
        ),
    ),
    (
        "Input_MTapOnPort__Fi",
        Ok(
            "Input_MTapOnPort(int)",
        ),
    ),
    (
        "Translation_IsLanguageAvailable__F19TranslationLanguage",
        Ok(
            "Translation_IsLanguageAvailable(TranslationLanguage)",
        ),
    ),
    (
        "_vt$7C3Actor",
        Ok(
            "C3Actor virtual table",
        ),
    ),
    (
        "Tools_DebugPtLine__FP6VectorT0iif",
        Ok(
            "Tools_DebugPtLine(Vector *, Vector *, int, int, float)",
        ),
    ),
    (
        "_vt$17MiniGameObjective",
        Ok(
            "MiniGameObjective virtual table",
        ),
    ),
    (
        "Init__6FluffyP11GameObjDesc",
        Ok(
            "Fluffy::Init(GameObjDesc *)",
        ),
    ),
    (
        "JumpAttack__5Rufusb",
        Ok(
            "Rufus::JumpAttack(bool)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6MuddiePv",
        Ok(
            "ModuleInfo<Muddie>::ConstructObject(void *)",
        ),
    ),
    (
        "TestPoint__14CameraOverrideP6Vector",
        Ok(
            "CameraOverride::TestPoint(Vector *)",
        ),
    ),
    (
        "Message__11MetalSpikesP9MKMessage",
        Ok(
            "MetalSpikes::Message(MKMessage *)",
        ),
    ),
    (
        "DisableDispatchThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z19BlitterCritterFieldPv",
        Ok(
            "ModuleInfo<BlitterCritterField>::ConstructObject(void *)",
        ),
    ),
    (
        "InitLevel__23BlitterCritterFieldDesc",
        Ok(
            "BlitterCritterFieldDesc::InitLevel(void)",
        ),
    ),
    (
        "AsInt__12KromeIniLineiPi",
        Ok(
            "KromeIniLine::AsInt(int, int *)",
        ),
    ),
    (
        "CreateBubbles__2Tyi",
        Ok(
            "Ty::CreateBubbles(int)",
        ),
    ),
    (
        "Translation_Validate__FiPc",
        Ok(
            "Translation_Validate(int, char *)",
        ),
    ),
    (
        "MakeFont__4Font",
        Ok(
            "Font::MakeFont(void)",
        ),
    ),
    (
        "DrawDebug__6Groper",
        Ok(
            "Groper::DrawDebug(void)",
        ),
    ),
    (
        "TyVideo_Draw__Fv",
        Ok(
            "TyVideo_Draw(void)",
        ),
    ),
    (
        "Draw__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Draw(void)",
        ),
    ),
    (
        "_vt$19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct virtual table",
        ),
    ),
    (
        "SetNodeMatrix__9AnimationiP6Matrixb",
        Ok(
            "Animation::SetNodeMatrix(int, Matrix *, bool)",
        ),
    ),
    (
        "pWFTargetMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dive__15LearnToDiveData",
        Ok(
            "LearnToDiveData::Dive(void)",
        ),
    ),
    (
        "DeinitJump__14WaterSlideData",
        Ok(
            "WaterSlideData::DeinitJump(void)",
        ),
    ),
    (
        "Message__9BarracudaP9MKMessage",
        Ok(
            "Barracuda::Message(MKMessage *)",
        ),
    ),
    (
        "SetNormalSourceXZ__10GameCamera",
        Ok(
            "GameCamera::SetNormalSourceXZ(void)",
        ),
    ),
    (
        "Load__12SnowPileDescP8KromeIni",
        Ok(
            "SnowPileDesc::Load(KromeIni *)",
        ),
    ),
    (
        "SpawnTireDust__17TyParticleManagerP6Vectorff",
        Ok(
            "TyParticleManager::SpawnTireDust(Vector *, float, float)",
        ),
    ),
    (
        "_GLOBAL_$I$Burnable_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Burnable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_10FootEffect$bushPigDustType",
        Ok(
            "FootEffect::bushPigDustType",
        ),
    ),
    (
        "SpinningLog_LoadResources__FP8KromeIni",
        Ok(
            "SpinningLog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__malloc_top_pad",
        Err(
            InvalidSpecialMethod(
                "malloc_top_pad",
            ),
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Roach",
        Ok(
            "ModuleInfo<Roach> virtual table",
        ),
    ),
    (
        "PauseScreen_Options_Update__Fv",
        Ok(
            "PauseScreen_Options_Update(void)",
        ),
    ),
    (
        "Init__7CoconutP11GameObjDesc",
        Ok(
            "Coconut::Init(GameObjDesc *)",
        ),
    ),
    (
        "ModelRender_CFLO1W_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "szIcicleRefBase",
        Err(
            NotMangled,
        ),
    ),
    (
        "FrontEnd_GoToScreen__F17tagFrontEndScreen",
        Ok(
            "FrontEnd_GoToScreen(tagFrontEndScreen)",
        ),
    ),
    (
        "Init__11MKWaterPropP7MKWaterP14WaterSubObject",
        Ok(
            "MKWaterProp::Init(MKWater *, WaterSubObject *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Crikey",
        Ok(
            "ModuleInfo<Crikey>::Init(void)",
        ),
    ),
    (
        "StartSnowCloud__9AvalancheP6VectorP14BoundingVolume",
        Ok(
            "Avalanche::StartSnowCloud(Vector *, BoundingVolume *)",
        ),
    ),
    (
        "GetNearestPoint__11PathManagerP6Vectorf",
        Ok(
            "PathManager::GetNearestPoint(Vector *, float)",
        ),
    ),
    (
        "LogicUpdate__5Rufus",
        Ok(
            "Rufus::LogicUpdate(void)",
        ),
    ),
    (
        "LoadDescriptors__H1Z18BurnableDescriptor_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<BurnableDescriptor>(KromeIni *, char *, BurnableDescriptor *)",
        ),
    ),
    (
        "SceneAnimate__12DialogPlayerUiP12EffectStructRi",
        Ok(
            "DialogPlayer::SceneAnimate(unsigned int, EffectStruct *, int &)",
        ),
    ),
    (
        "InitIdleWaterShake__2Ty",
        Ok(
            "Ty::InitIdleWaterShake(void)",
        ),
    ),
    (
        "SelectRock__14RockCollection",
        Ok(
            "RockCollection::SelectRock(void)",
        ),
    ),
    (
        "UpdateLogic__10KingFisher",
        Ok(
            "KingFisher::UpdateLogic(void)",
        ),
    ),
    (
        "sceDeci2Poll",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__4Bull",
        Ok(
            "Bull::Deinit(void)",
        ),
    ),
    (
        "Crikey_Hurt__FP6Vector",
        Ok(
            "Crikey_Hurt(Vector *)",
        ),
    ),
    (
        "sceMtapInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddLife__8GameData",
        Ok(
            "GameData::AddLife(void)",
        ),
    ),
    (
        "ReverseDeinit__5Yabby",
        Ok(
            "Yabby::ReverseDeinit(void)",
        ),
    ),
    (
        "CruiseInit__6Crikey",
        Ok(
            "Crikey::CruiseInit(void)",
        ),
    ),
    (
        "SoundBank_PauseMusic__Fbf",
        Ok(
            "SoundBank_PauseMusic(bool, float)",
        ),
    ),
    (
        "SpawnExclamation__17TyParticleManager",
        Ok(
            "TyParticleManager::SpawnExclamation(void)",
        ),
    ),
    (
        "_getpid_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnBubble__10ScubaFrillP6Vectorff",
        Ok(
            "ScubaFrill::SpawnBubble(Vector *, float, float)",
        ),
    ),
    (
        "Shoot__10ScubaFrill",
        Ok(
            "ScubaFrill::Shoot(void)",
        ),
    ),
    (
        "Update_WaitingMove__11Grasshopper",
        Ok(
            "Grasshopper::Update_WaitingMove(void)",
        ),
    ),
    (
        "PauseScreen_ShowContinueScreen__Fv",
        Ok(
            "PauseScreen_ShowContinueScreen(void)",
        ),
    ),
    (
        "descr_cast__H1ZP9GeckoDesc_P16MKPropDescriptor_X01",
        Ok(
            "GeckoDesc * descr_cast<GeckoDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "gGrassTypes",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddSbusIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "FootEffects_LoadResources__Fv",
        Ok(
            "FootEffects_LoadResources(void)",
        ),
    ),
    (
        "_vt$11Shatterable",
        Ok(
            "Shatterable virtual table",
        ),
    ),
    (
        "_9StarTrail$pMat",
        Ok(
            "StarTrail::pMat",
        ),
    ),
    (
        "FrontEnd_LoadLevel_Draw__Fv",
        Ok(
            "FrontEnd_LoadLevel_Draw(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SnowSpider_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SnowSpider_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Reset__6Julius",
        Ok(
            "Julius::Reset(void)",
        ),
    ),
    (
        "Reset__10Teleporter",
        Ok(
            "Teleporter::Reset(void)",
        ),
    ),
    (
        "Deinit__5Steam",
        Ok(
            "Steam::Deinit(void)",
        ),
    ),
    (
        "WaterMediumDeinit__2Ty",
        Ok(
            "Ty::WaterMediumDeinit(void)",
        ),
    ),
    (
        "IdleInit__5Leech",
        Ok(
            "Leech::IdleInit(void)",
        ),
    ),
    (
        "SetLookTarget__8Sentinel",
        Ok(
            "Sentinel::SetLookTarget(void)",
        ),
    ),
    (
        "DeathDeinit__3Bat",
        Ok(
            "Bat::DeathDeinit(void)",
        ),
    ),
    (
        "SetTargetPosition__10GameCameraP6Vector",
        Ok(
            "GameCamera::SetTargetPosition(Vector *)",
        ),
    ),
    (
        "_vt$14SynkerFrogDesc",
        Ok(
            "SynkerFrogDesc virtual table",
        ),
    ),
    (
        "DeinitCatching__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::DeinitCatching(void)",
        ),
    ),
    (
        "Update__8SnowPile",
        Ok(
            "SnowPile::Update(void)",
        ),
    ),
    (
        "Turtle_Draw__Fv",
        Ok(
            "Turtle_Draw(void)",
        ),
    ),
    (
        "_7MKWater$debugNumHighDetailSubObjects",
        Ok(
            "MKWater::debugNumHighDetailSubObjects",
        ),
    ),
    (
        "JumpDeinit__10SnowSpider",
        Ok(
            "SnowSpider::JumpDeinit(void)",
        ),
    ),
    (
        "Fire__9BoomerangP6VectorT1",
        Ok(
            "Boomerang::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "LoadDone__9ShadowBat",
        Ok(
            "ShadowBat::LoadDone(void)",
        ),
    ),
    (
        "Walk__11FrillLizardb",
        Ok(
            "FrillLizard::Walk(bool)",
        ),
    ),
    (
        "Update__11ThinIceProp",
        Ok(
            "ThinIceProp::Update(void)",
        ),
    ),
    (
        "Emit__15ParticleEmitterif",
        Ok(
            "ParticleEmitter::Emit(int, float)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11Kaboomerang",
        Ok(
            "ModuleInfo<Kaboomerang>::Init(void)",
        ),
    ),
    (
        "Init__Q212BoomerangHud14BoomerangImage13BoomerangType",
        Ok(
            "BoomerangHud::BoomerangImage::Init(BoomerangType)",
        ),
    ),
    (
        "CameraOverrideSpiral_Start__Fv",
        Ok(
            "CameraOverrideSpiral_Start(void)",
        ),
    ),
    (
        "LoadLine__11BoulderTrapP12KromeIniLine",
        Ok(
            "BoulderTrap::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_dispatchMpegCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawRecursiveTerrain__14MKSceneManagerP6SMNodei",
        Ok(
            "MKSceneManager::DrawRecursiveTerrain(SMNode *, int)",
        ),
    ),
    (
        "Draw__3Bat",
        Ok(
            "Bat::Draw(void)",
        ),
    ),
    (
        "titleEaTyLogoPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateNextPosition_Scurry__9SmallCrab",
        Ok(
            "SmallCrab::GenerateNextPosition_Scurry(void)",
        ),
    ),
    (
        "strtoul",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__14ShadowBatSonar",
        Ok(
            "ShadowBatSonar::Reset(void)",
        ),
    ),
    (
        "Hit__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Hit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$rangType",
        Ok(
            "global constructors keyed to rangType",
        ),
    ),
    (
        "sceSifRemoveRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Video_CbDataError__FP7sceMpegP18sceMpegCbDataErrorP5Video",
        Ok(
            "Video_CbDataError(sceMpeg *, sceMpegCbDataError *, Video *)",
        ),
    ),
    (
        "IdleInit__10BlueTongue",
        Ok(
            "BlueTongue::IdleInit(void)",
        ),
    ),
    (
        "_8Material$updateEnabled",
        Ok(
            "Material::updateEnabled",
        ),
    ),
    (
        "InitTLBFunctions",
        Err(
            NotMangled,
        ),
    ),
    (
        "__mb_cur_max",
        Err(
            InvalidSpecialMethod(
                "mb_cur_max",
            ),
        ),
    ),
    (
        "pCaptureMaterial",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z21RainbowScaleObjectivePv",
        Ok(
            "ModuleInfo<RainbowScaleObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "ModelRender_FLST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACExyW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Death__10NinjaGecko",
        Ok(
            "NinjaGecko::Death(void)",
        ),
    ),
    (
        "Init__17BlueTongueThrowerP11GameObjDesc",
        Ok(
            "BlueTongueThrower::Init(GameObjDesc *)",
        ),
    ),
    (
        "FlattenedState__4Frog",
        Ok(
            "Frog::FlattenedState(void)",
        ),
    ),
    (
        "DeinitRiding__9Speedboat",
        Ok(
            "Speedboat::DeinitRiding(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10DialogProp",
        Ok(
            "ModuleInfo<DialogProp> virtual table",
        ),
    ),
    (
        "_vt$6Crikey",
        Ok(
            "Crikey virtual table",
        ),
    ),
    (
        "SharedUpdate__4Ibis",
        Ok(
            "Ibis::SharedUpdate(void)",
        ),
    ),
    (
        "Draw__10SynkerFrog",
        Ok(
            "SynkerFrog::Draw(void)",
        ),
    ),
    (
        "_10DDASession$bSaveEnabled",
        Ok(
            "DDASession::bSaveEnabled",
        ),
    ),
    (
        "UpdateSound__8ChuteLog",
        Ok(
            "ChuteLog::UpdateSound(void)",
        ),
    ),
    (
        "_localeconv_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Wake_Update__Fv",
        Ok(
            "Wake_Update(void)",
        ),
    ),
    (
        "RecoverInit__9FrillBike",
        Ok(
            "FrillBike::RecoverInit(void)",
        ),
    ),
    (
        "CheckForAutoCenter__2Ty",
        Ok(
            "Ty::CheckForAutoCenter(void)",
        ),
    ),
    (
        "CameraOverridePath_Reset__Fv",
        Ok(
            "CameraOverridePath_Reset(void)",
        ),
    ),
    (
        "SpawnGoo__17TyParticleManagerP6VectorT1",
        Ok(
            "TyParticleManager::SpawnGoo(Vector *, Vector *)",
        ),
    ),
    (
        "CreateParticleSystem__21ParticleSystemManagerP18ParticleSystemType",
        Ok(
            "ParticleSystemManager::CreateParticleSystem(ParticleSystemType *)",
        ),
    ),
    (
        "Update__5TyFSMP2Ty",
        Ok(
            "TyFSM::Update(Ty *)",
        ),
    ),
    (
        "Update__13SpeedboatWakeP6Vectorf",
        Ok(
            "SpeedboatWake::Update(Vector *, float)",
        ),
    ),
    (
        "LoadLine__9WaterPipeP12KromeIniLine",
        Ok(
            "WaterPipe::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Coconut",
        Ok(
            "ModuleInfo<Coconut> virtual table",
        ),
    ),
    (
        "InitSuperBite__6TyBite",
        Ok(
            "TyBite::InitSuperBite(void)",
        ),
    ),
    (
        "GameCamera_UseDoomarangCamera__FbP6VectorT1T1f",
        Ok(
            "GameCamera_UseDoomarangCamera(bool, Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "DeinitModule__6Camera",
        Ok(
            "Camera::DeinitModule(void)",
        ),
    ),
    (
        "FrontEnd_LoadGame_Draw__Fv",
        Ok(
            "FrontEnd_LoadGame_Draw(void)",
        ),
    ),
    (
        "NodeOverride_CreateCustomMatrix__FP12NodeOverrideP6VectorP6Matrix",
        Ok(
            "NodeOverride_CreateCustomMatrix(NodeOverride *, Vector *, Matrix *)",
        ),
    ),
    (
        "Reset__8DiveRing",
        Ok(
            "DiveRing::Reset(void)",
        ),
    ),
    (
        "Deinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Deinit(void)",
        ),
    ),
    (
        "Message__7SeaMineP9MKMessage",
        Ok(
            "SeaMine::Message(MKMessage *)",
        ),
    ),
    (
        "sceIoctl",
        Err(
            NotMangled,
        ),
    ),
    (
        "Turn__8ChuteLog",
        Ok(
            "ChuteLog::Turn(void)",
        ),
    ),
    (
        "Video_DeinitModule__Fv",
        Ok(
            "Video_DeinitModule(void)",
        ),
    ),
    (
        "ModelRender_AiC_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "DoBoomerangHit__5Skinki",
        Ok(
            "Skink::DoBoomerangHit(int)",
        ),
    ),
    (
        "ScreenEffect_Init__FP12ScreenEffect",
        Ok(
            "ScreenEffect_Init(ScreenEffect *)",
        ),
    ),
    (
        "PE_WaterTrail_LoadResources__Fv",
        Ok(
            "PE_WaterTrail_LoadResources(void)",
        ),
    ),
    (
        "__tfs",
        Ok(
            "short type_info function",
        ),
    ),
    (
        "__default_unexpected__Fv",
        Ok(
            "__default_unexpected(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10IceCoolant",
        Ok(
            "ModuleInfo<IceCoolant>::Init(void)",
        ),
    ),
    (
        "sceSifSetReg",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_WS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CollisionChecks__9FrillBike",
        Ok(
            "FrillBike::CollisionChecks(void)",
        ),
    ),
    (
        "FindPointState__9ShoalFish",
        Ok(
            "ShoalFish::FindPointState(void)",
        ),
    ),
    (
        "__tfv",
        Ok(
            "void type_info function",
        ),
    ),
    (
        "gTextureDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "__sigtramp_r",
        Err(
            InvalidSpecialMethod(
                "sigtramp_r",
            ),
        ),
    ),
    (
        "sceCdPOffCallback",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraOverrideRail_Start__Fv",
        Ok(
            "CameraOverrideRail_Start(void)",
        ),
    ),
    (
        "DeinitWarp__2Ty",
        Ok(
            "Ty::DeinitWarp(void)",
        ),
    ),
    (
        "Tools_CriticalDamp__Fffff",
        Ok(
            "Tools_CriticalDamp(float, float, float, float)",
        ),
    ),
    (
        "UseCustomCameraMatrix__10GameCamerabP6Matrix",
        Ok(
            "GameCamera::UseCustomCameraMatrix(bool, Matrix *)",
        ),
    ),
    (
        "FirstHitShatter__10IceCoolant",
        Ok(
            "IceCoolant::FirstHitShatter(void)",
        ),
    ),
    (
        "_10DDASession$bConvertToReadable",
        Ok(
            "DDASession::bConvertToReadable",
        ),
    ),
    (
        "_Error",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__4View",
        Ok(
            "View::Init(void)",
        ),
    ),
    (
        "BonusPickup_IsCollected__FP11BonusPickup",
        Ok(
            "BonusPickup_IsCollected(BonusPickup *)",
        ),
    ),
    (
        "AlertDeinit__6Muddie",
        Ok(
            "Muddie::AlertDeinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8ChuteLog",
        Ok(
            "ModuleInfo<ChuteLog>::Init(void)",
        ),
    ),
    (
        "LoadDone__7Pontoon",
        Ok(
            "Pontoon::LoadDone(void)",
        ),
    ),
    (
        "Explosion_Update__Fv",
        Ok(
            "Explosion_Update(void)",
        ),
    ),
    (
        "Turn__7C3ActorP6Vector",
        Ok(
            "C3Actor::Turn(Vector *)",
        ),
    ),
    (
        "JumpLandInit__6Wombat",
        Ok(
            "Wombat::JumpLandInit(void)",
        ),
    ),
    (
        "BlueTongueRockObjective_CheckForCompletion__Fv",
        Ok(
            "BlueTongueRockObjective_CheckForCompletion(void)",
        ),
    ),
    (
        "CheckCollected__11BonusPickupf",
        Ok(
            "BonusPickup::CheckCollected(float)",
        ),
    ),
    (
        "SetScale__6UITextf",
        Ok(
            "UIText::SetScale(float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Gate",
        Ok(
            "ModuleInfo<Gate> virtual table",
        ),
    ),
    (
        "UpdateModule__10GameObject",
        Ok(
            "GameObject::UpdateModule(void)",
        ),
    ),
    (
        "UseBiteEffect__10GameCamera21CameraBiteEffectStateff",
        Ok(
            "GameCamera::UseBiteEffect(CameraBiteEffectState, float, float)",
        ),
    ),
    (
        "Wake_Reset__Fv",
        Ok(
            "Wake_Reset(void)",
        ),
    ),
    (
        "SignedRayDistanceToPlane__6VectorPfP6VectorT2T2",
        Ok(
            "Vector::SignedRayDistanceToPlane(float *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Deci2Call",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__11RhinoGroundP11GameObjDesc",
        Ok(
            "RhinoGround::Init(GameObjDesc *)",
        ),
    ),
    (
        "AddPointer__15ObjectiveFinderP6Vector",
        Ok(
            "ObjectiveFinder::AddPointer(Vector *)",
        ),
    ),
    (
        "Maurie_LoadResources__FP8KromeIni",
        Ok(
            "Maurie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Rex_LoadResources__FP8KromeIni",
        Ok(
            "Rex_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Spawning__6Basket",
        Ok(
            "Basket::Spawning(void)",
        ),
    ),
    (
        "CameraOverrideDir_Reset__Fv",
        Ok(
            "CameraOverrideDir_Reset(void)",
        ),
    ),
    (
        "GetSaveData__8GameData",
        Ok(
            "GameData::GetSaveData(void)",
        ),
    ),
    (
        "Gather__7SnowRoo",
        Ok(
            "SnowRoo::Gather(void)",
        ),
    ),
    (
        "Reset__4Bull",
        Ok(
            "Bull::Reset(void)",
        ),
    ),
    (
        "MKPackage_Load__FPcb",
        Ok(
            "MKPackage_Load(char *, bool)",
        ),
    ),
    (
        "_clearEach",
        Err(
            NotMangled,
        ),
    ),
    (
        "WalkDeinit__5Yabby",
        Ok(
            "Yabby::WalkDeinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z18SpeedboatObjective",
        Ok(
            "ModuleInfo<SpeedboatObjective> virtual table",
        ),
    ),
    (
        "IdleState__5TyFSMi",
        Ok(
            "TyFSM::IdleState(int)",
        ),
    ),
    (
        "CameraOverride_IsProperDeinit__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_IsProperDeinit(void)",
        ),
    ),
    (
        "_vt$8FireDrum",
        Ok(
            "FireDrum virtual table",
        ),
    ),
    (
        "GetTalismanType__9LevelData11LevelNumber",
        Ok(
            "LevelData::GetTalismanType(LevelNumber)",
        ),
    ),
    (
        "_GLOBAL_$I$_10StaticProp$loadInfo",
        Ok(
            "global constructors keyed to StaticProp::loadInfo",
        ),
    ),
    (
        "LogicUpdate__6Crikey",
        Ok(
            "Crikey::LogicUpdate(void)",
        ),
    ),
    (
        "__ti8bad_cast",
        Ok(
            "bad_cast type_info node",
        ),
    ),
    (
        "RunInit__11RhinoGround",
        Ok(
            "RhinoGround::RunInit(void)",
        ),
    ),
    (
        "Turn__4Croc",
        Ok(
            "Croc::Turn(void)",
        ),
    ),
    (
        "Publisher_Draw__Fv",
        Ok(
            "Publisher_Draw(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14SnowBallAttack",
        Ok(
            "ModuleInfo<SnowBallAttack> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5SharkPv",
        Ok(
            "ModuleInfo<Shark>::ConstructObject(void *)",
        ),
    ),
    (
        "WalkUpdate__4Ibis",
        Ok(
            "Ibis::WalkUpdate(void)",
        ),
    ),
    (
        "EmitFire__5Torch",
        Ok(
            "Torch::EmitFire(void)",
        ),
    ),
    (
        "Scale__6MatrixP6Matrixf",
        Ok(
            "Matrix::Scale(Matrix *, float)",
        ),
    ),
    (
        "ModelRender_ACExyST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "DiscardImageData__7Texture",
        Ok(
            "Texture::DiscardImageData(void)",
        ),
    ),
    (
        "Execute__10ScriptProp",
        Ok(
            "ScriptProp::Execute(void)",
        ),
    ),
    (
        "CheckForHit__10SpiderDirt",
        Ok(
            "SpiderDirt::CheckForHit(void)",
        ),
    ),
    (
        "SendNoEvent__10DialogProp",
        Ok(
            "DialogProp::SendNoEvent(void)",
        ),
    ),
    (
        "Reset__10WhirlyWind",
        Ok(
            "WhirlyWind::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13DDACheckpointPv",
        Ok(
            "ModuleInfo<DDACheckpoint>::ConstructObject(void *)",
        ),
    ),
    (
        "pTorchPlayingSFX",
        Err(
            NotMangled,
        ),
    ),
    (
        "Spider_Add__FRC6VectorT0ib",
        Ok(
            "Spider_Add(Vector const &, Vector const &, int, bool)",
        ),
    ),
    (
        "DeinitModule__8Material",
        Ok(
            "Material::DeinitModule(void)",
        ),
    ),
    (
        "Init__10SpiderDirtP11GameObjDesc",
        Ok(
            "SpiderDirt::Init(GameObjDesc *)",
        ),
    ),
    (
        "Idle_Init__6Dennis",
        Ok(
            "Dennis::Idle_Init(void)",
        ),
    ),
    (
        "PlayerAdjustUW_Update__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjustUW_Update(void)",
        ),
    ),
    (
        "CheckForExplosion__9Barracuda",
        Ok(
            "Barracuda::CheckForExplosion(void)",
        ),
    ),
    (
        "TestPoint__21CameraOverrideManagerP6VectorbP16CameraDescriptor",
        Ok(
            "CameraOverrideManager::TestPoint(Vector *, bool, CameraDescriptor *)",
        ),
    ),
    (
        "Heap_MemFree__FPv",
        Ok(
            "Heap_MemFree(void *)",
        ),
    ),
    (
        "_sbrk_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "JumpFromHole__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::JumpFromHole(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14ShadowBatValve",
        Ok(
            "ModuleInfo<ShadowBatValve> virtual table",
        ),
    ),
    (
        "Reset__12DialogEffect",
        Ok(
            "DialogEffect::Reset(void)",
        ),
    ),
    (
        "VibrateReset__Fv",
        Ok(
            "VibrateReset(void)",
        ),
    ),
    (
        "Fall_Init__10GameCamera",
        Ok(
            "GameCamera::Fall_Init(void)",
        ),
    ),
    (
        "PE_Ice_Update__FP14ParticleSystem",
        Ok(
            "PE_Ice_Update(ParticleSystem *)",
        ),
    ),
    (
        "Draw__6Portal",
        Ok(
            "Portal::Draw(void)",
        ),
    ),
    (
        "InitStopped__3Emu",
        Ok(
            "Emu::InitStopped(void)",
        ),
    ),
    (
        "blankData",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__21ShatterableDescriptorP14ModuleInfoBasePcT2ii",
        Ok(
            "ShatterableDescriptor::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "InitJump__15LedgePullUpData",
        Ok(
            "LedgePullUpData::InitJump(void)",
        ),
    ),
    (
        "Update__17LineOfSightObjectP6VectorT1T1",
        Ok(
            "LineOfSightObject::Update(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Boulder",
        Ok(
            "ModuleInfo<Boulder>::Init(void)",
        ),
    ),
    (
        "sceMpegDemuxPss",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8SnowBall",
        Ok(
            "ModuleInfo<SnowBall> virtual table",
        ),
    ),
    (
        "_vt$8Elevator",
        Ok(
            "Elevator virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$CableCar_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to CableCar_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceMcGetInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10GameCameraP18GameCameraHeroInfo18CameraDistanceType",
        Ok(
            "GameCamera::Init(GameCameraHeroInfo *, CameraDistanceType)",
        ),
    ),
    (
        "LoadDone__11BurningTree",
        Ok(
            "BurningTree::LoadDone(void)",
        ),
    ),
    (
        "InitMissCrate__15LearnToDiveData",
        Ok(
            "LearnToDiveData::InitMissCrate(void)",
        ),
    ),
    (
        "_unknown_extension",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_Options_LoadResources__Fv",
        Ok(
            "PauseScreen_Options_LoadResources(void)",
        ),
    ),
    (
        "RescuedByBull__11BilbyStruct",
        Ok(
            "BilbyStruct::RescuedByBull(void)",
        ),
    ),
    (
        "Set__10LogicState9GameState",
        Ok(
            "LogicState::Set(GameState)",
        ),
    ),
    (
        "Heap_TrackRealloc__FPvT0iPciT3",
        Ok(
            "Heap_TrackRealloc(void *, void *, int, char *, int, char *)",
        ),
    ),
    (
        "MiniBoulder_Init__Fv",
        Ok(
            "MiniBoulder_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11WaterVolume",
        Ok(
            "ModuleInfo<WaterVolume> virtual table",
        ),
    ),
    (
        "Draw__4Gate",
        Ok(
            "Gate::Draw(void)",
        ),
    ),
    (
        "CreateHeavySpray__20WaterfallSprayStructff",
        Ok(
            "WaterfallSprayStruct::CreateHeavySpray(float, float)",
        ),
    ),
    (
        "MoveToTimeAttackStart__4Jeep",
        Ok(
            "Jeep::MoveToTimeAttackStart(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Burner_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Burner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__12EnemySpawnerP9MKMessage",
        Ok(
            "EnemySpawner::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$4Frog",
        Ok(
            "Frog virtual table",
        ),
    ),
    (
        "Video_CreateStreaming__FPcP8Materialb",
        Ok(
            "Video_CreateStreaming(char *, Material *, bool)",
        ),
    ),
    (
        "Update__12UITransition",
        Ok(
            "UITransition::Update(void)",
        ),
    ),
    (
        "Assign__9SmallCrabP13CritterField2",
        Ok(
            "SmallCrab::Assign(CritterField2 *)",
        ),
    ),
    (
        "Update__18SpeedboatCrestWakeP6Vectorf",
        Ok(
            "SpeedboatCrestWake::Update(Vector *, float)",
        ),
    ),
    (
        "pMusicProgressBar",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z19EmuRoundupObjective",
        Ok(
            "ModuleInfo<EmuRoundupObjective>::Init(void)",
        ),
    ),
    (
        "Update__16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue::Update(void)",
        ),
    ),
    (
        "Fly_LoadResources__Fv",
        Ok(
            "Fly_LoadResources(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12StaticFXPropPv",
        Ok(
            "ModuleInfo<StaticFXProp>::ConstructObject(void *)",
        ),
    ),
    (
        "GetArea__13ModelExplorer",
        Ok(
            "ModelExplorer::GetArea(void)",
        ),
    ),
    (
        "XMin__FP6Vectorf",
        Ok(
            "XMin(Vector *, float)",
        ),
    ),
    (
        "FrontEnd_LoadGame_Deinit__Fv",
        Ok(
            "FrontEnd_LoadGame_Deinit(void)",
        ),
    ),
    (
        "Message__12FlameThrowerP9MKMessage",
        Ok(
            "FlameThrower::Message(MKMessage *)",
        ),
    ),
    (
        "SoundBank_LoadResources__Fv",
        Ok(
            "SoundBank_LoadResources(void)",
        ),
    ),
    (
        "Quick_Update__FP14ParticleSystem",
        Ok(
            "Quick_Update(ParticleSystem *)",
        ),
    ),
    (
        "_pictureData0",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__13WobbleTextureii",
        Ok(
            "WobbleTexture::Init(int, int)",
        ),
    ),
    (
        "LassoPullBike__9FrillBikef",
        Ok(
            "FrillBike::LassoPullBike(float)",
        ),
    ),
    (
        "SavedInit__8KoalaKid",
        Ok(
            "KoalaKid::SavedInit(void)",
        ),
    ),
    (
        "StorePickupInfo__10DDASession13DDAPickupType",
        Ok(
            "DDASession::StorePickupInfo(DDAPickupType)",
        ),
    ),
    (
        "Windmills",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetAbsolutePosition__7BushPigP6Vector",
        Ok(
            "BushPig::SetAbsolutePosition(Vector *)",
        ),
    ),
    (
        "AddGif_AD_MIPTBP1_1__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_MIPTBP1_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "SetUWFogPlanes__Ffffff",
        Ok(
            "SetUWFogPlanes(float, float, float, float, float)",
        ),
    ),
    (
        "ShouldFallDive__2Ty",
        Ok(
            "Ty::ShouldFallDive(void)",
        ),
    ),
    (
        "ReleaseAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitModule__6Fluffy",
        Ok(
            "Fluffy::InitModule(void)",
        ),
    ),
    (
        "LassoDrawSimple__5Lasso",
        Ok(
            "Lasso::LassoDrawSimple(void)",
        ),
    ),
    (
        "MKMemoryCard_GetDirInfo__FiP20MKMemoryCardFileInfo",
        Ok(
            "MKMemoryCard_GetDirInfo(int, MKMemoryCardFileInfo *)",
        ),
    ),
    (
        "Drag__3Emu",
        Ok(
            "Emu::Drag(void)",
        ),
    ),
    (
        "Exit__14WaterSlideData",
        Ok(
            "WaterSlideData::Exit(void)",
        ),
    ),
    (
        "_12MKAnimScript$advanceAmount",
        Ok(
            "MKAnimScript::advanceAmount",
        ),
    ),
    (
        "GetChaseTarget__9FrillBike",
        Ok(
            "FrillBike::GetChaseTarget(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14RockProjectile",
        Ok(
            "ModuleInfo<RockProjectile>::Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13BubbleSpawner",
        Ok(
            "ModuleInfo<BubbleSpawner> virtual table",
        ),
    ),
    (
        "MKShadow_Render__FP8MKShadowP6VectorT1fiPUiT1",
        Ok(
            "MKShadow_Render(MKShadow *, Vector *, Vector *, float, int, unsigned int *, Vector *)",
        ),
    ),
    (
        "__get_eh_info",
        Err(
            InvalidSpecialMethod(
                "get_eh_info",
            ),
        ),
    ),
    (
        "Death__6Crikey",
        Ok(
            "Crikey::Death(void)",
        ),
    ),
    (
        "WaitForRunInit__7CaveBat",
        Ok(
            "CaveBat::WaitForRunInit(void)",
        ),
    ),
    (
        "GetField__9ShoalFish",
        Ok(
            "ShoalFish::GetField(void)",
        ),
    ),
    (
        "Underwater_SetSource__10GameCamera",
        Ok(
            "GameCamera::Underwater_SetSource(void)",
        ),
    ),
    (
        "Init__4FrogP11GameObjDesc",
        Ok(
            "Frog::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8BeachHut",
        Ok(
            "ModuleInfo<BeachHut> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10StaticProp",
        Ok(
            "ModuleInfo<StaticProp> virtual table",
        ),
    ),
    (
        "Init__4GateP11GameObjDesc",
        Ok(
            "Gate::Init(GameObjDesc *)",
        ),
    ),
    (
        "Roar__12BunyipStruct",
        Ok(
            "BunyipStruct::Roar(void)",
        ),
    ),
    (
        "LoseLife__8GameData",
        Ok(
            "GameData::LoseLife(void)",
        ),
    ),
    (
        "MiniGameC2_Deinit__Fv",
        Ok(
            "MiniGameC2_Deinit(void)",
        ),
    ),
    (
        "dch",
        Err(
            NotMangled,
        ),
    ),
    (
        "TurnInit__6Fluffy",
        Ok(
            "Fluffy::TurnInit(void)",
        ),
    ),
    (
        "Portal_LoadResources__FP8KromeIni",
        Ok(
            "Portal_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_FLO1W_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateMix__11MKWaterPropiiPf",
        Ok(
            "MKWaterProp::CreateMix(int, int, float *)",
        ),
    ),
    (
        "Eaten__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Eaten(void)",
        ),
    ),
    (
        "__frame_state_for",
        Err(
            InvalidSpecialMethod(
                "frame_state_for",
            ),
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10SynkerFrog",
        Ok(
            "ModuleInfo<SynkerFrog>::Init(void)",
        ),
    ),
    (
        "Wake_AddEx__FPP10WakeStructP6VectorT1ffi",
        Ok(
            "Wake_AddEx(WakeStruct **, Vector *, Vector *, float, float, int)",
        ),
    ),
    (
        "LoadDone__10TimeAttack",
        Ok(
            "TimeAttack::LoadDone(void)",
        ),
    ),
    (
        "GetSubObjectOrigin__5Modeli",
        Ok(
            "Model::GetSubObjectOrigin(int)",
        ),
    ),
    (
        "Message__7SnowRooP9MKMessage",
        Ok(
            "SnowRoo::Message(MKMessage *)",
        ),
    ),
    (
        "__smakebuf",
        Err(
            InvalidSpecialMethod(
                "smakebuf",
            ),
        ),
    ),
    (
        "IdleInit__5Yabby",
        Ok(
            "Yabby::IdleInit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$C1Water_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to C1Water_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_AExyS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__10SnowSpider",
        Ok(
            "SnowSpider::Idle(void)",
        ),
    ),
    (
        "Throwing__7SnowRoo",
        Ok(
            "SnowRoo::Throwing(void)",
        ),
    ),
    (
        "PathInit__9Speedboat",
        Ok(
            "Speedboat::PathInit(void)",
        ),
    ),
    (
        "WaypointOverride_Init__14CameraOverrideP24GCT_WaypointPlaneManager",
        Ok(
            "CameraOverride::WaypointOverride_Init(GCT_WaypointPlaneManager *)",
        ),
    ),
    (
        "Init__12UITransition",
        Ok(
            "UITransition::Init(void)",
        ),
    ),
    (
        "sceDeci2Open",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateProp__14MKSceneManagerP6MKPropP9MKMessage",
        Ok(
            "MKSceneManager::UpdateProp(MKProp *, MKMessage *)",
        ),
    ),
    (
        "rangType",
        Err(
            NotMangled,
        ),
    ),
    (
        "dpcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitModule__11DirectLight",
        Ok(
            "DirectLight::InitModule(void)",
        ),
    ),
    (
        "Assign__10CuttleFishP13CritterField2",
        Ok(
            "CuttleFish::Assign(CritterField2 *)",
        ),
    ),
    (
        "Activate__10DialogProp",
        Ok(
            "DialogProp::Activate(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15BurnerObjective",
        Ok(
            "ModuleInfo<BurnerObjective> virtual table",
        ),
    ),
    (
        "_9FrillBike$vRopeAttach",
        Ok(
            "FrillBike::vRopeAttach",
        ),
    ),
    (
        "InitPerimeterCheck__4Jeep",
        Ok(
            "Jeep::InitPerimeterCheck(void)",
        ),
    ),
    (
        "SkidInit__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::SkidInit(void)",
        ),
    ),
    (
        "ParticleSystemManager_Deinit__Fv",
        Ok(
            "ParticleSystemManager_Deinit(void)",
        ),
    ),
    (
        "Init__4Viewffff",
        Ok(
            "View::Init(float, float, float, float)",
        ),
    ),
    (
        "FallStart__3Fly",
        Ok(
            "Fly::FallStart(void)",
        ),
    ),
    (
        "LoadDone__11MetalSpikes",
        Ok(
            "MetalSpikes::LoadDone(void)",
        ),
    ),
    (
        "UpdatePhysics__11SnowGunAmmo",
        Ok(
            "SnowGunAmmo::UpdatePhysics(void)",
        ),
    ),
    (
        "Taunt__5Rufusb",
        Ok(
            "Rufus::Taunt(bool)",
        ),
    ),
    (
        "PickupCounter_LoadResources__FP8KromeIni",
        Ok(
            "PickupCounter_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$RhinoGround_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to RhinoGround_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Input_ClearPadData__Fv",
        Ok(
            "Input_ClearPadData(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z19SpecialPickupStruct",
        Ok(
            "ModuleInfo<SpecialPickupStruct> virtual table",
        ),
    ),
    (
        "fabsf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__8SignPost",
        Ok(
            "SignPost::Draw(void)",
        ),
    ),
    (
        "Retreat__5Skink",
        Ok(
            "Skink::Retreat(void)",
        ),
    ),
    (
        "ResetToStartInit__4Tick",
        Ok(
            "Tick::ResetToStartInit(void)",
        ),
    ),
    (
        "PushApart__7SeaMine",
        Ok(
            "SeaMine::PushApart(void)",
        ),
    ),
    (
        "WaterDeathInit__2Ty",
        Ok(
            "Ty::WaterDeathInit(void)",
        ),
    ),
    (
        "Draw__8WhiteBat",
        Ok(
            "WhiteBat::Draw(void)",
        ),
    ),
    (
        "DeathDeinit__11FrillLizard",
        Ok(
            "FrillLizard::DeathDeinit(void)",
        ),
    ),
    (
        "FlipHorizontal__13SelectionRang",
        Ok(
            "SelectionRang::FlipHorizontal(void)",
        ),
    ),
    (
        "Video_Draw__FP5Videof",
        Ok(
            "Video_Draw(Video *, float)",
        ),
    ),
    (
        "ModelRender_CFLTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$IDLE_ANIM_NAME",
        Ok(
            "global constructors keyed to IDLE_ANIM_NAME",
        ),
    ),
    (
        "_read_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceCd_c_cb_sem",
        Err(
            NotMangled,
        ),
    ),
    (
        "Collision_RayCollideDynamicItem__FP6VectorT0P15CollisionResultP11DynamicItemf",
        Ok(
            "Collision_RayCollideDynamicItem(Vector *, Vector *, CollisionResult *, DynamicItem *, float)",
        ),
    ),
    (
        "Suck__4Tick",
        Ok(
            "Tick::Suck(void)",
        ),
    ),
    (
        "AlertInit__10BlueTongue",
        Ok(
            "BlueTongue::AlertInit(void)",
        ),
    ),
    (
        "LoadCodeMPGAnywhere__10VU1ManagerP14VUStubFunctionP10VUFunction",
        Ok(
            "VU1Manager::LoadCodeMPGAnywhere(VUStubFunction *, VUFunction *)",
        ),
    ),
    (
        "Draw__5Model",
        Ok(
            "Model::Draw(void)",
        ),
    ),
    (
        "MKWaterManager_LoadIniLine__FP11MKWaterTypePcP12KromeIniLine",
        Ok(
            "MKWaterManager_LoadIniLine(MKWaterType *, char *, KromeIniLine *)",
        ),
    ),
    (
        "Cruise__5Shark",
        Ok(
            "Shark::Cruise(void)",
        ),
    ),
    (
        "Swimming__12TurtleStruct",
        Ok(
            "TurtleStruct::Swimming(void)",
        ),
    ),
    (
        "AddGifTag_Regs__3DmaUlUl",
        Ok(
            "Dma::AddGifTag_Regs(unsigned long, unsigned long)",
        ),
    ),
    (
        "ThrowDirt__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::ThrowDirt(void)",
        ),
    ),
    (
        "RunInit__10NinjaGecko",
        Ok(
            "NinjaGecko::RunInit(void)",
        ),
    ),
    (
        "Init__15EnemyDescriptorP14ModuleInfoBasePcT2ii",
        Ok(
            "EnemyDescriptor::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "LoadLine__7C3ChestP12KromeIniLine",
        Ok(
            "C3Chest::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DeinitJump__7BushPig",
        Ok(
            "BushPig::DeinitJump(void)",
        ),
    ),
    (
        "Heap_TrackFree__FPvPci",
        Ok(
            "Heap_TrackFree(void *, char *, int)",
        ),
    ),
    (
        "Message__11FrillLizardP9MKMessage",
        Ok(
            "FrillLizard::Message(MKMessage *)",
        ),
    ),
    (
        "Death__3Eel",
        Ok(
            "Eel::Death(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_LoadResources__Fv",
        Ok(
            "PauseScreen_GameInfo_LoadResources(void)",
        ),
    ),
    (
        "Init__6ShazzaP11GameObjDesc",
        Ok(
            "Shazza::Init(GameObjDesc *)",
        ),
    ),
    (
        "PauseScreen_Continue_Deinit__Fv",
        Ok(
            "PauseScreen_Continue_Deinit(void)",
        ),
    ),
    (
        "AnimatingSingleStep__10GameCamerab",
        Ok(
            "GameCamera::AnimatingSingleStep(bool)",
        ),
    ),
    (
        "WaterDragon_Update__Fv",
        Ok(
            "WaterDragon_Update(void)",
        ),
    ),
    (
        "Init__21CritterField2LoadInfof",
        Ok(
            "CritterField2LoadInfo::Init(float)",
        ),
    ),
    (
        "particleManager",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11Grasshopper",
        Ok(
            "ModuleInfo<Grasshopper>::Init(void)",
        ),
    ),
    (
        "AddGif_AD_CLAMP_1__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_CLAMP_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "SpecialPickup_EnableCheatLines__Fb",
        Ok(
            "SpecialPickup_EnableCheatLines(bool)",
        ),
    ),
    (
        "ApplyGravity__5Leech",
        Ok(
            "Leech::ApplyGravity(void)",
        ),
    ),
    (
        "SetInverseScaleValue__5Modelif",
        Ok(
            "Model::SetInverseScaleValue(int, float)",
        ),
    ),
    (
        "ReturnHomeInit__5Rufus",
        Ok(
            "Rufus::ReturnHomeInit(void)",
        ),
    ),
    (
        "Init__11FrillLizardP11GameObjDesc",
        Ok(
            "FrillLizard::Init(GameObjDesc *)",
        ),
    ),
    (
        "FrontEnd_MainMenu_Deinit__Fv",
        Ok(
            "FrontEnd_MainMenu_Deinit(void)",
        ),
    ),
    (
        "Activate__19DialogEffectManagerP12DialogPlayer",
        Ok(
            "DialogEffectManager::Activate(DialogPlayer *)",
        ),
    ),
    (
        "SetOpalLifeup__8GameDatab",
        Ok(
            "GameData::SetOpalLifeup(bool)",
        ),
    ),
    (
        "AsFlag__12KromeIniLineiPi",
        Ok(
            "KromeIniLine::AsFlag(int, int *)",
        ),
    ),
    (
        "IdleInit__11BunyipElder",
        Ok(
            "BunyipElder::IdleInit(void)",
        ),
    ),
    (
        "sceMpegDispWidth",
        Err(
            NotMangled,
        ),
    ),
    (
        "_id2type",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaitForTy__5Lenny",
        Ok(
            "Lenny::WaitForTy(void)",
        ),
    ),
    (
        "ZMin__FP6Vectorf",
        Ok(
            "ZMin(Vector *, float)",
        ),
    ),
    (
        "SwimToChum__6Crikey",
        Ok(
            "Crikey::SwimToChum(void)",
        ),
    ),
    (
        "enemyGravityConstant",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNewPosition__18BezierPathFollowerP6VectorT1",
        Ok(
            "BezierPathFollower::GetNewPosition(Vector *, Vector *)",
        ),
    ),
    (
        "WaterDragon_Deinit__Fv",
        Ok(
            "WaterDragon_Deinit(void)",
        ),
    ),
    (
        "Tools_CylinderTest__FP6VectorT0fT0",
        Ok(
            "Tools_CylinderTest(Vector *, Vector *, float, Vector *)",
        ),
    ),
    (
        "_ErrMessage",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dennis_LoadResources__FP8KromeIni",
        Ok(
            "Dennis_LoadResources(KromeIni *)",
        ),
    ),
    (
        "FallDive_Update__10GameCamera",
        Ok(
            "GameCamera::FallDive_Update(void)",
        ),
    ),
    (
        "LoadLine__17TriggerSpherePropP12KromeIniLine",
        Ok(
            "TriggerSphereProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Bitten_Update__9BadBoonie",
        Ok(
            "BadBoonie::Bitten_Update(void)",
        ),
    ),
    (
        "Deinit__10KingFisher",
        Ok(
            "KingFisher::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14ShadowBatSonar",
        Ok(
            "ModuleInfo<ShadowBatSonar>::Init(void)",
        ),
    ),
    (
        "__unpack_d",
        Err(
            InvalidSpecialMethod(
                "unpack_d",
            ),
        ),
    ),
    (
        "_9FrillBike$nDustTrailRef",
        Ok(
            "FrillBike::nDustTrailRef",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7BushPigPv",
        Ok(
            "ModuleInfo<BushPig>::ConstructObject(void *)",
        ),
    ),
    (
        "TurnTy__6TyBitef",
        Ok(
            "TyBite::TurnTy(float)",
        ),
    ),
    (
        "scePadInfoAct",
        Err(
            NotMangled,
        ),
    ),
    (
        "TyMemCard_Reset__Fv",
        Ok(
            "TyMemCard_Reset(void)",
        ),
    ),
    (
        "AddGif_AD_XYOFFSET_2__3DmaUlUl",
        Ok(
            "Dma::AddGif_AD_XYOFFSET_2(unsigned long, unsigned long)",
        ),
    ),
    (
        "_9Avalanche$avalancheType",
        Ok(
            "Avalanche::avalancheType",
        ),
    ),
    (
        "Attack__11RhinoGround",
        Ok(
            "RhinoGround::Attack(void)",
        ),
    ),
    (
        "Create__21CameraOverrideManager24CameraOverrideCreateTypePv",
        Ok(
            "CameraOverrideManager::Create(CameraOverrideCreateType, void *)",
        ),
    ),
    (
        "Update__11TriggerProp",
        Ok(
            "TriggerProp::Update(void)",
        ),
    ),
    (
        "Init__13MusicalIcicleP11GameObjDesc",
        Ok(
            "MusicalIcicle::Init(GameObjDesc *)",
        ),
    ),
    (
        "Smooth__13UniformSpline",
        Ok(
            "UniformSpline::Smooth(void)",
        ),
    ),
    (
        "Move__7Farlapp",
        Ok(
            "Farlapp::Move(void)",
        ),
    ),
    (
        "Init__8CableCarP11GameObjDesc",
        Ok(
            "CableCar::Init(GameObjDesc *)",
        ),
    ),
    (
        "Draw__6Basket",
        Ok(
            "Basket::Draw(void)",
        ),
    ),
    (
        "Mist_Init__Fv",
        Ok(
            "Mist_Init(void)",
        ),
    ),
    (
        "Idle__5Yabby",
        Ok(
            "Yabby::Idle(void)",
        ),
    ),
    (
        "_vt$5Gecko",
        Ok(
            "Gecko virtual table",
        ),
    ),
    (
        "__rtti_user",
        Err(
            InvalidSpecialMethod(
                "rtti_user",
            ),
        ),
    ),
    (
        "Bash__6Fluffy",
        Ok(
            "Fluffy::Bash(void)",
        ),
    ),
    (
        "_vt$13MusicalIcicle",
        Ok(
            "MusicalIcicle virtual table",
        ),
    ),
    (
        "CreateFromImage__7TexturePcP5Image",
        Ok(
            "Texture::CreateFromImage(char *, Image *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Groper",
        Ok(
            "ModuleInfo<Groper> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10WhirlyWind",
        Ok(
            "ModuleInfo<WhirlyWind>::Init(void)",
        ),
    ),
    (
        "KnockBackTy__10Projectile",
        Ok(
            "Projectile::KnockBackTy(void)",
        ),
    ),
    (
        "Init__4JeepP11GameObjDesc",
        Ok(
            "Jeep::Init(GameObjDesc *)",
        ),
    ),
    (
        "MKGrass_Update__Fv",
        Ok(
            "MKGrass_Update(void)",
        ),
    ),
    (
        "SaveStates_Get__FPc",
        Ok(
            "SaveStates_Get(char *)",
        ),
    ),
    (
        "DrawDebug__10ScubaFrill",
        Ok(
            "ScubaFrill::DrawDebug(void)",
        ),
    ),
    (
        "GameCamera_GetSavedData__FP19CameraDebugSaveInfo",
        Ok(
            "GameCamera_GetSavedData(CameraDebugSaveInfo *)",
        ),
    ),
    (
        "FloorUnderFeet__Fv",
        Ok(
            "FloorUnderFeet(void)",
        ),
    ),
    (
        "AddVif_MSKPATH3__3DmaUi",
        Ok(
            "Dma::AddVif_MSKPATH3(unsigned int)",
        ),
    ),
    (
        "PipePart_GetPipeNeedingRepairer__Fv",
        Ok(
            "PipePart_GetPipeNeedingRepairer(void)",
        ),
    ),
    (
        "DDACheckpoint_LoadResources__FP8KromeIni",
        Ok(
            "DDACheckpoint_LoadResources(KromeIni *)",
        ),
    ),
    (
        "TransformPoint__4ViewP9IntVectorP6Vector",
        Ok(
            "View::TransformPoint(IntVector *, Vector *)",
        ),
    ),
    (
        "Bilby_LoadResources__Fv",
        Ok(
            "Bilby_LoadResources(void)",
        ),
    ),
    (
        "RunAway__7CaveBat",
        Ok(
            "CaveBat::RunAway(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z17KoalaKidObjective",
        Ok(
            "ModuleInfo<KoalaKidObjective>::Init(void)",
        ),
    ),
    (
        "Defrost__3Sly",
        Ok(
            "Sly::Defrost(void)",
        ),
    ),
    (
        "KissOfDeath__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeath(void)",
        ),
    ),
    (
        "LogicUpdate__5Leech",
        Ok(
            "Leech::LogicUpdate(void)",
        ),
    ),
    (
        "Init__9SpiderWebP11GameObjDesc",
        Ok(
            "SpiderWeb::Init(GameObjDesc *)",
        ),
    ),
    (
        "Tools_IntersectingPoint2D__FP6VectorT0T0T0T0",
        Ok(
            "Tools_IntersectingPoint2D(Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "ModelRender_FS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "fflush",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadTGA__5ImagePUcUi",
        Ok(
            "Image::LoadTGA(unsigned char *, unsigned int)",
        ),
    ),
    (
        "Update__12ThrowingStar",
        Ok(
            "ThrowingStar::Update(void)",
        ),
    ),
    (
        "TurnInit__8ChuteLog",
        Ok(
            "ChuteLog::TurnInit(void)",
        ),
    ),
    (
        "Fly_InitTyFlies__Fv",
        Ok(
            "Fly_InitTyFlies(void)",
        ),
    ),
    (
        "WaitForRun__7CaveBat",
        Ok(
            "CaveBat::WaitForRun(void)",
        ),
    ),
    (
        "Init__8OpalsHud",
        Ok(
            "OpalsHud::Init(void)",
        ),
    ),
    (
        "__malloc_max_sbrked_mem",
        Err(
            InvalidSpecialMethod(
                "malloc_max_sbrked_mem",
            ),
        ),
    ),
    (
        "mkAnimScriptTemplates",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__8RainInit",
        Ok(
            "RainInit::Init(void)",
        ),
    ),
    (
        "Deinit__9AuroraKid",
        Ok(
            "AuroraKid::Deinit(void)",
        ),
    ),
    (
        "CheckCollideWithTy__8WhiteBat",
        Ok(
            "WhiteBat::CheckCollideWithTy(void)",
        ),
    ),
    (
        "Activate__6Portalb",
        Ok(
            "Portal::Activate(bool)",
        ),
    ),
    (
        "File_Close__Fi",
        Ok(
            "File_Close(int)",
        ),
    ),
    (
        "AsFloat__12KromeIniLineiPf",
        Ok(
            "KromeIniLine::AsFloat(int, float *)",
        ),
    ),
    (
        "SurfaceSwim__2Ty",
        Ok(
            "Ty::SurfaceSwim(void)",
        ),
    ),
    (
        "Message__11TriggerPropP9MKMessage",
        Ok(
            "TriggerProp::Message(MKMessage *)",
        ),
    ),
    (
        "BlendToAttack__8MorayEel",
        Ok(
            "MorayEel::BlendToAttack(void)",
        ),
    ),
    (
        "Draw__12DialogPlayer",
        Ok(
            "DialogPlayer::Draw(void)",
        ),
    ),
    (
        "InitDiveBiteToFall__6TyBite",
        Ok(
            "TyBite::InitDiveBiteToFall(void)",
        ),
    ),
    (
        "NearRope__5LassoP6VectorfT1T1",
        Ok(
            "Lasso::NearRope(Vector *, float, Vector *, Vector *)",
        ),
    ),
    (
        "MiniGameB3_Init__Fv",
        Ok(
            "MiniGameB3_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14FishShoalField",
        Ok(
            "ModuleInfo<FishShoalField> virtual table",
        ),
    ),
    (
        "__nw__FUiPciT1",
        Ok(
            "operator new(unsigned int, char *, int, char *)",
        ),
    ),
    (
        "Setup__5CloudP6Vectorf",
        Ok(
            "Cloud::Setup(Vector *, float)",
        ),
    ),
    (
        "MiniGame_C2_Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C2_Deinit(void)",
        ),
    ),
    (
        "FrontEnd_LoadGame_OnExit__Fv",
        Ok(
            "FrontEnd_LoadGame_OnExit(void)",
        ),
    ),
    (
        "IsUnderWater__11FrillLizard",
        Ok(
            "FrillLizard::IsUnderWater(void)",
        ),
    ),
    (
        "Input_GetButtonState__F12InputDevicesiP12InputDevices",
        Ok(
            "Input_GetButtonState(InputDevices, int, InputDevices *)",
        ),
    ),
    (
        "Destroy__14ParticleSystem",
        Ok(
            "ParticleSystem::Destroy(void)",
        ),
    ),
    (
        "ModelRender_CAT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "KissOfDeathDeinit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathDeinit(void)",
        ),
    ),
    (
        "Attack__8LilNeddy",
        Ok(
            "LilNeddy::Attack(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11FrillLizard",
        Ok(
            "ModuleInfo<FrillLizard>::Init(void)",
        ),
    ),
    (
        "LoadLine__8BurnableP12KromeIniLine",
        Ok(
            "Burnable::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Waterfall_Deinit__Fv",
        Ok(
            "Waterfall_Deinit(void)",
        ),
    ),
    (
        "Run__7C3Actor",
        Ok(
            "C3Actor::Run(void)",
        ),
    ),
    (
        "LoadLine__9ShadowBatP12KromeIniLine",
        Ok(
            "ShadowBat::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Alert_CanGoToState__9BadBoonie",
        Ok(
            "BadBoonie::Alert_CanGoToState(void)",
        ),
    ),
    (
        "AddSpin__11SnowGunAmmo",
        Ok(
            "SnowGunAmmo::AddSpin(void)",
        ),
    ),
    (
        "LogicUpdate__8WhiteBat",
        Ok(
            "WhiteBat::LogicUpdate(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11ShatterablePv",
        Ok(
            "ModuleInfo<Shatterable>::ConstructObject(void *)",
        ),
    ),
    (
        "GCT_LoadFloat__FP12KromeIniLinePcPf",
        Ok(
            "GCT_LoadFloat(KromeIniLine *, char *, float *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z16CheckpointStruct",
        Ok(
            "ModuleInfo<CheckpointStruct>::Init(void)",
        ),
    ),
    (
        "DeinitBounceOff__2Ty",
        Ok(
            "Ty::DeinitBounceOff(void)",
        ),
    ),
    (
        "GatherInit__7SnowRoo",
        Ok(
            "SnowRoo::GatherInit(void)",
        ),
    ),
    (
        "UpdatePosition__3EelP6Vectorf",
        Ok(
            "Eel::UpdatePosition(Vector *, float)",
        ),
    ),
    (
        "InitRollFinal__7Boulder",
        Ok(
            "Boulder::InitRollFinal(void)",
        ),
    ),
    (
        "Init__5RhinoP11GameObjDesc",
        Ok(
            "Rhino::Init(GameObjDesc *)",
        ),
    ),
    (
        "CalcDetailLevel__10GameObject",
        Ok(
            "GameObject::CalcDetailLevel(void)",
        ),
    ),
    (
        "SpikeyIce_Update__Fv",
        Ok(
            "SpikeyIce_Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13CritterField2Pv",
        Ok(
            "ModuleInfo<CritterField2>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__14ShadowBatSonarP11GameObjDesc",
        Ok(
            "ShadowBatSonar::Init(GameObjDesc *)",
        ),
    ),
    (
        "CheckForBoomerangs__4Gate",
        Ok(
            "Gate::CheckForBoomerangs(void)",
        ),
    ),
    (
        "Init__9FireWorksP6Vector",
        Ok(
            "FireWorks::Init(Vector *)",
        ),
    ),
    (
        "UnderWaterAttackTransition__2Ty",
        Ok(
            "Ty::UnderWaterAttackTransition(void)",
        ),
    ),
    (
        "Init__10TimeAttackP11GameObjDesc",
        Ok(
            "TimeAttack::Init(GameObjDesc *)",
        ),
    ),
    (
        "Throw__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Throw(void)",
        ),
    ),
    (
        "_motionVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegSetDefaultPtsGap",
        Err(
            NotMangled,
        ),
    ),
    (
        "_10NinjaGecko$anims",
        Ok(
            "NinjaGecko::anims",
        ),
    ),
    (
        "GetElementType__9LevelData11LevelNumber",
        Ok(
            "LevelData::GetElementType(LevelNumber)",
        ),
    ),
    (
        "SetAnims__16BoomerangManagerP21BoomerangManagerAnims",
        Ok(
            "BoomerangManager::SetAnims(BoomerangManagerAnims *)",
        ),
    ),
    (
        "Draw__14StalactiteTrap",
        Ok(
            "StalactiteTrap::Draw(void)",
        ),
    ),
    (
        "_5Lenny$eventRightFoot",
        Ok(
            "Lenny::eventRightFoot",
        ),
    ),
    (
        "GCT_ClearCollisionResult__FP15CollisionResult",
        Ok(
            "GCT_ClearCollisionResult(CollisionResult *)",
        ),
    ),
    (
        "descr_cast__H1ZP16StaticFXPropDesc_P16MKPropDescriptor_X01",
        Ok(
            "StaticFXPropDesc * descr_cast<StaticFXPropDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Respawn__7Coconut",
        Ok(
            "Coconut::Respawn(void)",
        ),
    ),
    (
        "GetWidth__8Material",
        Ok(
            "Material::GetWidth(void)",
        ),
    ),
    (
        "CreateDebugMenus__7MKWater",
        Ok(
            "MKWater::CreateDebugMenus(void)",
        ),
    ),
    (
        "Hud_ShowBilbies__Fv",
        Ok(
            "Hud_ShowBilbies(void)",
        ),
    ),
    (
        "MKShadowVU1_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnDustEffect__10FootEffectP6VectorT1P14BoundingVolumeffT1",
        Ok(
            "FootEffect::SpawnDustEffect(Vector *, Vector *, BoundingVolume *, float, float, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8DiveRing",
        Ok(
            "ModuleInfo<DiveRing> virtual table",
        ),
    ),
    (
        "GameCamera_UseElevatorCamera__Fb",
        Ok(
            "GameCamera_UseElevatorCamera(bool)",
        ),
    ),
    (
        "Load__20StaticPropDescriptorP8KromeIni",
        Ok(
            "StaticPropDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "OmniLight_FindNearestGroup__FP14OmniLightSceneP6VectorfPP9OmniLighti",
        Ok(
            "OmniLight_FindNearestGroup(OmniLightScene *, Vector *, float, OmniLight **, int)",
        ),
    ),
    (
        "BackOff__8PubeCrabb",
        Ok(
            "PubeCrab::BackOff(bool)",
        ),
    ),
    (
        "CalculateShadowSunPos__2Ty",
        Ok(
            "Ty::CalculateShadowSunPos(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10SpiderDirt",
        Ok(
            "ModuleInfo<SpiderDirt>::Init(void)",
        ),
    ),
    (
        "EnemyCamera_TryNewEnemy__10GameCameraP5Model",
        Ok(
            "GameCamera::EnemyCamera_TryNewEnemy(Model *)",
        ),
    ),
    (
        "SetOsdConfigParam2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChargeInit__8LilNeddy",
        Ok(
            "LilNeddy::ChargeInit(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_Draw__Fv",
        Ok(
            "PauseScreen_GameInfo_Draw(void)",
        ),
    ),
    (
        "Update__8Platform",
        Ok(
            "Platform::Update(void)",
        ),
    ),
    (
        "isnanf",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructVertexCache__11MKWaterPropP14Water_TriStripP16WaterStripVertexP16WaterStripNormalP12WaterStripUVP15WaterStripColorP6VectorT6T6Pf",
        Ok(
            "MKWaterProp::ConstructVertexCache(Water_TriStrip *, WaterStripVertex *, WaterStripNormal *, WaterStripUV *, WaterStripColor *, Vector *, Vector *, Vector *, float *)",
        ),
    ),
    (
        "LoadDone__18SpeedboatObjective",
        Ok(
            "SpeedboatObjective::LoadDone(void)",
        ),
    ),
    (
        "DeinitBrake__7BushPig",
        Ok(
            "BushPig::DeinitBrake(void)",
        ),
    ),
    (
        "Shatterable_IsMember__FP16MKPropDescriptor",
        Ok(
            "Shatterable_IsMember(MKPropDescriptor *)",
        ),
    ),
    (
        "ModelRender_ACExyS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddIceBlock__14IceBlockStructP6VectorT1PP14IceBlockStruct",
        Ok(
            "IceBlockStruct::AddIceBlock(Vector *, Vector *, IceBlockStruct **)",
        ),
    ),
    (
        "SetProjection__4Viewfff",
        Ok(
            "View::SetProjection(float, float, float)",
        ),
    ),
    (
        "Reset__8Bull_DDAP18MovementDescriptor",
        Ok(
            "Bull_DDA::Reset(MovementDescriptor *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12FlameThrowerPv",
        Ok(
            "ModuleInfo<FlameThrower>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Update(void)",
        ),
    ),
    (
        "Speaking__13TreasureChest",
        Ok(
            "TreasureChest::Speaking(void)",
        ),
    ),
    (
        "_iDisableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7FarlappPv",
        Ok(
            "ModuleInfo<Farlapp>::ConstructObject(void *)",
        ),
    ),
    (
        "Message__9AuroraKidP9MKMessage",
        Ok(
            "AuroraKid::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$15KingFisherField",
        Ok(
            "KingFisherField virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z17SynkerFrillLizard",
        Ok(
            "ModuleInfo<SynkerFrillLizard>::Init(void)",
        ),
    ),
    (
        "CalculateNodeMatrix__9Animationi",
        Ok(
            "Animation::CalculateNodeMatrix(int)",
        ),
    ),
    (
        "sceScfGetAspect",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifSyncIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "OmniLight_CreateLight__FP14OmniLightSceneP6VectorP19OmniLightParameters",
        Ok(
            "OmniLight_CreateLight(OmniLightScene *, Vector *, OmniLightParameters *)",
        ),
    ),
    (
        "FileSys_SetExistInterceptHandler__FPFPcPiPi_b",
        Ok(
            "FileSys_SetExistInterceptHandler(bool (*)(char *, int *, int *))",
        ),
    ),
    (
        "IsTyVisible__6Crikey",
        Ok(
            "Crikey::IsTyVisible(void)",
        ),
    ),
    (
        "Update__7LilyPad",
        Ok(
            "LilyPad::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11Collapsible",
        Ok(
            "ModuleInfo<Collapsible> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8BurnablePv",
        Ok(
            "ModuleInfo<Burnable>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__4Jeep",
        Ok(
            "Jeep::Deinit(void)",
        ),
    ),
    (
        "_vt$7BeerCan",
        Ok(
            "BeerCan virtual table",
        ),
    ),
    (
        "UpdateLocalToWorldMatrix__5Neddy",
        Ok(
            "Neddy::UpdateLocalToWorldMatrix(void)",
        ),
    ),
    (
        "FindClosest__15WaterTankStructP6Vectorf",
        Ok(
            "WaterTankStruct::FindClosest(Vector *, float)",
        ),
    ),
    (
        "DrawRangTrail__FPt13CircularQueue1Z10TrailPointP6Vector",
        Ok(
            "DrawRangTrail(CircularQueue<TrailPoint> *, Vector *)",
        ),
    ),
    (
        "Transpose__6MatrixP6Matrix",
        Ok(
            "Matrix::Transpose(Matrix *)",
        ),
    ),
    (
        "Draw__6Maurie",
        Ok(
            "Maurie::Draw(void)",
        ),
    ),
    (
        "_16CaveBatObjective$bActivated",
        Ok(
            "CaveBatObjective::bActivated",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9ShoalFishPv",
        Ok(
            "ModuleInfo<ShoalFish>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__14BoomerangTrailPcf",
        Ok(
            "BoomerangTrail::Init(char *, float)",
        ),
    ),
    (
        "LensFlare_Update__Fv",
        Ok(
            "LensFlare_Update(void)",
        ),
    ),
    (
        "GetTextSegment__4FontPPcfP15TextSegmentInfo",
        Ok(
            "Font::GetTextSegment(char **, float, TextSegmentInfo *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8FireDrumPv",
        Ok(
            "ModuleInfo<FireDrum>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15WaterTankStruct",
        Ok(
            "ModuleInfo<WaterTankStruct> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z16CheckpointStructPv",
        Ok(
            "ModuleInfo<CheckpointStruct>::ConstructObject(void *)",
        ),
    ),
    (
        "HeatFlare_Unlock__Fv",
        Ok(
            "HeatFlare_Unlock(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Tick",
        Ok(
            "ModuleInfo<Tick> virtual table",
        ),
    ),
    (
        "ShockWave__6Fluffy",
        Ok(
            "Fluffy::ShockWave(void)",
        ),
    ),
    (
        "Message__8KoalaKidP9MKMessage",
        Ok(
            "KoalaKid::Message(MKMessage *)",
        ),
    ),
    (
        "DeinitDiveBite__6TyBite",
        Ok(
            "TyBite::DeinitDiveBite(void)",
        ),
    ),
    (
        "File_InitSystem__F16FileServerSourcePcT1",
        Ok(
            "File_InitSystem(FileServerSource, char *, char *)",
        ),
    ),
    (
        "BackOffInit__4Croc",
        Ok(
            "Croc::BackOffInit(void)",
        ),
    ),
    (
        "Jump__12BunyipStruct",
        Ok(
            "BunyipStruct::Jump(void)",
        ),
    ),
    (
        "DestroyParticle__14ParticleSystemP8ParticlePP13ParticleChunk",
        Ok(
            "ParticleSystem::DestroyParticle(Particle *, ParticleChunk **)",
        ),
    ),
    (
        "AlignToGround__14WaterSlideData",
        Ok(
            "WaterSlideData::AlignToGround(void)",
        ),
    ),
    (
        "sceDevctl",
        Err(
            NotMangled,
        ),
    ),
    (
        "CaveBatObjective_Completed__Fv",
        Ok(
            "CaveBatObjective_Completed(void)",
        ),
    ),
    (
        "Sound_UnloadBank",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__12EnemySpawner",
        Ok(
            "EnemySpawner::LoadDone(void)",
        ),
    ),
    (
        "Message__23PerimeterCheckObjectiveP9MKMessage",
        Ok(
            "PerimeterCheckObjective::Message(MKMessage *)",
        ),
    ),
    (
        "gLightning",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddSpin__12ThrowingStar",
        Ok(
            "ThrowingStar::AddSpin(void)",
        ),
    ),
    (
        "Turtle_MaxTurtles",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7SnowGun$animFire",
        Ok(
            "SnowGun::animFire",
        ),
    ),
    (
        "_vt$12CritterDesc2",
        Ok(
            "CritterDesc2 virtual table",
        ),
    ),
    (
        "PE_CanSpray_LoadResources__Fv",
        Ok(
            "PE_CanSpray_LoadResources(void)",
        ),
    ),
    (
        "ShowPropInit__12DialogEffect",
        Ok(
            "DialogEffect::ShowPropInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Lenny",
        Ok(
            "ModuleInfo<Lenny> virtual table",
        ),
    ),
    (
        "Deinit__4Drum",
        Ok(
            "Drum::Deinit(void)",
        ),
    ),
    (
        "Sound_SetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitLearnToDive__2Ty",
        Ok(
            "Ty::DeinitLearnToDive(void)",
        ),
    ),
    (
        "ParticleSystemRender_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeathInit__11RhinoGround",
        Ok(
            "RhinoGround::DeathInit(void)",
        ),
    ),
    (
        "bDrawCheatLines",
        Err(
            NotMangled,
        ),
    ),
    (
        "BeerAttackInit__5Skink",
        Ok(
            "Skink::BeerAttackInit(void)",
        ),
    ),
    (
        "Deinit__6Spline",
        Ok(
            "Spline::Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$pMatRope",
        Ok(
            "global constructors keyed to pMatRope",
        ),
    ),
    (
        "StartFlyInit__5Roach",
        Ok(
            "Roach::StartFlyInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10SynkerFrog",
        Ok(
            "ModuleInfo<SynkerFrog> virtual table",
        ),
    ),
    (
        "Heap_EnableLogging",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadVUStaticData__11MKWaterProp",
        Ok(
            "MKWaterProp::UploadVUStaticData(void)",
        ),
    ),
    (
        "Game_Init__Fv",
        Ok(
            "Game_Init(void)",
        ),
    ),
    (
        "CruiseState__9ShoalFish",
        Ok(
            "ShoalFish::CruiseState(void)",
        ),
    ),
    (
        "BiteTrail_Init__Fv",
        Ok(
            "BiteTrail_Init(void)",
        ),
    ),
    (
        "Crate_LoadResources__FP8KromeIni",
        Ok(
            "Crate_LoadResources(KromeIni *)",
        ),
    ),
    (
        "InitHeadStuckInFloor__2Ty",
        Ok(
            "Ty::InitHeadStuckInFloor(void)",
        ),
    ),
    (
        "StunnedInit__9Barracuda",
        Ok(
            "Barracuda::StunnedInit(void)",
        ),
    ),
    (
        "GetBestPointDot__15SafePointResultP6VectorT1",
        Ok(
            "SafePointResult::GetBestPointDot(Vector *, Vector *)",
        ),
    ),
    (
        "_vt$5Torch",
        Ok(
            "Torch virtual table",
        ),
    ),
    (
        "gpTraceExPtr",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__7C3Actor",
        Ok(
            "C3Actor::Reset(void)",
        ),
    ),
    (
        "Update__7SnowGun",
        Ok(
            "SnowGun::Update(void)",
        ),
    ),
    (
        "Reset__7KenOath",
        Ok(
            "KenOath::Reset(void)",
        ),
    ),
    (
        "ChargeRecovery__8LilNeddy",
        Ok(
            "LilNeddy::ChargeRecovery(void)",
        ),
    ),
    (
        "Idle__8SignPost",
        Ok(
            "SignPost::Idle(void)",
        ),
    ),
    (
        "TimeAttack_Event__F15TimeAttackEvent",
        Ok(
            "TimeAttack_Event(TimeAttackEvent)",
        ),
    ),
    (
        "_vt$12AquarangProp",
        Ok(
            "AquarangProp virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8PipePart",
        Ok(
            "ModuleInfo<PipePart> virtual table",
        ),
    ),
    (
        "BlockRecoil__6Muddie",
        Ok(
            "Muddie::BlockRecoil(void)",
        ),
    ),
    (
        "_vt$17CritterField2Desc",
        Ok(
            "CritterField2Desc virtual table",
        ),
    ),
    (
        "descr_cast__H1ZP8BirdDesc_P16MKPropDescriptor_X01",
        Ok(
            "BirdDesc * descr_cast<BirdDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Init__11BunyipElderP11GameObjDesc",
        Ok(
            "BunyipElder::Init(GameObjDesc *)",
        ),
    ),
    (
        "Tools_CollideXZ__FP6VectorT0T0T0ffff",
        Ok(
            "Tools_CollideXZ(Vector *, Vector *, Vector *, Vector *, float, float, float, float)",
        ),
    ),
    (
        "_MKMem_Alloc__FiiPci",
        Ok(
            "_MKMem_Alloc(int, int, char *, int)",
        ),
    ),
    (
        "Draw__5Yabby",
        Ok(
            "Yabby::Draw(void)",
        ),
    ),
    (
        "Update__14ShadowBatSonar",
        Ok(
            "ShadowBatSonar::Update(void)",
        ),
    ),
    (
        "Tools_SCurve__Ff",
        Ok(
            "Tools_SCurve(float)",
        ),
    ),
    (
        "UpdateDynamicAttach__13PlatformRiderP15CollisionResultP10GameObject",
        Ok(
            "PlatformRider::UpdateDynamicAttach(CollisionResult *, GameObject *)",
        ),
    ),
    (
        "Animation_UnpackTemplate__FP13AnimationData",
        Ok(
            "Animation_UnpackTemplate(AnimationData *)",
        ),
    ),
    (
        "CreateMpegTarget__8MaterialPcPvii",
        Ok(
            "Material::CreateMpegTarget(char *, void *, int, int)",
        ),
    ),
    (
        "Deinit__2Ty",
        Ok(
            "Ty::Deinit(void)",
        ),
    ),
    (
        "IsTyVisible__10SnowSpider",
        Ok(
            "SnowSpider::IsTyVisible(void)",
        ),
    ),
    (
        "Update__11BoulderTrap",
        Ok(
            "BoulderTrap::Update(void)",
        ),
    ),
    (
        "_7MKWater$minU",
        Ok(
            "MKWater::minU",
        ),
    ),
    (
        "Draw__11BurningTree",
        Ok(
            "BurningTree::Draw(void)",
        ),
    ),
    (
        "InitNormal__7Boulder",
        Ok(
            "Boulder::InitNormal(void)",
        ),
    ),
    (
        "FirstPerson_Init__10GameCamera",
        Ok(
            "GameCamera::FirstPerson_Init(void)",
        ),
    ),
    (
        "Boomerang_FindClosest__FP6Vector",
        Ok(
            "Boomerang_FindClosest(Vector *)",
        ),
    ),
    (
        "LoadDone__6Friend",
        Ok(
            "Friend::LoadDone(void)",
        ),
    ),
    (
        "__umoddi3",
        Err(
            InvalidSpecialMethod(
                "umoddi3",
            ),
        ),
    ),
    (
        "MKMemoryCard_OpComplete__Fi",
        Ok(
            "MKMemoryCard_OpComplete(int)",
        ),
    ),
    (
        "GetOffset__12MKAnimScript",
        Ok(
            "MKAnimScript::GetOffset(void)",
        ),
    ),
    (
        "Deinit__7Coconut",
        Ok(
            "Coconut::Deinit(void)",
        ),
    ),
    (
        "__malloc_update_mallinfo",
        Err(
            InvalidSpecialMethod(
                "malloc_update_mallinfo",
            ),
        ),
    ),
    (
        "pCounterModelRender1st",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11ScrubTurkeyPv",
        Ok(
            "ModuleInfo<ScrubTurkey>::ConstructObject(void *)",
        ),
    ),
    (
        "FindOpalCollector__Fv",
        Ok(
            "FindOpalCollector(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Emu",
        Ok(
            "ModuleInfo<Emu>::Init(void)",
        ),
    ),
    (
        "lseek",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsTyWithinChaseArea__4Bull",
        Ok(
            "Bull::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Draw__7Boulder",
        Ok(
            "Boulder::Draw(void)",
        ),
    ),
    (
        "Init__15Tools_WayPoints",
        Ok(
            "Tools_WayPoints::Init(void)",
        ),
    ),
    (
        "ModelRender_AS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "PatrolAreaInit__11RhinoGround",
        Ok(
            "RhinoGround::PatrolAreaInit(void)",
        ),
    ),
    (
        "Collecting__11BonusPickup",
        Ok(
            "BonusPickup::Collecting(void)",
        ),
    ),
    (
        "bShearsLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tf8bad_cast",
        Ok(
            "bad_cast type_info function",
        ),
    ),
    (
        "RunInit__3Sly",
        Ok(
            "Sly::RunInit(void)",
        ),
    ),
    (
        "CameraOverrideDir_End__Fv",
        Ok(
            "CameraOverrideDir_End(void)",
        ),
    ),
    (
        "__fdlib_version",
        Err(
            InvalidSpecialMethod(
                "fdlib_version",
            ),
        ),
    ),
    (
        "CheckForBite__8Sentinel",
        Ok(
            "Sentinel::CheckForBite(void)",
        ),
    ),
    (
        "LoadLine__9AuroraKidP12KromeIniLine",
        Ok(
            "AuroraKid::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$16FinishLineStruct",
        Ok(
            "FinishLineStruct virtual table",
        ),
    ),
    (
        "Update__10DDASession",
        Ok(
            "DDASession::Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Bouncer_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Bouncer_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard::LoadDone(void)",
        ),
    ),
    (
        "Message__8SignPostP9MKMessage",
        Ok(
            "SignPost::Message(MKMessage *)",
        ),
    ),
    (
        "bCheatCollectAllOpals",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateRotationMatrix__8Platform",
        Ok(
            "Platform::UpdateRotationMatrix(void)",
        ),
    ),
    (
        "_8MorayEel$nNoseTipRef",
        Ok(
            "MorayEel::nNoseTipRef",
        ),
    ),
    (
        "Stunned__9Barracuda",
        Ok(
            "Barracuda::Stunned(void)",
        ),
    ),
    (
        "Message__3BatP9MKMessage",
        Ok(
            "Bat::Message(MKMessage *)",
        ),
    ),
    (
        "sceDmaSendN",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__13PickupCounter",
        Ok(
            "PickupCounter::Reset(void)",
        ),
    ),
    (
        "FirstPersonState__5TyFSMi",
        Ok(
            "TyFSM::FirstPersonState(int)",
        ),
    ),
    (
        "Deinit__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::Deinit(void)",
        ),
    ),
    (
        "TimeTrial_GetTimer__Fv",
        Ok(
            "TimeTrial_GetTimer(void)",
        ),
    ),
    (
        "LoadLine__16FinishLineStructP12KromeIniLine",
        Ok(
            "FinishLineStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LogicUpdate__8PubeCrab",
        Ok(
            "PubeCrab::LogicUpdate(void)",
        ),
    ),
    (
        "Elevator_Update__10GameCamera",
        Ok(
            "GameCamera::Elevator_Update(void)",
        ),
    ),
    (
        "Update_DamageHero__10WhirlyWind",
        Ok(
            "WhirlyWind::Update_DamageHero(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Load__12PlatformDescP8KromeIni",
        Ok(
            "global constructors keyed to PlatformDesc::Load(KromeIni *)",
        ),
    ),
    (
        "UpdateLight__10LavaBurnerf",
        Ok(
            "LavaBurner::UpdateLight(float)",
        ),
    ),
    (
        "isceSifSetDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__14ParticleSystem",
        Ok(
            "ParticleSystem::Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11DropPontoon",
        Ok(
            "ModuleInfo<DropPontoon> virtual table",
        ),
    ),
    (
        "_SyscallEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "Normalise__12QuatRotationP12QuatRotation",
        Ok(
            "QuatRotation::Normalise(QuatRotation *)",
        ),
    ),
    (
        "ModelRender_ACWTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12EnemySpawnerPv",
        Ok(
            "ModuleInfo<EnemySpawner>::ConstructObject(void *)",
        ),
    ),
    (
        "CameraOverride_Line__FP12KromeIniLineP26CameraOverrideLoadInfoBase",
        Ok(
            "CameraOverride_Line(KromeIniLine *, CameraOverrideLoadInfoBase *)",
        ),
    ),
    (
        "StoreResult__15CollisionObjectP15CollisionResultP6Vector",
        Ok(
            "CollisionObject::StoreResult(CollisionResult *, Vector *)",
        ),
    ),
    (
        "Update__6Camera12InputDevicesP6Vector",
        Ok(
            "Camera::Update(InputDevices, Vector *)",
        ),
    ),
    (
        "SetColour__6UITextP6Vector",
        Ok(
            "UIText::SetColour(Vector *)",
        ),
    ),
    (
        "IsActive__14LevelObjective",
        Ok(
            "LevelObjective::IsActive(void)",
        ),
    ),
    (
        "LoadLine__16WayPointLoadInfoP12KromeIniLineb",
        Ok(
            "WayPointLoadInfo::LoadLine(KromeIniLine *, bool)",
        ),
    ),
    (
        "_GLOBAL_$F$__default_terminate",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "GLOBAL_",
            ),
        ),
    ),
    (
        "_copyrightExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "Rotate__5LeechP6Vector",
        Ok(
            "Leech::Rotate(Vector *)",
        ),
    ),
    (
        "Wake_Add__FPP10WakeStructP6VectorT1",
        Ok(
            "Wake_Add(WakeStruct **, Vector *, Vector *)",
        ),
    ),
    (
        "Draw__3Ice",
        Ok(
            "Ice::Draw(void)",
        ),
    ),
    (
        "ModelRender_AC_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "IntroFmv_Draw__Fv",
        Ok(
            "IntroFmv_Draw(void)",
        ),
    ),
    (
        "Fall__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Fall(void)",
        ),
    ),
    (
        "Draw__19EmuRoundupObjective",
        Ok(
            "EmuRoundupObjective::Draw(void)",
        ),
    ),
    (
        "overrideModuleName",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTU__15WaterfallStructP6VectorT1PfT1",
        Ok(
            "WaterfallStruct::GetTU(Vector *, Vector *, float *, Vector *)",
        ),
    ),
    (
        "_GLOBAL_$I$bStopwatchLoaded",
        Ok(
            "global constructors keyed to bStopwatchLoaded",
        ),
    ),
    (
        "InitFlip__5Rhino",
        Ok(
            "Rhino::InitFlip(void)",
        ),
    ),
    (
        "HeadingForLand__12TurtleStruct",
        Ok(
            "TurtleStruct::HeadingForLand(void)",
        ),
    ),
    (
        "_vt$9OpalCrate",
        Ok(
            "OpalCrate virtual table",
        ),
    ),
    (
        "Damageable_LoadResources__FP8KromeIni",
        Ok(
            "Damageable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$17__array_type_info",
        Ok(
            "__array_type_info virtual table",
        ),
    ),
    (
        "Animation_InitModule__Fv",
        Ok(
            "Animation_InitModule(void)",
        ),
    ),
    (
        "ShadowBat_LoadResources__FP8KromeIni",
        Ok(
            "ShadowBat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "bCheatCollectAllCogs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__11SpinningLogP9MKMessage",
        Ok(
            "SpinningLog::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__13UniformSpline",
        Ok(
            "UniformSpline::Reset(void)",
        ),
    ),
    (
        "TestFlag__11GameObjDesc16GameObjDescFlags",
        Ok(
            "GameObjDesc::TestFlag(GameObjDescFlags)",
        ),
    ),
    (
        "_vt$6Dennis",
        Ok(
            "Dennis virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10Frostyrang",
        Ok(
            "ModuleInfo<Frostyrang> virtual table",
        ),
    ),
    (
        "SynkerFrog_LoadResources__FP8KromeIni",
        Ok(
            "SynkerFrog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Find__4FontPc",
        Ok(
            "Font::Find(char *)",
        ),
    ),
    (
        "Move__5Leech",
        Ok(
            "Leech::Move(void)",
        ),
    ),
    (
        "Deinit__8FireDrum",
        Ok(
            "FireDrum::Deinit(void)",
        ),
    ),
    (
        "LoadResources__2Ty",
        Ok(
            "Ty::LoadResources(void)",
        ),
    ),
    (
        "Charge__5Rufusb",
        Ok(
            "Rufus::Charge(bool)",
        ),
    ),
    (
        "Init__5NeddyP11GameObjDesc",
        Ok(
            "Neddy::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__14FishShoalFieldP11GameObjDesc",
        Ok(
            "FishShoalField::Init(GameObjDesc *)",
        ),
    ),
    (
        "Message__13ShadowBatPipeP9MKMessage",
        Ok(
            "ShadowBatPipe::Message(MKMessage *)",
        ),
    ),
    (
        "CheckForHit__12EnemySpawnerP6Vectorf",
        Ok(
            "EnemySpawner::CheckForHit(Vector *, float)",
        ),
    ),
    (
        "SetState__7AntHill12AntHillState",
        Ok(
            "AntHill::SetState(AntHillState)",
        ),
    ),
    (
        "GetDesc__8SignPost",
        Ok(
            "SignPost::GetDesc(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4DrumPv",
        Ok(
            "ModuleInfo<Drum>::ConstructObject(void *)",
        ),
    ),
    (
        "GetVelocity__13UniformSplinef",
        Ok(
            "UniformSpline::GetVelocity(float)",
        ),
    ),
    (
        "Set__9Animationf",
        Ok(
            "Animation::Set(float)",
        ),
    ),
    (
        "_realloc_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitBiteGrowl__6TyBite",
        Ok(
            "TyBite::DeinitBiteGrowl(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_10TumbleWeed$desc",
        Ok(
            "global constructors keyed to TumbleWeed::desc",
        ),
    ),
    (
        "_GLOBAL_$I$GasJet_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to GasJet_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_4Font$initialised",
        Ok(
            "Font::initialised",
        ),
    ),
    (
        "Breakout__3Emu",
        Ok(
            "Emu::Breakout(void)",
        ),
    ),
    (
        "SetBilbies__8GameDatai",
        Ok(
            "GameData::SetBilbies(int)",
        ),
    ),
    (
        "MiniGame_C2_GetSnowGunFrontXZ__Fv",
        Ok(
            "MiniGame_C2_GetSnowGunFrontXZ(void)",
        ),
    ),
    (
        "SetSubState__5Ringo14RingoSubStates",
        Ok(
            "Ringo::SetSubState(RingoSubStates)",
        ),
    ),
    (
        "ResetZoom__12ZoomerangHud",
        Ok(
            "ZoomerangHud::ResetZoom(void)",
        ),
    ),
    (
        "strncasecmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "_Exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__7Wallaby",
        Ok(
            "Wallaby::Draw(void)",
        ),
    ),
    (
        "Message__16CaveBatObjectiveP9MKMessage",
        Ok(
            "CaveBatObjective::Message(MKMessage *)",
        ),
    ),
    (
        "UpdatePosition__3BatP6Vectorf",
        Ok(
            "Bat::UpdatePosition(Vector *, float)",
        ),
    ),
    (
        "GetDesc__14MobilePlatform",
        Ok(
            "MobilePlatform::GetDesc(void)",
        ),
    ),
    (
        "Thrown__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Thrown(void)",
        ),
    ),
    (
        "RefPointExists__5ModelPcPi",
        Ok(
            "Model::RefPointExists(char *, int *)",
        ),
    ),
    (
        "_iWakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__10MKGrassGen",
        Ok(
            "MKGrassGen::Draw(void)",
        ),
    ),
    (
        "RobotEffect_Update__10GameCamera",
        Ok(
            "GameCamera::RobotEffect_Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6BurnerPv",
        Ok(
            "ModuleInfo<Burner>::ConstructObject(void *)",
        ),
    ),
    (
        "_GLOBAL_$I$_13GuideParticle$gateTimeOutCounter",
        Ok(
            "global constructors keyed to GuideParticle::gateTimeOutCounter",
        ),
    ),
    (
        "_8Material$pRenderMats",
        Ok(
            "Material::pRenderMats",
        ),
    ),
    (
        "IdleInit__10WarpFlower",
        Ok(
            "WarpFlower::IdleInit(void)",
        ),
    ),
    (
        "LoadLine__29CameraOverrideTriggerLoadInfoP12KromeIniLine",
        Ok(
            "CameraOverrideTriggerLoadInfo::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10CuttleFish",
        Ok(
            "ModuleInfo<CuttleFish> virtual table",
        ),
    ),
    (
        "SetState__10Projectile15ProjectileState",
        Ok(
            "Projectile::SetState(ProjectileState)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7AntHill",
        Ok(
            "ModuleInfo<AntHill>::Init(void)",
        ),
    ),
    (
        "Load__12DialogPlayerPcP17dpActorInfoStructi",
        Ok(
            "DialogPlayer::Load(char *, dpActorInfoStruct *, int)",
        ),
    ),
    (
        "StopTime__8GameData",
        Ok(
            "GameData::StopTime(void)",
        ),
    ),
    (
        "GetNmbrOfNodes__9Animation",
        Ok(
            "Animation::GetNmbrOfNodes(void)",
        ),
    ),
    (
        "__tif",
        Ok(
            "float type_info node",
        ),
    ),
    (
        "Init__17SynkerFrillLizardP11GameObjDesc",
        Ok(
            "SynkerFrillLizard::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateSteeringAnim__14WaterSlideDataP6MKAnim",
        Ok(
            "WaterSlideData::UpdateSteeringAnim(MKAnim *)",
        ),
    ),
    (
        "Update__7MKWater",
        Ok(
            "MKWater::Update(void)",
        ),
    ),
    (
        "_vt$3Rex",
        Ok(
            "Rex virtual table",
        ),
    ),
    (
        "Deinit__24GCT_WaypointPlaneManager",
        Ok(
            "GCT_WaypointPlaneManager::Deinit(void)",
        ),
    ),
    (
        "TweenNode__9Animationffi",
        Ok(
            "Animation::TweenNode(float, float, int)",
        ),
    ),
    (
        "SetLight__11DirectLightiP6VectorT2",
        Ok(
            "DirectLight::SetLight(int, Vector *, Vector *)",
        ),
    ),
    (
        "ProbeTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "AllocateVRamPage__7Texture",
        Ok(
            "Texture::AllocateVRamPage(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14StalactiteTrapPv",
        Ok(
            "ModuleInfo<StalactiteTrap>::ConstructObject(void *)",
        ),
    ),
    (
        "_lo0bits",
        Err(
            NotMangled,
        ),
    ),
    (
        "Flinch__6Groper",
        Ok(
            "Groper::Flinch(void)",
        ),
    ),
    (
        "UpdateLogic__4Moth",
        Ok(
            "Moth::UpdateLogic(void)",
        ),
    ),
    (
        "Init__20SpecialPickUpMessage",
        Ok(
            "SpecialPickUpMessage::Init(void)",
        ),
    ),
    (
        "Init__10SoundEventP8KromeIniP12KromeIniLine",
        Ok(
            "SoundEvent::Init(KromeIni *, KromeIniLine *)",
        ),
    ),
    (
        "Windmill_Init__Fv",
        Ok(
            "Windmill_Init(void)",
        ),
    ),
    (
        "Collision_GetStats__FP14CollisionStats",
        Ok(
            "Collision_GetStats(CollisionStats *)",
        ),
    ),
    (
        "_5Lenny$anims",
        Ok(
            "Lenny::anims",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8LilNeddyPv",
        Ok(
            "ModuleInfo<LilNeddy>::ConstructObject(void *)",
        ),
    ),
    (
        "Boomerang_pDescriptors",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Pontoon_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Pontoon_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$MetalSpikes_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to MetalSpikes_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7SnowRoo",
        Ok(
            "ModuleInfo<SnowRoo> virtual table",
        ),
    ),
    (
        "Idle__5Torch",
        Ok(
            "Torch::Idle(void)",
        ),
    ),
    (
        "_14CameraOverride$pCamDesc",
        Ok(
            "CameraOverride::pCamDesc",
        ),
    ),
    (
        "Deinit__11Kaboomerang",
        Ok(
            "Kaboomerang::Deinit(void)",
        ),
    ),
    (
        "bushPig",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tfi",
        Ok(
            "int type_info function",
        ),
    ),
    (
        "Update__4Lava",
        Ok(
            "Lava::Update(void)",
        ),
    ),
    (
        "SeaMine_GetExplodingList__Fv",
        Ok(
            "SeaMine_GetExplodingList(void)",
        ),
    ),
    (
        "_csc_storeRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraOverrideTopDown_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideTopDown_Line(KromeIniLine *)",
        ),
    ),
    (
        "Startled__3Emu",
        Ok(
            "Emu::Startled(void)",
        ),
    ),
    (
        "Move__7C3ActorP6Vectorb",
        Ok(
            "C3Actor::Move(Vector *, bool)",
        ),
    ),
    (
        "Patrol__10SnowSpider",
        Ok(
            "SnowSpider::Patrol(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Bull",
        Ok(
            "ModuleInfo<Bull>::Init(void)",
        ),
    ),
    (
        "Underwater_Update__10GameCamera",
        Ok(
            "GameCamera::Underwater_Update(void)",
        ),
    ),
    (
        "GameCamera_RestoreDefaultProjection__Fv",
        Ok(
            "GameCamera_RestoreDefaultProjection(void)",
        ),
    ),
    (
        "SetState__15WaterTankStructi",
        Ok(
            "WaterTankStruct::SetState(int)",
        ),
    ),
    (
        "PauseScreen_InitLevel__Fv",
        Ok(
            "PauseScreen_InitLevel(void)",
        ),
    ),
    (
        "Timer_SetDHMSInSeconds__FP9TimerInfoi",
        Ok(
            "Timer_SetDHMSInSeconds(TimerInfo *, int)",
        ),
    ),
    (
        "Message__6ShazzaP9MKMessage",
        Ok(
            "Shazza::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Sly",
        Ok(
            "ModuleInfo<Sly>::Init(void)",
        ),
    ),
    (
        "Load__19RedButtonDescriptorP8KromeIni",
        Ok(
            "RedButtonDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "Update__11FaderObject",
        Ok(
            "FaderObject::Update(void)",
        ),
    ),
    (
        "_vt$10GameObject",
        Ok(
            "GameObject virtual table",
        ),
    ),
    (
        "Init__t10ObjectPool1ZP11BaseCritterPci",
        Ok(
            "ObjectPool<BaseCritter *>::Init(char *, int)",
        ),
    ),
    (
        "Use__8MaterialP8Material",
        Ok(
            "Material::Use(Material *)",
        ),
    ),
    (
        "_7SnowGun$turretNode",
        Ok(
            "SnowGun::turretNode",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14TrapdoorSpiderPv",
        Ok(
            "ModuleInfo<TrapdoorSpider>::ConstructObject(void *)",
        ),
    ),
    (
        "__udivdi3",
        Err(
            InvalidSpecialMethod(
                "udivdi3",
            ),
        ),
    ),
    (
        "_vt$10bad_typeid",
        Ok(
            "bad_typeid virtual table",
        ),
    ),
    (
        "ModelRender_FLO1S_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "BurnFur__6Fluffy",
        Ok(
            "Fluffy::BurnFur(void)",
        ),
    ),
    (
        "_EatingChum__6Crikey",
        Ok(
            "Crikey::_EatingChum(void)",
        ),
    ),
    (
        "ForceShatter__15YabbyStalactite",
        Ok(
            "YabbyStalactite::ForceShatter(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Yabby_InsideTrappedArea__Fv",
        Ok(
            "global constructors keyed to Yabby_InsideTrappedArea(void)",
        ),
    ),
    (
        "GenerateRandomPos__10KingFisher",
        Ok(
            "KingFisher::GenerateRandomPos(void)",
        ),
    ),
    (
        "sceMcChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNmbrOfRefPoints__5Model",
        Ok(
            "Model::GetNmbrOfRefPoints(void)",
        ),
    ),
    (
        "ModelRender_ACX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeTrial_Update__Fv",
        Ok(
            "TimeTrial_Update(void)",
        ),
    ),
    (
        "_vt$10KingFisher",
        Ok(
            "KingFisher virtual table",
        ),
    ),
    (
        "LoadLine__6FriendP12KromeIniLine",
        Ok(
            "Friend::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DeathInit__5Roach",
        Ok(
            "Roach::DeathInit(void)",
        ),
    ),
    (
        "LoadDone__8BeachHut",
        Ok(
            "BeachHut::LoadDone(void)",
        ),
    ),
    (
        "LoadLine__11DropPontoonP12KromeIniLine",
        Ok(
            "DropPontoon::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Explode__13ShatterStructP6Vectorff",
        Ok(
            "ShatterStruct::Explode(Vector *, float, float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11RhinoGround",
        Ok(
            "ModuleInfo<RhinoGround> virtual table",
        ),
    ),
    (
        "sceMpegGetPictureRAW8xy",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACWTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Alert__11FrillLizard",
        Ok(
            "FrillLizard::Alert(void)",
        ),
    ),
    (
        "LoadLine__14CrikeyCanisterP12KromeIniLine",
        Ok(
            "CrikeyCanister::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Failure__14LevelObjective",
        Ok(
            "LevelObjective::Failure(void)",
        ),
    ),
    (
        "InitEvents__2Ty",
        Ok(
            "Ty::InitEvents(void)",
        ),
    ),
    (
        "Death__7SnowRoo",
        Ok(
            "SnowRoo::Death(void)",
        ),
    ),
    (
        "Walk__4Bull",
        Ok(
            "Bull::Walk(void)",
        ),
    ),
    (
        "DeathInit__10BlueTongue",
        Ok(
            "BlueTongue::DeathInit(void)",
        ),
    ),
    (
        "bWaterDragonInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__15WaterfallStruct",
        Ok(
            "WaterfallStruct::Deinit(void)",
        ),
    ),
    (
        "bShowAttractTimeout",
        Err(
            NotMangled,
        ),
    ),
    (
        "Sentinel_LoadResources__FP8KromeIni",
        Ok(
            "Sentinel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SetRoof__15GameCameraPointfUi",
        Ok(
            "GameCameraPoint::SetRoof(float, unsigned int)",
        ),
    ),
    (
        "Grabbing__8RingoArm",
        Ok(
            "RingoArm::Grabbing(void)",
        ),
    ),
    (
        "RenderTexture_RenderForOverlay__Fi",
        Ok(
            "RenderTexture_RenderForOverlay(int)",
        ),
    ),
    (
        "__mprec_bigtens",
        Err(
            InvalidSpecialMethod(
                "mprec_bigtens",
            ),
        ),
    ),
    (
        "_vt$19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite virtual table",
        ),
    ),
    (
        "SwallowCruiseInit__6Groper",
        Ok(
            "Groper::SwallowCruiseInit(void)",
        ),
    ),
    (
        "sceSifMBindRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__9Barracuda",
        Ok(
            "Barracuda::Deinit(void)",
        ),
    ),
    (
        "Reset__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Reset(void)",
        ),
    ),
    (
        "abort",
        Err(
            NotMangled,
        ),
    ),
    (
        "Animation_InterpolateFrameData__FPQ29Animation13FrameInstancefP6VectorT2T2T2T2T2",
        Ok(
            "Animation_InterpolateFrameData(Animation::FrameInstance *, float, Vector *, Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Leech",
        Ok(
            "ModuleInfo<Leech>::Init(void)",
        ),
    ),
    (
        "SetState__11MetalSpikes16MetalSpikesState",
        Ok(
            "MetalSpikes::SetState(MetalSpikesState)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10ScriptProp",
        Ok(
            "ModuleInfo<ScriptProp> virtual table",
        ),
    ),
    (
        "GetRotationPYR__6MatrixP6Vector",
        Ok(
            "Matrix::GetRotationPYR(Vector *)",
        ),
    ),
    (
        "GetBestPointMag__15SafePointResultP6Vector",
        Ok(
            "SafePointResult::GetBestPointMag(Vector *)",
        ),
    ),
    (
        "DeinitLevel__23BlitterCritterFieldDesc",
        Ok(
            "BlitterCritterFieldDesc::DeinitLevel(void)",
        ),
    ),
    (
        "IcePhys_bVersion2",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceTtyWrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "BuildLookToMatrix__FP6MatrixP6VectorT1",
        Ok(
            "BuildLookToMatrix(Matrix *, Vector *, Vector *)",
        ),
    ),
    (
        "HideInHole__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::HideInHole(void)",
        ),
    ),
    (
        "SpawnThunderEggParticle__11ScrubTurkeyf",
        Ok(
            "ScrubTurkey::SpawnThunderEggParticle(float)",
        ),
    ),
    (
        "LaunchUpdate__10WarpFlower",
        Ok(
            "WarpFlower::LaunchUpdate(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7C1Water",
        Ok(
            "ModuleInfo<C1Water>::Init(void)",
        ),
    ),
    (
        "Tools_GetAnimationNode__FP5ModelPc",
        Ok(
            "Tools_GetAnimationNode(Model *, char *)",
        ),
    ),
    (
        "DeinitLedgePullUp__2Ty",
        Ok(
            "Ty::DeinitLedgePullUp(void)",
        ),
    ),
    (
        "SetUp__15BoulderTrapDescPQ2t12StateMachine1Z7Boulder5StatePt9PtrListDL1Z7Boulder",
        Ok(
            "BoulderTrapDesc::SetUp(StateMachine<Boulder>::State *, PtrListDL<Boulder> *)",
        ),
    ),
    (
        "TurnSideOn__8PubeCrabf",
        Ok(
            "PubeCrab::TurnSideOn(float)",
        ),
    ),
    (
        "Reset__13TreasureChest",
        Ok(
            "TreasureChest::Reset(void)",
        ),
    ),
    (
        "Deinit__19WaterfallBaseStruct",
        Ok(
            "WaterfallBaseStruct::Deinit(void)",
        ),
    ),
    (
        "Create__14ParticleSystemP18ParticleSystemTypeP6VectorP14BoundingVolumefiP21ParticleSystemManager",
        Ok(
            "ParticleSystem::Create(ParticleSystemType *, Vector *, BoundingVolume *, float, int, ParticleSystemManager *)",
        ),
    ),
    (
        "RFU073",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tiUl",
        Ok(
            "unsigned long type_info node",
        ),
    ),
    (
        "AddChargeBite__8GameData",
        Ok(
            "GameData::AddChargeBite(void)",
        ),
    ),
    (
        "pCounterBlitsDrawn",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__6Shazza",
        Ok(
            "Shazza::LoadDone(void)",
        ),
    ),
    (
        "Message__11ShatterableP9MKMessage",
        Ok(
            "Shatterable::Message(MKMessage *)",
        ),
    ),
    (
        "dptoul",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnWaterfallSplash__19WaterfallBaseStructP6VectorT1if",
        Ok(
            "WaterfallBaseStruct::SpawnWaterfallSplash(Vector *, Vector *, int, float)",
        ),
    ),
    (
        "__rtti_si",
        Err(
            InvalidSpecialMethod(
                "rtti_si",
            ),
        ),
    ),
    (
        "TyVideo_Init__FPci",
        Ok(
            "TyVideo_Init(char *, int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10KingFisher",
        Ok(
            "ModuleInfo<KingFisher> virtual table",
        ),
    ),
    (
        "SkidInit__3Sly",
        Ok(
            "Sly::SkidInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9SmallCrab",
        Ok(
            "ModuleInfo<SmallCrab> virtual table",
        ),
    ),
    (
        "Message__10DialogPropP9MKMessage",
        Ok(
            "DialogProp::Message(MKMessage *)",
        ),
    ),
    (
        "IsBossLevel__9LevelData",
        Ok(
            "LevelData::IsBossLevel(void)",
        ),
    ),
    (
        "Model_GetNmbrOfStrips__FP13ModelTemplateii",
        Ok(
            "Model_GetNmbrOfStrips(ModelTemplate *, int, int)",
        ),
    ),
    (
        "WarningInit__7SeaMine",
        Ok(
            "SeaMine::WarningInit(void)",
        ),
    ),
    (
        "Hud_Reset__Fv",
        Ok(
            "Hud_Reset(void)",
        ),
    ),
    (
        "Patrol__6Muddie",
        Ok(
            "Muddie::Patrol(void)",
        ),
    ),
    (
        "MoveBoat__9Speedboat",
        Ok(
            "Speedboat::MoveBoat(void)",
        ),
    ),
    (
        "Bull_LoadResources__FP8KromeIni",
        Ok(
            "Bull_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GetCurr__21CameraOverrideManager",
        Ok(
            "CameraOverrideManager::GetCurr(void)",
        ),
    ),
    (
        "_12StaticFXProp$bTempVisible",
        Ok(
            "StaticFXProp::bTempVisible",
        ),
    ),
    (
        "_vt$14GateDescriptor",
        Ok(
            "GateDescriptor virtual table",
        ),
    ),
    (
        "scePrintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKGrassRender_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "Death__6Wombat",
        Ok(
            "Wombat::Death(void)",
        ),
    ),
    (
        "Open_Init__4Gate",
        Ok(
            "Gate::Open_Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6SpyEgg",
        Ok(
            "ModuleInfo<SpyEgg>::Init(void)",
        ),
    ),
    (
        "__mcmp",
        Err(
            InvalidSpecialMethod(
                "mcmp",
            ),
        ),
    ),
    (
        "TyMemCard_BootTest__Fv",
        Ok(
            "TyMemCard_BootTest(void)",
        ),
    ),
    (
        "GetPos__14BlitterCritter",
        Ok(
            "BlitterCritter::GetPos(void)",
        ),
    ),
    (
        "ModelRender_CAT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLSX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$10Frostyrang",
        Ok(
            "Frostyrang virtual table",
        ),
    ),
    (
        "Reset__5Lenny",
        Ok(
            "Lenny::Reset(void)",
        ),
    ),
    (
        "_vt$5Rufus",
        Ok(
            "Rufus virtual table",
        ),
    ),
    (
        "GameCamera_UseCustomCameraMatrix__FbP6Matrix",
        Ok(
            "GameCamera_UseCustomCameraMatrix(bool, Matrix *)",
        ),
    ),
    (
        "InitModule__4View",
        Ok(
            "View::InitModule(void)",
        ),
    ),
    (
        "_vt$8ChuteLog",
        Ok(
            "ChuteLog virtual table",
        ),
    ),
    (
        "InitWaterSlide__2Ty",
        Ok(
            "Ty::InitWaterSlide(void)",
        ),
    ),
    (
        "GetHeight__5Image",
        Ok(
            "Image::GetHeight(void)",
        ),
    ),
    (
        "Load__13BoomerangDescP8KromeIni",
        Ok(
            "BoomerangDesc::Load(KromeIni *)",
        ),
    ),
    (
        "scePadGetState",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z17KoalaKidObjectivePv",
        Ok(
            "ModuleInfo<KoalaKidObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "AddToModuleList__14ModuleInfoBaseP14ModuleInfoBase",
        Ok(
            "ModuleInfoBase::AddToModuleList(ModuleInfoBase *)",
        ),
    ),
    (
        "IsTyVisible__11RhinoGround",
        Ok(
            "RhinoGround::IsTyVisible(void)",
        ),
    ),
    (
        "GestureInit__5Lenny",
        Ok(
            "Lenny::GestureInit(void)",
        ),
    ),
    (
        "LoadLine__9BadBoonieP12KromeIniLine",
        Ok(
            "BadBoonie::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_GLOBAL_$I$Drum_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Drum_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IceAttackInit__6Fluffy",
        Ok(
            "Fluffy::IceAttackInit(void)",
        ),
    ),
    (
        "Particle_Goo_Create__FPP14ParticleSystemP6VectorT1f",
        Ok(
            "Particle_Goo_Create(ParticleSystem **, Vector *, Vector *, float)",
        ),
    ),
    (
        "DeinitModule__11BoulderTrap",
        Ok(
            "BoulderTrap::DeinitModule(void)",
        ),
    ),
    (
        "UpdateSwimSounds__8TySounds",
        Ok(
            "TySounds::UpdateSwimSounds(void)",
        ),
    ),
    (
        "Spawn__10BlueTongue",
        Ok(
            "BlueTongue::Spawn(void)",
        ),
    ),
    (
        "Fire__14ShadowBatSonarP6VectorT1",
        Ok(
            "ShadowBatSonar::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "Shatter__11CrateStruct",
        Ok(
            "CrateStruct::Shatter(void)",
        ),
    ),
    (
        "DrawPostWater__17TyParticleManager",
        Ok(
            "TyParticleManager::DrawPostWater(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10IceCoolant",
        Ok(
            "ModuleInfo<IceCoolant> virtual table",
        ),
    ),
    (
        "FinishLine_IsCrossedBy__FP6Vector",
        Ok(
            "FinishLine_IsCrossedBy(Vector *)",
        ),
    ),
    (
        "DrawText__4FontPcffff11FontJustifyi",
        Ok(
            "Font::DrawText(char *, float, float, float, float, FontJustify, int)",
        ),
    ),
    (
        "Shadow_Deinit__Fv",
        Ok(
            "Shadow_Deinit(void)",
        ),
    ),
    (
        "Deinit__11BurningJunk",
        Ok(
            "BurningJunk::Deinit(void)",
        ),
    ),
    (
        "Pontoon_UpdateDirection__10GameCamera",
        Ok(
            "GameCamera::Pontoon_UpdateDirection(void)",
        ),
    ),
    (
        "IdleUpdate__11ThinIceProp",
        Ok(
            "ThinIceProp::IdleUpdate(void)",
        ),
    ),
    (
        "Collision_AddStaticModel__FP5ModelP13CollisionInfoi",
        Ok(
            "Collision_AddStaticModel(Model *, CollisionInfo *, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Moth",
        Ok(
            "ModuleInfo<Moth>::Init(void)",
        ),
    ),
    (
        "Fish_Update__Fv",
        Ok(
            "Fish_Update(void)",
        ),
    ),
    (
        "CreateMist__20WaterfallSprayStructff",
        Ok(
            "WaterfallSprayStruct::CreateMist(float, float)",
        ),
    ),
    (
        "Debug_DeinitModule__Fv",
        Ok(
            "Debug_DeinitModule(void)",
        ),
    ),
    (
        "GenerateRandomPosForMidPos__7CaveBatP6Vector",
        Ok(
            "CaveBat::GenerateRandomPosForMidPos(Vector *)",
        ),
    ),
    (
        "SetHasRang__16BoomerangManager13BoomerangTypeb",
        Ok(
            "BoomerangManager::SetHasRang(BoomerangType, bool)",
        ),
    ),
    (
        "PullRope__5Lassof",
        Ok(
            "Lasso::PullRope(float)",
        ),
    ),
    (
        "Fly__3Bat",
        Ok(
            "Bat::Fly(void)",
        ),
    ),
    (
        "InSharkCageDeinit__2Ty",
        Ok(
            "Ty::InSharkCageDeinit(void)",
        ),
    ),
    (
        "scePadInfoMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetState__3Gem8GemState",
        Ok(
            "Gem::SetState(GemState)",
        ),
    ),
    (
        "Message__8FireDrumP9MKMessage",
        Ok(
            "FireDrum::Message(MKMessage *)",
        ),
    ),
    (
        "LoadDone__13CausticEffect",
        Ok(
            "CausticEffect::LoadDone(void)",
        ),
    ),
    (
        "__tiUx",
        Ok(
            "unsigned long long type_info node",
        ),
    ),
    (
        "UpdatePhysics__14RockProjectile",
        Ok(
            "RockProjectile::UpdatePhysics(void)",
        ),
    ),
    (
        "Update__8SignPost",
        Ok(
            "SignPost::Update(void)",
        ),
    ),
    (
        "TyMemCard_QueryDraw__Fv",
        Ok(
            "TyMemCard_QueryDraw(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__5Shark",
        Ok(
            "Shark::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "SetCameraMatrix__10GameCamerab",
        Ok(
            "GameCamera::SetCameraMatrix(bool)",
        ),
    ),
    (
        "CruiseInit__4Croc",
        Ok(
            "Croc::CruiseInit(void)",
        ),
    ),
    (
        "FileSys_Load__FPcPiPvi",
        Ok(
            "FileSys_Load(char *, int *, void *, int)",
        ),
    ),
    (
        "LoadLevel__17GameObjectManagerP8KromeIni",
        Ok(
            "GameObjectManager::LoadLevel(KromeIni *)",
        ),
    ),
    (
        "_vt$15StopwatchStruct",
        Ok(
            "StopwatchStruct virtual table",
        ),
    ),
    (
        "_$_9bad_alloc",
        Ok(
            "bad_alloc::~bad_alloc(void)",
        ),
    ),
    (
        "SetCameraRot__4ViewP6VectorT1",
        Ok(
            "View::SetCameraRot(Vector *, Vector *)",
        ),
    ),
    (
        "Deinit__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Deinit(void)",
        ),
    ),
    (
        "Deinit__6Friend",
        Ok(
            "Friend::Deinit(void)",
        ),
    ),
    (
        "UpdateRollFinal__7Boulder",
        Ok(
            "Boulder::UpdateRollFinal(void)",
        ),
    ),
    (
        "GetID__9LevelData11LevelNumber",
        Ok(
            "LevelData::GetID(LevelNumber)",
        ),
    ),
    (
        "ThrowRangsInit__3Sly",
        Ok(
            "Sly::ThrowRangsInit(void)",
        ),
    ),
    (
        "Flinch__8LilNeddy",
        Ok(
            "LilNeddy::Flinch(void)",
        ),
    ),
    (
        "Draw__6Spider",
        Ok(
            "Spider::Draw(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13TreasureChest",
        Ok(
            "ModuleInfo<TreasureChest> virtual table",
        ),
    ),
    (
        "Reset__8ChuteLog",
        Ok(
            "ChuteLog::Reset(void)",
        ),
    ),
    (
        "LoadDone__14MobilePlatform",
        Ok(
            "MobilePlatform::LoadDone(void)",
        ),
    ),
    (
        "SetMedium__2Ty8TyMedium",
        Ok(
            "Ty::SetMedium(TyMedium)",
        ),
    ),
    (
        "Sound_MusicIsPlaying",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpiderWeb_LoadResources__FP8KromeIni",
        Ok(
            "SpiderWeb_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$13GuideParticle",
        Ok(
            "GuideParticle virtual table",
        ),
    ),
    (
        "StoreDeathInfo__10DDASession",
        Ok(
            "DDASession::StoreDeathInfo(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13AnimatingProp",
        Ok(
            "ModuleInfo<AnimatingProp>::Init(void)",
        ),
    ),
    (
        "SpawnBushPigDustEffect__10FootEffectP6VectorT1ffP14BoundingVolumeffT1",
        Ok(
            "FootEffect::SpawnBushPigDustEffect(Vector *, Vector *, float, float, BoundingVolume *, float, float, Vector *)",
        ),
    ),
    (
        "Update__5Torch",
        Ok(
            "Torch::Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z16A1FrillObjective",
        Ok(
            "ModuleInfo<A1FrillObjective>::Init(void)",
        ),
    ),
    (
        "Idle__4Elle",
        Ok(
            "Elle::Idle(void)",
        ),
    ),
    (
        "DeathDeinit__5Roach",
        Ok(
            "Roach::DeathDeinit(void)",
        ),
    ),
    (
        "Init__7BushPig",
        Ok(
            "BushPig::Init(void)",
        ),
    ),
    (
        "__tib",
        Ok(
            "bool type_info node",
        ),
    ),
    (
        "_vt$5Lenny",
        Ok(
            "Lenny virtual table",
        ),
    ),
    (
        "Draw__3Fly",
        Ok(
            "Fly::Draw(void)",
        ),
    ),
    (
        "CalculateNewVelocity__15CollisionObjectP6VectorT1fP11ContextInfoP15CollisionResult",
        Ok(
            "CollisionObject::CalculateNewVelocity(Vector *, Vector *, float, ContextInfo *, CollisionResult *)",
        ),
    ),
    (
        "Dive__2Ty",
        Ok(
            "Ty::Dive(void)",
        ),
    ),
    (
        "__ieee754_acosf",
        Err(
            InvalidSpecialMethod(
                "ieee754_acosf",
            ),
        ),
    ),
    (
        "UpdateFired__8Megarang",
        Ok(
            "Megarang::UpdateFired(void)",
        ),
    ),
    (
        "DeinitIdleGeneric__2Ty",
        Ok(
            "Ty::DeinitIdleGeneric(void)",
        ),
    ),
    (
        "ModelRender_CFMX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CloseToPipe__11FrillLizard",
        Ok(
            "FrillLizard::CloseToPipe(void)",
        ),
    ),
    (
        "Update__7MoveYawfbb",
        Ok(
            "MoveYaw::Update(float, bool, bool)",
        ),
    ),
    (
        "Init__6BubbleP6VectorP14BoundingVolumef",
        Ok(
            "Bubble::Init(Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "_16MKPropDescriptor$pDrawListDescs",
        Ok(
            "MKPropDescriptor::pDrawListDescs",
        ),
    ),
    (
        "Deinit__11BonusPickup",
        Ok(
            "BonusPickup::Deinit(void)",
        ),
    ),
    (
        "Reset__5Lasso",
        Ok(
            "Lasso::Reset(void)",
        ),
    ),
    (
        "GetTreasure__7C3Actor",
        Ok(
            "C3Actor::GetTreasure(void)",
        ),
    ),
    (
        "Update__16FinishLineStruct",
        Ok(
            "FinishLineStruct::Update(void)",
        ),
    ),
    (
        "GetOsdConfigParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraOverridePath_End__Fv",
        Ok(
            "CameraOverridePath_End(void)",
        ),
    ),
    (
        "SoundBank_Stop__FPi",
        Ok(
            "SoundBank_Stop(int *)",
        ),
    ),
    (
        "_10FootEffect$footIceType",
        Ok(
            "FootEffect::footIceType",
        ),
    ),
    (
        "GetID__10SoundEventUi",
        Ok(
            "SoundEvent::GetID(unsigned int)",
        ),
    ),
    (
        "Reset__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::Reset(void)",
        ),
    ),
    (
        "Idle__11GuideBarrel",
        Ok(
            "GuideBarrel::Idle(void)",
        ),
    ),
    (
        "FollowPath__6Wombat",
        Ok(
            "Wombat::FollowPath(void)",
        ),
    ),
    (
        "IsNearSq__11EnemyObjectP6Vectorf",
        Ok(
            "EnemyObject::IsNearSq(Vector *, float)",
        ),
    ),
    (
        "UpdateLastSafePos__2Ty",
        Ok(
            "Ty::UpdateLastSafePos(void)",
        ),
    ),
    (
        "EnableEntityLookAt__2Tyb",
        Ok(
            "Ty::EnableEntityLookAt(bool)",
        ),
    ),
    (
        "Success__17MiniGameObjective",
        Ok(
            "MiniGameObjective::Success(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Rufus",
        Ok(
            "ModuleInfo<Rufus> virtual table",
        ),
    ),
    (
        "Chase__5Rufus",
        Ok(
            "Rufus::Chase(void)",
        ),
    ),
    (
        "Down__8RingoArm",
        Ok(
            "RingoArm::Down(void)",
        ),
    ),
    (
        "LoadDone__6Burner",
        Ok(
            "Burner::LoadDone(void)",
        ),
    ),
    (
        "DrawInfrarangDisplay__12BoomerangHud",
        Ok(
            "BoomerangHud::DrawInfrarangDisplay(void)",
        ),
    ),
    (
        "Explode__4Tick",
        Ok(
            "Tick::Explode(void)",
        ),
    ),
    (
        "Turtle_Line__FP12KromeIniLine",
        Ok(
            "Turtle_Line(KromeIniLine *)",
        ),
    ),
    (
        "Idle__9RedButton",
        Ok(
            "RedButton::Idle(void)",
        ),
    ),
    (
        "ModelRender_CFLW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "JumpInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::JumpInit(void)",
        ),
    ),
    (
        "_vt$10BlueTongue",
        Ok(
            "BlueTongue virtual table",
        ),
    ),
    (
        "TimeTrial_SetLost__Fv",
        Ok(
            "TimeTrial_SetLost(void)",
        ),
    ),
    (
        "Update__9AuroraKid",
        Ok(
            "AuroraKid::Update(void)",
        ),
    ),
    (
        "Draw__19DialogEffectManager",
        Ok(
            "DialogEffectManager::Draw(void)",
        ),
    ),
    (
        "LogicGame__Fv",
        Ok(
            "LogicGame(void)",
        ),
    ),
    (
        "_sceCd_cd_read_intr",
        Err(
            NotMangled,
        ),
    ),
    (
        "TryHurtTy__7Boulder",
        Ok(
            "Boulder::TryHurtTy(void)",
        ),
    ),
    (
        "Draw__16Blitter_TriStripif",
        Ok(
            "Blitter_TriStrip::Draw(int, float)",
        ),
    ),
    (
        "ModelRender_CFO1X_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__22MusicalIcicleObjective",
        Ok(
            "MusicalIcicleObjective::Update(void)",
        ),
    ),
    (
        "SetCameraRollAndLookAt__4ViewP6VectorT1f",
        Ok(
            "View::SetCameraRollAndLookAt(Vector *, Vector *, float)",
        ),
    ),
    (
        "Underwater_Init__10GameCamera",
        Ok(
            "GameCamera::Underwater_Init(void)",
        ),
    ),
    (
        "LoadLine__8KoalaKidP12KromeIniLine",
        Ok(
            "KoalaKid::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Walk__7BushPig",
        Ok(
            "BushPig::Walk(void)",
        ),
    ),
    (
        "GetNormalPosition__12MKAnimScript",
        Ok(
            "MKAnimScript::GetNormalPosition(void)",
        ),
    ),
    (
        "_19DialogEffectManager$pDialogPlayer",
        Ok(
            "DialogEffectManager::pDialogPlayer",
        ),
    ),
    (
        "_InitTLB",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z17TriggerSphereProp",
        Ok(
            "ModuleInfo<TriggerSphereProp> virtual table",
        ),
    ),
    (
        "GetWaveHeight2D__6MKWavefP6Vector",
        Ok(
            "MKWave::GetWaveHeight2D(float, Vector *)",
        ),
    ),
    (
        "AllocateParticle__14ParticleSystem",
        Ok(
            "ParticleSystem::AllocateParticle(void)",
        ),
    ),
    (
        "Draw__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Draw(void)",
        ),
    ),
    (
        "ConvertVector__12QuatRotationP6Vector",
        Ok(
            "QuatRotation::ConvertVector(Vector *)",
        ),
    ),
    (
        "IsVisible__5ModelP4View",
        Ok(
            "Model::IsVisible(View *)",
        ),
    ),
    (
        "SetEnvelope__17MKParticleGenTypePQ217MKParticleGenType8Envelopei",
        Ok(
            "MKParticleGenType::SetEnvelope(MKParticleGenType::Envelope *, int)",
        ),
    ),
    (
        "LongFallSplatLand__2Tyb",
        Ok(
            "Ty::LongFallSplatLand(bool)",
        ),
    ),
    (
        "libnet_term",
        Err(
            NotMangled,
        ),
    ),
    (
        "CaveBat_GetFirstPointer__Fv",
        Ok(
            "CaveBat_GetFirstPointer(void)",
        ),
    ),
    (
        "DrawShadow__15BoomerangWeaponP6Vector",
        Ok(
            "BoomerangWeapon::DrawShadow(Vector *)",
        ),
    ),
    (
        "Sway__7SeaMine",
        Ok(
            "SeaMine::Sway(void)",
        ),
    ),
    (
        "Init__10GameObjectP11GameObjDesc",
        Ok(
            "GameObject::Init(GameObjDesc *)",
        ),
    ),
    (
        "Sound_ReloadBank",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSoundFileName__8KoalaKidb",
        Ok(
            "KoalaKid::GetSoundFileName(bool)",
        ),
    ),
    (
        "SawDust_LoadResources__Fv",
        Ok(
            "SawDust_LoadResources(void)",
        ),
    ),
    (
        "_GLOBAL_$I$BouncingBoulder_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BouncingBoulder_LoadResources(KromeIni *)",
        ),
    ),
    (
        "BuildVertex__16ModelExplorer_P2i",
        Ok(
            "ModelExplorer_P2::BuildVertex(int)",
        ),
    ),
    (
        "LoadLine__13GuideParticleP12KromeIniLine",
        Ok(
            "GuideParticle::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "TimeTrial_IsActive__Fv",
        Ok(
            "TimeTrial_IsActive(void)",
        ),
    ),
    (
        "Clear__17PathFindingObject",
        Ok(
            "PathFindingObject::Clear(void)",
        ),
    ),
    (
        "Mist_Update__Fv",
        Ok(
            "Mist_Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Bull_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Bull_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_pictureCodingExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitBite__2Ty",
        Ok(
            "Ty::InitBite(void)",
        ),
    ),
    (
        "ModelRender_FLO1T_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetHitPlane__13ShatterStructP11PieceStruct",
        Ok(
            "ShatterStruct::SetHitPlane(PieceStruct *)",
        ),
    ),
    (
        "ExactMagXZ__FP6VectorT0",
        Ok(
            "ExactMagXZ(Vector *, Vector *)",
        ),
    ),
    (
        "__check_eh_spec",
        Err(
            InvalidSpecialMethod(
                "check_eh_spec",
            ),
        ),
    ),
    (
        "CrawlAlertInit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlAlertInit(void)",
        ),
    ),
    (
        "CameraOverrideTopDown_Reset__Fv",
        Ok(
            "CameraOverrideTopDown_Reset(void)",
        ),
    ),
    (
        "Draw__10SpecialHud",
        Ok(
            "SpecialHud::Draw(void)",
        ),
    ),
    (
        "Init__10KingFisherP11GameObjDesc",
        Ok(
            "KingFisher::Init(GameObjDesc *)",
        ),
    ),
    (
        "green",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKGrass_AddModel__FP5Model",
        Ok(
            "MKGrass_AddModel(Model *)",
        ),
    ),
    (
        "Explosion_Draw__Fv",
        Ok(
            "Explosion_Draw(void)",
        ),
    ),
    (
        "HopInit__5Rufus",
        Ok(
            "Rufus::HopInit(void)",
        ),
    ),
    (
        "IsTyVisible__4Croc",
        Ok(
            "Croc::IsTyVisible(void)",
        ),
    ),
    (
        "SetRotation__7UIModelf",
        Ok(
            "UIModel::SetRotation(float)",
        ),
    ),
    (
        "Deinit__14WaterSlideData",
        Ok(
            "WaterSlideData::Deinit(void)",
        ),
    ),
    (
        "CameraOverrideFixedRail_Reset__Fv",
        Ok(
            "CameraOverrideFixedRail_Reset(void)",
        ),
    ),
    (
        "Init__9WaterPipeP11GameObjDesc",
        Ok(
            "WaterPipe::Init(GameObjDesc *)",
        ),
    ),
    (
        "GameCamera_OverrideFixedRail_Add__FP31CameraOverrideFixedRailLoadInfo",
        Ok(
            "GameCamera_OverrideFixedRail_Add(CameraOverrideFixedRailLoadInfo *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10WhirlyWindPv",
        Ok(
            "ModuleInfo<WhirlyWind>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitLassoCaughtWaterTank__5Lasso",
        Ok(
            "Lasso::DeinitLassoCaughtWaterTank(void)",
        ),
    ),
    (
        "SnowPile_LoadResources__FP8KromeIni",
        Ok(
            "SnowPile_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_sysbitNext",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACExyTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11BonusPickup",
        Ok(
            "ModuleInfo<BonusPickup> virtual table",
        ),
    ),
    (
        "NormalUpdate__11DropPontoon",
        Ok(
            "DropPontoon::NormalUpdate(void)",
        ),
    ),
    (
        "InitExecPS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ri0_010",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetVel__6Friend",
        Ok(
            "Friend::GetVel(void)",
        ),
    ),
    (
        "strtol",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitJump__7BushPig",
        Ok(
            "BushPig::InitJump(void)",
        ),
    ),
    (
        "Update__Q29TyContext9WaterInfoP6VectorT1",
        Ok(
            "TyContext::WaterInfo::Update(Vector *, Vector *)",
        ),
    ),
    (
        "Reset__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Reset(void)",
        ),
    ),
    (
        "SetAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "gEmptyPtrListDL",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDescriptors__H1Z12PlatformDesc_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<PlatformDesc>(KromeIni *, char *, PlatformDesc *)",
        ),
    ),
    (
        "OrientTowardsCamera__9Boomerangf",
        Ok(
            "Boomerang::OrientTowardsCamera(float)",
        ),
    ),
    (
        "UseInternal__8Materialib",
        Ok(
            "Material::UseInternal(int, bool)",
        ),
    ),
    (
        "GetNewPathPos__9Speedboatf",
        Ok(
            "Speedboat::GetNewPathPos(float)",
        ),
    ),
    (
        "PE_Dust_LoadResources__Fv",
        Ok(
            "PE_Dust_LoadResources(void)",
        ),
    ),
    (
        "Destroy__8Material",
        Ok(
            "Material::Destroy(void)",
        ),
    ),
    (
        "Deinit__6Dennis",
        Ok(
            "Dennis::Deinit(void)",
        ),
    ),
    (
        "PauseScreen_DeinitResources__Fv",
        Ok(
            "PauseScreen_DeinitResources(void)",
        ),
    ),
    (
        "BuildSoundNameTable__17SoundEventManagerP8KromeIni",
        Ok(
            "SoundEventManager::BuildSoundNameTable(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7C3Chest",
        Ok(
            "ModuleInfo<C3Chest>::Init(void)",
        ),
    ),
    (
        "Message__10ScriptPropP9MKMessage",
        Ok(
            "ScriptProp::Message(MKMessage *)",
        ),
    ),
    (
        "sceSifRebootIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetMaterialList__8Material",
        Ok(
            "Material::GetMaterialList(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z16FinishLineStructPv",
        Ok(
            "ModuleInfo<FinishLineStruct>::ConstructObject(void *)",
        ),
    ),
    (
        "Collision_BInteriorPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update_Moving__3Fly",
        Ok(
            "Fly::Update_Moving(void)",
        ),
    ),
    (
        "sceSifStopDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScissorPoly__FP13ScissorBuffer",
        Ok(
            "ScissorPoly(ScissorBuffer *)",
        ),
    ),
    (
        "Developer_Draw__Fv",
        Ok(
            "Developer_Draw(void)",
        ),
    ),
    (
        "Collision_AdjustDesiredPointsSweep__10GameCameraP6Vector",
        Ok(
            "GameCamera::Collision_AdjustDesiredPointsSweep(Vector *)",
        ),
    ),
    (
        "Reset__10Damageable",
        Ok(
            "Damageable::Reset(void)",
        ),
    ),
    (
        "GameCamera_OverrideFixedPoint_Add__FP32CameraOverrideFixedPointLoadInfo",
        Ok(
            "GameCamera_OverrideFixedPoint_Add(CameraOverrideFixedPointLoadInfo *)",
        ),
    ),
    (
        "scePadInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsTyVisible__9Barracuda",
        Ok(
            "Barracuda::IsTyVisible(void)",
        ),
    ),
    (
        "StartChaseInit__6Wombat",
        Ok(
            "Wombat::StartChaseInit(void)",
        ),
    ),
    (
        "SoundBank_Update__Fv",
        Ok(
            "SoundBank_Update(void)",
        ),
    ),
    (
        "GetMeshName__12MKAnimScript",
        Ok(
            "MKAnimScript::GetMeshName(void)",
        ),
    ),
    (
        "Update__17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard::Update(void)",
        ),
    ),
    (
        "sceSifGetNextRequest",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10ScubaFrill",
        Ok(
            "ModuleInfo<ScubaFrill>::Init(void)",
        ),
    ),
    (
        "Croc_LoadResources__FP8KromeIni",
        Ok(
            "Croc_LoadResources(KromeIni *)",
        ),
    ),
    (
        "WaterMediumUpdate__2Ty",
        Ok(
            "Ty::WaterMediumUpdate(void)",
        ),
    ),
    (
        "SetOsdConfigParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "gDefaultRenderPrim",
        Err(
            NotMangled,
        ),
    ),
    (
        "_19WaterfallBaseStruct$sprayType",
        Ok(
            "WaterfallBaseStruct::sprayType",
        ),
    ),
    (
        "LoadDone__10StaticProp",
        Ok(
            "StaticProp::LoadDone(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Z1RainbowScaleObjective_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Z1RainbowScaleObjective_LoadResources(KromeIni *)",
        ),
    ),
    (
        "gRain",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitTarget__5Neddy",
        Ok(
            "Neddy::HitTarget(void)",
        ),
    ),
    (
        "Chase__6Crikey",
        Ok(
            "Crikey::Chase(void)",
        ),
    ),
    (
        "LoadLine__6BasketP12KromeIniLine",
        Ok(
            "Basket::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Deinit__8KoalaKid",
        Ok(
            "KoalaKid::Deinit(void)",
        ),
    ),
    (
        "Deinit__10Frostyrang",
        Ok(
            "Frostyrang::Deinit(void)",
        ),
    ),
    (
        "AllocateBoulder__15BoulderTrapDesc",
        Ok(
            "BoulderTrapDesc::AllocateBoulder(void)",
        ),
    ),
    (
        "DrawFrames__16Blitter_Particleif",
        Ok(
            "Blitter_Particle::DrawFrames(int, float)",
        ),
    ),
    (
        "DisableCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5LennyPv",
        Ok(
            "ModuleInfo<Lenny>::ConstructObject(void *)",
        ),
    ),
    (
        "LogicUpdate__6Fluffy",
        Ok(
            "Fluffy::LogicUpdate(void)",
        ),
    ),
    (
        "_updateRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "StunnedInit__5Shark",
        Ok(
            "Shark::StunnedInit(void)",
        ),
    ),
    (
        "Reset__11Shatterable",
        Ok(
            "Shatterable::Reset(void)",
        ),
    ),
    (
        "WalkInit__8KoalaKid",
        Ok(
            "KoalaKid::WalkInit(void)",
        ),
    ),
    (
        "Collision_DeinitModule__Fv",
        Ok(
            "Collision_DeinitModule(void)",
        ),
    ),
    (
        "AddSpin__5Spear",
        Ok(
            "Spear::AddSpin(void)",
        ),
    ),
    (
        "AlertPause_CanGoToState__11ScrubTurkey",
        Ok(
            "ScrubTurkey::AlertPause_CanGoToState(void)",
        ),
    ),
    (
        "_vt$4Bull",
        Ok(
            "Bull virtual table",
        ),
    ),
    (
        "SnapBehindHero__10GameCamerabP6Vectorb",
        Ok(
            "GameCamera::SnapBehindHero(bool, Vector *, bool)",
        ),
    ),
    (
        "Draw__8BilbyHud",
        Ok(
            "BilbyHud::Draw(void)",
        ),
    ),
    (
        "SetUpWaterJump__2Ty",
        Ok(
            "Ty::SetUpWaterJump(void)",
        ),
    ),
    (
        "activeSet",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckForHit__5Spear",
        Ok(
            "Spear::CheckForHit(void)",
        ),
    ),
    (
        "GetRunSpeed__11EnemyObject",
        Ok(
            "EnemyObject::GetRunSpeed(void)",
        ),
    ),
    (
        "ApplyTransMatrix__6VectorP6VectorP6Matrix",
        Ok(
            "Vector::ApplyTransMatrix(Vector *, Matrix *)",
        ),
    ),
    (
        "Gem_PickupParticle_SpawnParticles__FP6Vector",
        Ok(
            "Gem_PickupParticle_SpawnParticles(Vector *)",
        ),
    ),
    (
        "ApproachInit__5Lenny",
        Ok(
            "Lenny::ApproachInit(void)",
        ),
    ),
    (
        "HurtInit__6Crikey",
        Ok(
            "Crikey::HurtInit(void)",
        ),
    ),
    (
        "LoadDone__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::LoadDone(void)",
        ),
    ),
    (
        "UpdateModule__6Portal",
        Ok(
            "Portal::UpdateModule(void)",
        ),
    ),
    (
        "LoadSection__17WaterSlideManagerP16WayPointLoadInfo",
        Ok(
            "WaterSlideManager::LoadSection(WayPointLoadInfo *)",
        ),
    ),
    (
        "LoadDone__11PontoonRope",
        Ok(
            "PontoonRope::LoadDone(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Portal_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Portal_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_9FrillBike$nFrontWheel",
        Ok(
            "FrillBike::nFrontWheel",
        ),
    ),
    (
        "Spawning__11BonusPickup",
        Ok(
            "BonusPickup::Spawning(void)",
        ),
    ),
    (
        "sceDeci2ReqSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "AdjustBike__9FrillBike",
        Ok(
            "FrillBike::AdjustBike(void)",
        ),
    ),
    (
        "_vt$9WaterPipe",
        Ok(
            "WaterPipe virtual table",
        ),
    ),
    (
        "GetSubObjectMatrixIndex__5Modeli",
        Ok(
            "Model::GetSubObjectMatrixIndex(int)",
        ),
    ),
    (
        "MKWaterManager_GenerateRandomTable__Fv",
        Ok(
            "MKWaterManager_GenerateRandomTable(void)",
        ),
    ),
    (
        "Update__10GameCameraP18GameCameraHeroInfo",
        Ok(
            "GameCamera::Update(GameCameraHeroInfo *)",
        ),
    ),
    (
        "Message__10TeleporterP9MKMessage",
        Ok(
            "Teleporter::Message(MKMessage *)",
        ),
    ),
    (
        "EndLife__10Projectile",
        Ok(
            "Projectile::EndLife(void)",
        ),
    ),
    (
        "WaterDragon_Add__FP6Vector",
        Ok(
            "WaterDragon_Add(Vector *)",
        ),
    ),
    (
        "_GLOBAL_$I$Sheila_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Sheila_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IdleInit__5Lenny",
        Ok(
            "Lenny::IdleInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Burnable",
        Ok(
            "ModuleInfo<Burnable> virtual table",
        ),
    ),
    (
        "CheckForBoomerangs__7CaveBat",
        Ok(
            "CaveBat::CheckForBoomerangs(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5TorchPv",
        Ok(
            "ModuleInfo<Torch>::ConstructObject(void *)",
        ),
    ),
    (
        "InitWalk__2Ty",
        Ok(
            "Ty::InitWalk(void)",
        ),
    ),
    (
        "SweepDeinit__3Bat",
        Ok(
            "Bat::SweepDeinit(void)",
        ),
    ),
    (
        "MiniGameC2_Update__10GameCamera",
        Ok(
            "GameCamera::MiniGameC2_Update(void)",
        ),
    ),
    (
        "SetDebugMessage__10DDASessionPc",
        Ok(
            "DDASession::SetDebugMessage(char *)",
        ),
    ),
    (
        "DeinitDive__2Ty",
        Ok(
            "Ty::DeinitDive(void)",
        ),
    ),
    (
        "Init__9SoundPropP11GameObjDesc",
        Ok(
            "SoundProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "MKMemoryCard_Load__FiiPvi",
        Ok(
            "MKMemoryCard_Load(int, int, void *, int)",
        ),
    ),
    (
        "MKGrass_Init__Fv",
        Ok(
            "MKGrass_Init(void)",
        ),
    ),
    (
        "DebugInfo_Particle__FPcP6VectorifT1",
        Ok(
            "DebugInfo_Particle(char *, Vector *, int, float, Vector *)",
        ),
    ),
    (
        "ModelRender_FLW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitTurnAround__5Rhino",
        Ok(
            "Rhino::DeinitTurnAround(void)",
        ),
    ),
    (
        "DrawHudElement__8TyHealthG6Vector",
        Ok(
            "TyHealth::DrawHudElement(Vector)",
        ),
    ),
    (
        "FrontEnd_Extras_Deinit__Fv",
        Ok(
            "FrontEnd_Extras_Deinit(void)",
        ),
    ),
    (
        "Hanging__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Hanging(void)",
        ),
    ),
    (
        "GoingUpState__8Elevator",
        Ok(
            "Elevator::GoingUpState(void)",
        ),
    ),
    (
        "_vt$10Projectile",
        Ok(
            "Projectile virtual table",
        ),
    ),
    (
        "firstFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNmbrOfSubObjects__5Model",
        Ok(
            "Model::GetNmbrOfSubObjects(void)",
        ),
    ),
    (
        "__rethrow",
        Err(
            InvalidSpecialMethod(
                "rethrow",
            ),
        ),
    ),
    (
        "IdleState__9SmallCrab",
        Ok(
            "SmallCrab::IdleState(void)",
        ),
    ),
    (
        "TyMemCard_AutoSaveDraw__Fv",
        Ok(
            "TyMemCard_AutoSaveDraw(void)",
        ),
    ),
    (
        "GetGsHParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "SendMessage__11ScrubTurkey22ScrubTurkeyMessageTypeP11ScrubTurkey",
        Ok(
            "ScrubTurkey::SendMessage(ScrubTurkeyMessageType, ScrubTurkey *)",
        ),
    ),
    (
        "Update__12StaticFXProp",
        Ok(
            "StaticFXProp::Update(void)",
        ),
    ),
    (
        "Update__20WaterfallPointStruct",
        Ok(
            "WaterfallPointStruct::Update(void)",
        ),
    ),
    (
        "CrashInit__4Bull",
        Ok(
            "Bull::CrashInit(void)",
        ),
    ),
    (
        "SetRotationToScaleXYZ__6MatrixP6Vector",
        Ok(
            "Matrix::SetRotationToScaleXYZ(Vector *)",
        ),
    ),
    (
        "Init__9UIHeadingPc",
        Ok(
            "UIHeading::Init(char *)",
        ),
    ),
    (
        "ThrowInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::ThrowInit(void)",
        ),
    ),
    (
        "__get_eh_context",
        Err(
            InvalidSpecialMethod(
                "get_eh_context",
            ),
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3GemPv",
        Ok(
            "ModuleInfo<Gem>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z16SynkerBlueTongue",
        Ok(
            "ModuleInfo<SynkerBlueTongue> virtual table",
        ),
    ),
    (
        "LookOut__4Croc",
        Ok(
            "Croc::LookOut(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11BurningTreePv",
        Ok(
            "ModuleInfo<BurningTree>::ConstructObject(void *)",
        ),
    ),
    (
        "_GLOBAL_$I$_14YabbyObjective$bActivated",
        Ok(
            "global constructors keyed to YabbyObjective::bActivated",
        ),
    ),
    (
        "_13CritterField2$loadInfo",
        Ok(
            "CritterField2::loadInfo",
        ),
    ),
    (
        "GetPos__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::GetPos(void)",
        ),
    ),
    (
        "Tools_GetAnimationLength__FP12MKAnimScript",
        Ok(
            "Tools_GetAnimationLength(MKAnimScript *)",
        ),
    ),
    (
        "SetLocalToWorldDirty__5Model",
        Ok(
            "Model::SetLocalToWorldDirty(void)",
        ),
    ),
    (
        "LeapStart__10NinjaGecko",
        Ok(
            "NinjaGecko::LeapStart(void)",
        ),
    ),
    (
        "InitIdle__9Speedboat",
        Ok(
            "Speedboat::InitIdle(void)",
        ),
    ),
    (
        "Update__8Critter2",
        Ok(
            "Critter2::Update(void)",
        ),
    ),
    (
        "YabbyStalactite_DrawDebug__Fv",
        Ok(
            "YabbyStalactite_DrawDebug(void)",
        ),
    ),
    (
        "RenderTexture_CausticsEnd__Fv",
        Ok(
            "RenderTexture_CausticsEnd(void)",
        ),
    ),
    (
        "InitLearnToDive__2Ty",
        Ok(
            "Ty::InitLearnToDive(void)",
        ),
    ),
    (
        "RFU080_CreateEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateSpeed__8WhiteBatf",
        Ok(
            "WhiteBat::UpdateSpeed(float)",
        ),
    ),
    (
        "Message__8BuzzSaw2P9MKMessage",
        Ok(
            "BuzzSaw2::Message(MKMessage *)",
        ),
    ),
    (
        "scePadEnterPressMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FL_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "WeatherTypeCallback__FPv",
        Ok(
            "WeatherTypeCallback(void *)",
        ),
    ),
    (
        "LogicUpdate__6Wombat",
        Ok(
            "Wombat::LogicUpdate(void)",
        ),
    ),
    (
        "DeathDeinit__10ScubaFrill",
        Ok(
            "ScubaFrill::DeathDeinit(void)",
        ),
    ),
    (
        "Init__14KingFisherDescP14ModuleInfoBasePcT2",
        Ok(
            "KingFisherDesc::Init(ModuleInfoBase *, char *, char *)",
        ),
    ),
    (
        "UpdateLight__12FlameThrowerf",
        Ok(
            "FlameThrower::UpdateLight(float)",
        ),
    ),
    (
        "Draw__6Aurora",
        Ok(
            "Aurora::Draw(void)",
        ),
    ),
    (
        "Start__7SawDustP6VectorfP14BoundingVolumef",
        Ok(
            "SawDust::Start(Vector *, float, BoundingVolume *, float)",
        ),
    ),
    (
        "GetMessageIdFromString__10GameObjectPc",
        Ok(
            "GameObject::GetMessageIdFromString(char *)",
        ),
    ),
    (
        "Reset__7AntHill",
        Ok(
            "AntHill::Reset(void)",
        ),
    ),
    (
        "Tools_SmoothToValue2__Ffffff",
        Ok(
            "Tools_SmoothToValue2(float, float, float, float, float)",
        ),
    ),
    (
        "BeerAttackDeinit__5Skink",
        Ok(
            "Skink::BeerAttackDeinit(void)",
        ),
    ),
    (
        "AlertInit__8PubeCrab",
        Ok(
            "PubeCrab::AlertInit(void)",
        ),
    ),
    (
        "Draw__13TreasureChest",
        Ok(
            "TreasureChest::Draw(void)",
        ),
    ),
    (
        "Message__5RingoP9MKMessage",
        Ok(
            "Ringo::Message(MKMessage *)",
        ),
    ),
    (
        "_GLOBAL_$I$_13OpalCollector$nNextPoint",
        Ok(
            "global constructors keyed to OpalCollector::nNextPoint",
        ),
    ),
    (
        "dpdiv",
        Err(
            NotMangled,
        ),
    ),
    (
        "PlatformDetach__2Ty",
        Ok(
            "Ty::PlatformDetach(void)",
        ),
    ),
    (
        "Animation_CalculateFrame__FPQ29Animation13FrameInstancePQ213AnimationData4Node",
        Ok(
            "Animation_CalculateFrame(Animation::FrameInstance *, AnimationData::Node *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4IbisPv",
        Ok(
            "ModuleInfo<Ibis>::ConstructObject(void *)",
        ),
    ),
    (
        "MKMemoryCard_SetAppInfo__FPcT0T0",
        Ok(
            "MKMemoryCard_SetAppInfo(char *, char *, char *)",
        ),
    ),
    (
        "AddBranch__17WaterSlideSectioni",
        Ok(
            "WaterSlideSection::AddBranch(int)",
        ),
    ),
    (
        "WarpTransition__2Ty",
        Ok(
            "Ty::WarpTransition(void)",
        ),
    ),
    (
        "__register_frame_table",
        Err(
            InvalidSpecialMethod(
                "register_frame_table",
            ),
        ),
    ),
    (
        "OmniLight_DestroyScene__FP14OmniLightScene",
        Ok(
            "OmniLight_DestroyScene(OmniLightScene *)",
        ),
    ),
    (
        "Tick_LoadResources__FP8KromeIni",
        Ok(
            "Tick_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Speedboat_LoadResources__FP8KromeIni",
        Ok(
            "Speedboat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "DiveTransition__2Ty",
        Ok(
            "Ty::DiveTransition(void)",
        ),
    ),
    (
        "Pull__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Pull(void)",
        ),
    ),
    (
        "GetDesc__11BaseCritter",
        Ok(
            "BaseCritter::GetDesc(void)",
        ),
    ),
    (
        "Init__15StopwatchStructP11GameObjDesc",
        Ok(
            "StopwatchStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "__tf16__user_type_info",
        Ok(
            "__user_type_info type_info function",
        ),
    ),
    (
        "File_IsAnyBusy__Fv",
        Ok(
            "File_IsAnyBusy(void)",
        ),
    ),
    (
        "LoadStatsInfo__10DDASession",
        Ok(
            "DDASession::LoadStatsInfo(void)",
        ),
    ),
    (
        "Path_DrawDebug__FP11PathSegmentP6Vectorf",
        Ok(
            "Path_DrawDebug(PathSegment *, Vector *, float)",
        ),
    ),
    (
        "Destroy__7MKWater",
        Ok(
            "MKWater::Destroy(void)",
        ),
    ),
    (
        "PauseScreen_ChangeLevel_Init__Fv",
        Ok(
            "PauseScreen_ChangeLevel_Init(void)",
        ),
    ),
    (
        "pStaticModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z16SynkerBlueTonguePv",
        Ok(
            "ModuleInfo<SynkerBlueTongue>::ConstructObject(void *)",
        ),
    ),
    (
        "Collapsible_LoadResources__FP8KromeIni",
        Ok(
            "Collapsible_LoadResources(KromeIni *)",
        ),
    ),
    (
        "UpdatesUntilFinished__12MKAnimScript",
        Ok(
            "MKAnimScript::UpdatesUntilFinished(void)",
        ),
    ),
    (
        "FindSpawnedNeighbours__11EnemyObjecti",
        Ok(
            "EnemyObject::FindSpawnedNeighbours(int)",
        ),
    ),
    (
        "LoadLine__10DamageableP12KromeIniLine",
        Ok(
            "Damageable::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SeaMine_LoadResources__FP8KromeIni",
        Ok(
            "SeaMine_LoadResources(KromeIni *)",
        ),
    ),
    (
        "CheckFirstPerson__2Ty",
        Ok(
            "Ty::CheckFirstPerson(void)",
        ),
    ),
    (
        "_7Texture$pResyncDmaPtr",
        Ok(
            "Texture::pResyncDmaPtr",
        ),
    ),
    (
        "AlertInit__8LilNeddy",
        Ok(
            "LilNeddy::AlertInit(void)",
        ),
    ),
    (
        "Deinit__14RockCollection",
        Ok(
            "RockCollection::Deinit(void)",
        ),
    ),
    (
        "Message__9BadBoonieP9MKMessage",
        Ok(
            "BadBoonie::Message(MKMessage *)",
        ),
    ),
    (
        "GCT_IntersectingPoint2D__FP6VectorT0T0T0T0",
        Ok(
            "GCT_IntersectingPoint2D(Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "__tfb",
        Ok(
            "bool type_info function",
        ),
    ),
    (
        "CameraOverride_CreateScaledDirectionMatrix__FP6MatrixP6VectorT1ff",
        Ok(
            "CameraOverride_CreateScaledDirectionMatrix(Matrix *, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "BonusPickup_Spawn__FP6VectorT015BonusPickupType",
        Ok(
            "BonusPickup_Spawn(Vector *, Vector *, BonusPickupType)",
        ),
    ),
    (
        "Init__8UIButtonPcP18UIButtonDescriptor",
        Ok(
            "UIButton::Init(char *, UIButtonDescriptor *)",
        ),
    ),
    (
        "Update__15TurningPlatform",
        Ok(
            "TurningPlatform::Update(void)",
        ),
    ),
    (
        "InitGlide__2Ty",
        Ok(
            "Ty::InitGlide(void)",
        ),
    ),
    (
        "Optimise__14MKSceneManager",
        Ok(
            "MKSceneManager::Optimise(void)",
        ),
    ),
    (
        "CreateNewSplash__15WaterfallStructff",
        Ok(
            "WaterfallStruct::CreateNewSplash(float, float)",
        ),
    ),
    (
        "Fluffy_Init__10GameCamera",
        Ok(
            "GameCamera::Fluffy_Init(void)",
        ),
    ),
    (
        "Draw__7SnowGun",
        Ok(
            "SnowGun::Draw(void)",
        ),
    ),
    (
        "SetFragInfo__13ShatterStruct",
        Ok(
            "ShatterStruct::SetFragInfo(void)",
        ),
    ),
    (
        "scePadEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "rint",
        Err(
            NotMangled,
        ),
    ),
    (
        "KnockdownInit__3Sly",
        Ok(
            "Sly::KnockdownInit(void)",
        ),
    ),
    (
        "Render__16ReflectionStruct",
        Ok(
            "ReflectionStruct::Render(void)",
        ),
    ),
    (
        "Allocate__10GameObject",
        Ok(
            "GameObject::Allocate(void)",
        ),
    ),
    (
        "iCancelWakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlyToHoverPos__9ShadowBat",
        Ok(
            "ShadowBat::FlyToHoverPos(void)",
        ),
    ),
    (
        "Death__5Roach",
        Ok(
            "Roach::Death(void)",
        ),
    ),
    (
        "TeleportInit__9BadBoonie",
        Ok(
            "BadBoonie::TeleportInit(void)",
        ),
    ),
    (
        "ResolveCollisions__15CollisionObjectP6VectorT1i",
        Ok(
            "CollisionObject::ResolveCollisions(Vector *, Vector *, int)",
        ),
    ),
    (
        "SwimAttack__2Ty",
        Ok(
            "Ty::SwimAttack(void)",
        ),
    ),
    (
        "gTextureDisplayLayout",
        Err(
            NotMangled,
        ),
    ),
    (
        "__unpack_f",
        Err(
            InvalidSpecialMethod(
                "unpack_f",
            ),
        ),
    ),
    (
        "ClipMovement__8ElevatorP5Model",
        Ok(
            "Elevator::ClipMovement(Model *)",
        ),
    ),
    (
        "Update__6Maurie",
        Ok(
            "Maurie::Update(void)",
        ),
    ),
    (
        "CalcMatrices__4View",
        Ok(
            "View::CalcMatrices(void)",
        ),
    ),
    (
        "SpawnFastGlow__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnFastGlow(Vector *, float)",
        ),
    ),
    (
        "modelTemplates",
        Err(
            NotMangled,
        ),
    ),
    (
        "StartFallingSnow__9AvalancheP6VectorP14BoundingVolume",
        Ok(
            "Avalanche::StartFallingSnow(Vector *, BoundingVolume *)",
        ),
    ),
    (
        "InitLoaded__9Boomerang",
        Ok(
            "Boomerang::InitLoaded(void)",
        ),
    ),
    (
        "Bunyip_GetLastEvent__Fv",
        Ok(
            "Bunyip_GetLastEvent(void)",
        ),
    ),
    (
        "Update__11Collapsible",
        Ok(
            "Collapsible::Update(void)",
        ),
    ),
    (
        "BushPig_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::BushPig_Update(void)",
        ),
    ),
    (
        "DrawSineWaveNormals__6MKWaveP11MKWaterPropffi",
        Ok(
            "MKWave::DrawSineWaveNormals(MKWaterProp *, float, float, int)",
        ),
    ),
    (
        "HitInit__6Wombat",
        Ok(
            "Wombat::HitInit(void)",
        ),
    ),
    (
        "staticSpikesMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "_10StaticProp$loadInfo",
        Ok(
            "StaticProp::loadInfo",
        ),
    ),
    (
        "LoadDone__12AquarangProp",
        Ok(
            "AquarangProp::LoadDone(void)",
        ),
    ),
    (
        "Kin_GetfinalVel__FPfT0T0T0",
        Ok(
            "Kin_GetfinalVel(float *, float *, float *, float *)",
        ),
    ),
    (
        "Path_Manager_Init__Fv",
        Ok(
            "Path_Manager_Init(void)",
        ),
    ),
    (
        "litodp",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__4JeepP12KromeIniLine",
        Ok(
            "Jeep::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "CameraOverrideSpiral_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideSpiral_Line(KromeIniLine *)",
        ),
    ),
    (
        "_malloc_stats_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdatePhysics__10Projectile",
        Ok(
            "Projectile::UpdatePhysics(void)",
        ),
    ),
    (
        "ChumBox_GetDescriptor__Fv",
        Ok(
            "ChumBox_GetDescriptor(void)",
        ),
    ),
    (
        "Particle_Fire_Init__FPP14ParticleSystemP6VectorP14BoundingVolumefb",
        Ok(
            "Particle_Fire_Init(ParticleSystem **, Vector *, BoundingVolume *, float, bool)",
        ),
    ),
    (
        "_sceCd_rd_intr_data",
        Err(
            NotMangled,
        ),
    ),
    (
        "Load__9CameraINIPc",
        Ok(
            "CameraINI::Load(char *)",
        ),
    ),
    (
        "Video_TransferSoundData__FP5Video",
        Ok(
            "Video_TransferSoundData(Video *)",
        ),
    ),
    (
        "Alert__8PubeCrab",
        Ok(
            "PubeCrab::Alert(void)",
        ),
    ),
    (
        "Init__9GeckoDescP14ModuleInfoBasePcT2",
        Ok(
            "GeckoDesc::Init(ModuleInfoBase *, char *, char *)",
        ),
    ),
    (
        "Flame_LoadResources__Fv",
        Ok(
            "Flame_LoadResources(void)",
        ),
    ),
    (
        "_pictureHeader",
        Err(
            NotMangled,
        ),
    ),
    (
        "Shears_Update__Fv",
        Ok(
            "Shears_Update(void)",
        ),
    ),
    (
        "Deinit__9BadBoonie",
        Ok(
            "BadBoonie::Deinit(void)",
        ),
    ),
    (
        "GameCamera_UseCurrentVector__Fb",
        Ok(
            "GameCamera_UseCurrentVector(bool)",
        ),
    ),
    (
        "__sjthrow",
        Err(
            InvalidSpecialMethod(
                "sjthrow",
            ),
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z16CaveBatObjective",
        Ok(
            "ModuleInfo<CaveBatObjective> virtual table",
        ),
    ),
    (
        "SetupSpawnedCollisionObjects__12EnemySpawner",
        Ok(
            "EnemySpawner::SetupSpawnedCollisionObjects(void)",
        ),
    ),
    (
        "GCT_DrawText__FPcff",
        Ok(
            "GCT_DrawText(char *, float, float)",
        ),
    ),
    (
        "MORAY_EEL_HOLE_ANM",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_RandomGaussian__Fv",
        Ok(
            "Tools_RandomGaussian(void)",
        ),
    ),
    (
        "_GLOBAL_$I$GeneratePos_RunAwayFromTy__FR6VectorRC6VectorT1f",
        Ok(
            "global constructors keyed to GeneratePos_RunAwayFromTy(Vector &, Vector const &, Vector const &, float)",
        ),
    ),
    (
        "Blitter_InitModule__Fv",
        Ok(
            "Blitter_InitModule(void)",
        ),
    ),
    (
        "Idle__11FrillLizard",
        Ok(
            "FrillLizard::Idle(void)",
        ),
    ),
    (
        "Munch__4Croc",
        Ok(
            "Croc::Munch(void)",
        ),
    ),
    (
        "LedgePullUp__2Ty",
        Ok(
            "Ty::LedgePullUp(void)",
        ),
    ),
    (
        "ModelRender_CFTW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "PE_SnowTrail_LoadResources__Fv",
        Ok(
            "PE_SnowTrail_LoadResources(void)",
        ),
    ),
    (
        "FireworksCrate_GetDescriptor__Fv",
        Ok(
            "FireworksCrate_GetDescriptor(void)",
        ),
    ),
    (
        "Deinit__9FireWorks",
        Ok(
            "FireWorks::Deinit(void)",
        ),
    ),
    (
        "Message__6BasketP9MKMessage",
        Ok(
            "Basket::Message(MKMessage *)",
        ),
    ),
    (
        "Place__13MusicalIcicleP6VectorT1T1i",
        Ok(
            "MusicalIcicle::Place(Vector *, Vector *, Vector *, int)",
        ),
    ),
    (
        "_vt$10CrikeyChum",
        Ok(
            "CrikeyChum virtual table",
        ),
    ),
    (
        "_vt$13CritterField2",
        Ok(
            "CritterField2 virtual table",
        ),
    ),
    (
        "Shears_Add__FP14ShearsLoadInfo",
        Ok(
            "Shears_Add(ShearsLoadInfo *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6SpyEggPv",
        Ok(
            "ModuleInfo<SpyEgg>::ConstructObject(void *)",
        ),
    ),
    (
        "RenderTypeToString__Fi",
        Ok(
            "RenderTypeToString(int)",
        ),
    ),
    (
        "strrchr",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__8SentinelP9MKMessage",
        Ok(
            "Sentinel::Message(MKMessage *)",
        ),
    ),
    (
        "Input_AllPadsWasButtonPressed__FP12InputDevicesi",
        Ok(
            "Input_AllPadsWasButtonPressed(InputDevices *, int)",
        ),
    ),
    (
        "ModelRender_CFW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dialog_Stop__Fv",
        Ok(
            "Dialog_Stop(void)",
        ),
    ),
    (
        "SetColor__10DropShadowP6Vector",
        Ok(
            "DropShadow::SetColor(Vector *)",
        ),
    ),
    (
        "InitRun__5Rhino",
        Ok(
            "Rhino::InitRun(void)",
        ),
    ),
    (
        "BackOff__11FrillLizardb",
        Ok(
            "FrillLizard::BackOff(bool)",
        ),
    ),
    (
        "GetCentreAndNormal__2TyP6VectorT1",
        Ok(
            "Ty::GetCentreAndNormal(Vector *, Vector *)",
        ),
    ),
    (
        "Alert_CanGoToState__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Alert_CanGoToState(void)",
        ),
    ),
    (
        "Update__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::Update(void)",
        ),
    ),
    (
        "StaticSpikes_LoadResources__Fv",
        Ok(
            "StaticSpikes_LoadResources(void)",
        ),
    ),
    (
        "SetWarpHide__2Ty",
        Ok(
            "Ty::SetWarpHide(void)",
        ),
    ),
    (
        "WaveInit__8KoalaKid",
        Ok(
            "KoalaKid::WaveInit(void)",
        ),
    ),
    (
        "_vt$8CableCar",
        Ok(
            "CableCar virtual table",
        ),
    ),
    (
        "RunForward__8PubeCrabb",
        Ok(
            "PubeCrab::RunForward(bool)",
        ),
    ),
    (
        "BiteUncharge__6TyBite",
        Ok(
            "TyBite::BiteUncharge(void)",
        ),
    ),
    (
        "Reeds_LoadResources__Fv",
        Ok(
            "Reeds_LoadResources(void)",
        ),
    ),
    (
        "ScrubTurkey_LoadResources__FP8KromeIni",
        Ok(
            "ScrubTurkey_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SpawnIceShard__17TyParticleManagerP6VectorT1f",
        Ok(
            "TyParticleManager::SpawnIceShard(Vector *, Vector *, float)",
        ),
    ),
    (
        "Hud_InitBossHealth__FP8Materiali",
        Ok(
            "Hud_InitBossHealth(Material *, int)",
        ),
    ),
    (
        "AutoCenter_Update__10GameCamera",
        Ok(
            "GameCamera::AutoCenter_Update(void)",
        ),
    ),
    (
        "InitMixValues__11MKWaterPropP6VectorT1T1T1",
        Ok(
            "MKWaterProp::InitMixValues(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "BiteEffect_Deinit__10GameCamera",
        Ok(
            "GameCamera::BiteEffect_Deinit(void)",
        ),
    ),
    (
        "LoadDone__6Target",
        Ok(
            "Target::LoadDone(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10SnowSpiderPv",
        Ok(
            "ModuleInfo<SnowSpider>::ConstructObject(void *)",
        ),
    ),
    (
        "WalkTurn__6Muddieb",
        Ok(
            "Muddie::WalkTurn(bool)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z16CheckpointStruct",
        Ok(
            "ModuleInfo<CheckpointStruct> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4EllePv",
        Ok(
            "ModuleInfo<Elle>::ConstructObject(void *)",
        ),
    ),
    (
        "KissOfDeathChase__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathChase(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8MegarangPv",
        Ok(
            "ModuleInfo<Megarang>::ConstructObject(void *)",
        ),
    ),
    (
        "boomerangs",
        Err(
            NotMangled,
        ),
    ),
    (
        "PaddleDepth",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceLseek64",
        Err(
            NotMangled,
        ),
    ),
    (
        "ExitThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__28CameraOverrideCameraLoadInfoP12KromeIniLine",
        Ok(
            "CameraOverrideCameraLoadInfo::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "__terminate_func",
        Err(
            InvalidCustomNameOnTemplate(
                "erminate_func",
            ),
        ),
    ),
    (
        "ModelRender_ACS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetRandom__5Cloudff",
        Ok(
            "Cloud::GetRandom(float, float)",
        ),
    ),
    (
        "Draw__5Shark",
        Ok(
            "Shark::Draw(void)",
        ),
    ),
    (
        "AttachPropDeinit__12DialogEffect",
        Ok(
            "DialogEffect::AttachPropDeinit(void)",
        ),
    ),
    (
        "_5Flame$envelope",
        Ok(
            "Flame::envelope",
        ),
    ),
    (
        "Windmill_Add__FP6VectorT0",
        Ok(
            "Windmill_Add(Vector *, Vector *)",
        ),
    ),
    (
        "Draw__10TotalCount",
        Ok(
            "TotalCount::Draw(void)",
        ),
    ),
    (
        "sceSymlink",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateLogic__9ShoalFish",
        Ok(
            "ShoalFish::UpdateLogic(void)",
        ),
    ),
    (
        "Tools_ApplyDoppler__FiP6VectorT1T1T1",
        Ok(
            "Tools_ApplyDoppler(int, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "InvalidDCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraOverrideHigh_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideHigh_Line(KromeIniLine *)",
        ),
    ),
    (
        "__tf10bad_typeid",
        Ok(
            "bad_typeid type_info function",
        ),
    ),
    (
        "Init__11TriggerPropP11GameObjDesc",
        Ok(
            "TriggerProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "_14ModuleInfoBase$pList",
        Ok(
            "ModuleInfoBase::pList",
        ),
    ),
    (
        "Waterfall_Spray_Update__FP14ParticleSystem",
        Ok(
            "Waterfall_Spray_Update(ParticleSystem *)",
        ),
    ),
    (
        "_vt$16__user_type_info",
        Ok(
            "__user_type_info virtual table",
        ),
    ),
    (
        "CrawlInit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlInit(void)",
        ),
    ),
    (
        "Update__20WaterfallSprayStruct",
        Ok(
            "WaterfallSprayStruct::Update(void)",
        ),
    ),
    (
        "red",
        Err(
            NotMangled,
        ),
    ),
    (
        "descr_cast__H1ZP14SynkerFrogDesc_P16MKPropDescriptor_X01",
        Ok(
            "SynkerFrogDesc * descr_cast<SynkerFrogDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Message__6GeyserP9MKMessage",
        Ok(
            "Geyser::Message(MKMessage *)",
        ),
    ),
    (
        "TestTyOn__11IcePlatform",
        Ok(
            "IcePlatform::TestTyOn(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7IceCubePv",
        Ok(
            "ModuleInfo<IceCube>::ConstructObject(void *)",
        ),
    ),
    (
        "SpikeyIce_Add__FP6VectorT0",
        Ok(
            "SpikeyIce_Add(Vector *, Vector *)",
        ),
    ),
    (
        "Message__8SnowPileP9MKMessage",
        Ok(
            "SnowPile::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Bull",
        Ok(
            "ModuleInfo<Bull> virtual table",
        ),
    ),
    (
        "EventCheck__7BushPig",
        Ok(
            "BushPig::EventCheck(void)",
        ),
    ),
    (
        "Wobble_Update__4Gate",
        Ok(
            "Gate::Wobble_Update(void)",
        ),
    ),
    (
        "Heap_MemAlloc__Fi",
        Ok(
            "Heap_MemAlloc(int)",
        ),
    ),
    (
        "Reset__2Ty",
        Ok(
            "Ty::Reset(void)",
        ),
    ),
    (
        "BiteTrail_Reset__Fv",
        Ok(
            "BiteTrail_Reset(void)",
        ),
    ),
    (
        "IdleInit__6Julius",
        Ok(
            "Julius::IdleInit(void)",
        ),
    ),
    (
        "CheckEvents__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CheckEvents(void)",
        ),
    ),
    (
        "Update__10SynkerFrog",
        Ok(
            "SynkerFrog::Update(void)",
        ),
    ),
    (
        "Update__8ChuteLog",
        Ok(
            "ChuteLog::Update(void)",
        ),
    ),
    (
        "InitIdle__9Doomerang",
        Ok(
            "Doomerang::InitIdle(void)",
        ),
    ),
    (
        "InWater__2Ty",
        Ok(
            "Ty::InWater(void)",
        ),
    ),
    (
        "Draw__9StarTrail",
        Ok(
            "StarTrail::Draw(void)",
        ),
    ),
    (
        "Gain__8TyHealthi",
        Ok(
            "TyHealth::Gain(int)",
        ),
    ),
    (
        "GuideParticle_Show__Fv",
        Ok(
            "GuideParticle_Show(void)",
        ),
    ),
    (
        "Reset__9TyContext",
        Ok(
            "TyContext::Reset(void)",
        ),
    ),
    (
        "DeinitKnockBack__2Ty",
        Ok(
            "Ty::DeinitKnockBack(void)",
        ),
    ),
    (
        "CameraOverrideRail_Reset__Fv",
        Ok(
            "CameraOverrideRail_Reset(void)",
        ),
    ),
    (
        "_rix_100",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Deinit__8WhiteBat",
        Ok(
            "global constructors keyed to WhiteBat::Deinit(void)",
        ),
    ),
    (
        "IsBiting__2Ty",
        Ok(
            "Ty::IsBiting(void)",
        ),
    ),
    (
        "Sound_SetListener",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__5Gecko",
        Ok(
            "Gecko::Deinit(void)",
        ),
    ),
    (
        "Init__7IceRampP11GameObjDesc",
        Ok(
            "IceRamp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__6TargetP11GameObjDesc",
        Ok(
            "Target::Init(GameObjDesc *)",
        ),
    ),
    (
        "Gesture__5Lenny",
        Ok(
            "Lenny::Gesture(void)",
        ),
    ),
    (
        "GetHeight__11EnemyObject",
        Ok(
            "EnemyObject::GetHeight(void)",
        ),
    ),
    (
        "Translation_GetLanguage__Fv",
        Ok(
            "Translation_GetLanguage(void)",
        ),
    ),
    (
        "Tools_BuildLTWMatrix__FP6MatrixP6VectorT1",
        Ok(
            "Tools_BuildLTWMatrix(Matrix *, Vector *, Vector *)",
        ),
    ),
    (
        "RequestRang__6Maurie",
        Ok(
            "Maurie::RequestRang(void)",
        ),
    ),
    (
        "GetTreasureInit__7C3Actor",
        Ok(
            "C3Actor::GetTreasureInit(void)",
        ),
    ),
    (
        "Update__11BurningTree",
        Ok(
            "BurningTree::Update(void)",
        ),
    ),
    (
        "CanInitiateAttack__11EnemyObject",
        Ok(
            "EnemyObject::CanInitiateAttack(void)",
        ),
    ),
    (
        "LassoSnapped__5Lasso",
        Ok(
            "Lasso::LassoSnapped(void)",
        ),
    ),
    (
        "LoadLevel_Path_Start__Fv",
        Ok(
            "LoadLevel_Path_Start(void)",
        ),
    ),
    (
        "Update_Wait__10CuttleFish",
        Ok(
            "CuttleFish::Update_Wait(void)",
        ),
    ),
    (
        "Deinit__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Deinit(void)",
        ),
    ),
    (
        "UpdateEndPosition__8Megarang",
        Ok(
            "Megarang::UpdateEndPosition(void)",
        ),
    ),
    (
        "BurningTree_LoadResources__FP8KromeIni",
        Ok(
            "BurningTree_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__9JeepAnims",
        Ok(
            "JeepAnims::Init(void)",
        ),
    ),
    (
        "Blitter_ParticleRender_Init_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__11BilbyStruct",
        Ok(
            "BilbyStruct::Idle(void)",
        ),
    ),
    (
        "OffsetsUsed__12MKAnimScript",
        Ok(
            "MKAnimScript::OffsetsUsed(void)",
        ),
    ),
    (
        "MissInit__5Leech",
        Ok(
            "Leech::MissInit(void)",
        ),
    ),
    (
        "LoadLine__11PontoonRopeP12KromeIniLine",
        Ok(
            "PontoonRope::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Bunyip_End__Fv",
        Ok(
            "Bunyip_End(void)",
        ),
    ),
    (
        "_11ReedsStruct$MaxReeds",
        Ok(
            "ReedsStruct::MaxReeds",
        ),
    ),
    (
        "iWakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_TurnToTarget__FP6VectorT0ff",
        Ok(
            "Tools_TurnToTarget(Vector *, Vector *, float, float)",
        ),
    ),
    (
        "MKWaterRender_LDTMF_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__13CritterField2P9MKMessage",
        Ok(
            "CritterField2::Message(MKMessage *)",
        ),
    ),
    (
        "WaterDragon_Draw__Fv",
        Ok(
            "WaterDragon_Draw(void)",
        ),
    ),
    (
        "LoadDone__8Burnable",
        Ok(
            "Burnable::LoadDone(void)",
        ),
    ),
    (
        "GetLocalVelocity__9FrillBikeP6Vectorf",
        Ok(
            "FrillBike::GetLocalVelocity(Vector *, float)",
        ),
    ),
    (
        "Assign__4BirdP13CritterField2",
        Ok(
            "Bird::Assign(CritterField2 *)",
        ),
    ),
    (
        "_15TurningPlatform$loadPoints",
        Ok(
            "TurningPlatform::loadPoints",
        ),
    ),
    (
        "Deinit__16WaterSlideEffect",
        Ok(
            "WaterSlideEffect::Deinit(void)",
        ),
    ),
    (
        "StartFly__5Roach",
        Ok(
            "Roach::StartFly(void)",
        ),
    ),
    (
        "JumpTransition__7BushPig",
        Ok(
            "BushPig::JumpTransition(void)",
        ),
    ),
    (
        "MKWaterRender_TypeInit_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::AttackInit(void)",
        ),
    ),
    (
        "Explode__5Leech",
        Ok(
            "Leech::Explode(void)",
        ),
    ),
    (
        "sceCdSyncS",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLO1T_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_14ParticleSystem$bDraw",
        Ok(
            "ParticleSystem::bDraw",
        ),
    ),
    (
        "IdleInit__13MusicalIcicle",
        Ok(
            "MusicalIcicle::IdleInit(void)",
        ),
    ),
    (
        "Disable__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Disable(void)",
        ),
    ),
    (
        "DeinitRun__7BushPig",
        Ok(
            "BushPig::DeinitRun(void)",
        ),
    ),
    (
        "Kin_GetDistance__FPfT0T0T0",
        Ok(
            "Kin_GetDistance(float *, float *, float *, float *)",
        ),
    ),
    (
        "Init__7UIImageff",
        Ok(
            "UIImage::Init(float, float)",
        ),
    ),
    (
        "Underwater_SetSourceAboveWater__10GameCamera",
        Ok(
            "GameCamera::Underwater_SetSourceAboveWater(void)",
        ),
    ),
    (
        "SetUpLandJump__2Ty",
        Ok(
            "Ty::SetUpLandJump(void)",
        ),
    ),
    (
        "BashInit__6Fluffy",
        Ok(
            "Fluffy::BashInit(void)",
        ),
    ),
    (
        "SteamDeinit__9ShadowBat",
        Ok(
            "ShadowBat::SteamDeinit(void)",
        ),
    ),
    (
        "sceInetRecv",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsSoundLoaded__8KoalaKid",
        Ok(
            "KoalaKid::IsSoundLoaded(void)",
        ),
    ),
    (
        "__tf17__class_type_info",
        Ok(
            "__class_type_info type_info function",
        ),
    ),
    (
        "PreUpdate__6Friend",
        Ok(
            "Friend::PreUpdate(void)",
        ),
    ),
    (
        "DeathDeinit__4Croc",
        Ok(
            "Croc::DeathDeinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13CritterField2",
        Ok(
            "ModuleInfo<CritterField2> virtual table",
        ),
    ),
    (
        "strtod",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15KingFisherField",
        Ok(
            "ModuleInfo<KingFisherField>::Init(void)",
        ),
    ),
    (
        "BittenIdleInit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::BittenIdleInit(void)",
        ),
    ),
    (
        "MiniGame_A2_Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_A2_Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Eel_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Eel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Rex",
        Ok(
            "ModuleInfo<Rex>::Init(void)",
        ),
    ),
    (
        "InitModule__10GameObject",
        Ok(
            "GameObject::InitModule(void)",
        ),
    ),
    (
        "DrawTextWrapped3d__4FontPcffP6Vectorff11FontJustifyUii",
        Ok(
            "Font::DrawTextWrapped3d(char *, float, float, Vector *, float, float, FontJustify, unsigned int, int)",
        ),
    ),
    (
        "boomerangLauncherStates",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_DrawDebugArc__FP6Matrixffifi",
        Ok(
            "Tools_DrawDebugArc(Matrix *, float, float, int, float, int)",
        ),
    ),
    (
        "System_DoZCheck__FP13ZCheckRequest",
        Ok(
            "System_DoZCheck(ZCheckRequest *)",
        ),
    ),
    (
        "LaunchInit__10WarpFlower",
        Ok(
            "WarpFlower::LaunchInit(void)",
        ),
    ),
    (
        "Reeds_Reset__Fv",
        Ok(
            "Reeds_Reset(void)",
        ),
    ),
    (
        "isinf",
        Err(
            NotMangled,
        ),
    ),
    (
        "MoveInit__7Farlapp",
        Ok(
            "Farlapp::MoveInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10NinjaGeckoPv",
        Ok(
            "ModuleInfo<NinjaGecko>::ConstructObject(void *)",
        ),
    ),
    (
        "Merge__13PathNodeNexusP13PathNodeNexus",
        Ok(
            "PathNodeNexus::Merge(PathNodeNexus *)",
        ),
    ),
    (
        "LogicUpdate__10BlueTongue",
        Ok(
            "BlueTongue::LogicUpdate(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Fly",
        Ok(
            "ModuleInfo<Fly>::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10WaterWheelPv",
        Ok(
            "ModuleInfo<WaterWheel>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__8ElevatorP11GameObjDesc",
        Ok(
            "Elevator::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__5RingoP11GameObjDesc",
        Ok(
            "Ringo::Init(GameObjDesc *)",
        ),
    ),
    (
        "__throw",
        Err(
            InvalidCustomNameOnTemplate(
                "hrow",
            ),
        ),
    ),
    (
        "Fire__12ThrowingStarP6Vector",
        Ok(
            "ThrowingStar::Fire(Vector *)",
        ),
    ),
    (
        "BadBoonie_LoadResources__FP8KromeIni",
        Ok(
            "BadBoonie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Update__6Geyser",
        Ok(
            "Geyser::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Sentinel",
        Ok(
            "ModuleInfo<Sentinel> virtual table",
        ),
    ),
    (
        "C3Chest_LoadResources__FP8KromeIni",
        Ok(
            "C3Chest_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__14TriggerBoxProp",
        Ok(
            "TriggerBoxProp::LoadDone(void)",
        ),
    ),
    (
        "RotatePYR__6MatrixP6MatrixP6Vector",
        Ok(
            "Matrix::RotatePYR(Matrix *, Vector *)",
        ),
    ),
    (
        "Show__16BoomerangManager13BoomerangSide",
        Ok(
            "BoomerangManager::Show(BoomerangSide)",
        ),
    ),
    (
        "Reset__7CaveBat",
        Ok(
            "CaveBat::Reset(void)",
        ),
    ),
    (
        "RemoveObject__17GameObjectManagerP10GameObject",
        Ok(
            "GameObjectManager::RemoveObject(GameObject *)",
        ),
    ),
    (
        "DebugInfo_Box__FPcP6VectorT1i",
        Ok(
            "DebugInfo_Box(char *, Vector *, Vector *, int)",
        ),
    ),
    (
        "_GLOBAL_$I$FinishLine_Show__Fv",
        Ok(
            "global constructors keyed to FinishLine_Show(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7SnowGun",
        Ok(
            "ModuleInfo<SnowGun> virtual table",
        ),
    ),
    (
        "ReturnHome__5Rufus",
        Ok(
            "Rufus::ReturnHome(void)",
        ),
    ),
    (
        "CustomVectors_Deinit__10GameCamera",
        Ok(
            "GameCamera::CustomVectors_Deinit(void)",
        ),
    ),
    (
        "iEnableIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__11Shatterable",
        Ok(
            "Shatterable::LoadDone(void)",
        ),
    ),
    (
        "RFU084_ClearEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "PE_BullSplash_LoadResources__Fv",
        Ok(
            "PE_BullSplash_LoadResources(void)",
        ),
    ),
    (
        "UpdateShadow__6Portalf",
        Ok(
            "Portal::UpdateShadow(float)",
        ),
    ),
    (
        "RetreatInit__5Lenny",
        Ok(
            "Lenny::RetreatInit(void)",
        ),
    ),
    (
        "Rail_Init__14CameraOverride",
        Ok(
            "CameraOverride::Rail_Init(void)",
        ),
    ),
    (
        "Init__17CritterField2DescP14ModuleInfoBaseP12CritterDesc2UiUiUi",
        Ok(
            "CritterField2Desc::Init(ModuleInfoBase *, CritterDesc2 *, unsigned int, unsigned int, unsigned int)",
        ),
    ),
    (
        "UpdateWorldMatrix__10WhirlyWind",
        Ok(
            "WhirlyWind::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "Idle__4Drum",
        Ok(
            "Drum::Idle(void)",
        ),
    ),
    (
        "MKMemoryCard_CalculateBlocksRequired__FiPi",
        Ok(
            "MKMemoryCard_CalculateBlocksRequired(int, int *)",
        ),
    ),
    (
        "IdleInit__4Bull",
        Ok(
            "Bull::IdleInit(void)",
        ),
    ),
    (
        "vblankCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "ShootDeinit__10ScubaFrill",
        Ok(
            "ScubaFrill::ShootDeinit(void)",
        ),
    ),
    (
        "HuntShazzaInit__10BlueTongue",
        Ok(
            "BlueTongue::HuntShazzaInit(void)",
        ),
    ),
    (
        "SetEnterSharkCage__2TyP6Vectorb",
        Ok(
            "Ty::SetEnterSharkCage(Vector *, bool)",
        ),
    ),
    (
        "ModelRender_CFM_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "AuroraKid_LoadResources__FP8KromeIni",
        Ok(
            "AuroraKid_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Chase__9FrillBike",
        Ok(
            "FrillBike::Chase(void)",
        ),
    ),
    (
        "Resolve__13PlatformRider",
        Ok(
            "PlatformRider::Resolve(void)",
        ),
    ),
    (
        "sceMcUdCheckNewCard",
        Err(
            NotMangled,
        ),
    ),
    (
        "RotateRoll__6Matrixf",
        Ok(
            "Matrix::RotateRoll(float)",
        ),
    ),
    (
        "MKWaterRender_WSEMTMFL2_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlinchInit__10ScubaFrill",
        Ok(
            "ScubaFrill::FlinchInit(void)",
        ),
    ),
    (
        "CheckShotPossible__10ProjectileP6VectorT1",
        Ok(
            "Projectile::CheckShotPossible(Vector *, Vector *)",
        ),
    ),
    (
        "_extrainfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Unassign__9ShoalFishP13CritterField2",
        Ok(
            "ShoalFish::Unassign(CritterField2 *)",
        ),
    ),
    (
        "WalkTurn__8PubeCrabb",
        Ok(
            "PubeCrab::WalkTurn(bool)",
        ),
    ),
    (
        "TimeTrial_Cancel__Fb",
        Ok(
            "TimeTrial_Cancel(bool)",
        ),
    ),
    (
        "Video_GetMoreInputData__FP5Videoi",
        Ok(
            "Video_GetMoreInputData(Video *, int)",
        ),
    ),
    (
        "LoadObjects__11GameObjDescP8KromeIniP12KromeIniLine",
        Ok(
            "GameObjDesc::LoadObjects(KromeIni *, KromeIniLine *)",
        ),
    ),
    (
        "WeatherTypes_GetWeatherType__FPc",
        Ok(
            "WeatherTypes_GetWeatherType(char *)",
        ),
    ),
    (
        "_sceSDC",
        Err(
            NotMangled,
        ),
    ),
    (
        "__new_handler",
        Err(
            InvalidSpecialMethod(
                "new_handler",
            ),
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Croc",
        Ok(
            "ModuleInfo<Croc>::Init(void)",
        ),
    ),
    (
        "Init__12EnemySpawnerP11GameObjDesc",
        Ok(
            "EnemySpawner::Init(GameObjDesc *)",
        ),
    ),
    (
        "Activate__12FlameThrowerb",
        Ok(
            "FlameThrower::Activate(bool)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11BonusPickup",
        Ok(
            "ModuleInfo<BonusPickup>::Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Pontoon",
        Ok(
            "ModuleInfo<Pontoon> virtual table",
        ),
    ),
    (
        "Use__4View",
        Ok(
            "View::Use(void)",
        ),
    ),
    (
        "Update__22Tools_AnimEventManagerP12MKAnimScript",
        Ok(
            "Tools_AnimEventManager::Update(MKAnimScript *)",
        ),
    ),
    (
        "GameCamera_UseRobotEffect__Fb",
        Ok(
            "GameCamera_UseRobotEffect(bool)",
        ),
    ),
    (
        "__throw_bad_cast",
        Err(
            InvalidCustomNameOnTemplate(
                "hrow_bad_cast",
            ),
        ),
    ),
    (
        "DumpStrips__5Model",
        Ok(
            "Model::DumpStrips(void)",
        ),
    ),
    (
        "_8BeachHut$beachHutDesc",
        Ok(
            "BeachHut::beachHutDesc",
        ),
    ),
    (
        "write",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14ShadowBatValve",
        Ok(
            "ModuleInfo<ShadowBatValve>::Init(void)",
        ),
    ),
    (
        "GetMovementDesc__11EnemyObject",
        Ok(
            "EnemyObject::GetMovementDesc(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7LilyPad",
        Ok(
            "ModuleInfo<LilyPad>::Init(void)",
        ),
    ),
    (
        "ToggleChangeLevel__Fv",
        Ok(
            "ToggleChangeLevel(void)",
        ),
    ),
    (
        "Collision_InitModule__Fv",
        Ok(
            "Collision_InitModule(void)",
        ),
    ),
    (
        "Collision_ClipForDynamicItems__10GameCameraP6VectorfT1",
        Ok(
            "GameCamera::Collision_ClipForDynamicItems(Vector *, float, Vector *)",
        ),
    ),
    (
        "Lava_LoadResources__FP8KromeIni",
        Ok(
            "Lava_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Doomerang",
        Ok(
            "ModuleInfo<Doomerang>::Init(void)",
        ),
    ),
    (
        "Reset__6Wombat",
        Ok(
            "Wombat::Reset(void)",
        ),
    ),
    (
        "sceSifSetDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__9SharkCageP11GameObjDesc",
        Ok(
            "SharkCage::Init(GameObjDesc *)",
        ),
    ),
    (
        "Video_CbStopDMA__FP7sceMpegP13sceMpegCbDataP5Video",
        Ok(
            "Video_CbStopDMA(sceMpeg *, sceMpegCbData *, Video *)",
        ),
    ),
    (
        "Critters_DeInit__Fv",
        Ok(
            "Critters_DeInit(void)",
        ),
    ),
    (
        "_sceCd_Read_cur_pos",
        Err(
            NotMangled,
        ),
    ),
    (
        "ParticleSystemRender_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__4Tick",
        Ok(
            "Tick::Idle(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5RhinoPv",
        Ok(
            "ModuleInfo<Rhino>::ConstructObject(void *)",
        ),
    ),
    (
        "GetRunTurnSpeed__11EnemyObject",
        Ok(
            "EnemyObject::GetRunTurnSpeed(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13PickupCounter",
        Ok(
            "ModuleInfo<PickupCounter> virtual table",
        ),
    ),
    (
        "Init__8BurnableP11GameObjDesc",
        Ok(
            "Burnable::Init(GameObjDesc *)",
        ),
    ),
    (
        "IdleInit__11BonusPickup",
        Ok(
            "BonusPickup::IdleInit(void)",
        ),
    ),
    (
        "Tools_DropShadow_Update__Fv",
        Ok(
            "Tools_DropShadow_Update(void)",
        ),
    ),
    (
        "__empty",
        Err(
            InvalidSpecialMethod(
                "empty",
            ),
        ),
    ),
    (
        "StalactiteTrap_LoadResources__FP8KromeIni",
        Ok(
            "StalactiteTrap_LoadResources(KromeIni *)",
        ),
    ),
    (
        "EventQuickSand__2TyPc",
        Ok(
            "Ty::EventQuickSand(char *)",
        ),
    ),
    (
        "__ieee754_atan2",
        Err(
            InvalidSpecialMethod(
                "ieee754_atan2",
            ),
        ),
    ),
    (
        "GetWaveHeight__6MKWaveffP6Vector",
        Ok(
            "MKWave::GetWaveHeight(float, float, Vector *)",
        ),
    ),
    (
        "AdjustDeltasDynamically__10GameCamera",
        Ok(
            "GameCamera::AdjustDeltasDynamically(void)",
        ),
    ),
    (
        "Init__6Splineib",
        Ok(
            "Spline::Init(int, bool)",
        ),
    ),
    (
        "ReleaseWaitThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_SaveGame_Draw__Fv",
        Ok(
            "PauseScreen_SaveGame_Draw(void)",
        ),
    ),
    (
        "TimeTrial_StartTimer__Fv",
        Ok(
            "TimeTrial_StartTimer(void)",
        ),
    ),
    (
        "GrabFieldName__6Parser",
        Ok(
            "Parser::GrabFieldName(void)",
        ),
    ),
    (
        "Reset__7IceRamp",
        Ok(
            "IceRamp::Reset(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Barracuda",
        Ok(
            "ModuleInfo<Barracuda>::Init(void)",
        ),
    ),
    (
        "Deinit__13SkinkDropTail",
        Ok(
            "SkinkDropTail::Deinit(void)",
        ),
    ),
    (
        "Dead__6Fluffy",
        Ok(
            "Fluffy::Dead(void)",
        ),
    ),
    (
        "Boomerang_CheckForHit__FP6Vectorfff",
        Ok(
            "Boomerang_CheckForHit(Vector *, float, float, float)",
        ),
    ),
    (
        "FileSys_Save__FPcbPvi",
        Ok(
            "FileSys_Save(char *, bool, void *, int)",
        ),
    ),
    (
        "mmEaTyLogoPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawReflection__9Boomerang",
        Ok(
            "Boomerang::DrawReflection(void)",
        ),
    ),
    (
        "Reset__12FlameThrower",
        Ok(
            "FlameThrower::Reset(void)",
        ),
    ),
    (
        "GetDesc__9Boomerang",
        Ok(
            "Boomerang::GetDesc(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Jeep",
        Ok(
            "ModuleInfo<Jeep> virtual table",
        ),
    ),
    (
        "Chase__5Shark",
        Ok(
            "Shark::Chase(void)",
        ),
    ),
    (
        "Draw__11EnemyObject",
        Ok(
            "EnemyObject::Draw(void)",
        ),
    ),
    (
        "atof",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__11WeatherPropP11GameObjDesc",
        Ok(
            "WeatherProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Deinit__8Aquarang",
        Ok(
            "Aquarang::Deinit(void)",
        ),
    ),
    (
        "_$_9exception",
        Ok(
            "exception::~exception(void)",
        ),
    ),
    (
        "SkipData__6Parser",
        Ok(
            "Parser::SkipData(void)",
        ),
    ),
    (
        "Message__11BurningTreeP9MKMessage",
        Ok(
            "BurningTree::Message(MKMessage *)",
        ),
    ),
    (
        "PauseScreen_Continue_LoadResources__Fv",
        Ok(
            "PauseScreen_Continue_LoadResources(void)",
        ),
    ),
    (
        "CustomVectors_Init__10GameCamera",
        Ok(
            "GameCamera::CustomVectors_Init(void)",
        ),
    ),
    (
        "FrontEnd_Deinit__Fv",
        Ok(
            "FrontEnd_Deinit(void)",
        ),
    ),
    (
        "_5Lenny$waitingLenny",
        Ok(
            "Lenny::waitingLenny",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Wombat",
        Ok(
            "ModuleInfo<Wombat> virtual table",
        ),
    ),
    (
        "FireIce__6Fluffy",
        Ok(
            "Fluffy::FireIce(void)",
        ),
    ),
    (
        "GetDesc__8Elevator",
        Ok(
            "Elevator::GetDesc(void)",
        ),
    ),
    (
        "WalkTransition__7BushPig",
        Ok(
            "BushPig::WalkTransition(void)",
        ),
    ),
    (
        "Reset__16AutoTargetStruct",
        Ok(
            "AutoTargetStruct::Reset(void)",
        ),
    ),
    (
        "SpawnDynamic__3GemP6Vector",
        Ok(
            "Gem::SpawnDynamic(Vector *)",
        ),
    ),
    (
        "VU0_Global_Start",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetName2Address",
        Err(
            NotMangled,
        ),
    ),
    (
        "EnemyCamera_Update__10GameCamera",
        Ok(
            "GameCamera::EnemyCamera_Update(void)",
        ),
    ),
    (
        "Reset__9Boomerang",
        Ok(
            "Boomerang::Reset(void)",
        ),
    ),
    (
        "Draw__10Teleporter",
        Ok(
            "Teleporter::Draw(void)",
        ),
    ),
    (
        "Smooth__6Spline",
        Ok(
            "Spline::Smooth(void)",
        ),
    ),
    (
        "TY_COLLIDE_ROOF_RATIO",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$PontoonRope_LoadResource__FP8KromeIni",
        Ok(
            "global constructors keyed to PontoonRope_LoadResource(KromeIni *)",
        ),
    ),
    (
        "DisableAndDeinitOverride__21CameraOverrideManagerP14CameraOverrideP16CameraDescriptori",
        Ok(
            "CameraOverrideManager::DisableAndDeinitOverride(CameraOverride *, CameraDescriptor *, int)",
        ),
    ),
    (
        "Reeds_Delete__FP11ReedsStruct",
        Ok(
            "Reeds_Delete(ReedsStruct *)",
        ),
    ),
    (
        "RenderTexture_LoadResources__Fv",
        Ok(
            "RenderTexture_LoadResources(void)",
        ),
    ),
    (
        "SkidUpdate__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::SkidUpdate(void)",
        ),
    ),
    (
        "gDisplayRegs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__5RufusP9MKMessage",
        Ok(
            "Rufus::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z16CaveBatObjective",
        Ok(
            "ModuleInfo<CaveBatObjective>::Init(void)",
        ),
    ),
    (
        "LilNeddy_LoadResources__FP8KromeIni",
        Ok(
            "LilNeddy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IsJoyPadZero__2Ty",
        Ok(
            "Ty::IsJoyPadZero(void)",
        ),
    ),
    (
        "Update__11PontoonRope",
        Ok(
            "PontoonRope::Update(void)",
        ),
    ),
    (
        "_vt$3Emu",
        Ok(
            "Emu virtual table",
        ),
    ),
    (
        "sceDmaRecvN",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_AiC_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$7Furnace",
        Ok(
            "Furnace virtual table",
        ),
    ),
    (
        "DisableIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "BonusPickup_Create__FP6Vector15BonusPickupType",
        Ok(
            "BonusPickup_Create(Vector *, BonusPickupType)",
        ),
    ),
    (
        "CatchEggInit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CatchEggInit(void)",
        ),
    ),
    (
        "GenerateRandomDirection__5Gecko",
        Ok(
            "Gecko::GenerateRandomDirection(void)",
        ),
    ),
    (
        "SetState__10TumbleWeed16TumbleWeedStates",
        Ok(
            "TumbleWeed::SetState(TumbleWeedStates)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13OpalCollectorPv",
        Ok(
            "ModuleInfo<OpalCollector>::ConstructObject(void *)",
        ),
    ),
    (
        "MoveBull__7BushPig",
        Ok(
            "BushPig::MoveBull(void)",
        ),
    ),
    (
        "HitInit__5Rufus",
        Ok(
            "Rufus::HitInit(void)",
        ),
    ),
    (
        "UpdateFired__11Kaboomerang",
        Ok(
            "Kaboomerang::UpdateFired(void)",
        ),
    ),
    (
        "Warning__8KromeIniPc",
        Ok(
            "KromeIni::Warning(char *)",
        ),
    ),
    (
        "Draw__24LeafGrassDustChunkStruct",
        Ok(
            "LeafGrassDustChunkStruct::Draw(void)",
        ),
    ),
    (
        "_vt$7Farlapp",
        Ok(
            "Farlapp virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Fly",
        Ok(
            "ModuleInfo<Fly> virtual table",
        ),
    ),
    (
        "RenderTexture_SetWaterOutput__FPc",
        Ok(
            "RenderTexture_SetWaterOutput(char *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8SignPostPv",
        Ok(
            "ModuleInfo<SignPost>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__3Emu",
        Ok(
            "Emu::Reset(void)",
        ),
    ),
    (
        "InternalUpdate__10LODManagerP5Modelif",
        Ok(
            "LODManager::InternalUpdate(Model *, int, float)",
        ),
    ),
    (
        "fstat",
        Err(
            NotMangled,
        ),
    ),
    (
        "Sound_InitModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKPackage_kLoadedPerSecond",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateAllTypes__14CameraOverrideP26CameraOverrideLoadInfoBase",
        Ok(
            "CameraOverride::CreateAllTypes(CameraOverrideLoadInfoBase *)",
        ),
    ),
    (
        "GetThunderEgg__F14ThunderEggType",
        Ok(
            "GetThunderEgg(ThunderEggType)",
        ),
    ),
    (
        "Message__2TyP9MKMessage",
        Ok(
            "Ty::Message(MKMessage *)",
        ),
    ),
    (
        "Copy__5LennyP5Lenny",
        Ok(
            "Lenny::Copy(Lenny *)",
        ),
    ),
    (
        "DeinitSuperBite__6TyBite",
        Ok(
            "TyBite::DeinitSuperBite(void)",
        ),
    ),
    (
        "fprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "fptoui",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetPreWarp__2TyP6Vector",
        Ok(
            "Ty::SetPreWarp(Vector *)",
        ),
    ),
    (
        "Input_Update__Fv",
        Ok(
            "Input_Update(void)",
        ),
    ),
    (
        "WaypointTyIsFurthestFrom__9Barracuda",
        Ok(
            "Barracuda::WaypointTyIsFurthestFrom(void)",
        ),
    ),
    (
        "ChaseInit__4Croc",
        Ok(
            "Croc::ChaseInit(void)",
        ),
    ),
    (
        "BlockInit__5Skink",
        Ok(
            "Skink::BlockInit(void)",
        ),
    ),
    (
        "_sceCd_scmd_semid",
        Err(
            NotMangled,
        ),
    ),
    (
        "BlockRecoil__8PubeCrab",
        Ok(
            "PubeCrab::BlockRecoil(void)",
        ),
    ),
    (
        "IdleInit__8PubeCrab",
        Ok(
            "PubeCrab::IdleInit(void)",
        ),
    ),
    (
        "GetObjectsInRange__17GameObjectManagerPP10GameObjectiP6Vectorfi",
        Ok(
            "GameObjectManager::GetObjectsInRange(GameObject **, int, Vector *, float, int)",
        ),
    ),
    (
        "GetTarget__11EnemyObject",
        Ok(
            "EnemyObject::GetTarget(void)",
        ),
    ),
    (
        "A1FrillObjective_LoadResources__FP8KromeIni",
        Ok(
            "A1FrillObjective_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4LavaPv",
        Ok(
            "ModuleInfo<Lava>::ConstructObject(void *)",
        ),
    ),
    (
        "Particle_WaterTrail_Create__FPP14ParticleSystemP6VectorT1",
        Ok(
            "Particle_WaterTrail_Create(ParticleSystem **, Vector *, Vector *)",
        ),
    ),
    (
        "Init__21GameCameraPointsDeltaff",
        Ok(
            "GameCameraPointsDelta::Init(float, float)",
        ),
    ),
    (
        "_GLOBAL_$I$Bat_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Bat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Collision_AdjustPoints__10GameCameraP6VectorT1T1Ui",
        Ok(
            "GameCamera::Collision_AdjustPoints(Vector *, Vector *, Vector *, unsigned int)",
        ),
    ),
    (
        "GetType__12EnemySpawner",
        Ok(
            "EnemySpawner::GetType(void)",
        ),
    ),
    (
        "LoadLine__15WaterTankStructP12KromeIniLine",
        Ok(
            "WaterTankStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadLine__10StaticPropP12KromeIniLine",
        Ok(
            "StaticProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "GetMedium__2Ty",
        Ok(
            "Ty::GetMedium(void)",
        ),
    ),
    (
        "MKGrass_SetPushAwayPos__FP6Vectori",
        Ok(
            "MKGrass_SetPushAwayPos(Vector *, int)",
        ),
    ),
    (
        "InitIdleStandAction__2Ty",
        Ok(
            "Ty::InitIdleStandAction(void)",
        ),
    ),
    (
        "BonusPickup_FindSafeEndPos__FP6VectorT0",
        Ok(
            "BonusPickup_FindSafeEndPos(Vector *, Vector *)",
        ),
    ),
    (
        "Init__15HeadTurningInfoG6Vector",
        Ok(
            "HeadTurningInfo::Init(Vector)",
        ),
    ),
    (
        "iChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "RenderTexture_Init__Fv",
        Ok(
            "RenderTexture_Init(void)",
        ),
    ),
    (
        "Reset__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::Reset(void)",
        ),
    ),
    (
        "kill",
        Err(
            NotMangled,
        ),
    ),
    (
        "_6Bubble$pBubbleMat",
        Ok(
            "Bubble::pBubbleMat",
        ),
    ),
    (
        "LogicUpdate__11ScrubTurkey",
        Ok(
            "ScrubTurkey::LogicUpdate(void)",
        ),
    ),
    (
        "clear",
        Err(
            NotMangled,
        ),
    ),
    (
        "PE_Fire_Update__FP14ParticleSystem",
        Ok(
            "PE_Fire_Update(ParticleSystem *)",
        ),
    ),
    (
        "sceDmaRestart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GiveUpInit__6Wombat",
        Ok(
            "Wombat::GiveUpInit(void)",
        ),
    ),
    (
        "Assign__9ShoalFishP13CritterField2",
        Ok(
            "ShoalFish::Assign(CritterField2 *)",
        ),
    ),
    (
        "ApproxMagXZSqaured__FP6VectorT0",
        Ok(
            "ApproxMagXZSqaured(Vector *, Vector *)",
        ),
    ),
    (
        "Draw__12ThrowingStar",
        Ok(
            "ThrowingStar::Draw(void)",
        ),
    ),
    (
        "FakeWall_Update__10GameCamera",
        Ok(
            "GameCamera::FakeWall_Update(void)",
        ),
    ),
    (
        "WaitForRespawn__14CrikeyCanister",
        Ok(
            "CrikeyCanister::WaitForRespawn(void)",
        ),
    ),
    (
        "AttachProp__12DialogEffect",
        Ok(
            "DialogEffect::AttachProp(void)",
        ),
    ),
    (
        "MKWaterRender_Init_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__7SnowGunP11GameObjDesc",
        Ok(
            "SnowGun::Init(GameObjDesc *)",
        ),
    ),
    (
        "__ti16__ptmf_type_info",
        Ok(
            "__ptmf_type_info type_info node",
        ),
    ),
    (
        "PatrolArea__11RhinoGround",
        Ok(
            "RhinoGround::PatrolArea(void)",
        ),
    ),
    (
        "Init__8RhinoLogP6MatrixP6VectorT2P5Rhino",
        Ok(
            "RhinoLog::Init(Matrix *, Vector *, Vector *, Rhino *)",
        ),
    ),
    (
        "Riding__9Speedboat",
        Ok(
            "Speedboat::Riding(void)",
        ),
    ),
    (
        "_vt$9SpiderWeb",
        Ok(
            "SpiderWeb virtual table",
        ),
    ),
    (
        "currCr",
        Err(
            NotMangled,
        ),
    ),
    (
        "AlertInit__10NinjaGecko",
        Ok(
            "NinjaGecko::AlertInit(void)",
        ),
    ),
    (
        "Fall_RaiseHeight_Init__10GameCamera",
        Ok(
            "GameCamera::Fall_RaiseHeight_Init(void)",
        ),
    ),
    (
        "Init__6UITextPcT1",
        Ok(
            "UIText::Init(char *, char *)",
        ),
    ),
    (
        "Init__16FinishLineStructP11GameObjDesc",
        Ok(
            "FinishLineStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "__10bad_typeid",
        Ok(
            "bad_typeid::bad_typeid(void)",
        ),
    ),
    (
        "Dead__9ShadowBat",
        Ok(
            "ShadowBat::Dead(void)",
        ),
    ),
    (
        "_7MKWater$drawType",
        Ok(
            "MKWater::drawType",
        ),
    ),
    (
        "Draw__8Talisman",
        Ok(
            "Talisman::Draw(void)",
        ),
    ),
    (
        "Init__8PipePartP11GameObjDesc",
        Ok(
            "PipePart::Init(GameObjDesc *)",
        ),
    ),
    (
        "LoadDone__15StopwatchStruct",
        Ok(
            "StopwatchStruct::LoadDone(void)",
        ),
    ),
    (
        "GetFrontVector__8Rotation",
        Ok(
            "Rotation::GetFrontVector(void)",
        ),
    ),
    (
        "_defStopDMA",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__6CrikeyP11GameObjDesc",
        Ok(
            "Crikey::Init(GameObjDesc *)",
        ),
    ),
    (
        "DrawTextMorphing__4FontPcffffiffP10FontOffsetP9FontMorph",
        Ok(
            "Font::DrawTextMorphing(char *, float, float, float, float, int, float, float, FontOffset *, FontMorph *)",
        ),
    ),
    (
        "SetGsHParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegGetPictureRAW8",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__5Steam",
        Ok(
            "Steam::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4CrocPv",
        Ok(
            "ModuleInfo<Croc>::ConstructObject(void *)",
        ),
    ),
    (
        "Portal_ShowAll__Fv",
        Ok(
            "Portal_ShowAll(void)",
        ),
    ),
    (
        "TyVideo_Update__Fv",
        Ok(
            "TyVideo_Update(void)",
        ),
    ),
    (
        "FrontEnd_LoadGame_Update__Fv",
        Ok(
            "FrontEnd_LoadGame_Update(void)",
        ),
    ),
    (
        "HopTurn__5Rufusb",
        Ok(
            "Rufus::HopTurn(bool)",
        ),
    ),
    (
        "Reset__9GreySmoke",
        Ok(
            "GreySmoke::Reset(void)",
        ),
    ),
    (
        "GetDesc__9ShoalFish",
        Ok(
            "ShoalFish::GetDesc(void)",
        ),
    ),
    (
        "SphereSweep__7BushPigP6VectorT1fP15CollisionResult",
        Ok(
            "BushPig::SphereSweep(Vector *, Vector *, float, CollisionResult *)",
        ),
    ),
    (
        "CrawlIdleInit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlIdleInit(void)",
        ),
    ),
    (
        "TyOn__10StaticProp",
        Ok(
            "StaticProp::TyOn(void)",
        ),
    ),
    (
        "_5Skink$nTailObj",
        Ok(
            "Skink::nTailObj",
        ),
    ),
    (
        "Message__13PickupCounterP9MKMessage",
        Ok(
            "PickupCounter::Message(MKMessage *)",
        ),
    ),
    (
        "Deinit__11BurningTree",
        Ok(
            "BurningTree::Deinit(void)",
        ),
    ),
    (
        "Message__8BurnableP9MKMessage",
        Ok(
            "Burnable::Message(MKMessage *)",
        ),
    ),
    (
        "KissOfDeathEndInit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathEndInit(void)",
        ),
    ),
    (
        "Init__8FireDrumP11GameObjDesc",
        Ok(
            "FireDrum::Init(GameObjDesc *)",
        ),
    ),
    (
        "SetEmuToCaught__3Emu",
        Ok(
            "Emu::SetEmuToCaught(void)",
        ),
    ),
    (
        "strcat",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadCodeMPG__10VU1ManagerPUiT1ii",
        Ok(
            "VU1Manager::UploadCodeMPG(unsigned int *, unsigned int *, int, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10KingFisher",
        Ok(
            "ModuleInfo<KingFisher>::Init(void)",
        ),
    ),
    (
        "EndUpdate__8Platform",
        Ok(
            "Platform::EndUpdate(void)",
        ),
    ),
    (
        "SetHasGoldenCog__8GameData13GoldenCogTypeb",
        Ok(
            "GameData::SetHasGoldenCog(GoldenCogType, bool)",
        ),
    ),
    (
        "UpdateCollisions__8MorayEel",
        Ok(
            "MorayEel::UpdateCollisions(void)",
        ),
    ),
    (
        "Deinit__11CrateStruct",
        Ok(
            "CrateStruct::Deinit(void)",
        ),
    ),
    (
        "ModelRender_CFMT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Teleporter_LoadResources__FP8KromeIni",
        Ok(
            "Teleporter_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MusicalIcicle_LoadResources__FP8KromeIni",
        Ok(
            "MusicalIcicle_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Draw__12DialogEffect",
        Ok(
            "DialogEffect::Draw(void)",
        ),
    ),
    (
        "GetClosestTime__9QuadraticP6Vector",
        Ok(
            "Quadratic::GetClosestTime(Vector *)",
        ),
    ),
    (
        "sceMtapGetConnection",
        Err(
            NotMangled,
        ),
    ),
    (
        "IceRunToStop__2Ty",
        Ok(
            "Ty::IceRunToStop(void)",
        ),
    ),
    (
        "Init__10CrikeyChumP11GameObjDesc",
        Ok(
            "CrikeyChum::Init(GameObjDesc *)",
        ),
    ),
    (
        "Dennis_UpdateCommon__6Dennis",
        Ok(
            "Dennis::Dennis_UpdateCommon(void)",
        ),
    ),
    (
        "Spline_GetPosition__FP6VectorT0T0T0f",
        Ok(
            "Spline_GetPosition(Vector *, Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "Tools_ApplyRotationToSubObject__FP5ModeliP6Matrixi",
        Ok(
            "Tools_ApplyRotationToSubObject(Model *, int, Matrix *, int)",
        ),
    ),
    (
        "WalkToWaypointInit__11FrillLizard",
        Ok(
            "FrillLizard::WalkToWaypointInit(void)",
        ),
    ),
    (
        "_vt$9GeckoDesc",
        Ok(
            "GeckoDesc virtual table",
        ),
    ),
    (
        "Sound_MusicPlayFromMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$21ShatterableDescriptor",
        Ok(
            "ShatterableDescriptor virtual table",
        ),
    ),
    (
        "FireAtTarget__10ProjectileP6VectorT1",
        Ok(
            "Projectile::FireAtTarget(Vector *, Vector *)",
        ),
    ),
    (
        "FinalScale__6Target",
        Ok(
            "Target::FinalScale(void)",
        ),
    ),
    (
        "Bilby_EnableCheatLines__Fb",
        Ok(
            "Bilby_EnableCheatLines(bool)",
        ),
    ),
    (
        "CameraOverrideFixedPoint_End__Fv",
        Ok(
            "CameraOverrideFixedPoint_End(void)",
        ),
    ),
    (
        "ResolveBranches__17WaterSlideManager",
        Ok(
            "WaterSlideManager::ResolveBranches(void)",
        ),
    ),
    (
        "Init__15GameCameraPointP6Vector",
        Ok(
            "GameCameraPoint::Init(Vector *)",
        ),
    ),
    (
        "SetLives__8GameDatai",
        Ok(
            "GameData::SetLives(int)",
        ),
    ),
    (
        "CollideCheck__3Emu",
        Ok(
            "Emu::CollideCheck(void)",
        ),
    ),
    (
        "_GLOBAL_$I$szRoofSnowModel",
        Ok(
            "global constructors keyed to szRoofSnowModel",
        ),
    ),
    (
        "sceInetCreate",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Gecko",
        Ok(
            "ModuleInfo<Gecko> virtual table",
        ),
    ),
    (
        "Init__11PathSegment",
        Ok(
            "PathSegment::Init(void)",
        ),
    ),
    (
        "bilbiesMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateRenderTarget__7TexturePciii",
        Ok(
            "Texture::CreateRenderTarget(char *, int, int, int)",
        ),
    ),
    (
        "Message__9SoundPropP9MKMessage",
        Ok(
            "SoundProp::Message(MKMessage *)",
        ),
    ),
    (
        "Init__5RoachP11GameObjDesc",
        Ok(
            "Roach::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z23BlueTongueRockObjective",
        Ok(
            "ModuleInfo<BlueTongueRockObjective> virtual table",
        ),
    ),
    (
        "PauseScreen_OptionSound_Update__Fv",
        Ok(
            "PauseScreen_OptionSound_Update(void)",
        ),
    ),
    (
        "ConstructWeightedVertex__11MKWaterPropP14Water_TriStripP6VectorP16WaterStripVertexP12WaterStripUVP15WaterStripColorP16WaterStripNormalifT2",
        Ok(
            "MKWaterProp::ConstructWeightedVertex(Water_TriStrip *, Vector *, WaterStripVertex *, WaterStripUV *, WaterStripColor *, WaterStripNormal *, int, float, Vector *)",
        ),
    ),
    (
        "Debug__9SharkCage",
        Ok(
            "SharkCage::Debug(void)",
        ),
    ),
    (
        "ScrubTurkey_PreUpdate__11ScrubTurkey",
        Ok(
            "ScrubTurkey::ScrubTurkey_PreUpdate(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Dennis",
        Ok(
            "ModuleInfo<Dennis> virtual table",
        ),
    ),
    (
        "BadBoonie_PostUpdate__9BadBoonie",
        Ok(
            "BadBoonie::BadBoonie_PostUpdate(void)",
        ),
    ),
    (
        "Turtle_Deinit__Fv",
        Ok(
            "Turtle_Deinit(void)",
        ),
    ),
    (
        "DrawFires__8Burnable",
        Ok(
            "Burnable::DrawFires(void)",
        ),
    ),
    (
        "PauseScreen_OptionControls_Draw__Fv",
        Ok(
            "PauseScreen_OptionControls_Draw(void)",
        ),
    ),
    (
        "Init__13GuideParticleP11GameObjDesc",
        Ok(
            "GuideParticle::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11BoulderTrap",
        Ok(
            "ModuleInfo<BoulderTrap>::Init(void)",
        ),
    ),
    (
        "BounceOff__2Ty",
        Ok(
            "Ty::BounceOff(void)",
        ),
    ),
    (
        "EventDogPaddle__2TyPc",
        Ok(
            "Ty::EventDogPaddle(char *)",
        ),
    ),
    (
        "sceDmaReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetDesc__16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue::GetDesc(void)",
        ),
    ),
    (
        "ThrowDirtDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::ThrowDirtDeinit(void)",
        ),
    ),
    (
        "PauseScreen_OptionScreen_Update__Fv",
        Ok(
            "PauseScreen_OptionScreen_Update(void)",
        ),
    ),
    (
        "GCT_GetSafeHeight__FUi",
        Ok(
            "GCT_GetSafeHeight(unsigned int)",
        ),
    ),
    (
        "Bilby_End__Fv",
        Ok(
            "Bilby_End(void)",
        ),
    ),
    (
        "MKMemoryCard_EvalFileInfo__FP14sceMcTblGetDirP20MKMemoryCardFileInfo",
        Ok(
            "MKMemoryCard_EvalFileInfo(sceMcTblGetDir *, MKMemoryCardFileInfo *)",
        ),
    ),
    (
        "LoadLine__4ElleP12KromeIniLine",
        Ok(
            "Elle::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "TimeTrial_GetSavedPos__Fv",
        Ok(
            "TimeTrial_GetSavedPos(void)",
        ),
    ),
    (
        "IdleInit__7SnowRoo",
        Ok(
            "SnowRoo::IdleInit(void)",
        ),
    ),
    (
        "SetIdentity__6Matrix",
        Ok(
            "Matrix::SetIdentity(void)",
        ),
    ),
    (
        "CheckMagnetism__3Gemf",
        Ok(
            "Gem::CheckMagnetism(float)",
        ),
    ),
    (
        "InitHang__15LedgePullUpData",
        Ok(
            "LedgePullUpData::InitHang(void)",
        ),
    ),
    (
        "descr_cast__H1ZP17AnimatingPropDesc_P16MKPropDescriptor_X01",
        Ok(
            "AnimatingPropDesc * descr_cast<AnimatingPropDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "KissOfDeathInit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11PontoonRope",
        Ok(
            "ModuleInfo<PontoonRope>::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11BunyipElderPv",
        Ok(
            "ModuleInfo<BunyipElder>::ConstructObject(void *)",
        ),
    ),
    (
        "ShowProp__12DialogEffect",
        Ok(
            "DialogEffect::ShowProp(void)",
        ),
    ),
    (
        "KissOfDeathEndDeinit__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathEndDeinit(void)",
        ),
    ),
    (
        "sceMcSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateFired__8Aquarang",
        Ok(
            "Aquarang::UpdateFired(void)",
        ),
    ),
    (
        "Hud_Draw__Fv",
        Ok(
            "Hud_Draw(void)",
        ),
    ),
    (
        "UpdateAnimation__16BoomerangManagerP5Model",
        Ok(
            "BoomerangManager::UpdateAnimation(Model *)",
        ),
    ),
    (
        "__ieee754_asinf",
        Err(
            InvalidSpecialMethod(
                "ieee754_asinf",
            ),
        ),
    ),
    (
        "LoadDone__9FrillBike",
        Ok(
            "FrillBike::LoadDone(void)",
        ),
    ),
    (
        "Skink_LoadResources__FP8KromeIni",
        Ok(
            "Skink_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Death__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Death(void)",
        ),
    ),
    (
        "_vt$6Fluffy",
        Ok(
            "Fluffy virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Crikey",
        Ok(
            "ModuleInfo<Crikey> virtual table",
        ),
    ),
    (
        "Closing__13OpalCollector",
        Ok(
            "OpalCollector::Closing(void)",
        ),
    ),
    (
        "FallGuideProp_LoadResources__FP8KromeIni",
        Ok(
            "FallGuideProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_MKMem_Free__FPvPci",
        Ok(
            "_MKMem_Free(void *, char *, int)",
        ),
    ),
    (
        "Sound_MusicGetResumePosition__Fv",
        Ok(
            "Sound_MusicGetResumePosition(void)",
        ),
    ),
    (
        "Run__5Rhino",
        Ok(
            "Rhino::Run(void)",
        ),
    ),
    (
        "WaterFall_Particle_Update__FP14ParticleSystem",
        Ok(
            "WaterFall_Particle_Update(ParticleSystem *)",
        ),
    ),
    (
        "Draw__7CogsHud",
        Ok(
            "CogsHud::Draw(void)",
        ),
    ),
    (
        "GetGoldenCogCount__8GameData",
        Ok(
            "GameData::GetGoldenCogCount(void)",
        ),
    ),
    (
        "IsVisible__11MKWaterProp",
        Ok(
            "MKWaterProp::IsVisible(void)",
        ),
    ),
    (
        "_vt$23BlueTongueRockObjective",
        Ok(
            "BlueTongueRockObjective virtual table",
        ),
    ),
    (
        "Wake_Deinit__Fv",
        Ok(
            "Wake_Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Crikey_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Crikey_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Reset__14RockCollection",
        Ok(
            "RockCollection::Reset(void)",
        ),
    ),
    (
        "_vt$22MusicalIcicleObjective",
        Ok(
            "MusicalIcicleObjective virtual table",
        ),
    ),
    (
        "AddSpin__8SnowBall",
        Ok(
            "SnowBall::AddSpin(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Platform",
        Ok(
            "ModuleInfo<Platform> virtual table",
        ),
    ),
    (
        "Deinit__6UIText",
        Ok(
            "UIText::Deinit(void)",
        ),
    ),
    (
        "TimeTrial_Deinit__Fb",
        Ok(
            "TimeTrial_Deinit(bool)",
        ),
    ),
    (
        "Message__5YabbyP9MKMessage",
        Ok(
            "Yabby::Message(MKMessage *)",
        ),
    ),
    (
        "AddEnemy__12EnemySpawner",
        Ok(
            "EnemySpawner::AddEnemy(void)",
        ),
    ),
    (
        "TreasureChest_LoadResources__FP8KromeIni",
        Ok(
            "TreasureChest_LoadResources(KromeIni *)",
        ),
    ),
    (
        "CheckForHit__10Projectile",
        Ok(
            "Projectile::CheckForHit(void)",
        ),
    ),
    (
        "SaveStates_GetGems__FPc",
        Ok(
            "SaveStates_GetGems(char *)",
        ),
    ),
    (
        "Bilby_HideAll__Fv",
        Ok(
            "Bilby_HideAll(void)",
        ),
    ),
    (
        "KSeg0",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifBindRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_3Dma$pCurrentDma",
        Ok(
            "Dma::pCurrentDma",
        ),
    ),
    (
        "FrontEnd_Title_Draw__Fv",
        Ok(
            "FrontEnd_Title_Draw(void)",
        ),
    ),
    (
        "Steam__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Steam(void)",
        ),
    ),
    (
        "SpeedUpCrate_Update__Fv",
        Ok(
            "SpeedUpCrate_Update(void)",
        ),
    ),
    (
        "_vt$8Megarang",
        Ok(
            "Megarang virtual table",
        ),
    ),
    (
        "Draw__7UIImage",
        Ok(
            "UIImage::Draw(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Deinit__12EnemySpawner",
        Ok(
            "global constructors keyed to EnemySpawner::Deinit(void)",
        ),
    ),
    (
        "Model_DeinitModule__Fv",
        Ok(
            "Model_DeinitModule(void)",
        ),
    ),
    (
        "IsQuadLowDetail__11MKWaterPropP16WaterStripHeaderi",
        Ok(
            "MKWaterProp::IsQuadLowDetail(WaterStripHeader *, int)",
        ),
    ),
    (
        "CreateDebugMenus__11MKWaterTypeP15DebugOptionMenu",
        Ok(
            "MKWaterType::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "Update__17GalleryScreenData",
        Ok(
            "GalleryScreenData::Update(void)",
        ),
    ),
    (
        "Draw__13Blitter_Imagei",
        Ok(
            "Blitter_Image::Draw(int)",
        ),
    ),
    (
        "ModelRender_FST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$bPauseWater",
        Ok(
            "MKWater::bPauseWater",
        ),
    ),
    (
        "Update__15ParticleEmitter",
        Ok(
            "ParticleEmitter::Update(void)",
        ),
    ),
    (
        "UpdateTrail__6Wombat",
        Ok(
            "Wombat::UpdateTrail(void)",
        ),
    ),
    (
        "DeadInit__4Bull",
        Ok(
            "Bull::DeadInit(void)",
        ),
    ),
    (
        "Init__5SteamP6VectorP14BoundingVolumef",
        Ok(
            "Steam::Init(Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "Hud_FOV__Fv",
        Ok(
            "Hud_FOV(void)",
        ),
    ),
    (
        "SplatLandGetup__15LearnToDiveData",
        Ok(
            "LearnToDiveData::SplatLandGetup(void)",
        ),
    ),
    (
        "__deregister_frame_info",
        Err(
            InvalidSpecialMethod(
                "deregister_frame_info",
            ),
        ),
    ),
    (
        "_DisableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "FootStepEffect__5NeddyP6VectorT1f",
        Ok(
            "Neddy::FootStepEffect(Vector *, Vector *, float)",
        ),
    ),
    (
        "Init__17TriggerSpherePropP11GameObjDesc",
        Ok(
            "TriggerSphereProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "SetVSyncFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "_12AquarangProp$pGlow",
        Ok(
            "AquarangProp::pGlow",
        ),
    ),
    (
        "Teleport__15CollisionObjectP6Vectorfi",
        Ok(
            "CollisionObject::Teleport(Vector *, float, int)",
        ),
    ),
    (
        "RFU089_ReferEventFlagStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dump__5Model",
        Ok(
            "Model::Dump(void)",
        ),
    ),
    (
        "SetUpBounce__7Boulder",
        Ok(
            "Boulder::SetUpBounce(void)",
        ),
    ),
    (
        "GsPutIMR",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14ShadowBatSonarPv",
        Ok(
            "ModuleInfo<ShadowBatSonar>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitModule__4Lava",
        Ok(
            "Lava::DeinitModule(void)",
        ),
    ),
    (
        "AnimatingState__4Gatei",
        Ok(
            "Gate::AnimatingState(int)",
        ),
    ),
    (
        "InGameUpdate__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::InGameUpdate(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5SkinkPv",
        Ok(
            "ModuleInfo<Skink>::ConstructObject(void *)",
        ),
    ),
    (
        "GameCamera_UseCustomVectors__FbP6VectorT1Pf",
        Ok(
            "GameCamera_UseCustomVectors(bool, Vector *, Vector *, float *)",
        ),
    ),
    (
        "Draw__23Blitter_UntexturedImagei",
        Ok(
            "Blitter_UntexturedImage::Draw(int)",
        ),
    ),
    (
        "ModelRender_CFL_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "TakeAwayHealth__7BushPig",
        Ok(
            "BushPig::TakeAwayHealth(void)",
        ),
    ),
    (
        "Deallocate__10GameObjectP10GameObject",
        Ok(
            "GameObject::Deallocate(GameObject *)",
        ),
    ),
    (
        "_GLOBAL_$F$__builtin_delete.._.._src_gcc_cp_new2.cc1GeU73",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "GLOBAL_",
            ),
        ),
    ),
    (
        "LetterBox_Activate__Fbb",
        Ok(
            "LetterBox_Activate(bool, bool)",
        ),
    ),
    (
        "Init__9RedButtonP11GameObjDesc",
        Ok(
            "RedButton::Init(GameObjDesc *)",
        ),
    ),
    (
        "CreateFromImage__8MaterialPcP5Image",
        Ok(
            "Material::CreateFromImage(char *, Image *)",
        ),
    ),
    (
        "_13OpalCollector$vEffectEndApex",
        Ok(
            "OpalCollector::vEffectEndApex",
        ),
    ),
    (
        "_7SawDust$pSawDustMat",
        Ok(
            "SawDust::pSawDustMat",
        ),
    ),
    (
        "Init__7AntHillP11GameObjDesc",
        Ok(
            "AntHill::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$11SpiderCrate",
        Ok(
            "SpiderCrate virtual table",
        ),
    ),
    (
        "_10DDASession$bDrawEnabled",
        Ok(
            "DDASession::bDrawEnabled",
        ),
    ),
    (
        "SetUpMem__11GameObjDescPUc",
        Ok(
            "GameObjDesc::SetUpMem(unsigned char *)",
        ),
    ),
    (
        "_GLOBAL_$I$WeatherProp_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WeatherProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__9ShadowBatP11GameObjDesc",
        Ok(
            "ShadowBat::Init(GameObjDesc *)",
        ),
    ),
    (
        "UseEnemyCamera__10GameCamerab",
        Ok(
            "GameCamera::UseEnemyCamera(bool)",
        ),
    ),
    (
        "Particle_WaterMist_Create__FPP14ParticleSystemP6Vector",
        Ok(
            "Particle_WaterMist_Create(ParticleSystem **, Vector *)",
        ),
    ),
    (
        "MKPackage_SetExclusionMask__FPc",
        Ok(
            "MKPackage_SetExclusionMask(char *)",
        ),
    ),
    (
        "Assign__5GeckoP13CritterField2",
        Ok(
            "Gecko::Assign(CritterField2 *)",
        ),
    ),
    (
        "Update__10IceCoolant",
        Ok(
            "IceCoolant::Update(void)",
        ),
    ),
    (
        "terminate__Fv",
        Ok(
            "terminate(void)",
        ),
    ),
    (
        "SetCameraMatrixLookAt__4ViewP6MatrixP6VectorT2",
        Ok(
            "View::SetCameraMatrixLookAt(Matrix *, Vector *, Vector *)",
        ),
    ),
    (
        "Bubble_LoadResources__Fv",
        Ok(
            "Bubble_LoadResources(void)",
        ),
    ),
    (
        "LoadLine__13FallGuidePropP12KromeIniLine",
        Ok(
            "FallGuideProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Particle_Fire_CreateExplosion__FP6Vectorf",
        Ok(
            "Particle_Fire_CreateExplosion(Vector *, float)",
        ),
    ),
    (
        "Particle_Special_Init__FPP14ParticleSystemP6VectorP14BoundingVolume",
        Ok(
            "Particle_Special_Init(ParticleSystem **, Vector *, BoundingVolume *)",
        ),
    ),
    (
        "GameData_Save__FPc",
        Ok(
            "GameData_Save(char *)",
        ),
    ),
    (
        "Collision_SweepSphereCollide__FP6VectorT0fP15CollisionResult13CollisionModei",
        Ok(
            "Collision_SweepSphereCollide(Vector *, Vector *, float, CollisionResult *, CollisionMode, int)",
        ),
    ),
    (
        "MiniGameB1_Init__Fv",
        Ok(
            "MiniGameB1_Init(void)",
        ),
    ),
    (
        "RamInit__9FrillBike",
        Ok(
            "FrillBike::RamInit(void)",
        ),
    ),
    (
        "DeathDeinit__3Eel",
        Ok(
            "Eel::DeathDeinit(void)",
        ),
    ),
    (
        "OpalCollector_LoadResources__FP8KromeIni",
        Ok(
            "OpalCollector_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GetEnemyCameraTarget__10GameCamera",
        Ok(
            "GameCamera::GetEnemyCameraTarget(void)",
        ),
    ),
    (
        "MKMemoryCard_GetStatus__Fi",
        Ok(
            "MKMemoryCard_GetStatus(int)",
        ),
    ),
    (
        "GetPrevRang__F13BoomerangType",
        Ok(
            "GetPrevRang(BoomerangType)",
        ),
    ),
    (
        "__14__si_type_infoPCcRC16__user_type_info",
        Ok(
            "__si_type_info::__si_type_info(char const *, __user_type_info const &)",
        ),
    ),
    (
        "Draw__10WhirlyWind",
        Ok(
            "WhirlyWind::Draw(void)",
        ),
    ),
    (
        "LoadLine__10ScriptPropP12KromeIniLine",
        Ok(
            "ScriptProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Update__7Coconut",
        Ok(
            "Coconut::Update(void)",
        ),
    ),
    (
        "__pack_f",
        Err(
            InvalidSpecialMethod(
                "pack_f",
            ),
        ),
    ),
    (
        "_13OpalCollector$fEffectStart",
        Ok(
            "OpalCollector::fEffectStart",
        ),
    ),
    (
        "Update__8DiveRing",
        Ok(
            "DiveRing::Update(void)",
        ),
    ),
    (
        "Reset__10BurningBat",
        Ok(
            "BurningBat::Reset(void)",
        ),
    ),
    (
        "NormaliseRot__6VectorP6Vector",
        Ok(
            "Vector::NormaliseRot(Vector *)",
        ),
    ),
    (
        "InitRun__7BushPig",
        Ok(
            "BushPig::InitRun(void)",
        ),
    ),
    (
        "WaypointOverride_Update__14CameraOverrideP24GCT_WaypointPlaneManager",
        Ok(
            "CameraOverride::WaypointOverride_Update(GCT_WaypointPlaneManager *)",
        ),
    ),
    (
        "AddTerrainModel__14MKSceneManagerP5Modelif",
        Ok(
            "MKSceneManager::AddTerrainModel(Model *, int, float)",
        ),
    ),
    (
        "SetFogColour__4ViewUi",
        Ok(
            "View::SetFogColour(unsigned int)",
        ),
    ),
    (
        "Update__17PathFindingObjectP6VectorT1",
        Ok(
            "PathFindingObject::Update(Vector *, Vector *)",
        ),
    ),
    (
        "LoadCode__10VU0ManagerPUiT1",
        Ok(
            "VU0Manager::LoadCode(unsigned int *, unsigned int *)",
        ),
    ),
    (
        "Init__10MKGrassGenP5ModeliP11MKGrassTypei",
        Ok(
            "MKGrassGen::Init(Model *, int, MKGrassType *, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10TumbleWeed",
        Ok(
            "ModuleInfo<TumbleWeed>::Init(void)",
        ),
    ),
    (
        "EnableOnlySubObject__5Modelib",
        Ok(
            "Model::EnableOnlySubObject(int, bool)",
        ),
    ),
    (
        "Init__21ExtendedAnalogControlff",
        Ok(
            "ExtendedAnalogControl::Init(float, float)",
        ),
    ),
    (
        "AddGif_AD_PRMODE__3DmaUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_PRMODE(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "IsTyWithinChaseArea__4Croc",
        Ok(
            "Croc::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6CattlePv",
        Ok(
            "ModuleInfo<Cattle>::ConstructObject(void *)",
        ),
    ),
    (
        "ShudderState__8Elevator",
        Ok(
            "Elevator::ShudderState(void)",
        ),
    ),
    (
        "sceSifDmaStat",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14SnowBallAttackPv",
        Ok(
            "ModuleInfo<SnowBallAttack>::ConstructObject(void *)",
        ),
    ),
    (
        "Tools_RandomVector__FP6VectorT0T0",
        Ok(
            "Tools_RandomVector(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z18SpeedboatObjectivePv",
        Ok(
            "ModuleInfo<SpeedboatObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "AlertSpin__6Muddieb",
        Ok(
            "Muddie::AlertSpin(bool)",
        ),
    ),
    (
        "RunAwayInit__7CaveBat",
        Ok(
            "CaveBat::RunAwayInit(void)",
        ),
    ),
    (
        "SnowPile_Activate__Fv",
        Ok(
            "SnowPile_Activate(void)",
        ),
    ),
    (
        "DoFire__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::DoFire(void)",
        ),
    ),
    (
        "gpTranslation_StringArray",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackRunInit__11FrillLizard",
        Ok(
            "FrillLizard::AttackRunInit(void)",
        ),
    ),
    (
        "Stunned__5Shark",
        Ok(
            "Shark::Stunned(void)",
        ),
    ),
    (
        "PreCalcPerFrameData__11MKWaterType",
        Ok(
            "MKWaterType::PreCalcPerFrameData(void)",
        ),
    ),
    (
        "Message__15BurnerObjectiveP9MKMessage",
        Ok(
            "BurnerObjective::Message(MKMessage *)",
        ),
    ),
    (
        "_14ParticleSystem$bDrawBoundingBox",
        Ok(
            "ParticleSystem::bDrawBoundingBox",
        ),
    ),
    (
        "bGrassInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__7Farlapp",
        Ok(
            "Farlapp::LoadDone(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8LilNeddy",
        Ok(
            "ModuleInfo<LilNeddy> virtual table",
        ),
    ),
    (
        "WaterSlide_Line__FP12KromeIniLine",
        Ok(
            "WaterSlide_Line(KromeIniLine *)",
        ),
    ),
    (
        "__unwinding_cleanup",
        Err(
            InvalidSpecialMethod(
                "unwinding_cleanup",
            ),
        ),
    ),
    (
        "FrontEnd_Extras_LoadResources__Fv",
        Ok(
            "FrontEnd_Extras_LoadResources(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10TimeAttackPv",
        Ok(
            "ModuleInfo<TimeAttack>::ConstructObject(void *)",
        ),
    ),
    (
        "AlertInit__5Rufus",
        Ok(
            "Rufus::AlertInit(void)",
        ),
    ),
    (
        "Claim__7BushPig",
        Ok(
            "BushPig::Claim(void)",
        ),
    ),
    (
        "Load__11GameObjDescP8KromeIni",
        Ok(
            "GameObjDesc::Load(KromeIni *)",
        ),
    ),
    (
        "Draw__16BoomerangManager",
        Ok(
            "BoomerangManager::Draw(void)",
        ),
    ),
    (
        "sceDeci2ExReqSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ti17__array_type_info",
        Ok(
            "__array_type_info type_info node",
        ),
    ),
    (
        "ZMax__FP6Vectorf",
        Ok(
            "ZMax(Vector *, float)",
        ),
    ),
    (
        "PauseScreen_OptionSound_Deinit__Fv",
        Ok(
            "PauseScreen_OptionSound_Deinit(void)",
        ),
    ),
    (
        "GetDesc__4Frog",
        Ok(
            "Frog::GetDesc(void)",
        ),
    ),
    (
        "System_CreateZRequest__Fv",
        Ok(
            "System_CreateZRequest(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z23PerimeterCheckObjective",
        Ok(
            "ModuleInfo<PerimeterCheckObjective> virtual table",
        ),
    ),
    (
        "Message__22MusicalIcicleObjectiveP9MKMessage",
        Ok(
            "MusicalIcicleObjective::Message(MKMessage *)",
        ),
    ),
    (
        "LoadDone__8SignPost",
        Ok(
            "SignPost::LoadDone(void)",
        ),
    ),
    (
        "InitStartled__3Emu",
        Ok(
            "Emu::InitStartled(void)",
        ),
    ),
    (
        "__tf16__attr_type_info",
        Ok(
            "__attr_type_info type_info function",
        ),
    ),
    (
        "ShadowBatPipe_GetDescriptor__Fv",
        Ok(
            "ShadowBatPipe_GetDescriptor(void)",
        ),
    ),
    (
        "AddStaticProp__14MKSceneManagerP6MKPropi",
        Ok(
            "MKSceneManager::AddStaticProp(MKProp *, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Ibis",
        Ok(
            "ModuleInfo<Ibis>::Init(void)",
        ),
    ),
    (
        "SetProgress__11ProgressBari",
        Ok(
            "ProgressBar::SetProgress(int)",
        ),
    ),
    (
        "Update__10HudCounter",
        Ok(
            "HudCounter::Update(void)",
        ),
    ),
    (
        "EvadeBiteInit__11FrillLizard",
        Ok(
            "FrillLizard::EvadeBiteInit(void)",
        ),
    ),
    (
        "SelectRandomTarget__12TurtleStruct",
        Ok(
            "TurtleStruct::SelectRandomTarget(void)",
        ),
    ),
    (
        "JumpAdjustTarget_Init__10GameCamera",
        Ok(
            "GameCamera::JumpAdjustTarget_Init(void)",
        ),
    ),
    (
        "GetPos__7Boulder",
        Ok(
            "Boulder::GetPos(void)",
        ),
    ),
    (
        "MKRumble_Update__Fv",
        Ok(
            "MKRumble_Update(void)",
        ),
    ),
    (
        "GameCamera_UseFallDiveCamera__Fb",
        Ok(
            "GameCamera_UseFallDiveCamera(bool)",
        ),
    ),
    (
        "Init__6SMTreei",
        Ok(
            "SMTree::Init(int)",
        ),
    ),
    (
        "Flame_CustomUpdate__FP14ParticleSystem",
        Ok(
            "Flame_CustomUpdate(ParticleSystem *)",
        ),
    ),
    (
        "DeactivateAndKillOff__11EnemyObject",
        Ok(
            "EnemyObject::DeactivateAndKillOff(void)",
        ),
    ),
    (
        "Hud_ShowOpals__Fv",
        Ok(
            "Hud_ShowOpals(void)",
        ),
    ),
    (
        "Purge__5Model",
        Ok(
            "Model::Purge(void)",
        ),
    ),
    (
        "Init__9AuroraKidP11GameObjDesc",
        Ok(
            "AuroraKid::Init(GameObjDesc *)",
        ),
    ),
    (
        "GetEnemyFromModel__12EnemySpawnerP5Model",
        Ok(
            "EnemySpawner::GetEnemyFromModel(Model *)",
        ),
    ),
    (
        "UpperChar__Fc",
        Ok(
            "UpperChar(char)",
        ),
    ),
    (
        "__do_global_dtors",
        Err(
            InvalidSpecialMethod(
                "do_global_dtors",
            ),
        ),
    ),
    (
        "IsPickingUp__14RockProjectile",
        Ok(
            "RockProjectile::IsPickingUp(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12AquarangProp",
        Ok(
            "ModuleInfo<AquarangProp> virtual table",
        ),
    ),
    (
        "Boomerang_LoadResources__FP8KromeIni",
        Ok(
            "Boomerang_LoadResources(KromeIni *)",
        ),
    ),
    (
        "DodgeInit__7SnowRoo",
        Ok(
            "SnowRoo::DodgeInit(void)",
        ),
    ),
    (
        "Message__9WaterPipeP9MKMessage",
        Ok(
            "WaterPipe::Message(MKMessage *)",
        ),
    ),
    (
        "sceScfGetSummerTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$debugNumLowDetailQuads",
        Ok(
            "MKWater::debugNumLowDetailQuads",
        ),
    ),
    (
        "SpawnSnowEffect__10FootEffectP6VectorT1P14BoundingVolumefT1",
        Ok(
            "FootEffect::SpawnSnowEffect(Vector *, Vector *, BoundingVolume *, float, Vector *)",
        ),
    ),
    (
        "tyAnimTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetRefPointRadius__5Modeli",
        Ok(
            "Model::GetRefPointRadius(int)",
        ),
    ),
    (
        "_sysbitGet",
        Err(
            NotMangled,
        ),
    ),
    (
        "FixedPoint_Update__14CameraOverride",
        Ok(
            "CameraOverride::FixedPoint_Update(void)",
        ),
    ),
    (
        "scePadReqIntToStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlushUploadQueue__7Texture",
        Ok(
            "Texture::FlushUploadQueue(void)",
        ),
    ),
    (
        "descr_cast__H1ZP16FriendDescriptor_P16MKPropDescriptor_X01",
        Ok(
            "FriendDescriptor * descr_cast<FriendDescriptor *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8RingoArm",
        Ok(
            "ModuleInfo<RingoArm>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8DiveRing",
        Ok(
            "ModuleInfo<DiveRing>::Init(void)",
        ),
    ),
    (
        "Draw__19BlitterCritterField",
        Ok(
            "BlitterCritterField::Draw(void)",
        ),
    ),
    (
        "fseek",
        Err(
            NotMangled,
        ),
    ),
    (
        "name__C9type_info",
        Ok(
            "type_info::name(void) const",
        ),
    ),
    (
        "_lmcGetClientPtr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_6Camera$keyMapDS",
        Ok(
            "Camera::keyMapDS",
        ),
    ),
    (
        "CheckEvents__8PubeCrab",
        Ok(
            "PubeCrab::CheckEvents(void)",
        ),
    ),
    (
        "SpawnAnts__17TyParticleManagerP6VectorT1T1",
        Ok(
            "TyParticleManager::SpawnAnts(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "gbFootEffects",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tf16__func_type_info",
        Ok(
            "__func_type_info type_info function",
        ),
    ),
    (
        "GetDesc__12StaticFXProp",
        Ok(
            "StaticFXProp::GetDesc(void)",
        ),
    ),
    (
        "RemoveProp__14MKSceneManagerP6MKProp",
        Ok(
            "MKSceneManager::RemoveProp(MKProp *)",
        ),
    ),
    (
        "_mbAddressIncrement",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_ChangeLevel_Update__Fv",
        Ok(
            "PauseScreen_ChangeLevel_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z18WaterPipeObjective",
        Ok(
            "ModuleInfo<WaterPipeObjective>::Init(void)",
        ),
    ),
    (
        "MKMemoryCard_Prepare__Fi",
        Ok(
            "MKMemoryCard_Prepare(int)",
        ),
    ),
    (
        "PauseScreen_Deinit__Fv",
        Ok(
            "PauseScreen_Deinit(void)",
        ),
    ),
    (
        "SetUpGrid__13WobbleTextureP6Vectorfff",
        Ok(
            "WobbleTexture::SetUpGrid(Vector *, float, float, float)",
        ),
    ),
    (
        "Spider_Update__Fv",
        Ok(
            "Spider_Update(void)",
        ),
    ),
    (
        "LoadLine__7FurnaceP12KromeIniLine",
        Ok(
            "Furnace::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Path_Manager_Deinit__Fv",
        Ok(
            "Path_Manager_Deinit(void)",
        ),
    ),
    (
        "_pow5mult",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__11ThinIcePropP9MKMessage",
        Ok(
            "ThinIceProp::Message(MKMessage *)",
        ),
    ),
    (
        "Idle__15StopwatchStruct",
        Ok(
            "StopwatchStruct::Idle(void)",
        ),
    ),
    (
        "Fluffy_Deinit__10GameCamera",
        Ok(
            "GameCamera::Fluffy_Deinit(void)",
        ),
    ),
    (
        "sceDeci2Close",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadGetSlotMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "FrontEnd_MainMenu_OnExit__Fv",
        Ok(
            "FrontEnd_MainMenu_OnExit(void)",
        ),
    ),
    (
        "_vt$10SynkerFrog",
        Ok(
            "SynkerFrog virtual table",
        ),
    ),
    (
        "Update__10Teleporter",
        Ok(
            "Teleporter::Update(void)",
        ),
    ),
    (
        "Init__8SnowPileP11GameObjDesc",
        Ok(
            "SnowPile::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateBarrelFree__9Speedboat",
        Ok(
            "Speedboat::UpdateBarrelFree(void)",
        ),
    ),
    (
        "UseNormalCamera__10GameCamera",
        Ok(
            "GameCamera::UseNormalCamera(void)",
        ),
    ),
    (
        "_vt$23BlitterCritterFieldDesc",
        Ok(
            "BlitterCritterFieldDesc virtual table",
        ),
    ),
    (
        "Deinit__20WaterfallPointStruct",
        Ok(
            "WaterfallPointStruct::Deinit(void)",
        ),
    ),
    (
        "Gem_ShowAll__Fv",
        Ok(
            "Gem_ShowAll(void)",
        ),
    ),
    (
        "__tf9type_info",
        Ok(
            "type_info type_info function",
        ),
    ),
    (
        "sceSifFreeIopHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__7IceRamp",
        Ok(
            "IceRamp::Update(void)",
        ),
    ),
    (
        "Init__15YabbyStalactiteP11GameObjDesc",
        Ok(
            "YabbyStalactite::Init(GameObjDesc *)",
        ),
    ),
    (
        "StickToHead__5Leech",
        Ok(
            "Leech::StickToHead(void)",
        ),
    ),
    (
        "OrthoBegin__4View",
        Ok(
            "View::OrthoBegin(void)",
        ),
    ),
    (
        "ModifyRangeInFlight__9Flamerangf",
        Ok(
            "Flamerang::ModifyRangeInFlight(float)",
        ),
    ),
    (
        "Draw__11InvisiCrate",
        Ok(
            "InvisiCrate::Draw(void)",
        ),
    ),
    (
        "LoadLine__7IceRampP12KromeIniLine",
        Ok(
            "IceRamp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Update__15GameCameraStateP10GameCamera",
        Ok(
            "GameCameraState::Update(GameCamera *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12StaticFXProp",
        Ok(
            "ModuleInfo<StaticFXProp> virtual table",
        ),
    ),
    (
        "MKShadow_CaptureZBuffer__Fv",
        Ok(
            "MKShadow_CaptureZBuffer(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Bouncer",
        Ok(
            "ModuleInfo<Bouncer>::Init(void)",
        ),
    ),
    (
        "__throw_type_match_rtti",
        Err(
            InvalidCustomNameOnTemplate(
                "hrow_type_match_rtti",
            ),
        ),
    ),
    (
        "Multiply4x4__6MatrixP6MatrixT1",
        Ok(
            "Matrix::Multiply4x4(Matrix *, Matrix *)",
        ),
    ),
    (
        "StartDropping__14FireworksCrate",
        Ok(
            "FireworksCrate::StartDropping(void)",
        ),
    ),
    (
        "Deinit__4Lava",
        Ok(
            "Lava::Deinit(void)",
        ),
    ),
    (
        "iDisableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__12StreamBufferi",
        Ok(
            "StreamBuffer::Init(int)",
        ),
    ),
    (
        "MKWaterManager_UpdateFillState__Fv",
        Ok(
            "MKWaterManager_UpdateFillState(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_5Lenny$currentLenny",
        Ok(
            "global constructors keyed to Lenny::currentLenny",
        ),
    ),
    (
        "ModelRender_ACExyST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sceMpegFlush",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__11WaterVolume",
        Ok(
            "WaterVolume::LoadDone(void)",
        ),
    ),
    (
        "AddGif_AD_MIPTBP2_1__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_MIPTBP2_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "_13RainbowEffect$pRainbowMat",
        Ok(
            "RainbowEffect::pRainbowMat",
        ),
    ),
    (
        "IdleInit__6Fluffy",
        Ok(
            "Fluffy::IdleInit(void)",
        ),
    ),
    (
        "SpawnBiteChomps__11EnemyObjectif",
        Ok(
            "EnemyObject::SpawnBiteChomps(int, float)",
        ),
    ),
    (
        "LoadLine__9GeneratorP12KromeIniLine",
        Ok(
            "Generator::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "TimeTrial_Finished__Fv",
        Ok(
            "TimeTrial_Finished(void)",
        ),
    ),
    (
        "Bull_IsActive__Fv",
        Ok(
            "Bull_IsActive(void)",
        ),
    ),
    (
        "fptodp",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetCop0",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$debugNumHighDetailStrips",
        Ok(
            "MKWater::debugNumHighDetailStrips",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Fluffy",
        Ok(
            "ModuleInfo<Fluffy> virtual table",
        ),
    ),
    (
        "sceMtapChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "gVU0Manager",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__17AnimatingPropDescP14ModuleInfoBasePcT2iiP15Tools_AnimEntryiP15Tools_AnimEventibUs",
        Ok(
            "AnimatingPropDesc::Init(ModuleInfoBase *, char *, char *, int, int, Tools_AnimEntry *, int, Tools_AnimEvent *, int, bool, unsigned short)",
        ),
    ),
    (
        "SpawnFootPrint__17TyParticleManager14FootPrintTypesP6VectorT2P8RotationT2",
        Ok(
            "TyParticleManager::SpawnFootPrint(FootPrintTypes, Vector *, Vector *, Rotation *, Vector *)",
        ),
    ),
    (
        "sceSifSetIopAddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "WalkInit__5Neddy",
        Ok(
            "Neddy::WalkInit(void)",
        ),
    ),
    (
        "Hud_DrawCogs__Fv",
        Ok(
            "Hud_DrawCogs(void)",
        ),
    ),
    (
        "ReachedTarget_Init__6Dennis",
        Ok(
            "Dennis::ReachedTarget_Init(void)",
        ),
    ),
    (
        "WatchInit__8Sentinel",
        Ok(
            "Sentinel::WatchInit(void)",
        ),
    ),
    (
        "Translate__6MatrixP6Vector",
        Ok(
            "Matrix::Translate(Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Coconut",
        Ok(
            "ModuleInfo<Coconut>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Megarang",
        Ok(
            "ModuleInfo<Megarang>::Init(void)",
        ),
    ),
    (
        "__CTOR_LIST__",
        Err(
            UnrecognizedSpecialMethod(
                "CTOR_LIST",
            ),
        ),
    ),
    (
        "_alalcSetDynamic",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__14LevelObjective",
        Ok(
            "LevelObjective::LoadDone(void)",
        ),
    ),
    (
        "File_DeinitModule__Fv",
        Ok(
            "File_DeinitModule(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7IceCube",
        Ok(
            "ModuleInfo<IceCube>::Init(void)",
        ),
    ),
    (
        "GetSubObjectIndex__5ModelPc",
        Ok(
            "Model::GetSubObjectIndex(char *)",
        ),
    ),
    (
        "PreWarpDraw__2Ty",
        Ok(
            "Ty::PreWarpDraw(void)",
        ),
    ),
    (
        "_vt$10TyFlyField",
        Ok(
            "TyFlyField virtual table",
        ),
    ),
    (
        "ZoneBlockerProp_LoadResources__FP8KromeIni",
        Ok(
            "ZoneBlockerProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__10ProjectileP9MKMessage",
        Ok(
            "Projectile::Message(MKMessage *)",
        ),
    ),
    (
        "SetFallGuideInfluence__2TyP6Vectorf",
        Ok(
            "Ty::SetFallGuideInfluence(Vector *, float)",
        ),
    ),
    (
        "ModelRender_FLS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterManager_Calc2DNormal__FffffffPfT6",
        Ok(
            "MKWaterManager_Calc2DNormal(float, float, float, float, float, float, float *, float *)",
        ),
    ),
    (
        "Update__9Explosion",
        Ok(
            "Explosion::Update(void)",
        ),
    ),
    (
        "Collision_ArePointsSafe__10GameCameraP6VectorT1T1",
        Ok(
            "GameCamera::Collision_ArePointsSafe(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "_GLOBAL_$I$Wombat_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Wombat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ChargeDeinit__8LilNeddy",
        Ok(
            "LilNeddy::ChargeDeinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15TurningPlatformPv",
        Ok(
            "ModuleInfo<TurningPlatform>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadLine__19SpecialPickupStructP12KromeIniLine",
        Ok(
            "SpecialPickupStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "set_unexpected__FPFv_v",
        Ok(
            "set_unexpected(void (*)(void))",
        ),
    ),
    (
        "PE_Portal_LoadResources__Fv",
        Ok(
            "PE_Portal_LoadResources(void)",
        ),
    ),
    (
        "Reeds_Update__Fv",
        Ok(
            "Reeds_Update(void)",
        ),
    ),
    (
        "Idle__7Farlapp",
        Ok(
            "Farlapp::Idle(void)",
        ),
    ),
    (
        "LoadLine__18SpeedboatObjectiveP12KromeIniLine",
        Ok(
            "SpeedboatObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Hud_DrawBilbies__Fv",
        Ok(
            "Hud_DrawBilbies(void)",
        ),
    ),
    (
        "RenderTexture_SetWaterLow__FPcf",
        Ok(
            "RenderTexture_SetWaterLow(char *, float)",
        ),
    ),
    (
        "Checkpoint_LoadResources__FP8KromeIni",
        Ok(
            "Checkpoint_LoadResources(KromeIni *)",
        ),
    ),
    (
        "InitDuck__14WaterSlideData",
        Ok(
            "WaterSlideData::InitDuck(void)",
        ),
    ),
    (
        "ModelRender_FTW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Detach__5Leech",
        Ok(
            "Leech::Detach(void)",
        ),
    ),
    (
        "InitFight__3Emu",
        Ok(
            "Emu::InitFight(void)",
        ),
    ),
    (
        "Reset__14ModuleInfoBase",
        Ok(
            "ModuleInfoBase::Reset(void)",
        ),
    ),
    (
        "CheckForLineOfSight__4Bull",
        Ok(
            "Bull::CheckForLineOfSight(void)",
        ),
    ),
    (
        "CheckAnimEvents__5Lenny",
        Ok(
            "Lenny::CheckAnimEvents(void)",
        ),
    ),
    (
        "Deinit__13UIButtonGroup",
        Ok(
            "UIButtonGroup::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11SpinningLog",
        Ok(
            "ModuleInfo<SpinningLog>::Init(void)",
        ),
    ),
    (
        "E4Door_LoadResources__FP8KromeIni",
        Ok(
            "E4Door_LoadResources(KromeIni *)",
        ),
    ),
    (
        "cheatText",
        Err(
            NotMangled,
        ),
    ),
    (
        "Input_Vibrate__F12InputDevicesib",
        Ok(
            "Input_Vibrate(InputDevices, int, bool)",
        ),
    ),
    (
        "Startup__9Generator",
        Ok(
            "Generator::Startup(void)",
        ),
    ),
    (
        "EventFindItem__2TyPc",
        Ok(
            "Ty::EventFindItem(char *)",
        ),
    ),
    (
        "Draw__9LightningP4View",
        Ok(
            "Lightning::Draw(View *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9ShoalFish",
        Ok(
            "ModuleInfo<ShoalFish>::Init(void)",
        ),
    ),
    (
        "Init__11InvisiCrateP11GameObjDesc",
        Ok(
            "InvisiCrate::Init(GameObjDesc *)",
        ),
    ),
    (
        "MKGrass_DeinitTypes__Fv",
        Ok(
            "MKGrass_DeinitTypes(void)",
        ),
    ),
    (
        "Message__15TurningPlatformP9MKMessage",
        Ok(
            "TurningPlatform::Message(MKMessage *)",
        ),
    ),
    (
        "Init__15WaterfallStructP6VectorT1T1T1",
        Ok(
            "WaterfallStruct::Init(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Update__13RainbowEffectf",
        Ok(
            "RainbowEffect::Update(float)",
        ),
    ),
    (
        "_getRef0",
        Err(
            NotMangled,
        ),
    ),
    (
        "ROPE_ATTACH",
        Err(
            NotMangled,
        ),
    ),
    (
        "Animate__7BushPigf",
        Ok(
            "BushPig::Animate(float)",
        ),
    ),
    (
        "GetNodeWorldPosition__9AnimationiP6Vector",
        Ok(
            "Animation::GetNodeWorldPosition(int, Vector *)",
        ),
    ),
    (
        "sceSifStopModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddVert__17MKShadow_AnimatedP12MKShadowVert",
        Ok(
            "MKShadow_Animated::AddVert(MKShadowVert *)",
        ),
    ),
    (
        "FadeInOut__10ScreenDataiii",
        Ok(
            "ScreenData::FadeInOut(int, int, int)",
        ),
    ),
    (
        "SetState__11EnemyObjectib",
        Ok(
            "EnemyObject::SetState(int, bool)",
        ),
    ),
    (
        "SetSelection__13UIButtonGroupi",
        Ok(
            "UIButtonGroup::SetSelection(int)",
        ),
    ),
    (
        "GameCamera_UseLaunchCamera__Fb",
        Ok(
            "GameCamera_UseLaunchCamera(bool)",
        ),
    ),
    (
        "LoadDone__6MKProp",
        Ok(
            "MKProp::LoadDone(void)",
        ),
    ),
    (
        "DoShakeFX__6Geyserf",
        Ok(
            "Geyser::DoShakeFX(float)",
        ),
    ),
    (
        "DeinitHitAntHill__7BushPig",
        Ok(
            "BushPig::DeinitHitAntHill(void)",
        ),
    ),
    (
        "ThrowLasso__5Lasso",
        Ok(
            "Lasso::ThrowLasso(void)",
        ),
    ),
    (
        "ShowGameInfo__9LevelData11LevelNumber",
        Ok(
            "LevelData::ShowGameInfo(LevelNumber)",
        ),
    ),
    (
        "GameCamera_OverrideSpiral_Add__FP28CameraOverrideSpiralLoadInfo",
        Ok(
            "GameCamera_OverrideSpiral_Add(CameraOverrideSpiralLoadInfo *)",
        ),
    ),
    (
        "sceIpuRestartDMA",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__6SpyEgg",
        Ok(
            "SpyEgg::LoadDone(void)",
        ),
    ),
    (
        "ModelRender_CFX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8Teleport$envelope",
        Ok(
            "Teleport::envelope",
        ),
    ),
    (
        "SpinPropeller__9FrillBike",
        Ok(
            "FrillBike::SpinPropeller(void)",
        ),
    ),
    (
        "MKMemoryCard_GetInfo__FiPiT1T1T1",
        Ok(
            "MKMemoryCard_GetInfo(int, int *, int *, int *, int *)",
        ),
    ),
    (
        "GuideBarrel_LoadResources__FP8KromeIni",
        Ok(
            "GuideBarrel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$F$terminate__Fv",
        Ok(
            "_GLOBAL_$F$terminate(void)",
        ),
    ),
    (
        "Move__5Rhinofb",
        Ok(
            "Rhino::Move(float, bool)",
        ),
    ),
    (
        "DeinitLassoCaughtFrillBike__5Lasso",
        Ok(
            "Lasso::DeinitLassoCaughtFrillBike(void)",
        ),
    ),
    (
        "Bunyip_Add__FP6VectorT0",
        Ok(
            "Bunyip_Add(Vector *, Vector *)",
        ),
    ),
    (
        "PatrolInit__5Skink",
        Ok(
            "Skink::PatrolInit(void)",
        ),
    ),
    (
        "PauseScreen_GameTotals_Deinit__Fv",
        Ok(
            "PauseScreen_GameTotals_Deinit(void)",
        ),
    ),
    (
        "CreateFromMem__8MaterialPcPv",
        Ok(
            "Material::CreateFromMem(char *, void *)",
        ),
    ),
    (
        "Deinit__11MKWaterProp",
        Ok(
            "MKWaterProp::Deinit(void)",
        ),
    ),
    (
        "RenderTexture_ResetWaterBlendValues__Fv",
        Ok(
            "RenderTexture_ResetWaterBlendValues(void)",
        ),
    ),
    (
        "Find__7TexturePc",
        Ok(
            "Texture::Find(char *)",
        ),
    ),
    (
        "JumpTurnInit__5Yabby",
        Ok(
            "Yabby::JumpTurnInit(void)",
        ),
    ),
    (
        "memchr",
        Err(
            NotMangled,
        ),
    ),
    (
        "Victory__4Bull",
        Ok(
            "Bull::Victory(void)",
        ),
    ),
    (
        "Explode__7SeaMine",
        Ok(
            "SeaMine::Explode(void)",
        ),
    ),
    (
        "Init__9AnimEntryP12MKAnimScripti",
        Ok(
            "AnimEntry::Init(MKAnimScript *, int)",
        ),
    ),
    (
        "FireSnowBallInit__6Fluffy",
        Ok(
            "Fluffy::FireSnowBallInit(void)",
        ),
    ),
    (
        "SwimToChumInit__6Crikey",
        Ok(
            "Crikey::SwimToChumInit(void)",
        ),
    ),
    (
        "GetTimeAlongPath__24GCT_WaypointPlaneManagerP6Vectori",
        Ok(
            "GCT_WaypointPlaneManager::GetTimeAlongPath(Vector *, int)",
        ),
    ),
    (
        "Create__8Teleport",
        Ok(
            "Teleport::Create(void)",
        ),
    ),
    (
        "Sound_ReloadBankFromMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__10BlueTongueP9MKMessage",
        Ok(
            "BlueTongue::Message(MKMessage *)",
        ),
    ),
    (
        "Activate__17MiniGameObjective",
        Ok(
            "MiniGameObjective::Activate(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8BossCassPv",
        Ok(
            "ModuleInfo<BossCass>::ConstructObject(void *)",
        ),
    ),
    (
        "Message__9FrillBikeP9MKMessage",
        Ok(
            "FrillBike::Message(MKMessage *)",
        ),
    ),
    (
        "ChaseDeinit__10SnowSpider",
        Ok(
            "SnowSpider::ChaseDeinit(void)",
        ),
    ),
    (
        "GetRefPointPoint__5Skinki",
        Ok(
            "Skink::GetRefPointPoint(int)",
        ),
    ),
    (
        "PauseScreen_GotoState__F17PauseScreen_Stateb",
        Ok(
            "PauseScreen_GotoState(PauseScreen_State, bool)",
        ),
    ),
    (
        "LightTree__11FrillLizard",
        Ok(
            "FrillLizard::LightTree(void)",
        ),
    ),
    (
        "Draw__6Shadow",
        Ok(
            "Shadow::Draw(void)",
        ),
    ),
    (
        "Reset__3Hud",
        Ok(
            "Hud::Reset(void)",
        ),
    ),
    (
        "UpdateDustPos__10WhirlyWind",
        Ok(
            "WhirlyWind::UpdateDustPos(void)",
        ),
    ),
    (
        "_sprintf_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__13OpalCollector",
        Ok(
            "OpalCollector::Reset(void)",
        ),
    ),
    (
        "_vt$17BlueTongueThrower",
        Ok(
            "BlueTongueThrower virtual table",
        ),
    ),
    (
        "Update__13BubbleSpawner",
        Ok(
            "BubbleSpawner::Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$GuideBarrel_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to GuideBarrel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_CFX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Debug_SetFont__FP4Font",
        Ok(
            "Debug_SetFont(Font *)",
        ),
    ),
    (
        "Init__12DialogEffect",
        Ok(
            "DialogEffect::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14FireworksCrate",
        Ok(
            "ModuleInfo<FireworksCrate>::Init(void)",
        ),
    ),
    (
        "Move__2Ty",
        Ok(
            "Ty::Move(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Jeep_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Jeep_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$ty",
        Ok(
            "global constructors keyed to ty",
        ),
    ),
    (
        "sceSifInitRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "SkidStopInit__5Lenny",
        Ok(
            "Lenny::SkidStopInit(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__4Tick",
        Ok(
            "Tick::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10Teleporter",
        Ok(
            "ModuleInfo<Teleporter> virtual table",
        ),
    ),
    (
        "InitSwimAttack__2Ty",
        Ok(
            "Ty::InitSwimAttack(void)",
        ),
    ),
    (
        "AddGifTag_Image__3DmaUlUl",
        Ok(
            "Dma::AddGifTag_Image(unsigned long, unsigned long)",
        ),
    ),
    (
        "CreateDebugMenus__8RainInitP15DebugOptionMenu",
        Ok(
            "RainInit::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "FrontEnd_Gallery_OnEnter__Fv",
        Ok(
            "FrontEnd_Gallery_OnEnter(void)",
        ),
    ),
    (
        "Particle_ResetASystem__FPP14ParticleSystem",
        Ok(
            "Particle_ResetASystem(ParticleSystem **)",
        ),
    ),
    (
        "MKWaterManager_FindWaterType__FPc",
        Ok(
            "MKWaterManager_FindWaterType(char *)",
        ),
    ),
    (
        "LoadMaterials__7MKWater",
        Ok(
            "MKWater::LoadMaterials(void)",
        ),
    ),
    (
        "GetTotalFreeBilbyCount__8GameData",
        Ok(
            "GameData::GetTotalFreeBilbyCount(void)",
        ),
    ),
    (
        "Flinch__10ScubaFrill",
        Ok(
            "ScubaFrill::Flinch(void)",
        ),
    ),
    (
        "UpdateAnimation__2Ty",
        Ok(
            "Ty::UpdateAnimation(void)",
        ),
    ),
    (
        "_vt$16__func_type_info",
        Ok(
            "__func_type_info virtual table",
        ),
    ),
    (
        "Exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Push__3Dma",
        Ok(
            "Dma::Push(void)",
        ),
    ),
    (
        "Whomp__5Rhino",
        Ok(
            "Rhino::Whomp(void)",
        ),
    ),
    (
        "UpdateShockWave__4Bull",
        Ok(
            "Bull::UpdateShockWave(void)",
        ),
    ),
    (
        "pCounterModelRender2nd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_GetCollideHeight__FP6VectorT0Pbf",
        Ok(
            "Tools_GetCollideHeight(Vector *, Vector *, bool *, float)",
        ),
    ),
    (
        "ColorTyFromGround__2Tyf",
        Ok(
            "Ty::ColorTyFromGround(float)",
        ),
    ),
    (
        "_free_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__8CableCar",
        Ok(
            "CableCar::LoadDone(void)",
        ),
    ),
    (
        "__ti9type_info",
        Ok(
            "type_info type_info node",
        ),
    ),
    (
        "Update__6Target",
        Ok(
            "Target::Update(void)",
        ),
    ),
    (
        "UpdateMovement__11EnemyObject",
        Ok(
            "EnemyObject::UpdateMovement(void)",
        ),
    ),
    (
        "IdleInit__7KenOath",
        Ok(
            "KenOath::IdleInit(void)",
        ),
    ),
    (
        "UpdateTargetForwardVector__9SmallCrab",
        Ok(
            "SmallCrab::UpdateTargetForwardVector(void)",
        ),
    ),
    (
        "__is_pointer__FPv",
        Ok(
            "__is_pointer(void *)",
        ),
    ),
    (
        "Glide_Init__10GameCamera",
        Ok(
            "GameCamera::Glide_Init(void)",
        ),
    ),
    (
        "ParticlesDeinit__12DialogEffect",
        Ok(
            "DialogEffect::ParticlesDeinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_9Speedboat$propNode",
        Ok(
            "global constructors keyed to Speedboat::propNode",
        ),
    ),
    (
        "NormaliseAngle__Ff",
        Ok(
            "NormaliseAngle(float)",
        ),
    ),
    (
        "LinkUpRow__6SMTreeiii",
        Ok(
            "SMTree::LinkUpRow(int, int, int)",
        ),
    ),
    (
        "FireDrum_LoadResources__FP8KromeIni",
        Ok(
            "FireDrum_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceSifSetDChain",
        Err(
            NotMangled,
        ),
    ),
    (
        "Failure__17MiniGameObjective",
        Ok(
            "MiniGameObjective::Failure(void)",
        ),
    ),
    (
        "GetFadePercentage__11FaderObject",
        Ok(
            "FaderObject::GetFadePercentage(void)",
        ),
    ),
    (
        "GameCamera_ResetView__Fv",
        Ok(
            "GameCamera_ResetView(void)",
        ),
    ),
    (
        "GetTU__21WaterfallStreamStructP6VectorT1PfT1",
        Ok(
            "WaterfallStreamStruct::GetTU(Vector *, Vector *, float *, Vector *)",
        ),
    ),
    (
        "_clearOnce",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__6WombatP11GameObjDesc",
        Ok(
            "Wombat::Init(GameObjDesc *)",
        ),
    ),
    (
        "MakingOfVideo_Update__Fv",
        Ok(
            "MakingOfVideo_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14MobilePlatform",
        Ok(
            "ModuleInfo<MobilePlatform>::Init(void)",
        ),
    ),
    (
        "WaterSurfaceState__5TyFSMi",
        Ok(
            "TyFSM::WaterSurfaceState(int)",
        ),
    ),
    (
        "Create__5ModelPcT1",
        Ok(
            "Model::Create(char *, char *)",
        ),
    ),
    (
        "_GLOBAL_$I$DDACheckpoint_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to DDACheckpoint_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GenerateRandomTargetPos__14TrapdoorSpiderRC6Vectorf",
        Ok(
            "TrapdoorSpider::GenerateRandomTargetPos(Vector const &, float)",
        ),
    ),
    (
        "AddToList__11AutoVisibleP6VectorP5Model",
        Ok(
            "AutoVisible::AddToList(Vector *, Model *)",
        ),
    ),
    (
        "UnderWaterKnockBackInit__2Ty",
        Ok(
            "Ty::UnderWaterKnockBackInit(void)",
        ),
    ),
    (
        "SetDebugHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Opening__13OpalCollector",
        Ok(
            "OpalCollector::Opening(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7BeerCanPv",
        Ok(
            "ModuleInfo<BeerCan>::ConstructObject(void *)",
        ),
    ),
    (
        "Sigh__8KoalaKid",
        Ok(
            "KoalaKid::Sigh(void)",
        ),
    ),
    (
        "AddShadow__7BoulderP6Vectorff",
        Ok(
            "Boulder::AddShadow(Vector *, float, float)",
        ),
    ),
    (
        "Tools_EnableWideScreen__FP4Viewb",
        Ok(
            "Tools_EnableWideScreen(View *, bool)",
        ),
    ),
    (
        "UseFog__4View",
        Ok(
            "View::UseFog(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__6Muddie",
        Ok(
            "Muddie::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Charge__8LilNeddy",
        Ok(
            "LilNeddy::Charge(void)",
        ),
    ),
    (
        "Update__10BurningBatP5Skink",
        Ok(
            "BurningBat::Update(Skink *)",
        ),
    ),
    (
        "_16BreakAndTurnData$states",
        Ok(
            "BreakAndTurnData::states",
        ),
    ),
    (
        "WhirlyWind_LoadResources__FP8KromeIni",
        Ok(
            "WhirlyWind_LoadResources(KromeIni *)",
        ),
    ),
    (
        "DeinitLassoPullIn__5Lasso",
        Ok(
            "Lasso::DeinitLassoPullIn(void)",
        ),
    ),
    (
        "CameraOverrideRail_End__Fv",
        Ok(
            "CameraOverrideRail_End(void)",
        ),
    ),
    (
        "HitWorld__8MegarangP6Vectori",
        Ok(
            "Megarang::HitWorld(Vector *, int)",
        ),
    ),
    (
        "Init__11GuideBarrelP11GameObjDesc",
        Ok(
            "GuideBarrel::Init(GameObjDesc *)",
        ),
    ),
    (
        "AntHill_LoadResources__FP8KromeIni",
        Ok(
            "AntHill_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Muddie",
        Ok(
            "ModuleInfo<Muddie>::Init(void)",
        ),
    ),
    (
        "BackOff__4Croc",
        Ok(
            "Croc::BackOff(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7C3Actor",
        Ok(
            "ModuleInfo<C3Actor>::Init(void)",
        ),
    ),
    (
        "Init__10DropShadowP6VectorT1T1T1fb",
        Ok(
            "DropShadow::Init(Vector *, Vector *, Vector *, Vector *, float, bool)",
        ),
    ),
    (
        "_GLOBAL_$I$pWaterMat",
        Ok(
            "global constructors keyed to pWaterMat",
        ),
    ),
    (
        "SetAnim__9AnimationP7AnimDeffUi",
        Ok(
            "Animation::SetAnim(AnimDef *, float, unsigned int)",
        ),
    ),
    (
        "Destroy__t7PtrList1Z7MKWaterP7MKWater",
        Ok(
            "PtrList<MKWater>::Destroy(MKWater *)",
        ),
    ),
    (
        "_FindLowestPipe__Ff",
        Ok(
            "_FindLowestPipe(float)",
        ),
    ),
    (
        "SonarAttackInit__9ShadowBat",
        Ok(
            "ShadowBat::SonarAttackInit(void)",
        ),
    ),
    (
        "Drop__19ShadowBatStalactiteP6Vector",
        Ok(
            "ShadowBatStalactite::Drop(Vector *)",
        ),
    ),
    (
        "Sound_GetMasterVolume__FPfT0",
        Ok(
            "Sound_GetMasterVolume(float *, float *)",
        ),
    ),
    (
        "PauseScreen_Options_Init__Fv",
        Ok(
            "PauseScreen_Options_Init(void)",
        ),
    ),
    (
        "Deinit__21ParticleSystemManager",
        Ok(
            "ParticleSystemManager::Deinit(void)",
        ),
    ),
    (
        "_vt$19__builtin_type_info",
        Ok(
            "__builtin_type_info virtual table",
        ),
    ),
    (
        "Fire__9DoomerangP6VectorT1",
        Ok(
            "Doomerang::Fire(Vector *, Vector *)",
        ),
    ),
    (
        "PreWarp__2Ty",
        Ok(
            "Ty::PreWarp(void)",
        ),
    ),
    (
        "FindPointState__4Bird",
        Ok(
            "Bird::FindPointState(void)",
        ),
    ),
    (
        "Sound_SetPitch3d",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpikeyIce_LoadResources__Fv",
        Ok(
            "SpikeyIce_LoadResources(void)",
        ),
    ),
    (
        "CalcHeight__11MKWaterPropffP6Vector",
        Ok(
            "MKWaterProp::CalcHeight(float, float, Vector *)",
        ),
    ),
    (
        "Timer_LogNow__FPc",
        Ok(
            "Timer_LogNow(char *)",
        ),
    ),
    (
        "PrimeMaterial__16ModelExplorer_P2",
        Ok(
            "ModelExplorer_P2::PrimeMaterial(void)",
        ),
    ),
    (
        "Idle__5Skink",
        Ok(
            "Skink::Idle(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11ScrubTurkey",
        Ok(
            "ModuleInfo<ScrubTurkey>::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7IceRampPv",
        Ok(
            "ModuleInfo<IceRamp>::ConstructObject(void *)",
        ),
    ),
    (
        "lastCollision",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Zappyrang",
        Ok(
            "ModuleInfo<Zappyrang> virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11PontoonRopePv",
        Ok(
            "ModuleInfo<PontoonRope>::ConstructObject(void *)",
        ),
    ),
    (
        "Range_Update__Fv",
        Ok(
            "Range_Update(void)",
        ),
    ),
    (
        "SetKickJump__2TyP6Vectorf",
        Ok(
            "Ty::SetKickJump(Vector *, float)",
        ),
    ),
    (
        "Reset__11BunyipElder",
        Ok(
            "BunyipElder::Reset(void)",
        ),
    ),
    (
        "KingFisher_LoadResources__Fv",
        Ok(
            "KingFisher_LoadResources(void)",
        ),
    ),
    (
        "AlertInit__11FrillLizard",
        Ok(
            "FrillLizard::AlertInit(void)",
        ),
    ),
    (
        "Bilby_Draw__Fv",
        Ok(
            "Bilby_Draw(void)",
        ),
    ),
    (
        "Idle__5Rufus",
        Ok(
            "Rufus::Idle(void)",
        ),
    ),
    (
        "sceSifGetIopAddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "ApplyMatrixW__6VectorP6VectorP6Matrix",
        Ok(
            "Vector::ApplyMatrixW(Vector *, Matrix *)",
        ),
    ),
    (
        "UpdateMovement__9Barracuda",
        Ok(
            "Barracuda::UpdateMovement(void)",
        ),
    ),
    (
        "GsGetIMR",
        Err(
            NotMangled,
        ),
    ),
    (
        "SuckInit__4Tick",
        Ok(
            "Tick::SuckInit(void)",
        ),
    ),
    (
        "_vt$9ShadowBat",
        Ok(
            "ShadowBat virtual table",
        ),
    ),
    (
        "ChaseInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::ChaseInit(void)",
        ),
    ),
    (
        "SharkCageDeinit__2Ty",
        Ok(
            "Ty::SharkCageDeinit(void)",
        ),
    ),
    (
        "ModelRender_AExyST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dead__4Bull",
        Ok(
            "Bull::Dead(void)",
        ),
    ),
    (
        "CheckForTy__11EnemyObject",
        Ok(
            "EnemyObject::CheckForTy(void)",
        ),
    ),
    (
        "Reset__14CameraOverride",
        Ok(
            "CameraOverride::Reset(void)",
        ),
    ),
    (
        "GetFallingPos__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::GetFallingPos(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__8KoalaKid",
        Ok(
            "KoalaKid::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "InitFinal__7Boulder",
        Ok(
            "Boulder::InitFinal(void)",
        ),
    ),
    (
        "FirstPerson_Deinit__10GameCamera",
        Ok(
            "GameCamera::FirstPerson_Deinit(void)",
        ),
    ),
    (
        "Idle__8RingoArm",
        Ok(
            "RingoArm::Idle(void)",
        ),
    ),
    (
        "LoadDone__4Drum",
        Ok(
            "Drum::LoadDone(void)",
        ),
    ),
    (
        "Burn__11CrateStruct",
        Ok(
            "CrateStruct::Burn(void)",
        ),
    ),
    (
        "AlertPause_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::AlertPause_Init(void)",
        ),
    ),
    (
        "Reset__11FrillLizard",
        Ok(
            "FrillLizard::Reset(void)",
        ),
    ),
    (
        "SecondHitZap__10IceCoolant",
        Ok(
            "IceCoolant::SecondHitZap(void)",
        ),
    ),
    (
        "gClearScreen",
        Err(
            NotMangled,
        ),
    ),
    (
        "Stop__16SoundEventHelper",
        Ok(
            "SoundEventHelper::Stop(void)",
        ),
    ),
    (
        "Collision_RayCollideDynamicModel__FP6VectorT0P15CollisionResultP5Modeli",
        Ok(
            "Collision_RayCollideDynamicModel(Vector *, Vector *, CollisionResult *, Model *, int)",
        ),
    ),
    (
        "UpdateFinal__7Boulder",
        Ok(
            "Boulder::UpdateFinal(void)",
        ),
    ),
    (
        "gpTracedRandomSeed",
        Err(
            NotMangled,
        ),
    ),
    (
        "gCameraPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__16FinishLineStruct",
        Ok(
            "FinishLineStruct::Deinit(void)",
        ),
    ),
    (
        "Update__8Material",
        Ok(
            "Material::Update(void)",
        ),
    ),
    (
        "LoadTemplate__7MKWaterPc",
        Ok(
            "MKWater::LoadTemplate(char *)",
        ),
    ),
    (
        "Init__17MiniGameObjectiveP11GameObjDesc",
        Ok(
            "MiniGameObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "SharedUpdate__6Cattle",
        Ok(
            "Cattle::SharedUpdate(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Load__14GateDescriptorP8KromeIni",
        Ok(
            "global constructors keyed to GateDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10CrikeyChumPv",
        Ok(
            "ModuleInfo<CrikeyChum>::ConstructObject(void *)",
        ),
    ),
    (
        "MKShadow_BlitBuffer__Fii",
        Ok(
            "MKShadow_BlitBuffer(int, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Pontoon",
        Ok(
            "ModuleInfo<Pontoon>::Init(void)",
        ),
    ),
    (
        "LassoCaughtWaterTank__5Lasso",
        Ok(
            "Lasso::LassoCaughtWaterTank(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11DropPontoon",
        Ok(
            "ModuleInfo<DropPontoon>::Init(void)",
        ),
    ),
    (
        "Waterfall_RenderWater__Fv",
        Ok(
            "Waterfall_RenderWater(void)",
        ),
    ),
    (
        "Model_UnpackTemplate__FP13ModelTemplate",
        Ok(
            "Model_UnpackTemplate(ModelTemplate *)",
        ),
    ),
    (
        "WalkHomeInit__11FrillLizard",
        Ok(
            "FrillLizard::WalkHomeInit(void)",
        ),
    ),
    (
        "UseWaterSlideCamera__10GameCamerab",
        Ok(
            "GameCamera::UseWaterSlideCamera(bool)",
        ),
    ),
    (
        "MKShadow_Destroy__FP8MKShadow",
        Ok(
            "MKShadow_Destroy(MKShadow *)",
        ),
    ),
    (
        "Reeds_Deinit__Fv",
        Ok(
            "Reeds_Deinit(void)",
        ),
    ),
    (
        "FallInit__5Neddy",
        Ok(
            "Neddy::FallInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10LavaBurner",
        Ok(
            "ModuleInfo<LavaBurner> virtual table",
        ),
    ),
    (
        "Enter__17WaterSlideManagerP6Vector",
        Ok(
            "WaterSlideManager::Enter(Vector *)",
        ),
    ),
    (
        "_9Speedboat$barrelNode",
        Ok(
            "Speedboat::barrelNode",
        ),
    ),
    (
        "SoundBank_StopMusic__Ff",
        Ok(
            "SoundBank_StopMusic(float)",
        ),
    ),
    (
        "iReleaseWaitThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseDeinit__3Eel",
        Ok(
            "Eel::ChaseDeinit(void)",
        ),
    ),
    (
        "LoadLine__8ElevatorP12KromeIniLine",
        Ok(
            "Elevator::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Message__15StopwatchStructP9MKMessage",
        Ok(
            "StopwatchStruct::Message(MKMessage *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5RingoPv",
        Ok(
            "ModuleInfo<Ringo>::ConstructObject(void *)",
        ),
    ),
    (
        "NodeOverride_SetState__FP12NodeOverrideP6Vector",
        Ok(
            "NodeOverride_SetState(NodeOverride *, Vector *)",
        ),
    ),
    (
        "SignPost_HideAll__Fv",
        Ok(
            "SignPost_HideAll(void)",
        ),
    ),
    (
        "WaterBubbleUpdate__2Tyi",
        Ok(
            "Ty::WaterBubbleUpdate(int)",
        ),
    ),
    (
        "AddUnderwaterDust__2Ty",
        Ok(
            "Ty::AddUnderwaterDust(void)",
        ),
    ),
    (
        "Destroy__14CameraOverride",
        Ok(
            "CameraOverride::Destroy(void)",
        ),
    ),
    (
        "CheckForHit__14SnowBallAttack",
        Ok(
            "SnowBallAttack::CheckForHit(void)",
        ),
    ),
    (
        "DrawDropShadow__11EnemyObjectf",
        Ok(
            "EnemyObject::DrawDropShadow(float)",
        ),
    ),
    (
        "UpdateLogic__5Gecko",
        Ok(
            "Gecko::UpdateLogic(void)",
        ),
    ),
    (
        "CameraOverrideHigh_End__Fv",
        Ok(
            "CameraOverrideHigh_End(void)",
        ),
    ),
    (
        "DeinitBite__2Ty",
        Ok(
            "Ty::DeinitBite(void)",
        ),
    ),
    (
        "_GLOBAL_$F$_$_9type_info",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "GLOBAL_",
            ),
        ),
    ),
    (
        "Reset__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Reset(void)",
        ),
    ),
    (
        "Range_ModelSetAlpha__FP5Modeliffffi",
        Ok(
            "Range_ModelSetAlpha(Model *, int, float, float, float, float, int)",
        ),
    ),
    (
        "SetRenderTarget__4ViewP8MaterialT1",
        Ok(
            "View::SetRenderTarget(Material *, Material *)",
        ),
    ),
    (
        "PauseScreen_ChangeLevel_Draw__Fv",
        Ok(
            "PauseScreen_ChangeLevel_Draw(void)",
        ),
    ),
    (
        "LoadLine__8SentinelP12KromeIniLine",
        Ok(
            "Sentinel::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadDone__8FireDrum",
        Ok(
            "FireDrum::LoadDone(void)",
        ),
    ),
    (
        "SetFindItem__2TyP6VectorP19SpecialPickupStruct",
        Ok(
            "Ty::SetFindItem(Vector *, SpecialPickupStruct *)",
        ),
    ),
    (
        "Tools_ApplyFrictionAndGravity__FP6VectorT0T0f",
        Ok(
            "Tools_ApplyFrictionAndGravity(Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "Deinit__3Dma",
        Ok(
            "Dma::Deinit(void)",
        ),
    ),
    (
        "Taunt__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Taunt(void)",
        ),
    ),
    (
        "Init__9GeneratorP11GameObjDesc",
        Ok(
            "Generator::Init(GameObjDesc *)",
        ),
    ),
    (
        "_14LevelObjective$pCurObjective",
        Ok(
            "LevelObjective::pCurObjective",
        ),
    ),
    (
        "InverseSimple__6MatrixP6Matrix",
        Ok(
            "Matrix::InverseSimple(Matrix *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11BurningJunk",
        Ok(
            "ModuleInfo<BurningJunk> virtual table",
        ),
    ),
    (
        "GCT_LoadVector__FP12KromeIniLinePcP6Vector",
        Ok(
            "GCT_LoadVector(KromeIniLine *, char *, Vector *)",
        ),
    ),
    (
        "__malloc_sbrk_base",
        Err(
            InvalidSpecialMethod(
                "malloc_sbrk_base",
            ),
        ),
    ),
    (
        "Idle__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Idle(void)",
        ),
    ),
    (
        "SetPosition__5ModelP6Vector",
        Ok(
            "Model::SetPosition(Vector *)",
        ),
    ),
    (
        "_start",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateArmour__5Neddy",
        Ok(
            "Neddy::UpdateArmour(void)",
        ),
    ),
    (
        "CritterField_Register2__FP17CritterField2Descf",
        Ok(
            "CritterField_Register2(CritterField2Desc *, float)",
        ),
    ),
    (
        "FillIn__21WaterfallStreamStructii",
        Ok(
            "WaterfallStreamStruct::FillIn(int, int)",
        ),
    ),
    (
        "Deinit__14FireworksCrate",
        Ok(
            "FireworksCrate::Deinit(void)",
        ),
    ),
    (
        "gCurrentSceneDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Reset(void)",
        ),
    ),
    (
        "AttachPropInit__12DialogEffect",
        Ok(
            "DialogEffect::AttachPropInit(void)",
        ),
    ),
    (
        "Bunyip_IsLastEventGroundHit__Fv",
        Ok(
            "Bunyip_IsLastEventGroundHit(void)",
        ),
    ),
    (
        "Reset__5Roach",
        Ok(
            "Roach::Reset(void)",
        ),
    ),
    (
        "Gem_ClearParticleSystems__Fv",
        Ok(
            "Gem_ClearParticleSystems(void)",
        ),
    ),
    (
        "_GLOBAL_$I$FallGuideProp_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to FallGuideProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Deinit__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::Deinit(void)",
        ),
    ),
    (
        "Reset__8PubeCrab",
        Ok(
            "PubeCrab::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10FrostyrangPv",
        Ok(
            "ModuleInfo<Frostyrang>::ConstructObject(void *)",
        ),
    ),
    (
        "sceMcInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceFsReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$debugNumSubObjectsClipped",
        Ok(
            "MKWater::debugNumSubObjectsClipped",
        ),
    ),
    (
        "Reset__5Neddy",
        Ok(
            "Neddy::Reset(void)",
        ),
    ),
    (
        "ModelRender_AExyS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetDistanceType__10GameCamera18CameraDistanceTypef",
        Ok(
            "GameCamera::SetDistanceType(CameraDistanceType, float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Generator",
        Ok(
            "ModuleInfo<Generator> virtual table",
        ),
    ),
    (
        "HeatFlare_Deinit__Fv",
        Ok(
            "HeatFlare_Deinit(void)",
        ),
    ),
    (
        "_7Texture$initialised",
        Ok(
            "Texture::initialised",
        ),
    ),
    (
        "ModelRender_AExyT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitCrash__9Speedboat",
        Ok(
            "Speedboat::InitCrash(void)",
        ),
    ),
    (
        "Message__11PontoonRopeP9MKMessage",
        Ok(
            "PontoonRope::Message(MKMessage *)",
        ),
    ),
    (
        "SnowSpider_LoadResources__FP8KromeIni",
        Ok(
            "SnowSpider_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceMcOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetThreadId",
        Err(
            NotMangled,
        ),
    ),
    (
        "VisibilityTest__4ViewP14BoundingVolume",
        Ok(
            "View::VisibilityTest(BoundingVolume *)",
        ),
    ),
    (
        "InitManager__21CameraOverrideManageri",
        Ok(
            "CameraOverrideManager::InitManager(int)",
        ),
    ),
    (
        "LedgePullUpTransition__2Ty",
        Ok(
            "Ty::LedgePullUpTransition(void)",
        ),
    ),
    (
        "SetFogIntensity__4Viewff",
        Ok(
            "View::SetFogIntensity(float, float)",
        ),
    ),
    (
        "Draw__4RainP4Viewb",
        Ok(
            "Rain::Draw(View *, bool)",
        ),
    ),
    (
        "Reset__8FireDrum",
        Ok(
            "FireDrum::Reset(void)",
        ),
    ),
    (
        "Idle__11ReedsStruct",
        Ok(
            "ReedsStruct::Idle(void)",
        ),
    ),
    (
        "strstr",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackPattern1Deinit__5Rufus",
        Ok(
            "Rufus::AttackPattern1Deinit(void)",
        ),
    ),
    (
        "AddGif_AD_FRAME_2__3DmaUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_FRAME_2(unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "AddGif_AD_TEX0_2__3DmaUlUlUlUlUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX0_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "ModelRender_CFLO1_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "pEngineMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Reset(void)",
        ),
    ),
    (
        "__tis",
        Ok(
            "short type_info node",
        ),
    ),
    (
        "Init__7KenOathP11GameObjDesc",
        Ok(
            "KenOath::Init(GameObjDesc *)",
        ),
    ),
    (
        "GetDirtSourcePos__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::GetDirtSourcePos(void)",
        ),
    ),
    (
        "Deinit__5Spear",
        Ok(
            "Spear::Deinit(void)",
        ),
    ),
    (
        "LookOutInit__4Croc",
        Ok(
            "Croc::LookOutInit(void)",
        ),
    ),
    (
        "TryChangeState__2Tyb14HeroActorState",
        Ok(
            "Ty::TryChangeState(bool, HeroActorState)",
        ),
    ),
    (
        "MiniGame_C2_GetSnowGunPos__Fv",
        Ok(
            "MiniGame_C2_GetSnowGunPos(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13FallGuideProp",
        Ok(
            "ModuleInfo<FallGuideProp> virtual table",
        ),
    ),
    (
        "SceneInit__12DialogPlayer",
        Ok(
            "DialogPlayer::SceneInit(void)",
        ),
    ),
    (
        "modelInstances",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__6TyBite",
        Ok(
            "TyBite::Deinit(void)",
        ),
    ),
    (
        "ChargeInit__9Barracuda",
        Ok(
            "Barracuda::ChargeInit(void)",
        ),
    ),
    (
        "FrontEnd_Title_OnEnter__Fv",
        Ok(
            "FrontEnd_Title_OnEnter(void)",
        ),
    ),
    (
        "Update__3Gem",
        Ok(
            "Gem::Update(void)",
        ),
    ),
    (
        "Shatter_Update__Fv",
        Ok(
            "Shatter_Update(void)",
        ),
    ),
    (
        "_sendIpuCommand",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegDispCenterOffY",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsLowDetail__11MKWaterProp",
        Ok(
            "MKWaterProp::IsLowDetail(void)",
        ),
    ),
    (
        "Init__10WhirlyWindP11GameObjDesc",
        Ok(
            "WhirlyWind::Init(GameObjDesc *)",
        ),
    ),
    (
        "ChuteLog_LoadResources__FP8KromeIni",
        Ok(
            "ChuteLog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "CheckOcclusion__FP14BoundingVolume",
        Ok(
            "CheckOcclusion(BoundingVolume *)",
        ),
    ),
    (
        "Heap_GetBlockInfo__FPv",
        Ok(
            "Heap_GetBlockInfo(void *)",
        ),
    ),
    (
        "Deinit__5Lenny",
        Ok(
            "Lenny::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Wallaby",
        Ok(
            "ModuleInfo<Wallaby>::Init(void)",
        ),
    ),
    (
        "Deinit__22MusicalIcicleObjective",
        Ok(
            "MusicalIcicleObjective::Deinit(void)",
        ),
    ),
    (
        "Draw__11Collapsible",
        Ok(
            "Collapsible::Draw(void)",
        ),
    ),
    (
        "InitPullLasso__7BushPig",
        Ok(
            "BushPig::InitPullLasso(void)",
        ),
    ),
    (
        "RunStopInit__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::RunStopInit(void)",
        ),
    ),
    (
        "_vt$2Ty",
        Ok(
            "Ty virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$Deinit__14MobilePlatform",
        Ok(
            "global constructors keyed to MobilePlatform::Deinit(void)",
        ),
    ),
    (
        "Reset__6TyBite",
        Ok(
            "TyBite::Reset(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z21RainbowScaleObjective",
        Ok(
            "ModuleInfo<RainbowScaleObjective> virtual table",
        ),
    ),
    (
        "Boomerang_CheckForHitSphere__FP6Vectorfb",
        Ok(
            "Boomerang_CheckForHitSphere(Vector *, float, bool)",
        ),
    ),
    (
        "_GLOBAL_$I$Elle_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Elle_LoadResources(KromeIni *)",
        ),
    ),
    (
        "System_VBlankInterruptHandler__Fi",
        Ok(
            "System_VBlankInterruptHandler(int)",
        ),
    ),
    (
        "RunDeInit__11RhinoGround",
        Ok(
            "RhinoGround::RunDeInit(void)",
        ),
    ),
    (
        "Update__21GameCameraPointsDelta",
        Ok(
            "GameCameraPointsDelta::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z19ShadowBatStalactitePv",
        Ok(
            "ModuleInfo<ShadowBatStalactite>::ConstructObject(void *)",
        ),
    ),
    (
        "CameraOverrideDir_Start__Fv",
        Ok(
            "CameraOverrideDir_Start(void)",
        ),
    ),
    (
        "AttackPattern1__5Rufus",
        Ok(
            "Rufus::AttackPattern1(void)",
        ),
    ),
    (
        "Die__4Bull",
        Ok(
            "Bull::Die(void)",
        ),
    ),
    (
        "Flee__5Rufus",
        Ok(
            "Rufus::Flee(void)",
        ),
    ),
    (
        "SpiderTrapdoor_LoadResources__FP8KromeIni",
        Ok(
            "SpiderTrapdoor_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Relaxed__3Emu",
        Ok(
            "Emu::Relaxed(void)",
        ),
    ),
    (
        "Gem_CheatCollectAllCallBack__FPv",
        Ok(
            "Gem_CheatCollectAllCallBack(void *)",
        ),
    ),
    (
        "MKRumble_Reset__Fv",
        Ok(
            "MKRumble_Reset(void)",
        ),
    ),
    (
        "Idle__6Muddie",
        Ok(
            "Muddie::Idle(void)",
        ),
    ),
    (
        "Update__7BeerCan",
        Ok(
            "BeerCan::Update(void)",
        ),
    ),
    (
        "SpawnWaterSteam__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnWaterSteam(Vector *, float)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4TickPv",
        Ok(
            "ModuleInfo<Tick>::ConstructObject(void *)",
        ),
    ),
    (
        "UseFirstPersonCamera__10GameCamerabP19FirstPersonInitInfo",
        Ok(
            "GameCamera::UseFirstPersonCamera(bool, FirstPersonInitInfo *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9FrogFieldPv",
        Ok(
            "ModuleInfo<FrogField>::ConstructObject(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9SpiderWebPv",
        Ok(
            "ModuleInfo<SpiderWeb>::ConstructObject(void *)",
        ),
    ),
    (
        "rand",
        Err(
            NotMangled,
        ),
    ),
    (
        "Level_CountEntities__FP8KromeIni",
        Ok(
            "Level_CountEntities(KromeIni *)",
        ),
    ),
    (
        "Update__17TyParticleManager",
        Ok(
            "TyParticleManager::Update(void)",
        ),
    ),
    (
        "ModelRender_FT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "HoldTyMoveYawInitially__14CameraOverride",
        Ok(
            "CameraOverride::HoldTyMoveYawInitially(void)",
        ),
    ),
    (
        "KoalaKid_LoadResources__FP8KromeIni",
        Ok(
            "KoalaKid_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GetCamInfo__14WaterSlideDataP17WaterSlideCamInfof",
        Ok(
            "WaterSlideData::GetCamInfo(WaterSlideCamInfo *, float)",
        ),
    ),
    (
        "InSharkCage__2Ty",
        Ok(
            "Ty::InSharkCage(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Julius",
        Ok(
            "ModuleInfo<Julius> virtual table",
        ),
    ),
    (
        "AttachInit__4Tick",
        Ok(
            "Tick::AttachInit(void)",
        ),
    ),
    (
        "AuroraKid_PathUpdate__Fv",
        Ok(
            "AuroraKid_PathUpdate(void)",
        ),
    ),
    (
        "ModelRender_AC_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Create__4FontPcT1fff",
        Ok(
            "Font::Create(char *, char *, float, float, float)",
        ),
    ),
    (
        "C1Water_LoadResources__FP8KromeIni",
        Ok(
            "C1Water_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Draw__5Gecko",
        Ok(
            "Gecko::Draw(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Grasshopper_LoadResources__Fv",
        Ok(
            "global constructors keyed to Grasshopper_LoadResources(void)",
        ),
    ),
    (
        "ModelRender_CFLTW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "DebugInit__9FrillBike",
        Ok(
            "FrillBike::DebugInit(void)",
        ),
    ),
    (
        "Crash__4Bull",
        Ok(
            "Bull::Crash(void)",
        ),
    ),
    (
        "WalkState__5Gecko",
        Ok(
            "Gecko::WalkState(void)",
        ),
    ),
    (
        "Update_WaitingMove__3Fly",
        Ok(
            "Fly::Update_WaitingMove(void)",
        ),
    ),
    (
        "Reset__8PipePart",
        Ok(
            "PipePart::Reset(void)",
        ),
    ),
    (
        "LoadLine__7CoconutP12KromeIniLine",
        Ok(
            "Coconut::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Update__15ObjectiveFinder",
        Ok(
            "ObjectiveFinder::Update(void)",
        ),
    ),
    (
        "Draw__14Blitter_Spherei",
        Ok(
            "Blitter_Sphere::Draw(int)",
        ),
    ),
    (
        "_ri0_000",
        Err(
            NotMangled,
        ),
    ),
    (
        "BrakeTransition__7BushPig",
        Ok(
            "BushPig::BrakeTransition(void)",
        ),
    ),
    (
        "TyMemCard_CopyToHost__FiPcT1",
        Ok(
            "TyMemCard_CopyToHost(int, char *, char *)",
        ),
    ),
    (
        "Update__7AntHill",
        Ok(
            "AntHill::Update(void)",
        ),
    ),
    (
        "_7MKWater$bDisableWater",
        Ok(
            "MKWater::bDisableWater",
        ),
    ),
    (
        "SelectIdle__2Ty",
        Ok(
            "Ty::SelectIdle(void)",
        ),
    ),
    (
        "FileSys_SetLoadInterceptHandler__FPFPcPiPvPi_Pv",
        Ok(
            "FileSys_SetLoadInterceptHandler(void *(*)(char *, int *, void *, int *))",
        ),
    ),
    (
        "Model_TrivialRejectTest__FP14BoundingVolumeP6Matrix",
        Ok(
            "Model_TrivialRejectTest(BoundingVolume *, Matrix *)",
        ),
    ),
    (
        "SetYaw__14MobilePlatformff",
        Ok(
            "MobilePlatform::SetYaw(float, float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10TimeAttack",
        Ok(
            "ModuleInfo<TimeAttack> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Jeep",
        Ok(
            "ModuleInfo<Jeep>::Init(void)",
        ),
    ),
    (
        "Cattle_LoadResources__Fv",
        Ok(
            "Cattle_LoadResources(void)",
        ),
    ),
    (
        "Hud_GetGemLivesY__Fv",
        Ok(
            "Hud_GetGemLivesY(void)",
        ),
    ),
    (
        "CollectTalisman__8GameData12TalismanType",
        Ok(
            "GameData::CollectTalisman(TalismanType)",
        ),
    ),
    (
        "Draw__14BlitterCritter",
        Ok(
            "BlitterCritter::Draw(void)",
        ),
    ),
    (
        "Magnetised__3Gem",
        Ok(
            "Gem::Magnetised(void)",
        ),
    ),
    (
        "Sound_Play3d",
        Err(
            NotMangled,
        ),
    ),
    (
        "dcast__C16__user_type_infoRC9type_infoiPvPC9type_infoT3",
        Ok(
            "__user_type_info::dcast(type_info const &, int, void *, type_info const *, void *) const",
        ),
    ),
    (
        "SetTarget__11ScrubTurkeyP6Vector",
        Ok(
            "ScrubTurkey::SetTarget(Vector *)",
        ),
    ),
    (
        "Bat_LoadResources__FP8KromeIni",
        Ok(
            "Bat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "InitIdle__9Boomerang",
        Ok(
            "Boomerang::InitIdle(void)",
        ),
    ),
    (
        "bSpikeyIceLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitInit__6Maurie",
        Ok(
            "Maurie::HitInit(void)",
        ),
    ),
    (
        "CheckForHit__3Ice",
        Ok(
            "Ice::CheckForHit(void)",
        ),
    ),
    (
        "NewCheckpoint__10DDASessioni",
        Ok(
            "DDASession::NewCheckpoint(int)",
        ),
    ),
    (
        "LoadLevel_LoadWaypoint__FP12KromeIniLineP16WayPointLoadInfo",
        Ok(
            "LoadLevel_LoadWaypoint(KromeIniLine *, WayPointLoadInfo *)",
        ),
    ),
    (
        "GameCamera_UsePontoonCamera__Fb",
        Ok(
            "GameCamera_UsePontoonCamera(bool)",
        ),
    ),
    (
        "GetHeight__4Font",
        Ok(
            "Font::GetHeight(void)",
        ),
    ),
    (
        "SetVInterruptHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_PABE__3DmaUl",
        Ok(
            "Dma::AddGif_AD_PABE(unsigned long)",
        ),
    ),
    (
        "GrabEndOfLine__6Parser",
        Ok(
            "Parser::GrabEndOfLine(void)",
        ),
    ),
    (
        "MiniGameC3_Init__Fv",
        Ok(
            "MiniGameC3_Init(void)",
        ),
    ),
    (
        "Pant__5Neddy",
        Ok(
            "Neddy::Pant(void)",
        ),
    ),
    (
        "DeathInit__9Barracuda",
        Ok(
            "Barracuda::DeathInit(void)",
        ),
    ),
    (
        "SetTransparent__19SpecialPickupStructb",
        Ok(
            "SpecialPickupStruct::SetTransparent(bool)",
        ),
    ),
    (
        "Normalise__6VectorP6Vector",
        Ok(
            "Vector::Normalise(Vector *)",
        ),
    ),
    (
        "DyingDeinit__9ShadowBat",
        Ok(
            "ShadowBat::DyingDeinit(void)",
        ),
    ),
    (
        "Maurie_TakeOff__Fv",
        Ok(
            "Maurie_TakeOff(void)",
        ),
    ),
    (
        "Surfacing__2Ty",
        Ok(
            "Ty::Surfacing(void)",
        ),
    ),
    (
        "Update__9SmallRock",
        Ok(
            "SmallRock::Update(void)",
        ),
    ),
    (
        "atan2",
        Err(
            NotMangled,
        ),
    ),
    (
        "RandomFR__FPiff",
        Ok(
            "RandomFR(int *, float, float)",
        ),
    ),
    (
        "__8bad_cast",
        Ok(
            "bad_cast::bad_cast(void)",
        ),
    ),
    (
        "gTextureDisplayMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "signal",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Bird",
        Ok(
            "ModuleInfo<Bird> virtual table",
        ),
    ),
    (
        "Appearing__13TreasureChest",
        Ok(
            "TreasureChest::Appearing(void)",
        ),
    ),
    (
        "UpdateModelNormal__5Roach",
        Ok(
            "Roach::UpdateModelNormal(void)",
        ),
    ),
    (
        "InitBreakAndTurn__2Ty",
        Ok(
            "Ty::InitBreakAndTurn(void)",
        ),
    ),
    (
        "read",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__5Yabby",
        Ok(
            "Yabby::LogicUpdate(void)",
        ),
    ),
    (
        "Activate__13ShatterStruct",
        Ok(
            "ShatterStruct::Activate(void)",
        ),
    ),
    (
        "Hit__5Torch",
        Ok(
            "Torch::Hit(void)",
        ),
    ),
    (
        "SlideTransition__2Ty",
        Ok(
            "Ty::SlideTransition(void)",
        ),
    ),
    (
        "Draw__12StaticFXProp",
        Ok(
            "StaticFXProp::Draw(void)",
        ),
    ),
    (
        "MoveToNextPoint_Update__6Dennis",
        Ok(
            "Dennis::MoveToNextPoint_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12EnemySpawner",
        Ok(
            "ModuleInfo<EnemySpawner>::Init(void)",
        ),
    ),
    (
        "Update__Q27SmoothY11SmoothYInfoPf",
        Ok(
            "SmoothY::SmoothYInfo::Update(float *)",
        ),
    ),
    (
        "CalcBoundingVolumes__7MKWater",
        Ok(
            "MKWater::CalcBoundingVolumes(void)",
        ),
    ),
    (
        "PatrolInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::PatrolInit(void)",
        ),
    ),
    (
        "Reset__5Rufus",
        Ok(
            "Rufus::Reset(void)",
        ),
    ),
    (
        "_defNIQM",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLO1TW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__10ScubaFrill",
        Ok(
            "ScubaFrill::LogicUpdate(void)",
        ),
    ),
    (
        "Draw__21ExtendedAnalogControl",
        Ok(
            "ExtendedAnalogControl::Draw(void)",
        ),
    ),
    (
        "Stopwatch_LoadResources__FP8KromeIni",
        Ok(
            "Stopwatch_LoadResources(KromeIni *)",
        ),
    ),
    (
        "bDisableCollisionDrawReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "bIceBlocksLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Run__12BunyipStruct",
        Ok(
            "BunyipStruct::Run(void)",
        ),
    ),
    (
        "IceBlock_Draw__Fv",
        Ok(
            "IceBlock_Draw(void)",
        ),
    ),
    (
        "LoadExecPS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__5Yabby",
        Ok(
            "Yabby::Deinit(void)",
        ),
    ),
    (
        "Particle_BlackSmoke_Create__FPP14ParticleSystemP6VectorT1",
        Ok(
            "Particle_BlackSmoke_Create(ParticleSystem **, Vector *, Vector *)",
        ),
    ),
    (
        "_rix_001",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifCallRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7SnowGun$muzzleRefIndex",
        Ok(
            "SnowGun::muzzleRefIndex",
        ),
    ),
    (
        "ResolveHit__12ThrowingStar",
        Ok(
            "ThrowingStar::ResolveHit(void)",
        ),
    ),
    (
        "RunTransition__7BushPig",
        Ok(
            "BushPig::RunTransition(void)",
        ),
    ),
    (
        "CheckForBoomerangs__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::CheckForBoomerangs(void)",
        ),
    ),
    (
        "PauseScreen_Continue_OnEnter__Fv",
        Ok(
            "PauseScreen_Continue_OnEnter(void)",
        ),
    ),
    (
        "MKRumble_Pause__Fv",
        Ok(
            "MKRumble_Pause(void)",
        ),
    ),
    (
        "Init__15ZoneBlockerPropP11GameObjDesc",
        Ok(
            "ZoneBlockerProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Death__10BlueTongue",
        Ok(
            "BlueTongue::Death(void)",
        ),
    ),
    (
        "_vt$14TriggerBoxProp",
        Ok(
            "TriggerBoxProp virtual table",
        ),
    ),
    (
        "Ty_Reset__Fv",
        Ok(
            "Ty_Reset(void)",
        ),
    ),
    (
        "sceSifGetSreg",
        Err(
            NotMangled,
        ),
    ),
    (
        "Attack__4Tick",
        Ok(
            "Tick::Attack(void)",
        ),
    ),
    (
        "fptosi",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__10ScriptProp",
        Ok(
            "ScriptProp::LoadDone(void)",
        ),
    ),
    (
        "DrawStrip_LowDetail__11MKWaterPropP16WaterStripHeaderP6VectorP8Material",
        Ok(
            "MKWaterProp::DrawStrip_LowDetail(WaterStripHeader *, Vector *, Material *)",
        ),
    ),
    (
        "ModelRender_AExyST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__8WhiteBatP11GameObjDesc",
        Ok(
            "WhiteBat::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$10ScriptProp",
        Ok(
            "ScriptProp virtual table",
        ),
    ),
    (
        "PE_KickUpDust_LoadResources__Fv",
        Ok(
            "PE_KickUpDust_LoadResources(void)",
        ),
    ),
    (
        "_vt$19__pointer_type_info",
        Ok(
            "__pointer_type_info virtual table",
        ),
    ),
    (
        "LoadLine__11WaterVolumeP12KromeIniLine",
        Ok(
            "WaterVolume::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Deinit__10TumbleWeed",
        Ok(
            "TumbleWeed::Deinit(void)",
        ),
    ),
    (
        "_vt$11GuideBarrel",
        Ok(
            "GuideBarrel virtual table",
        ),
    ),
    (
        "Load__21SynkerFrillLizardDescP8KromeIni",
        Ok(
            "SynkerFrillLizardDesc::Load(KromeIni *)",
        ),
    ),
    (
        "GetPos__8PipePart",
        Ok(
            "PipePart::GetPos(void)",
        ),
    ),
    (
        "Idle__7SeaMine",
        Ok(
            "SeaMine::Idle(void)",
        ),
    ),
    (
        "Idle__14WindmillStruct",
        Ok(
            "WindmillStruct::Idle(void)",
        ),
    ),
    (
        "sceRename",
        Err(
            NotMangled,
        ),
    ),
    (
        "FindClosest__9FrillBikeP6Vectorf",
        Ok(
            "FrillBike::FindClosest(Vector *, float)",
        ),
    ),
    (
        "SetState__14IceBlockStruct13IceBlockState",
        Ok(
            "IceBlockStruct::SetState(IceBlockState)",
        ),
    ),
    (
        "_vt$9Zappyrang",
        Ok(
            "Zappyrang virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$Muddie_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Muddie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$_7SeaMine$magMineCounter",
        Ok(
            "global constructors keyed to SeaMine::magMineCounter",
        ),
    ),
    (
        "_GLOBAL_$I$SharkCage_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SharkCage_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_EnableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "_type2id",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterManager_AddRipple__Fffffff",
        Ok(
            "MKWaterManager_AddRipple(float, float, float, float, float, float)",
        ),
    ),
    (
        "cameraOverrideDot",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$Teleporter_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Teleporter_LoadResources(KromeIni *)",
        ),
    ),
    (
        "UpdateAttached__8Platform",
        Ok(
            "Platform::UpdateAttached(void)",
        ),
    ),
    (
        "LoadLine__11ShatterableP12KromeIniLine",
        Ok(
            "Shatterable::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$9RedButton",
        Ok(
            "RedButton virtual table",
        ),
    ),
    (
        "EnableSubObject__5Modelib",
        Ok(
            "Model::EnableSubObject(int, bool)",
        ),
    ),
    (
        "_kDebugHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetPosition__6UITextP6Vectorc",
        Ok(
            "UIText::SetPosition(Vector *, char)",
        ),
    ),
    (
        "barbedWireMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "_open_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "_16CaveBatObjective$bCompleted",
        Ok(
            "CaveBatObjective::bCompleted",
        ),
    ),
    (
        "sceSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "RequestTalisman__6Julius",
        Ok(
            "Julius::RequestTalisman(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10SpiderDirtPv",
        Ok(
            "ModuleInfo<SpiderDirt>::ConstructObject(void *)",
        ),
    ),
    (
        "NewGameVideo_Draw__Fv",
        Ok(
            "NewGameVideo_Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9SharkCagePv",
        Ok(
            "ModuleInfo<SharkCage>::ConstructObject(void *)",
        ),
    ),
    (
        "MiniGame_A2_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_A2_Update(void)",
        ),
    ),
    (
        "DrawGlobalProps__14MKSceneManageri",
        Ok(
            "MKSceneManager::DrawGlobalProps(int)",
        ),
    ),
    (
        "WaterIdleTransition__2Ty",
        Ok(
            "Ty::WaterIdleTransition(void)",
        ),
    ),
    (
        "Draw__3Emu",
        Ok(
            "Emu::Draw(void)",
        ),
    ),
    (
        "Update__21RainbowScaleObjective",
        Ok(
            "RainbowScaleObjective::Update(void)",
        ),
    ),
    (
        "Stopwatch_Show__Fv",
        Ok(
            "Stopwatch_Show(void)",
        ),
    ),
    (
        "_vt$8BeachHut",
        Ok(
            "BeachHut virtual table",
        ),
    ),
    (
        "Message__12TyAttributesP9MKMessage",
        Ok(
            "TyAttributes::Message(MKMessage *)",
        ),
    ),
    (
        "TyMemCard_LoadGame__Fv",
        Ok(
            "TyMemCard_LoadGame(void)",
        ),
    ),
    (
        "SpawnWaterWash__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnWaterWash(Vector *, float)",
        ),
    ),
    (
        "UpdateHeadTurning__2Ty",
        Ok(
            "Ty::UpdateHeadTurning(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7IceCube",
        Ok(
            "ModuleInfo<IceCube> virtual table",
        ),
    ),
    (
        "GetLength__12MKAnimScript",
        Ok(
            "MKAnimScript::GetLength(void)",
        ),
    ),
    (
        "FlinchInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::FlinchInit(void)",
        ),
    ),
    (
        "Rail_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::Rail_Create(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14ShadowBatValvePv",
        Ok(
            "ModuleInfo<ShadowBatValve>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$10DialogProp",
        Ok(
            "DialogProp virtual table",
        ),
    ),
    (
        "Init__13SelectionRang",
        Ok(
            "SelectionRang::Init(void)",
        ),
    ),
    (
        "Init__14HealthLivesHud",
        Ok(
            "HealthLivesHud::Init(void)",
        ),
    ),
    (
        "Reset__6Muddie",
        Ok(
            "Muddie::Reset(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13ShadowBatPipe",
        Ok(
            "ModuleInfo<ShadowBatPipe> virtual table",
        ),
    ),
    (
        "SetCamera__17TyParticleManagerP6VectorT1",
        Ok(
            "TyParticleManager::SetCamera(Vector *, Vector *)",
        ),
    ),
    (
        "Scale__12QuatRotationf",
        Ok(
            "QuatRotation::Scale(float)",
        ),
    ),
    (
        "TakeOffInit__6Maurie",
        Ok(
            "Maurie::TakeOffInit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Coconut_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Coconut_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_FW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckEvents__7SnowGun",
        Ok(
            "SnowGun::CheckEvents(void)",
        ),
    ),
    (
        "Init__8ChuteLogP11GameObjDesc",
        Ok(
            "ChuteLog::Init(GameObjDesc *)",
        ),
    ),
    (
        "Reset__9Generator",
        Ok(
            "Generator::Reset(void)",
        ),
    ),
    (
        "Message__16CheckpointStructP9MKMessage",
        Ok(
            "CheckpointStruct::Message(MKMessage *)",
        ),
    ),
    (
        "_GLOBAL_$I$AuroraKid_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to AuroraKid_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Blitter_ParticleRender_Init_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Copyright_Init__Fv",
        Ok(
            "Copyright_Init(void)",
        ),
    ),
    (
        "FireAtTarget__3IceP6VectorT1fib",
        Ok(
            "Ice::FireAtTarget(Vector *, Vector *, float, int, bool)",
        ),
    ),
    (
        "ClampMagnitude__6Vectorf",
        Ok(
            "Vector::ClampMagnitude(float)",
        ),
    ),
    (
        "sceCdSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "StartBeingScared__5Yabby",
        Ok(
            "Yabby::StartBeingScared(void)",
        ),
    ),
    (
        "_vt$13ShadowBatPipe",
        Ok(
            "ShadowBatPipe virtual table",
        ),
    ),
    (
        "IdleSurfaceSwim__2Ty",
        Ok(
            "Ty::IdleSurfaceSwim(void)",
        ),
    ),
    (
        "_vt$6Aurora",
        Ok(
            "Aurora virtual table",
        ),
    ),
    (
        "_vt$5Neddy",
        Ok(
            "Neddy virtual table",
        ),
    ),
    (
        "LogicUpdate__3Bat",
        Ok(
            "Bat::LogicUpdate(void)",
        ),
    ),
    (
        "Input_DeinitModule__Fv",
        Ok(
            "Input_DeinitModule(void)",
        ),
    ),
    (
        "PauseScreen_RangInfo_Draw__Fv",
        Ok(
            "PauseScreen_RangInfo_Draw(void)",
        ),
    ),
    (
        "Init__6MKWaveP10MKWaveType",
        Ok(
            "MKWave::Init(MKWaveType *)",
        ),
    ),
    (
        "Deinit__16BoomerangManager",
        Ok(
            "BoomerangManager::Deinit(void)",
        ),
    ),
    (
        "DeinitWaterSlide__2Ty",
        Ok(
            "Ty::DeinitWaterSlide(void)",
        ),
    ),
    (
        "HappyInit__6Aurora",
        Ok(
            "Aurora::HappyInit(void)",
        ),
    ),
    (
        "InitBiteCharge__6TyBite",
        Ok(
            "TyBite::InitBiteCharge(void)",
        ),
    ),
    (
        "WaterDeath__2Ty",
        Ok(
            "Ty::WaterDeath(void)",
        ),
    ),
    (
        "ModelRender_FLTW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Rhino",
        Ok(
            "ModuleInfo<Rhino>::Init(void)",
        ),
    ),
    (
        "Create__7MKWaterPcb",
        Ok(
            "MKWater::Create(char *, bool)",
        ),
    ),
    (
        "GetRadius__13ShatterStructP11PieceStruct",
        Ok(
            "ShatterStruct::GetRadius(PieceStruct *)",
        ),
    ),
    (
        "GetPos__3Emu",
        Ok(
            "Emu::GetPos(void)",
        ),
    ),
    (
        "Magnitude__12QuatRotation",
        Ok(
            "QuatRotation::Magnitude(void)",
        ),
    ),
    (
        "ModelRender_ACExy_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__14FishShoalFieldP12KromeIniLine",
        Ok(
            "FishShoalField::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Inverse__6MatrixP6Matrix",
        Ok(
            "Matrix::Inverse(Matrix *)",
        ),
    ),
    (
        "Critters_LoadResources__Fv",
        Ok(
            "Critters_LoadResources(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13OpalCollector",
        Ok(
            "ModuleInfo<OpalCollector> virtual table",
        ),
    ),
    (
        "Init__15CollisionObjectP16ColObjDescriptorP6VectorP15TyCollisionInfoUcPP15CollisionObject",
        Ok(
            "CollisionObject::Init(ColObjDescriptor *, Vector *, TyCollisionInfo *, unsigned char, CollisionObject **)",
        ),
    ),
    (
        "CrawlIdle__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlIdle(void)",
        ),
    ),
    (
        "Update__13FallGuideProp",
        Ok(
            "FallGuideProp::Update(void)",
        ),
    ),
    (
        "_10FootEffect$footDustType",
        Ok(
            "FootEffect::footDustType",
        ),
    ),
    (
        "Move__9AuroraKidP6Vector",
        Ok(
            "AuroraKid::Move(Vector *)",
        ),
    ),
    (
        "FollowInit__9AuroraKid",
        Ok(
            "AuroraKid::FollowInit(void)",
        ),
    ),
    (
        "DefrostInit__3Sly",
        Ok(
            "Sly::DefrostInit(void)",
        ),
    ),
    (
        "Bitten_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Bitten_Update(void)",
        ),
    ),
    (
        "strncmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Success__16A1FrillObjective",
        Ok(
            "A1FrillObjective::Success(void)",
        ),
    ),
    (
        "_vt$16WaterSlideEffect",
        Ok(
            "WaterSlideEffect virtual table",
        ),
    ),
    (
        "Bilby_Reset__Fv",
        Ok(
            "Bilby_Reset(void)",
        ),
    ),
    (
        "RFU087_PollEvnetFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetRenderArea__4Viewffff",
        Ok(
            "View::SetRenderArea(float, float, float, float)",
        ),
    ),
    (
        "Cruise__9Barracuda",
        Ok(
            "Barracuda::Cruise(void)",
        ),
    ),
    (
        "Patrol__9FrillBike",
        Ok(
            "FrillBike::Patrol(void)",
        ),
    ),
    (
        "AddProp__14MKSceneManagerP6MKProp",
        Ok(
            "MKSceneManager::AddProp(MKProp *)",
        ),
    ),
    (
        "Update__9StarTrail",
        Ok(
            "StarTrail::Update(void)",
        ),
    ),
    (
        "IdleAttackInit__10BlueTongue",
        Ok(
            "BlueTongue::IdleAttackInit(void)",
        ),
    ),
    (
        "SharedUpdate__10KingFisher",
        Ok(
            "KingFisher::SharedUpdate(void)",
        ),
    ),
    (
        "Update__14StalactiteTrap",
        Ok(
            "StalactiteTrap::Update(void)",
        ),
    ),
    (
        "CommonPreLogicChecks__2Ty",
        Ok(
            "Ty::CommonPreLogicChecks(void)",
        ),
    ),
    (
        "WaitForTyInit__5Lenny",
        Ok(
            "Lenny::WaitForTyInit(void)",
        ),
    ),
    (
        "Destroy__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::Destroy(void)",
        ),
    ),
    (
        "Reset__7SeaMine",
        Ok(
            "SeaMine::Reset(void)",
        ),
    ),
    (
        "Input_WasButtonReleased__F12InputDevicesiP12InputDevices",
        Ok(
            "Input_WasButtonReleased(InputDevices, int, InputDevices *)",
        ),
    ),
    (
        "AddGif_PRIM__3DmaUl",
        Ok(
            "Dma::AddGif_PRIM(unsigned long)",
        ),
    ),
    (
        "RunAttack__6Muddieb",
        Ok(
            "Muddie::RunAttack(bool)",
        ),
    ),
    (
        "GetAnimName__12MKAnimScript",
        Ok(
            "MKAnimScript::GetAnimName(void)",
        ),
    ),
    (
        "sceMcGetSlotMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__21RainbowScaleObjectiveP9MKMessage",
        Ok(
            "RainbowScaleObjective::Message(MKMessage *)",
        ),
    ),
    (
        "GetNodeOrigin__9Animationi",
        Ok(
            "Animation::GetNodeOrigin(int)",
        ),
    ),
    (
        "GameCamera_UseFixedDebugCamera__F20FixedDebugCameraType",
        Ok(
            "GameCamera_UseFixedDebugCamera(FixedDebugCameraType)",
        ),
    ),
    (
        "Normal_Deinit__10GameCamera",
        Ok(
            "GameCamera::Normal_Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Leech_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Leech_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__14LevelObjectiveP11GameObjDesc",
        Ok(
            "LevelObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "SurfaceKnockBackInit__2Ty",
        Ok(
            "Ty::SurfaceKnockBackInit(void)",
        ),
    ),
    (
        "Draw__6MKProp",
        Ok(
            "MKProp::Draw(void)",
        ),
    ),
    (
        "InAir__6TyBiteP6Vector",
        Ok(
            "TyBite::InAir(Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Portal",
        Ok(
            "ModuleInfo<Portal> virtual table",
        ),
    ),
    (
        "iProbeTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "Advance__9AnimationPfPP7AnimDeff",
        Ok(
            "Animation::Advance(float *, AnimDef **, float)",
        ),
    ),
    (
        "GetDesc__17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard::GetDesc(void)",
        ),
    ),
    (
        "Video_Restart__FP5Video",
        Ok(
            "Video_Restart(Video *)",
        ),
    ),
    (
        "System_DeinitModule__Fv",
        Ok(
            "System_DeinitModule(void)",
        ),
    ),
    (
        "scePadPortClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__3SlyP11GameObjDesc",
        Ok(
            "Sly::Init(GameObjDesc *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13AnimatingPropPv",
        Ok(
            "ModuleInfo<AnimatingProp>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__14SpiderTrapdoorP11GameObjDesc",
        Ok(
            "SpiderTrapdoor::Init(GameObjDesc *)",
        ),
    ),
    (
        "DiveBite__6TyBite",
        Ok(
            "TyBite::DiveBite(void)",
        ),
    ),
    (
        "Reset__21FrillProblemObjective",
        Ok(
            "FrillProblemObjective::Reset(void)",
        ),
    ),
    (
        "szThunderEggRef",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$maxV",
        Ok(
            "MKWater::maxV",
        ),
    ),
    (
        "ShadowBat_GetPointer__Fv",
        Ok(
            "ShadowBat_GetPointer(void)",
        ),
    ),
    (
        "_GLOBAL_$I$IceCoolant_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to IceCoolant_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceMpegDemuxPssRing",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__9Barracuda",
        Ok(
            "Barracuda::LogicUpdate(void)",
        ),
    ),
    (
        "FadeOut__17GalleryScreenDataii",
        Ok(
            "GalleryScreenData::FadeOut(int, int)",
        ),
    ),
    (
        "SignPost_LoadResources__FP8KromeIni",
        Ok(
            "SignPost_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$Rex_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Rex_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Attack__10ScubaFrill",
        Ok(
            "ScubaFrill::Attack(void)",
        ),
    ),
    (
        "DrawTriStrip__11MKWaterPropP14Water_TriStripP8MaterialP6Vector",
        Ok(
            "MKWaterProp::DrawTriStrip(Water_TriStrip *, Material *, Vector *)",
        ),
    ),
    (
        "Particle_Portal_Create__FPP14ParticleSystemP6Vectorf",
        Ok(
            "Particle_Portal_Create(ParticleSystem **, Vector *, float)",
        ),
    ),
    (
        "Hud_ShowCrossHair__Fb",
        Ok(
            "Hud_ShowCrossHair(bool)",
        ),
    ),
    (
        "Message__8WhiteBatP9MKMessage",
        Ok(
            "WhiteBat::Message(MKMessage *)",
        ),
    ),
    (
        "GetName__9LevelDataPc",
        Ok(
            "LevelData::GetName(char *)",
        ),
    ),
    (
        "RFU063",
        Err(
            NotMangled,
        ),
    ),
    (
        "CrawlAlert__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlAlert(void)",
        ),
    ),
    (
        "_sysbitJump",
        Err(
            NotMangled,
        ),
    ),
    (
        "StoreRangChanged__10DDASession",
        Ok(
            "DDASession::StoreRangChanged(void)",
        ),
    ),
    (
        "Init__12EventMessage",
        Ok(
            "EventMessage::Init(void)",
        ),
    ),
    (
        "sceSifInitIopHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnGhost__11EnemyObject",
        Ok(
            "EnemyObject::SpawnGhost(void)",
        ),
    ),
    (
        "GetDesc__11BonusPickup",
        Ok(
            "BonusPickup::GetDesc(void)",
        ),
    ),
    (
        "InitEscape__3Emu",
        Ok(
            "Emu::InitEscape(void)",
        ),
    ),
    (
        "ModelRender_CFLO1ST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckFootEvents__5Rhino",
        Ok(
            "Rhino::CheckFootEvents(void)",
        ),
    ),
    (
        "FirstPerson_Update__10GameCamera",
        Ok(
            "GameCamera::FirstPerson_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z22MusicalIcicleObjective",
        Ok(
            "ModuleInfo<MusicalIcicleObjective>::Init(void)",
        ),
    ),
    (
        "BreakAndTurnTransition__2Ty",
        Ok(
            "Ty::BreakAndTurnTransition(void)",
        ),
    ),
    (
        "LoadDone__8Elevator",
        Ok(
            "Elevator::LoadDone(void)",
        ),
    ),
    (
        "DropEggInit__9BadBoonie",
        Ok(
            "BadBoonie::DropEggInit(void)",
        ),
    ),
    (
        "SceneDraw__12DialogPlayer",
        Ok(
            "DialogPlayer::SceneDraw(void)",
        ),
    ),
    (
        "_pictureTemporalScalableExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "AutoCenter_Init__10GameCamera",
        Ok(
            "GameCamera::AutoCenter_Init(void)",
        ),
    ),
    (
        "iSuspendThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_F_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__13SmallCrabDescP14ModuleInfoBasePcT2bP15Tools_AnimEntryiff",
        Ok(
            "SmallCrabDesc::Init(ModuleInfoBase *, char *, char *, bool, Tools_AnimEntry *, int, float, float)",
        ),
    ),
    (
        "_vt$7ChumBox",
        Ok(
            "ChumBox virtual table",
        ),
    ),
    (
        "GetName__9LevelData",
        Ok(
            "LevelData::GetName(void)",
        ),
    ),
    (
        "CruiseInit__9Barracuda",
        Ok(
            "Barracuda::CruiseInit(void)",
        ),
    ),
    (
        "Cut__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Cut(void)",
        ),
    ),
    (
        "DrawLooseFX__8TyHealthG6Vector",
        Ok(
            "TyHealth::DrawLooseFX(Vector)",
        ),
    ),
    (
        "Update__5Spear",
        Ok(
            "Spear::Update(void)",
        ),
    ),
    (
        "Cruise__6Crikey",
        Ok(
            "Crikey::Cruise(void)",
        ),
    ),
    (
        "PauseScreen_DrawFraction3d__FPcT0P6Vectorff",
        Ok(
            "PauseScreen_DrawFraction3d(char *, char *, Vector *, float, float)",
        ),
    ),
    (
        "PauseScreen_Continue_Init__Fv",
        Ok(
            "PauseScreen_Continue_Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Bird",
        Ok(
            "ModuleInfo<Bird>::Init(void)",
        ),
    ),
    (
        "Launch_Update__10GameCamera",
        Ok(
            "GameCamera::Launch_Update(void)",
        ),
    ),
    (
        "GameCamera_IsUnderwater__Fv",
        Ok(
            "GameCamera_IsUnderwater(void)",
        ),
    ),
    (
        "Branch__17WaterSlideManager",
        Ok(
            "WaterSlideManager::Branch(void)",
        ),
    ),
    (
        "IdleInit__5Neddy",
        Ok(
            "Neddy::IdleInit(void)",
        ),
    ),
    (
        "Update__10Damageable",
        Ok(
            "Damageable::Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$LavaBurner_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to LavaBurner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Reset__16SoundEventHelper",
        Ok(
            "SoundEventHelper::Reset(void)",
        ),
    ),
    (
        "Reset__4Lava",
        Ok(
            "Lava::Reset(void)",
        ),
    ),
    (
        "DecrementProgress__11ProgressBar",
        Ok(
            "ProgressBar::DecrementProgress(void)",
        ),
    ),
    (
        "PerformChange__14RangChangeData",
        Ok(
            "RangChangeData::PerformChange(void)",
        ),
    ),
    (
        "sceRmdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ieee754_pow",
        Err(
            InvalidSpecialMethod(
                "ieee754_pow",
            ),
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10LavaBurnerPv",
        Ok(
            "ModuleInfo<LavaBurner>::ConstructObject(void *)",
        ),
    ),
    (
        "InitFlinch__9Speedboat",
        Ok(
            "Speedboat::InitFlinch(void)",
        ),
    ),
    (
        "FrillBike_LoadResources__FP8KromeIni",
        Ok(
            "FrillBike_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$3Gem",
        Ok(
            "Gem virtual table",
        ),
    ),
    (
        "MKRumble_Resume__Fv",
        Ok(
            "MKRumble_Resume(void)",
        ),
    ),
    (
        "Deinit__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Deinit(void)",
        ),
    ),
    (
        "Fall__14WaterSlideData",
        Ok(
            "WaterSlideData::Fall(void)",
        ),
    ),
    (
        "Validate__5Model",
        Ok(
            "Model::Validate(void)",
        ),
    ),
    (
        "Approach__5Lenny",
        Ok(
            "Lenny::Approach(void)",
        ),
    ),
    (
        "SmoothXZ__15GameCameraPointfff",
        Ok(
            "GameCameraPoint::SmoothXZ(float, float, float)",
        ),
    ),
    (
        "SkidStop__5Lenny",
        Ok(
            "Lenny::SkidStop(void)",
        ),
    ),
    (
        "AttackInit__6Crikey",
        Ok(
            "Crikey::AttackInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4FrogPv",
        Ok(
            "ModuleInfo<Frog>::ConstructObject(void *)",
        ),
    ),
    (
        "EnableAutoTarget__6TyBiteP5Modelb",
        Ok(
            "TyBite::EnableAutoTarget(Model *, bool)",
        ),
    ),
    (
        "IsTyVisible__5Roach",
        Ok(
            "Roach::IsTyVisible(void)",
        ),
    ),
    (
        "ClipVelToEdge__2Ty",
        Ok(
            "Ty::ClipVelToEdge(void)",
        ),
    ),
    (
        "GameCamera_UseAutoCenter__Fb",
        Ok(
            "GameCamera_UseAutoCenter(bool)",
        ),
    ),
    (
        "GameCamera_UseUnderwaterCamera__Fb",
        Ok(
            "GameCamera_UseUnderwaterCamera(bool)",
        ),
    ),
    (
        "Upload__7Textureb",
        Ok(
            "Texture::Upload(bool)",
        ),
    ),
    (
        "HitTargetInit__5Neddy",
        Ok(
            "Neddy::HitTargetInit(void)",
        ),
    ),
    (
        "LoadDone__5Leech",
        Ok(
            "Leech::LoadDone(void)",
        ),
    ),
    (
        "Deinit__7SawDust",
        Ok(
            "SawDust::Deinit(void)",
        ),
    ),
    (
        "_14ParticleSystem$bParticleWireFrameOn",
        Ok(
            "ParticleSystem::bParticleWireFrameOn",
        ),
    ),
    (
        "MiniBoulder_Update__Fv",
        Ok(
            "MiniBoulder_Update(void)",
        ),
    ),
    (
        "Pontoon_Init__10GameCamera",
        Ok(
            "GameCamera::Pontoon_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8SnowPile",
        Ok(
            "ModuleInfo<SnowPile> virtual table",
        ),
    ),
    (
        "pow",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitLevel__17GameObjectManager",
        Ok(
            "GameObjectManager::InitLevel(void)",
        ),
    ),
    (
        "GetBoundingVolume__5Modeli",
        Ok(
            "Model::GetBoundingVolume(int)",
        ),
    ),
    (
        "RunToWaypoint_Event__9BadBooniePc",
        Ok(
            "BadBoonie::RunToWaypoint_Event(char *)",
        ),
    ),
    (
        "MKWaterManager_GetHeight__FP6VectorPff",
        Ok(
            "MKWaterManager_GetHeight(Vector *, float *, float)",
        ),
    ),
    (
        "Debug__9FrillBike",
        Ok(
            "FrillBike::Debug(void)",
        ),
    ),
    (
        "PauseScreen_OptionSound_LoadResources__Fv",
        Ok(
            "PauseScreen_OptionSound_LoadResources(void)",
        ),
    ),
    (
        "GuideParticle_Hide__Fv",
        Ok(
            "GuideParticle_Hide(void)",
        ),
    ),
    (
        "pCameraGrassPoint",
        Err(
            NotMangled,
        ),
    ),
    (
        "ThrowBoomerang__2Ty",
        Ok(
            "Ty::ThrowBoomerang(void)",
        ),
    ),
    (
        "Windmill_Delete__FP14WindmillStruct",
        Ok(
            "Windmill_Delete(WindmillStruct *)",
        ),
    ),
    (
        "gParticleGen",
        Err(
            NotMangled,
        ),
    ),
    (
        "TimeTrial_TryAgainDialog__Fv",
        Ok(
            "TimeTrial_TryAgainDialog(void)",
        ),
    ),
    (
        "TurnInit__4Croc",
        Ok(
            "Croc::TurnInit(void)",
        ),
    ),
    (
        "strncpy",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$6Muddie",
        Ok(
            "Muddie virtual table",
        ),
    ),
    (
        "_vt$7FlyDesc",
        Ok(
            "FlyDesc virtual table",
        ),
    ),
    (
        "Fall__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Fall(void)",
        ),
    ),
    (
        "unlink",
        Err(
            NotMangled,
        ),
    ),
    (
        "__malloc_current_mallinfo",
        Err(
            InvalidSpecialMethod(
                "malloc_current_mallinfo",
            ),
        ),
    ),
    (
        "_sceCd_scmd_prechk",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__16A1FrillObjective",
        Ok(
            "A1FrillObjective::Deinit(void)",
        ),
    ),
    (
        "FirstPersonTransition__2Ty",
        Ok(
            "Ty::FirstPersonTransition(void)",
        ),
    ),
    (
        "gSaveDebugPosDrawCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__12MKAnimScript",
        Ok(
            "MKAnimScript::Deinit(void)",
        ),
    ),
    (
        "sceSifExitCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetSendTo",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFSX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_UseBiteEffect__F21CameraBiteEffectStateff",
        Ok(
            "GameCamera_UseBiteEffect(CameraBiteEffectState, float, float)",
        ),
    ),
    (
        "ModelRender_FLO1T_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__17MiniGameObjectiveP12KromeIniLine",
        Ok(
            "MiniGameObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Multiply4x4__6MatrixP6Matrix",
        Ok(
            "Matrix::Multiply4x4(Matrix *)",
        ),
    ),
    (
        "UpdateFired__9Boomerang",
        Ok(
            "Boomerang::UpdateFired(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6SheilaPv",
        Ok(
            "ModuleInfo<Sheila>::ConstructObject(void *)",
        ),
    ),
    (
        "File_GetFileServerSource__Fv",
        Ok(
            "File_GetFileServerSource(void)",
        ),
    ),
    (
        "IsFloorValid__4MothP6Vector",
        Ok(
            "Moth::IsFloorValid(Vector *)",
        ),
    ),
    (
        "Str_GetFilenameFromPath__FPc",
        Ok(
            "Str_GetFilenameFromPath(char *)",
        ),
    ),
    (
        "Reset__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Reset(void)",
        ),
    ),
    (
        "_vt$8MorayEel",
        Ok(
            "MorayEel virtual table",
        ),
    ),
    (
        "GetActorModelNode__12DialogEffectP5ModelPc",
        Ok(
            "DialogEffect::GetActorModelNode(Model *, char *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11BunyipElder",
        Ok(
            "ModuleInfo<BunyipElder> virtual table",
        ),
    ),
    (
        "FlyDeinit__3Bat",
        Ok(
            "Bat::FlyDeinit(void)",
        ),
    ),
    (
        "UpdateLogic__7Wallaby",
        Ok(
            "Wallaby::UpdateLogic(void)",
        ),
    ),
    (
        "Update__14FireworksCrate",
        Ok(
            "FireworksCrate::Update(void)",
        ),
    ),
    (
        "_GLOBAL_$I$C3_MiniGameActors_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to C3_MiniGameActors_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15YabbyStalactite",
        Ok(
            "ModuleInfo<YabbyStalactite> virtual table",
        ),
    ),
    (
        "Tools_DropShadow_Init__Fv",
        Ok(
            "Tools_DropShadow_Init(void)",
        ),
    ),
    (
        "__sfvwrite",
        Err(
            InvalidSpecialMethod(
                "sfvwrite",
            ),
        ),
    ),
    (
        "EnableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$20SynkerBlueTongueDesc",
        Ok(
            "SynkerBlueTongueDesc virtual table",
        ),
    ),
    (
        "UseSpecialParticleEffect__2Ty",
        Ok(
            "Ty::UseSpecialParticleEffect(void)",
        ),
    ),
    (
        "Init__19SpecialPickupStructP11GameObjDesc",
        Ok(
            "SpecialPickupStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "Aurora_LoadResources__FP8KromeIni",
        Ok(
            "Aurora_LoadResources(KromeIni *)",
        ),
    ),
    (
        "HitInit__5Leech",
        Ok(
            "Leech::HitInit(void)",
        ),
    ),
    (
        "Yabby_InsideTrappedArea__Fv",
        Ok(
            "Yabby_InsideTrappedArea(void)",
        ),
    ),
    (
        "strcasecmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z16A1FrillObjective",
        Ok(
            "ModuleInfo<A1FrillObjective> virtual table",
        ),
    ),
    (
        "Tools_LogClose__Fi",
        Ok(
            "Tools_LogClose(int)",
        ),
    ),
    (
        "LOD_Deinit__Fv",
        Ok(
            "LOD_Deinit(void)",
        ),
    ),
    (
        "CrawlAlertDeinit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlAlertDeinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Tick_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Tick_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_PES_packet",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_TEX0_1__3DmaUlUlUlUlUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX0_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Message__14YabbyObjectiveP9MKMessage",
        Ok(
            "YabbyObjective::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Skink",
        Ok(
            "ModuleInfo<Skink>::Init(void)",
        ),
    ),
    (
        "GetWorldVelocity__9FrillBikeP6Vectorf",
        Ok(
            "FrillBike::GetWorldVelocity(Vector *, float)",
        ),
    ),
    (
        "PauseScreen_RangInfo_Deinit__Fv",
        Ok(
            "PauseScreen_RangInfo_Deinit(void)",
        ),
    ),
    (
        "Reset__10GameCameraP18GameCameraHeroInfo18CameraDistanceType",
        Ok(
            "GameCamera::Reset(GameCameraHeroInfo *, CameraDistanceType)",
        ),
    ),
    (
        "ExecOSD",
        Err(
            NotMangled,
        ),
    ),
    (
        "StoreCameraInfo__10DDASession15DDACameraAction",
        Ok(
            "DDASession::StoreCameraInfo(DDACameraAction)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10ScriptPropPv",
        Ok(
            "ModuleInfo<ScriptProp>::ConstructObject(void *)",
        ),
    ),
    (
        "InitJog__2Ty",
        Ok(
            "Ty::InitJog(void)",
        ),
    ),
    (
        "SetKnockBackFromPos__2TyP6Vectorf13KnockBackType",
        Ok(
            "Ty::SetKnockBackFromPos(Vector *, float, KnockBackType)",
        ),
    ),
    (
        "_strmap",
        Err(
            NotMangled,
        ),
    ),
    (
        "pMat",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_DrawDebug__Fv",
        Ok(
            "GameCamera_DrawDebug(void)",
        ),
    ),
    (
        "ResetSound__8KoalaKid",
        Ok(
            "KoalaKid::ResetSound(void)",
        ),
    ),
    (
        "Idle__16FinishLineStruct",
        Ok(
            "FinishLineStruct::Idle(void)",
        ),
    ),
    (
        "LogicUpdate__10NinjaGecko",
        Ok(
            "NinjaGecko::LogicUpdate(void)",
        ),
    ),
    (
        "Hold__17GalleryScreenDatai",
        Ok(
            "GalleryScreenData::Hold(int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15TurningPlatform",
        Ok(
            "ModuleInfo<TurningPlatform> virtual table",
        ),
    ),
    (
        "CritterField_RegisterBlitter__FP18BlitterCritterDescUiUifUi",
        Ok(
            "CritterField_RegisterBlitter(BlitterCritterDesc *, unsigned int, unsigned int, float, unsigned int)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11ThinIcePropPv",
        Ok(
            "ModuleInfo<ThinIceProp>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitRolyPoly__6TyBite",
        Ok(
            "TyBite::DeinitRolyPoly(void)",
        ),
    ),
    (
        "DisplayTextures__7Texture",
        Ok(
            "Texture::DisplayTextures(void)",
        ),
    ),
    (
        "tyControl",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawRangTrails__2Ty",
        Ok(
            "Ty::DrawRangTrails(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Eel",
        Ok(
            "ModuleInfo<Eel> virtual table",
        ),
    ),
    (
        "GetFloorY__14FishShoalFieldP6Vector",
        Ok(
            "FishShoalField::GetFloorY(Vector *)",
        ),
    ),
    (
        "Fly__10KingFisher",
        Ok(
            "KingFisher::Fly(void)",
        ),
    ),
    (
        "SetRadius__10DropShadowf",
        Ok(
            "DropShadow::SetRadius(float)",
        ),
    ),
    (
        "CheckForBoomerangs__6Target",
        Ok(
            "Target::CheckForBoomerangs(void)",
        ),
    ),
    (
        "Draw__11ProgressBar",
        Ok(
            "ProgressBar::Draw(void)",
        ),
    ),
    (
        "__tf17__array_type_info",
        Ok(
            "__array_type_info type_info function",
        ),
    ),
    (
        "LightTreeInit__11FrillLizard",
        Ok(
            "FrillLizard::LightTreeInit(void)",
        ),
    ),
    (
        "DetachInit__5Leech",
        Ok(
            "Leech::DetachInit(void)",
        ),
    ),
    (
        "UseAnimation__10GameCamerabP9AnimationP6Matrix",
        Ok(
            "GameCamera::UseAnimation(bool, Animation *, Matrix *)",
        ),
    ),
    (
        "SetAnim__13AnimatingPropUi",
        Ok(
            "AnimatingProp::SetAnim(unsigned int)",
        ),
    ),
    (
        "UpdateRangTrails__2Ty",
        Ok(
            "Ty::UpdateRangTrails(void)",
        ),
    ),
    (
        "AfterDunny__2Ty",
        Ok(
            "Ty::AfterDunny(void)",
        ),
    ),
    (
        "Shears_Reset__Fv",
        Ok(
            "Shears_Reset(void)",
        ),
    ),
    (
        "Reset__10CrikeyChum",
        Ok(
            "CrikeyChum::Reset(void)",
        ),
    ),
    (
        "StopAttack__6Muddieb",
        Ok(
            "Muddie::StopAttack(bool)",
        ),
    ),
    (
        "FlushCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10SnowSpider",
        Ok(
            "ModuleInfo<SnowSpider> virtual table",
        ),
    ),
    (
        "Reset__13SkinkDropTail",
        Ok(
            "SkinkDropTail::Reset(void)",
        ),
    ),
    (
        "CheckForClearWayPoint__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CheckForClearWayPoint(void)",
        ),
    ),
    (
        "Draw__5Neddy",
        Ok(
            "Neddy::Draw(void)",
        ),
    ),
    (
        "LassoDraw__5Lasso",
        Ok(
            "Lasso::LassoDraw(void)",
        ),
    ),
    (
        "UpdateParticleEffect__10Frostyrang",
        Ok(
            "Frostyrang::UpdateParticleEffect(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Sentinel_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Sentinel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "set_new_handler__FPFv_v",
        Ok(
            "set_new_handler(void (*)(void))",
        ),
    ),
    (
        "Input_InitModule__Fv",
        Ok(
            "Input_InitModule(void)",
        ),
    ),
    (
        "_vt$3Sly",
        Ok(
            "Sly virtual table",
        ),
    ),
    (
        "SoundBank_ResolveMusicType__FPc",
        Ok(
            "SoundBank_ResolveMusicType(char *)",
        ),
    ),
    (
        "UseNone__8Materiali",
        Ok(
            "Material::UseNone(int)",
        ),
    ),
    (
        "System_SetDisplayMode__Fiiiii",
        Ok(
            "System_SetDisplayMode(int, int, int, int, int)",
        ),
    ),
    (
        "SetState__6Fluffyib",
        Ok(
            "Fluffy::SetState(int, bool)",
        ),
    ),
    (
        "Reset__9BadBoonie",
        Ok(
            "BadBoonie::Reset(void)",
        ),
    ),
    (
        "InitBounceOff__2Ty",
        Ok(
            "Ty::InitBounceOff(void)",
        ),
    ),
    (
        "SpawnBigSplash__17TyParticleManagerP6Vectorbfbfi",
        Ok(
            "TyParticleManager::SpawnBigSplash(Vector *, bool, float, bool, float, int)",
        ),
    ),
    (
        "_7MKWater$debugNumSubObjectsInvisible",
        Ok(
            "MKWater::debugNumSubObjectsInvisible",
        ),
    ),
    (
        "DeinitDeath__7BushPig",
        Ok(
            "BushPig::DeinitDeath(void)",
        ),
    ),
    (
        "ConvertLevel2Nr__FPc",
        Ok(
            "ConvertLevel2Nr(char *)",
        ),
    ),
    (
        "pHero",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3IcePv",
        Ok(
            "ModuleInfo<Ice>::ConstructObject(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4BullPv",
        Ok(
            "ModuleInfo<Bull>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Lava",
        Ok(
            "ModuleInfo<Lava> virtual table",
        ),
    ),
    (
        "InitModule__3Dma",
        Ok(
            "Dma::InitModule(void)",
        ),
    ),
    (
        "TauntInit__5Skink",
        Ok(
            "Skink::TauntInit(void)",
        ),
    ),
    (
        "Reset__11PontoonRope",
        Ok(
            "PontoonRope::Reset(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11FrillLizard",
        Ok(
            "ModuleInfo<FrillLizard> virtual table",
        ),
    ),
    (
        "Shatter__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Shatter(void)",
        ),
    ),
    (
        "Death__4Croc",
        Ok(
            "Croc::Death(void)",
        ),
    ),
    (
        "GCT_BuildQuadratic__FP6VectorT0T0iP9Quadratic",
        Ok(
            "GCT_BuildQuadratic(Vector *, Vector *, Vector *, int, Quadratic *)",
        ),
    ),
    (
        "GameCamera_OverrideTopDown_Add__FP29CameraOverrideTopDownLoadInfo",
        Ok(
            "GameCamera_OverrideTopDown_Add(CameraOverrideTopDownLoadInfo *)",
        ),
    ),
    (
        "up_interface",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMcGetDir",
        Err(
            NotMangled,
        ),
    ),
    (
        "Spawning__3Gem",
        Ok(
            "Gem::Spawning(void)",
        ),
    ),
    (
        "Update__11MetalSpikes",
        Ok(
            "MetalSpikes::Update(void)",
        ),
    ),
    (
        "__start_cp_handler",
        Err(
            InvalidSpecialMethod(
                "start_cp_handler",
            ),
        ),
    ),
    (
        "CheckForExplosion__6Groper",
        Ok(
            "Groper::CheckForExplosion(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SpinningLog_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SpinningLog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Activate__13AnimatingPropb",
        Ok(
            "AnimatingProp::Activate(bool)",
        ),
    ),
    (
        "realloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnSomeAnts__4Bull",
        Ok(
            "Bull::SpawnSomeAnts(void)",
        ),
    ),
    (
        "_7MKWater$centreDraw",
        Ok(
            "MKWater::centreDraw",
        ),
    ),
    (
        "gVU1Manager",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__19WaterfallBaseStruct",
        Ok(
            "WaterfallBaseStruct::Update(void)",
        ),
    ),
    (
        "FrontEnd_Update__Fv",
        Ok(
            "FrontEnd_Update(void)",
        ),
    ),
    (
        "dda",
        Err(
            NotMangled,
        ),
    ),
    (
        "Move__10TumbleWeed",
        Ok(
            "TumbleWeed::Move(void)",
        ),
    ),
    (
        "InitLassoThrow__5Lasso",
        Ok(
            "Lasso::InitLassoThrow(void)",
        ),
    ),
    (
        "Attach__13PlatformRiderP10GameObject",
        Ok(
            "PlatformRider::Attach(GameObject *)",
        ),
    ),
    (
        "_vt$9Flamerang",
        Ok(
            "Flamerang virtual table",
        ),
    ),
    (
        "DeinitYank__3Emu",
        Ok(
            "Emu::DeinitYank(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Boulder",
        Ok(
            "ModuleInfo<Boulder> virtual table",
        ),
    ),
    (
        "LoadDone__8Platform",
        Ok(
            "Platform::LoadDone(void)",
        ),
    ),
    (
        "ModelRender_CFST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "UseFallDiveCamera__10GameCamerab",
        Ok(
            "GameCamera::UseFallDiveCamera(bool)",
        ),
    ),
    (
        "Kin_GetTime__FPfT0T0T0",
        Ok(
            "Kin_GetTime(float *, float *, float *, float *)",
        ),
    ),
    (
        "RotatePitch__6MatrixP6Matrixf",
        Ok(
            "Matrix::RotatePitch(Matrix *, float)",
        ),
    ),
    (
        "Draw__13PickupCounter",
        Ok(
            "PickupCounter::Draw(void)",
        ),
    ),
    (
        "Rustle__11ReedsStruct",
        Ok(
            "ReedsStruct::Rustle(void)",
        ),
    ),
    (
        "Init__18ParticleSystemTypePcP8Materialfffi",
        Ok(
            "ParticleSystemType::Init(char *, Material *, float, float, float, int)",
        ),
    ),
    (
        "gb",
        Err(
            NotMangled,
        ),
    ),
    (
        "PSMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Muddie_LoadResources__FP8KromeIni",
        Ok(
            "Muddie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Create__5SteamP6Vector",
        Ok(
            "Steam::Create(Vector *)",
        ),
    ),
    (
        "Message__10GameObjectP9MKMessage",
        Ok(
            "GameObject::Message(MKMessage *)",
        ),
    ),
    (
        "Init__9Avalanche",
        Ok(
            "Avalanche::Init(void)",
        ),
    ),
    (
        "SetCurrentLevel__8GameData11LevelNumber",
        Ok(
            "GameData::SetCurrentLevel(LevelNumber)",
        ),
    ),
    (
        "sceSifMInitRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__3Gem",
        Ok(
            "Gem::LoadDone(void)",
        ),
    ),
    (
        "_vt$15BurnerObjective",
        Ok(
            "BurnerObjective virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12TyAttributes",
        Ok(
            "ModuleInfo<TyAttributes>::Init(void)",
        ),
    ),
    (
        "gpBuildVersion",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::LogicUpdate(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9SoundPropPv",
        Ok(
            "ModuleInfo<SoundProp>::ConstructObject(void *)",
        ),
    ),
    (
        "InterpolateVertexColor__FP6VectorT0T0T0T0T0T0T0",
        Ok(
            "InterpolateVertexColor(Vector *, Vector *, Vector *, Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "SetPitch__10GameCamera",
        Ok(
            "GameCamera::SetPitch(void)",
        ),
    ),
    (
        "MiniBoulder_Deinit__Fv",
        Ok(
            "MiniBoulder_Deinit(void)",
        ),
    ),
    (
        "IdleInit__8KoalaKid",
        Ok(
            "KoalaKid::IdleInit(void)",
        ),
    ),
    (
        "SetUWVertexColour__FP6VectorT0b",
        Ok(
            "SetUWVertexColour(Vector *, Vector *, bool)",
        ),
    ),
    (
        "BergIdle__14IceBlockStruct",
        Ok(
            "IceBlockStruct::BergIdle(void)",
        ),
    ),
    (
        "LoadDone__9FrogField",
        Ok(
            "FrogField::LoadDone(void)",
        ),
    ),
    (
        "_strtoul_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackIdleDance__11FrillLizardb",
        Ok(
            "FrillLizard::AttackIdleDance(bool)",
        ),
    ),
    (
        "IsWithinContainer__24GCT_WaypointPlaneManagerP6VectorP17GCT_WaypointPlane",
        Ok(
            "GCT_WaypointPlaneManager::IsWithinContainer(Vector *, GCT_WaypointPlane *)",
        ),
    ),
    (
        "GameCamera_UseMiniGameB1Camera__Fb",
        Ok(
            "GameCamera_UseMiniGameB1Camera(bool)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9WaterPipe",
        Ok(
            "ModuleInfo<WaterPipe>::Init(void)",
        ),
    ),
    (
        "LoadDone__8RingoArm",
        Ok(
            "RingoArm::LoadDone(void)",
        ),
    ),
    (
        "Path_GetFirstSegment__Fv",
        Ok(
            "Path_GetFirstSegment(void)",
        ),
    ),
    (
        "_vt$6Groper",
        Ok(
            "Groper virtual table",
        ),
    ),
    (
        "UpdateBarrelFixed__9Speedboat",
        Ok(
            "Speedboat::UpdateBarrelFixed(void)",
        ),
    ),
    (
        "GetObjectFromID__17GameObjectManagerUi",
        Ok(
            "GameObjectManager::GetObjectFromID(unsigned int)",
        ),
    ),
    (
        "bilbies",
        Err(
            NotMangled,
        ),
    ),
    (
        "_10FootEffect$pIceMat",
        Ok(
            "FootEffect::pIceMat",
        ),
    ),
    (
        "Message__5SharkP9MKMessage",
        Ok(
            "Shark::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11BurningJunk",
        Ok(
            "ModuleInfo<BurningJunk>::Init(void)",
        ),
    ),
    (
        "Update__7ChumBox",
        Ok(
            "ChumBox::Update(void)",
        ),
    ),
    (
        "GetAnim__12MKAnimScriptPc",
        Ok(
            "MKAnimScript::GetAnim(char *)",
        ),
    ),
    (
        "InitQuickSand__2Ty",
        Ok(
            "Ty::InitQuickSand(void)",
        ),
    ),
    (
        "_vt$9SharkCage",
        Ok(
            "SharkCage virtual table",
        ),
    ),
    (
        "IsOwnRang__15BoomerangWeaponP9Boomerang",
        Ok(
            "BoomerangWeapon::IsOwnRang(Boomerang *)",
        ),
    ),
    (
        "Deinit__15CollisionObject",
        Ok(
            "CollisionObject::Deinit(void)",
        ),
    ),
    (
        "Reset__11AirPlatform",
        Ok(
            "AirPlatform::Reset(void)",
        ),
    ),
    (
        "Spin__7Boulderf",
        Ok(
            "Boulder::Spin(float)",
        ),
    ),
    (
        "IsBossEnabled__9LevelData",
        Ok(
            "LevelData::IsBossEnabled(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Skink",
        Ok(
            "ModuleInfo<Skink> virtual table",
        ),
    ),
    (
        "Yabby_GetPointer__Fv",
        Ok(
            "Yabby_GetPointer(void)",
        ),
    ),
    (
        "BiteState__5TyFSMi",
        Ok(
            "TyFSM::BiteState(int)",
        ),
    ),
    (
        "sceScfGetLanguage",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11SnowGunAmmo",
        Ok(
            "ModuleInfo<SnowGunAmmo> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13DDACheckpoint",
        Ok(
            "ModuleInfo<DDACheckpoint> virtual table",
        ),
    ),
    (
        "pMatRope",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckForHit__11SnowGunAmmo",
        Ok(
            "SnowGunAmmo::CheckForHit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15ZoneBlockerProp",
        Ok(
            "ModuleInfo<ZoneBlockerProp>::Init(void)",
        ),
    ),
    (
        "Weather_GetType__Fv",
        Ok(
            "Weather_GetType(void)",
        ),
    ),
    (
        "Reset__12DialogPlayerUi",
        Ok(
            "DialogPlayer::Reset(unsigned int)",
        ),
    ),
    (
        "SpawnSpark__17TyParticleManagerP6VectorT1T1",
        Ok(
            "TyParticleManager::SpawnSpark(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "FinishLine_LoadResources__FP8KromeIni",
        Ok(
            "FinishLine_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__tfUc",
        Ok(
            "unsigned char type_info function",
        ),
    ),
    (
        "_GLOBAL_$I$Frog_LoadResources__Fv",
        Ok(
            "global constructors keyed to Frog_LoadResources(void)",
        ),
    ),
    (
        "Init__9BarracudaP11GameObjDesc",
        Ok(
            "Barracuda::Init(GameObjDesc *)",
        ),
    ),
    (
        "FleeInit__5Rufus",
        Ok(
            "Rufus::FleeInit(void)",
        ),
    ),
    (
        "AssignCollisions__12EnemySpawnerP11EnemyObject",
        Ok(
            "EnemySpawner::AssignCollisions(EnemyObject *)",
        ),
    ),
    (
        "_vt$12SnowPileDesc",
        Ok(
            "SnowPileDesc virtual table",
        ),
    ),
    (
        "Activated__13OpalCollector",
        Ok(
            "OpalCollector::Activated(void)",
        ),
    ),
    (
        "Deinit__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Deinit(void)",
        ),
    ),
    (
        "InitYank__3Emu",
        Ok(
            "Emu::InitYank(void)",
        ),
    ),
    (
        "MiniGame_B1_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B1_Update(void)",
        ),
    ),
    (
        "Update__2Ty",
        Ok(
            "Ty::Update(void)",
        ),
    ),
    (
        "Land__6Maurie",
        Ok(
            "Maurie::Land(void)",
        ),
    ),
    (
        "IsEOL__6Parser",
        Ok(
            "Parser::IsEOL(void)",
        ),
    ),
    (
        "Sink__6Fluffy",
        Ok(
            "Fluffy::Sink(void)",
        ),
    ),
    (
        "UpdateParticleEffect__9Zappyrang",
        Ok(
            "Zappyrang::UpdateParticleEffect(void)",
        ),
    ),
    (
        "GetLevelNumber__9LevelDataPc",
        Ok(
            "LevelData::GetLevelNumber(char *)",
        ),
    ),
    (
        "Weather_DeinitType__Fv",
        Ok(
            "Weather_DeinitType(void)",
        ),
    ),
    (
        "ModelRender_CFTW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FL_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Charge__9Barracuda",
        Ok(
            "Barracuda::Charge(void)",
        ),
    ),
    (
        "SoundBank_ResolveSoundEventIndex__FPc",
        Ok(
            "SoundBank_ResolveSoundEventIndex(char *)",
        ),
    ),
    (
        "KnockBackTransition__2Ty",
        Ok(
            "Ty::KnockBackTransition(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8BeachHutPv",
        Ok(
            "ModuleInfo<BeachHut>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$11ThinIceProp",
        Ok(
            "ThinIceProp virtual table",
        ),
    ),
    (
        "Message__8CableCarP9MKMessage",
        Ok(
            "CableCar::Message(MKMessage *)",
        ),
    ),
    (
        "Sound_LoadBank",
        Err(
            NotMangled,
        ),
    ),
    (
        "_ExecOSD",
        Err(
            NotMangled,
        ),
    ),
    (
        "Destroy__t7PtrList1Z17AnimationTemplateP17AnimationTemplate",
        Ok(
            "PtrList<AnimationTemplate>::Destroy(AnimationTemplate *)",
        ),
    ),
    (
        "FrontEnd_DrawBackground__Fv",
        Ok(
            "FrontEnd_DrawBackground(void)",
        ),
    ),
    (
        "ModelRender_CFTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "SafeInit__9AuroraKid",
        Ok(
            "AuroraKid::SafeInit(void)",
        ),
    ),
    (
        "WhiteBatAttackInit__9ShadowBat",
        Ok(
            "ShadowBat::WhiteBatAttackInit(void)",
        ),
    ),
    (
        "SharedUpdate__11Grasshopper",
        Ok(
            "Grasshopper::SharedUpdate(void)",
        ),
    ),
    (
        "StartEaten__14CrikeyCanister",
        Ok(
            "CrikeyCanister::StartEaten(void)",
        ),
    ),
    (
        "File_Open__FPci",
        Ok(
            "File_Open(char *, int)",
        ),
    ),
    (
        "__fpcmp_parts_d",
        Err(
            InvalidSpecialMethod(
                "fpcmp_parts_d",
            ),
        ),
    ),
    (
        "IdleInit__7CaveBat",
        Ok(
            "CaveBat::IdleInit(void)",
        ),
    ),
    (
        "GetWalkSpeed__11EnemyObject",
        Ok(
            "EnemyObject::GetWalkSpeed(void)",
        ),
    ),
    (
        "Draw__11Shatterable",
        Ok(
            "Shatterable::Draw(void)",
        ),
    ),
    (
        "SetState__16FinishLineStruct15FinishLineState",
        Ok(
            "FinishLineStruct::SetState(FinishLineState)",
        ),
    ),
    (
        "Init__10ControlVali",
        Ok(
            "ControlVal::Init(int)",
        ),
    ),
    (
        "sceInetRecvFrom",
        Err(
            NotMangled,
        ),
    ),
    (
        "__vn__FUiPciT1",
        Ok(
            "operator new [](unsigned int, char *, int, char *)",
        ),
    ),
    (
        "Death__8LilNeddy",
        Ok(
            "LilNeddy::Death(void)",
        ),
    ),
    (
        "_vt$8Sentinel",
        Ok(
            "Sentinel virtual table",
        ),
    ),
    (
        "InitFastDive__2Ty",
        Ok(
            "Ty::InitFastDive(void)",
        ),
    ),
    (
        "DrawQuad_HighDetail__11MKWaterPropP16WaterStripHeaderiP16WaterStripVertexP16WaterStripNormalP12WaterStripUVP15WaterStripColorP6VectorP8Material",
        Ok(
            "MKWaterProp::DrawQuad_HighDetail(WaterStripHeader *, int, WaterStripVertex *, WaterStripNormal *, WaterStripUV *, WaterStripColor *, Vector *, Material *)",
        ),
    ),
    (
        "CheckForBite__11ScrubTurkey",
        Ok(
            "ScrubTurkey::CheckForBite(void)",
        ),
    ),
    (
        "UpdateArms__5Ringo",
        Ok(
            "Ringo::UpdateArms(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15StopwatchStructPv",
        Ok(
            "ModuleInfo<StopwatchStruct>::ConstructObject(void *)",
        ),
    ),
    (
        "HideAll__16BoomerangManager",
        Ok(
            "BoomerangManager::HideAll(void)",
        ),
    ),
    (
        "Init__17Tools_AnimManagerP14Tools_AnimDesc",
        Ok(
            "Tools_AnimManager::Init(Tools_AnimDesc *)",
        ),
    ),
    (
        "Tools_ClipSphereToDynamicModel__FRC6VectorfP6VectorP5Modeli",
        Ok(
            "Tools_ClipSphereToDynamicModel(Vector const &, float, Vector *, Model *, int)",
        ),
    ),
    (
        "_vt$11GameObjDesc",
        Ok(
            "GameObjDesc virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8SnowBall",
        Ok(
            "ModuleInfo<SnowBall>::Init(void)",
        ),
    ),
    (
        "Reset__15TurningPlatform",
        Ok(
            "TurningPlatform::Reset(void)",
        ),
    ),
    (
        "Portal_Update__FP6Portal",
        Ok(
            "Portal_Update(Portal *)",
        ),
    ),
    (
        "TossInit__4Bull",
        Ok(
            "Bull::TossInit(void)",
        ),
    ),
    (
        "Init__12CritterDesc2P14ModuleInfoBasePcT2bP15Tools_AnimEntryi",
        Ok(
            "CritterDesc2::Init(ModuleInfoBase *, char *, char *, bool, Tools_AnimEntry *, int)",
        ),
    ),
    (
        "CheckForBoomerangs__11EnemyObject",
        Ok(
            "EnemyObject::CheckForBoomerangs(void)",
        ),
    ),
    (
        "GetActive__17MiniGameObjective",
        Ok(
            "MiniGameObjective::GetActive(void)",
        ),
    ),
    (
        "ResetVars__2Ty",
        Ok(
            "Ty::ResetVars(void)",
        ),
    ),
    (
        "File_Seek__Fiii",
        Ok(
            "File_Seek(int, int, int)",
        ),
    ),
    (
        "ToWorldDir__13PlatformRiderP6Vector",
        Ok(
            "PlatformRider::ToWorldDir(Vector *)",
        ),
    ),
    (
        "Update__8BilbyHud",
        Ok(
            "BilbyHud::Update(void)",
        ),
    ),
    (
        "IntroFmv_Update__Fv",
        Ok(
            "IntroFmv_Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10CrikeyChum",
        Ok(
            "ModuleInfo<CrikeyChum> virtual table",
        ),
    ),
    (
        "Shears_Init__Fv",
        Ok(
            "Shears_Init(void)",
        ),
    ),
    (
        "RFU005",
        Err(
            NotMangled,
        ),
    ),
    (
        "IdleInit__6Wombat",
        Ok(
            "Wombat::IdleInit(void)",
        ),
    ),
    (
        "UpdatePosition__6GroperP6Vectorbf",
        Ok(
            "Groper::UpdatePosition(Vector *, bool, float)",
        ),
    ),
    (
        "BeingPulled__3Emub",
        Ok(
            "Emu::BeingPulled(bool)",
        ),
    ),
    (
        "CalcAlpha__10LODManagerP6Vectorf",
        Ok(
            "LODManager::CalcAlpha(Vector *, float)",
        ),
    ),
    (
        "_DisableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "_close_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z17BlueTongueThrowerPv",
        Ok(
            "ModuleInfo<BlueTongueThrower>::ConstructObject(void *)",
        ),
    ),
    (
        "AddFootPrint__2Tyb8FootSideb",
        Ok(
            "Ty::AddFootPrint(bool, FootSide, bool)",
        ),
    ),
    (
        "RemoveWaterPropFromType__7MKWaterP11MKWaterProp",
        Ok(
            "MKWater::RemoveWaterPropFromType(MKWaterProp *)",
        ),
    ),
    (
        "Talisman_LoadResources__FP8KromeIni",
        Ok(
            "Talisman_LoadResources(KromeIni *)",
        ),
    ),
    (
        "iInvalidDCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "Sound_DeinitModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateMpegTarget__7TexturePcPvii",
        Ok(
            "Texture::CreateMpegTarget(char *, void *, int, int)",
        ),
    ),
    (
        "_7MKWater$debugNumQuadsInvisible",
        Ok(
            "MKWater::debugNumQuadsInvisible",
        ),
    ),
    (
        "MiniGameC2_Init__Fv",
        Ok(
            "MiniGameC2_Init(void)",
        ),
    ),
    (
        "Bilby_ShowAll__Fv",
        Ok(
            "Bilby_ShowAll(void)",
        ),
    ),
    (
        "WaterDragon_LoadResources__Fv",
        Ok(
            "WaterDragon_LoadResources(void)",
        ),
    ),
    (
        "FlyToHoverPosDeinit__9ShadowBat",
        Ok(
            "ShadowBat::FlyToHoverPosDeinit(void)",
        ),
    ),
    (
        "Deinit__8CableCar",
        Ok(
            "CableCar::Deinit(void)",
        ),
    ),
    (
        "CrRand__Fv",
        Ok(
            "CrRand(void)",
        ),
    ),
    (
        "_20WaterfallSprayStruct$mistEnvelope",
        Ok(
            "WaterfallSprayStruct::mistEnvelope",
        ),
    ),
    (
        "ChaseInit__3Eel",
        Ok(
            "Eel::ChaseInit(void)",
        ),
    ),
    (
        "PauseScreen_Continue_Update__Fv",
        Ok(
            "PauseScreen_Continue_Update(void)",
        ),
    ),
    (
        "Update_Run__10CuttleFish",
        Ok(
            "CuttleFish::Update_Run(void)",
        ),
    ),
    (
        "Walk__12BunyipStruct",
        Ok(
            "BunyipStruct::Walk(void)",
        ),
    ),
    (
        "secondsBeforeTimeout",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetKnockBackFromDir__2TyP6Vectorf13KnockBackType",
        Ok(
            "Ty::SetKnockBackFromDir(Vector *, float, KnockBackType)",
        ),
    ),
    (
        "RangChange__2Ty",
        Ok(
            "Ty::RangChange(void)",
        ),
    ),
    (
        "Critters_Init__Fv",
        Ok(
            "Critters_Init(void)",
        ),
    ),
    (
        "TempFree__FPv",
        Ok(
            "TempFree(void *)",
        ),
    ),
    (
        "InitFired__8Aquarang",
        Ok(
            "Aquarang::InitFired(void)",
        ),
    ),
    (
        "AddNodeToTrail__FPt13CircularQueue1Z10TrailPointP6VectorT1",
        Ok(
            "AddNodeToTrail(CircularQueue<TrailPoint> *, Vector *, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Barracuda",
        Ok(
            "ModuleInfo<Barracuda> virtual table",
        ),
    ),
    (
        "SetEnabled__8UIButtonb",
        Ok(
            "UIButton::SetEnabled(bool)",
        ),
    ),
    (
        "Update__11AirPlatform",
        Ok(
            "AirPlatform::Update(void)",
        ),
    ),
    (
        "TurnRunUpdate__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::TurnRunUpdate(void)",
        ),
    ),
    (
        "SetHasRang__8GameData13BoomerangTypeb",
        Ok(
            "GameData::SetHasRang(BoomerangType, bool)",
        ),
    ),
    (
        "CalcZoneVis__14MKSceneManager",
        Ok(
            "MKSceneManager::CalcZoneVis(void)",
        ),
    ),
    (
        "PipePart_Reset__Fv",
        Ok(
            "PipePart_Reset(void)",
        ),
    ),
    (
        "IdleTransition__7BushPig",
        Ok(
            "BushPig::IdleTransition(void)",
        ),
    ),
    (
        "MovePistons__6Fluffy",
        Ok(
            "Fluffy::MovePistons(void)",
        ),
    ),
    (
        "_10NinjaGecko$nStarObj",
        Ok(
            "NinjaGecko::nStarObj",
        ),
    ),
    (
        "Update__10ArsonTorch",
        Ok(
            "ArsonTorch::Update(void)",
        ),
    ),
    (
        "WaterSlide_Start__Fv",
        Ok(
            "WaterSlide_Start(void)",
        ),
    ),
    (
        "VSync2",
        Err(
            NotMangled,
        ),
    ),
    (
        "_13CritterField2$bv",
        Ok(
            "CritterField2::bv",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14MobilePlatform",
        Ok(
            "ModuleInfo<MobilePlatform> virtual table",
        ),
    ),
    (
        "Wait__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Wait(void)",
        ),
    ),
    (
        "IsComplete__14LevelObjective",
        Ok(
            "LevelObjective::IsComplete(void)",
        ),
    ),
    (
        "Idle__6Julius",
        Ok(
            "Julius::Idle(void)",
        ),
    ),
    (
        "Deinit__8ChuteLog",
        Ok(
            "ChuteLog::Deinit(void)",
        ),
    ),
    (
        "MoveSplash__21WaterfallStreamStructP16Blitter_ParticlePQ221WaterfallStreamStruct10SplashData",
        Ok(
            "WaterfallStreamStruct::MoveSplash(Blitter_Particle *, WaterfallStreamStruct::SplashData *)",
        ),
    ),
    (
        "Coconut_LoadResources__FP8KromeIni",
        Ok(
            "Coconut_LoadResources(KromeIni *)",
        ),
    ),
    (
        "HitAntHill__7BushPig",
        Ok(
            "BushPig::HitAntHill(void)",
        ),
    ),
    (
        "__tid",
        Ok(
            "double type_info node",
        ),
    ),
    (
        "EndFly__5Roach",
        Ok(
            "Roach::EndFly(void)",
        ),
    ),
    (
        "SaveStates_GetSecondRang__Fv",
        Ok(
            "SaveStates_GetSecondRang(void)",
        ),
    ),
    (
        "SendMessageToAll__17GameObjectManagerP9MKMessagei",
        Ok(
            "GameObjectManager::SendMessageToAll(MKMessage *, int)",
        ),
    ),
    (
        "PauseScreen_ChangeLevel_LoadResources__Fv",
        Ok(
            "PauseScreen_ChangeLevel_LoadResources(void)",
        ),
    ),
    (
        "Init__17LineOfSightObjectUcfffffff",
        Ok(
            "LineOfSightObject::Init(unsigned char, float, float, float, float, float, float, float)",
        ),
    ),
    (
        "GetFloorObject__2Ty",
        Ok(
            "Ty::GetFloorObject(void)",
        ),
    ),
    (
        "Tools_Log__FiPvi",
        Ok(
            "Tools_Log(int, void *, int)",
        ),
    ),
    (
        "_kTLBException",
        Err(
            NotMangled,
        ),
    ),
    (
        "GCT_MIN_HEIGHT_DELTA",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14YabbyObjectivePv",
        Ok(
            "ModuleInfo<YabbyObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "gSceneManager",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$4Elle",
        Ok(
            "Elle virtual table",
        ),
    ),
    (
        "Message__17BlueTongueThrowerP9MKMessage",
        Ok(
            "BlueTongueThrower::Message(MKMessage *)",
        ),
    ),
    (
        "VibrateInit__13MusicalIcicle",
        Ok(
            "MusicalIcicle::VibrateInit(void)",
        ),
    ),
    (
        "BiteEffect_Update__10GameCamera",
        Ok(
            "GameCamera::BiteEffect_Update(void)",
        ),
    ),
    (
        "UseCustomVectors__10GameCamerabP6VectorT2Pf",
        Ok(
            "GameCamera::UseCustomVectors(bool, Vector *, Vector *, float *)",
        ),
    ),
    (
        "RenderTexture_WaterSlideLine__FP12KromeIniLine",
        Ok(
            "RenderTexture_WaterSlideLine(KromeIniLine *)",
        ),
    ),
    (
        "Init__4TickP11GameObjDesc",
        Ok(
            "Tick::Init(GameObjDesc *)",
        ),
    ),
    (
        "Level_Load__FPc",
        Ok(
            "Level_Load(char *)",
        ),
    ),
    (
        "InitSneak__2Ty",
        Ok(
            "Ty::InitSneak(void)",
        ),
    ),
    (
        "strtok",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__6MaurieP9MKMessage",
        Ok(
            "Maurie::Message(MKMessage *)",
        ),
    ),
    (
        "PlayerAdjust_AdjustHeightRotation__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjust_AdjustHeightRotation(void)",
        ),
    ),
    (
        "RotateYaw__6Matrixf",
        Ok(
            "Matrix::RotateYaw(float)",
        ),
    ),
    (
        "_GLOBAL_$I$BuzzSaw2_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BuzzSaw2_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__negdf2",
        Err(
            InvalidSpecialMethod(
                "negdf2",
            ),
        ),
    ),
    (
        "sceGsGetGParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "Path_Init__14CameraOverride",
        Ok(
            "CameraOverride::Path_Init(void)",
        ),
    ),
    (
        "Closing_Init__4Gate",
        Ok(
            "Gate::Closing_Init(void)",
        ),
    ),
    (
        "mainMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckReachedWayPoint__11ScrubTurkeyP6Vector",
        Ok(
            "ScrubTurkey::CheckReachedWayPoint(Vector *)",
        ),
    ),
    (
        "AddShadow__4Rock",
        Ok(
            "Rock::AddShadow(void)",
        ),
    ),
    (
        "Pontoon_SetNewDirection__10GameCamera",
        Ok(
            "GameCamera::Pontoon_SetNewDirection(void)",
        ),
    ),
    (
        "Reset__12ShearsStruct",
        Ok(
            "ShearsStruct::Reset(void)",
        ),
    ),
    (
        "Reset__6Portal",
        Ok(
            "Portal::Reset(void)",
        ),
    ),
    (
        "_vt$5Spear",
        Ok(
            "Spear virtual table",
        ),
    ),
    (
        "Hit__10NinjaGecko",
        Ok(
            "NinjaGecko::Hit(void)",
        ),
    ),
    (
        "InitModule__4Lava",
        Ok(
            "Lava::InitModule(void)",
        ),
    ),
    (
        "Boomerang_CheckForHit__FP5ModeliP15CollisionResult",
        Ok(
            "Boomerang_CheckForHit(Model *, int, CollisionResult *)",
        ),
    ),
    (
        "Warp__2Ty",
        Ok(
            "Ty::Warp(void)",
        ),
    ),
    (
        "GrabComment__6Parser",
        Ok(
            "Parser::GrabComment(void)",
        ),
    ),
    (
        "LoadDone__7SnowGun",
        Ok(
            "SnowGun::LoadDone(void)",
        ),
    ),
    (
        "InitTurnAround__5Rhino",
        Ok(
            "Rhino::InitTurnAround(void)",
        ),
    ),
    (
        "ModelRender_CFO1X_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_GameInfo_Deinit__Fv",
        Ok(
            "PauseScreen_GameInfo_Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9RedButtonPv",
        Ok(
            "ModuleInfo<RedButton>::ConstructObject(void *)",
        ),
    ),
    (
        "Alert__5Rufus",
        Ok(
            "Rufus::Alert(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10BlueTongue",
        Ok(
            "ModuleInfo<BlueTongue> virtual table",
        ),
    ),
    (
        "RandomVector__FP6Vectorfff",
        Ok(
            "RandomVector(Vector *, float, float, float)",
        ),
    ),
    (
        "Update__6MKProp",
        Ok(
            "MKProp::Update(void)",
        ),
    ),
    (
        "DenitStartAggressive__5Rhino",
        Ok(
            "Rhino::DenitStartAggressive(void)",
        ),
    ),
    (
        "ChargeInit__4Bull",
        Ok(
            "Bull::ChargeInit(void)",
        ),
    ),
    (
        "Reset__14StalactiteTrap",
        Ok(
            "StalactiteTrap::Reset(void)",
        ),
    ),
    (
        "LoadResources__3Hud",
        Ok(
            "Hud::LoadResources(void)",
        ),
    ),
    (
        "LoadLine__11CrateStructP12KromeIniLine",
        Ok(
            "CrateStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "FindItemTransition__2Ty",
        Ok(
            "Ty::FindItemTransition(void)",
        ),
    ),
    (
        "_kExitTLBHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_SaveGame_OnEnter__Fv",
        Ok(
            "PauseScreen_SaveGame_OnEnter(void)",
        ),
    ),
    (
        "Game_Draw__Fv",
        Ok(
            "Game_Draw(void)",
        ),
    ),
    (
        "Init__19SaveGameInfoDisplayPc",
        Ok(
            "SaveGameInfoDisplay::Init(char *)",
        ),
    ),
    (
        "Setup_PostLoadLevel__Fv",
        Ok(
            "Setup_PostLoadLevel(void)",
        ),
    ),
    (
        "AddWake__2Ty",
        Ok(
            "Ty::AddWake(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z17MiniGameObjectivePv",
        Ok(
            "ModuleInfo<MiniGameObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11SnowGunAmmoPv",
        Ok(
            "ModuleInfo<SnowGunAmmo>::ConstructObject(void *)",
        ),
    ),
    (
        "Retarget__5Leech",
        Ok(
            "Leech::Retarget(void)",
        ),
    ),
    (
        "Init__13PlatformRider",
        Ok(
            "PlatformRider::Init(void)",
        ),
    ),
    (
        "Video_Create__FPcP8Material",
        Ok(
            "Video_Create(char *, Material *)",
        ),
    ),
    (
        "Init__3Dma10DmaChannelUiPc",
        Ok(
            "Dma::Init(DmaChannel, unsigned int, char *)",
        ),
    ),
    (
        "Bunyip_LoadResources__Fv",
        Ok(
            "Bunyip_LoadResources(void)",
        ),
    ),
    (
        "memcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14EnemyRefPointsP5Model",
        Ok(
            "EnemyRefPoints::Init(Model *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8KoalaKid",
        Ok(
            "ModuleInfo<KoalaKid> virtual table",
        ),
    ),
    (
        "AutoPlayerAdjust_Update__10GameCamera",
        Ok(
            "GameCamera::AutoPlayerAdjust_Update(void)",
        ),
    ),
    (
        "FrontEnd_LoadLevel_Update__Fv",
        Ok(
            "FrontEnd_LoadLevel_Update(void)",
        ),
    ),
    (
        "HoverIdle__9ShadowBat",
        Ok(
            "ShadowBat::HoverIdle(void)",
        ),
    ),
    (
        "RecoverInit__5Roach",
        Ok(
            "Roach::RecoverInit(void)",
        ),
    ),
    (
        "RotatePitch__6Matrixf",
        Ok(
            "Matrix::RotatePitch(float)",
        ),
    ),
    (
        "dpadd",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_LDTM_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Bitten__10BlueTongue",
        Ok(
            "BlueTongue::Bitten(void)",
        ),
    ),
    (
        "GetPos__8RingoArm",
        Ok(
            "RingoArm::GetPos(void)",
        ),
    ),
    (
        "CollectGem__8GameDatab",
        Ok(
            "GameData::CollectGem(bool)",
        ),
    ),
    (
        "Stopped__3Emu",
        Ok(
            "Emu::Stopped(void)",
        ),
    ),
    (
        "UnderWaterMediumInit__2Ty",
        Ok(
            "Ty::UnderWaterMediumInit(void)",
        ),
    ),
    (
        "GameCamera_UseAnimation__FbP9AnimationP6Matrix",
        Ok(
            "GameCamera_UseAnimation(bool, Animation *, Matrix *)",
        ),
    ),
    (
        "Fire__10ProjectileP6Vector",
        Ok(
            "Projectile::Fire(Vector *)",
        ),
    ),
    (
        "CameraOverridePath_Start__Fv",
        Ok(
            "CameraOverridePath_Start(void)",
        ),
    ),
    (
        "EnableRangs__Fv",
        Ok(
            "EnableRangs(void)",
        ),
    ),
    (
        "SetHasThunderEgg__8GameData14ThunderEggTypeb",
        Ok(
            "GameData::SetHasThunderEgg(ThunderEggType, bool)",
        ),
    ),
    (
        "DrawStripDebugInfo__11MKWaterPropP16WaterStripHeader",
        Ok(
            "MKWaterProp::DrawStripDebugInfo(WaterStripHeader *)",
        ),
    ),
    (
        "SetOrientation__6Portal",
        Ok(
            "Portal::SetOrientation(void)",
        ),
    ),
    (
        "SetState__8RingoArm13RingoArmState",
        Ok(
            "RingoArm::SetState(RingoArmState)",
        ),
    ),
    (
        "VibrateJoystick__Ffffcf",
        Ok(
            "VibrateJoystick(float, float, float, char, float)",
        ),
    ),
    (
        "__cplus_type_matcher",
        Err(
            InvalidSpecialMethod(
                "cplus_type_matcher",
            ),
        ),
    ),
    (
        "SetCameraDescriptor__14CameraOverrideP16CameraDescriptor",
        Ok(
            "CameraOverride::SetCameraDescriptor(CameraDescriptor *)",
        ),
    ),
    (
        "mTapOnPort0",
        Err(
            NotMangled,
        ),
    ),
    (
        "FireDeinit__5Leech",
        Ok(
            "Leech::FireDeinit(void)",
        ),
    ),
    (
        "LoadDone__10SynkerFrog",
        Ok(
            "SynkerFrog::LoadDone(void)",
        ),
    ),
    (
        "MKGrass_Deinit__Fv",
        Ok(
            "MKGrass_Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10NinjaGecko",
        Ok(
            "ModuleInfo<NinjaGecko> virtual table",
        ),
    ),
    (
        "WaterSlide_Init__10GameCamera",
        Ok(
            "GameCamera::WaterSlide_Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12FlameThrower",
        Ok(
            "ModuleInfo<FlameThrower>::Init(void)",
        ),
    ),
    (
        "Show__12UITransition",
        Ok(
            "UITransition::Show(void)",
        ),
    ),
    (
        "_vt$11InvisiCrate",
        Ok(
            "InvisiCrate virtual table",
        ),
    ),
    (
        "_4View$pCurrentView",
        Ok(
            "View::pCurrentView",
        ),
    ),
    (
        "Reset__5Shark",
        Ok(
            "Shark::Reset(void)",
        ),
    ),
    (
        "Init__10NinjaGeckoP11GameObjDesc",
        Ok(
            "NinjaGecko::Init(GameObjDesc *)",
        ),
    ),
    (
        "AddAnimatingShadow__6ShadowPcP5ModelfP6Vector",
        Ok(
            "Shadow::AddAnimatingShadow(char *, Model *, float, Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7AntHillPv",
        Ok(
            "ModuleInfo<AntHill>::ConstructObject(void *)",
        ),
    ),
    (
        "sceCdDiskReady",
        Err(
            NotMangled,
        ),
    ),
    (
        "UnpackTemplate__7MKWaterPcP17WaterTemplateData",
        Ok(
            "MKWater::UnpackTemplate(char *, WaterTemplateData *)",
        ),
    ),
    (
        "_15GameSubStateFSM$bInitialised",
        Ok(
            "GameSubStateFSM::bInitialised",
        ),
    ),
    (
        "DeinitModule__4View",
        Ok(
            "View::DeinitModule(void)",
        ),
    ),
    (
        "MKWaterRender_TypeInit_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "TyMemCard_IsAutoSaving__Fv",
        Ok(
            "TyMemCard_IsAutoSaving(void)",
        ),
    ),
    (
        "Init3d__11ProgressBarPcT1P6Vectorfif",
        Ok(
            "ProgressBar::Init3d(char *, char *, Vector *, float, int, float)",
        ),
    ),
    (
        "MKWaterManager_DeinitWaterTypes__Fv",
        Ok(
            "MKWaterManager_DeinitWaterTypes(void)",
        ),
    ),
    (
        "_5Steam$type",
        Ok(
            "Steam::type",
        ),
    ),
    (
        "Load__14SynkerFrogDescP8KromeIni",
        Ok(
            "SynkerFrogDesc::Load(KromeIni *)",
        ),
    ),
    (
        "Message__7ChumBoxP9MKMessage",
        Ok(
            "ChumBox::Message(MKMessage *)",
        ),
    ),
    (
        "FrontEnd_Extras_Init__Fv",
        Ok(
            "FrontEnd_Extras_Init(void)",
        ),
    ),
    (
        "LoadDone__13PickupCounter",
        Ok(
            "PickupCounter::LoadDone(void)",
        ),
    ),
    (
        "KnockBack__2Ty",
        Ok(
            "Ty::KnockBack(void)",
        ),
    ),
    (
        "SetFloor__15GameCameraPointfUi",
        Ok(
            "GameCameraPoint::SetFloor(float, unsigned int)",
        ),
    ),
    (
        "Kipup__10NinjaGecko",
        Ok(
            "NinjaGecko::Kipup(void)",
        ),
    ),
    (
        "AlertPause_Update__9BadBoonie",
        Ok(
            "BadBoonie::AlertPause_Update(void)",
        ),
    ),
    (
        "SetState__9ShoalFish15FishShoalStates",
        Ok(
            "ShoalFish::SetState(FishShoalStates)",
        ),
    ),
    (
        "Furnace_LoadResources__FP8KromeIni",
        Ok(
            "Furnace_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Main_LogicAdjustCamera__Fv",
        Ok(
            "Main_LogicAdjustCamera(void)",
        ),
    ),
    (
        "SkipSpaces__6Parser",
        Ok(
            "Parser::SkipSpaces(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10NinjaGecko",
        Ok(
            "ModuleInfo<NinjaGecko>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Tick",
        Ok(
            "ModuleInfo<Tick>::Init(void)",
        ),
    ),
    (
        "Steam__9ShadowBat",
        Ok(
            "ShadowBat::Steam(void)",
        ),
    ),
    (
        "_8MorayEel$mainAnimScript",
        Ok(
            "MorayEel::mainAnimScript",
        ),
    ),
    (
        "DeinitModule__4Font",
        Ok(
            "Font::DeinitModule(void)",
        ),
    ),
    (
        "GetName__9Animation",
        Ok(
            "Animation::GetName(void)",
        ),
    ),
    (
        "LoadDone__7C1Water",
        Ok(
            "C1Water::LoadDone(void)",
        ),
    ),
    (
        "NewTarget__14CameraOverride",
        Ok(
            "CameraOverride::NewTarget(void)",
        ),
    ),
    (
        "portData",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__6Wombat",
        Ok(
            "Wombat::Draw(void)",
        ),
    ),
    (
        "Idle__6Portal",
        Ok(
            "Portal::Idle(void)",
        ),
    ),
    (
        "fpadd",
        Err(
            NotMangled,
        ),
    ),
    (
        "pDialogSubTitle",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__13UIButtonGroup",
        Ok(
            "UIButtonGroup::Update(void)",
        ),
    ),
    (
        "Init__9OpalCrateP11GameObjDesc",
        Ok(
            "OpalCrate::Init(GameObjDesc *)",
        ),
    ),
    (
        "DrawUnderWaterQuad__Fv",
        Ok(
            "DrawUnderWaterQuad(void)",
        ),
    ),
    (
        "ModelRender_ACExyX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "sscanf",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$CuttleFish_LoadResources__Fv",
        Ok(
            "global constructors keyed to CuttleFish_LoadResources(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9SmallCrabPv",
        Ok(
            "ModuleInfo<SmallCrab>::ConstructObject(void *)",
        ),
    ),
    (
        "Draw__8CableCar",
        Ok(
            "CableCar::Draw(void)",
        ),
    ),
    (
        "Flinch__3Sly",
        Ok(
            "Sly::Flinch(void)",
        ),
    ),
    (
        "StaticSpikes_Draw__Fv",
        Ok(
            "StaticSpikes_Draw(void)",
        ),
    ),
    (
        "UnderWaterEffects_LoadResources__Fv",
        Ok(
            "UnderWaterEffects_LoadResources(void)",
        ),
    ),
    (
        "sceReadlink",
        Err(
            NotMangled,
        ),
    ),
    (
        "DIntr",
        Err(
            NotMangled,
        ),
    ),
    (
        "SurfaceKnockBackDeinit__2Ty",
        Ok(
            "Ty::SurfaceKnockBackDeinit(void)",
        ),
    ),
    (
        "Update__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::Update(void)",
        ),
    ),
    (
        "Update__9FallGuideP6Vector",
        Ok(
            "FallGuide::Update(Vector *)",
        ),
    ),
    (
        "Update__13GuideParticle",
        Ok(
            "GuideParticle::Update(void)",
        ),
    ),
    (
        "Particle_Dust_Create__FPP14ParticleSystemP6VectorT1ff",
        Ok(
            "Particle_Dust_Create(ParticleSystem **, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "IsAnimPlaying__5Lenny12tagLennyAnim",
        Ok(
            "Lenny::IsAnimPlaying(tagLennyAnim)",
        ),
    ),
    (
        "Retreat__5Lenny",
        Ok(
            "Lenny::Retreat(void)",
        ),
    ),
    (
        "SetSourceLinePos__24GCT_WaypointPlaneManagerP6VectorfiiT1",
        Ok(
            "GCT_WaypointPlaneManager::SetSourceLinePos(Vector *, float, int, int, Vector *)",
        ),
    ),
    (
        "cardInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "MiniGame_C3_Init__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C3_Init(void)",
        ),
    ),
    (
        "LoadLine__10GameObjectP12KromeIniLine",
        Ok(
            "GameObject::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_extensionAndUserData",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateCounter__8Material",
        Ok(
            "Material::UpdateCounter(void)",
        ),
    ),
    (
        "Collision_SweepSphereCollideDynamicModel__FP9SphereRayP15CollisionResultP11DynamicItem",
        Ok(
            "Collision_SweepSphereCollideDynamicModel(SphereRay *, CollisionResult *, DynamicItem *)",
        ),
    ),
    (
        "SkidDeinit__3Sly",
        Ok(
            "Sly::SkidDeinit(void)",
        ),
    ),
    (
        "Init__12ThrowingStarP11GameObjDesc",
        Ok(
            "ThrowingStar::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__14ShadowBatValveP11GameObjDesc",
        Ok(
            "ShadowBatValve::Init(GameObjDesc *)",
        ),
    ),
    (
        "PostLaunchUpdate__10WarpFlower",
        Ok(
            "WarpFlower::PostLaunchUpdate(void)",
        ),
    ),
    (
        "LowerChar__Fc",
        Ok(
            "LowerChar(char)",
        ),
    ),
    (
        "Deinit__6Camera",
        Ok(
            "Camera::Deinit(void)",
        ),
    ),
    (
        "LoadLine__9FallGuideP12KromeIniLine",
        Ok(
            "FallGuide::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Glide__2Ty",
        Ok(
            "Ty::Glide(void)",
        ),
    ),
    (
        "__ti19__pointer_type_info",
        Ok(
            "__pointer_type_info type_info node",
        ),
    ),
    (
        "IdleInit__3Sly",
        Ok(
            "Sly::IdleInit(void)",
        ),
    ),
    (
        "MoveToPrevPoint_Init__6Dennis",
        Ok(
            "Dennis::MoveToPrevPoint_Init(void)",
        ),
    ),
    (
        "LetterBox_Reset__Fv",
        Ok(
            "LetterBox_Reset(void)",
        ),
    ),
    (
        "Reset__13UIButtonGroupi",
        Ok(
            "UIButtonGroup::Reset(int)",
        ),
    ),
    (
        "Particle_Update__Fv",
        Ok(
            "Particle_Update(void)",
        ),
    ),
    (
        "Spawn__15SnowBallExplodeP6VectorT1P14BoundingVolumef",
        Ok(
            "SnowBallExplode::Spawn(Vector *, Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "InitAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle_Update__6Dennis",
        Ok(
            "Dennis::Idle_Update(void)",
        ),
    ),
    (
        "_8MorayEel$nMouth",
        Ok(
            "MorayEel::nMouth",
        ),
    ),
    (
        "Init__13DDACheckpointP11GameObjDesc",
        Ok(
            "DDACheckpoint::Init(GameObjDesc *)",
        ),
    ),
    (
        "Update_FindPoint__3Fly",
        Ok(
            "Fly::Update_FindPoint(void)",
        ),
    ),
    (
        "GameCamera_Shake__FP6Vector",
        Ok(
            "GameCamera_Shake(Vector *)",
        ),
    ),
    (
        "ThrowRangs__3Sly",
        Ok(
            "Sly::ThrowRangs(void)",
        ),
    ),
    (
        "LoadLine__6DennisP12KromeIniLine",
        Ok(
            "Dennis::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8PipePartPv",
        Ok(
            "ModuleInfo<PipePart>::ConstructObject(void *)",
        ),
    ),
    (
        "Idle__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Idle(void)",
        ),
    ),
    (
        "AddToRenderList__8MaterialPvif",
        Ok(
            "Material::AddToRenderList(void *, int, float)",
        ),
    ),
    (
        "JumpAdjustSource_Update__10GameCamera",
        Ok(
            "GameCamera::JumpAdjustSource_Update(void)",
        ),
    ),
    (
        "LoadLine__10TeleporterP12KromeIniLine",
        Ok(
            "Teleporter::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "File_SyncAll__Fv",
        Ok(
            "File_SyncAll(void)",
        ),
    ),
    (
        "SetThunderEgg__8GameData14ThunderEggTypeP19SpecialPickupStruct",
        Ok(
            "GameData::SetThunderEgg(ThunderEggType, SpecialPickupStruct *)",
        ),
    ),
    (
        "Deinit__13MKParticleGen",
        Ok(
            "MKParticleGen::Deinit(void)",
        ),
    ),
    (
        "gWeatherInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "gDefaultVideoDelay",
        Err(
            NotMangled,
        ),
    ),
    (
        "WayPoint_Line__FP12KromeIniLineP16WayPointLoadInfo",
        Ok(
            "WayPoint_Line(KromeIniLine *, WayPointLoadInfo *)",
        ),
    ),
    (
        "Sound_MusicSetStereo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dropping__14FireworksCrate",
        Ok(
            "FireworksCrate::Dropping(void)",
        ),
    ),
    (
        "Shears_Draw__Fv",
        Ok(
            "Shears_Draw(void)",
        ),
    ),
    (
        "TakeOffInit__9ShadowBat",
        Ok(
            "ShadowBat::TakeOffInit(void)",
        ),
    ),
    (
        "load_set_conf",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "_9WaterDrip$waterDripType",
        Ok(
            "WaterDrip::waterDripType",
        ),
    ),
    (
        "FlinchInit__3Eel",
        Ok(
            "Eel::FlinchInit(void)",
        ),
    ),
    (
        "UpdateCamera__12DialogPlayer",
        Ok(
            "DialogPlayer::UpdateCamera(void)",
        ),
    ),
    (
        "ProcessSubtitles__12DialogPlayer",
        Ok(
            "DialogPlayer::ProcessSubtitles(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9BadBooniePv",
        Ok(
            "ModuleInfo<BadBoonie>::ConstructObject(void *)",
        ),
    ),
    (
        "Emu_FindClosest__FP6Vectorf",
        Ok(
            "Emu_FindClosest(Vector *, float)",
        ),
    ),
    (
        "__negsf2",
        Err(
            InvalidSpecialMethod(
                "negsf2",
            ),
        ),
    ),
    (
        "LoadLine__14EnemyWaypointsP12KromeIniLine",
        Ok(
            "EnemyWaypoints::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Update__9SharkCage",
        Ok(
            "SharkCage::Update(void)",
        ),
    ),
    (
        "AddDmacHandler2",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateFloorNormal__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::UpdateFloorNormal(void)",
        ),
    ),
    (
        "__sfp",
        Err(
            InvalidSpecialMethod(
                "sfp",
            ),
        ),
    ),
    (
        "BounceTyByWhiteBat__9ShadowBat",
        Ok(
            "ShadowBat::BounceTyByWhiteBat(void)",
        ),
    ),
    (
        "DeathByRangInit__11FrillLizard",
        Ok(
            "FrillLizard::DeathByRangInit(void)",
        ),
    ),
    (
        "MachineType",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDebug__21ParticleSystemManagerfPf",
        Ok(
            "ParticleSystemManager::DrawDebug(float, float *)",
        ),
    ),
    (
        "Update__24SimpleParticleSystemTypeP14ParticleSystem",
        Ok(
            "SimpleParticleSystemType::Update(ParticleSystem *)",
        ),
    ),
    (
        "Message__4TickP9MKMessage",
        Ok(
            "Tick::Message(MKMessage *)",
        ),
    ),
    (
        "LoadDone__6Geyser",
        Ok(
            "Geyser::LoadDone(void)",
        ),
    ),
    (
        "LoadDone__10Damageable",
        Ok(
            "Damageable::LoadDone(void)",
        ),
    ),
    (
        "Update__9DustTrailP6VectorT1ff",
        Ok(
            "DustTrail::Update(Vector *, Vector *, float, float)",
        ),
    ),
    (
        "System_SwapDisplayBuffers__Fv",
        Ok(
            "System_SwapDisplayBuffers(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7BouncerPv",
        Ok(
            "ModuleInfo<Bouncer>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadLine__4GateP12KromeIniLine",
        Ok(
            "Gate::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Str_CompareUnicode__FPUsT0",
        Ok(
            "Str_CompareUnicode(unsigned short *, unsigned short *)",
        ),
    ),
    (
        "Swallow__6Groper",
        Ok(
            "Groper::Swallow(void)",
        ),
    ),
    (
        "Draw__7BushPig",
        Ok(
            "BushPig::Draw(void)",
        ),
    ),
    (
        "gLevelLoadStartTime",
        Err(
            NotMangled,
        ),
    ),
    (
        "Transpose3x3__6MatrixP6Matrix",
        Ok(
            "Matrix::Transpose3x3(Matrix *)",
        ),
    ),
    (
        "Taunt__5Skink",
        Ok(
            "Skink::Taunt(void)",
        ),
    ),
    (
        "Gem_LoadResources__FP8KromeIni",
        Ok(
            "Gem_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GetRadius__11EnemyObject",
        Ok(
            "EnemyObject::GetRadius(void)",
        ),
    ),
    (
        "Pontoon_LoadResources__FP8KromeIni",
        Ok(
            "Pontoon_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Wombat_LoadResources__FP8KromeIni",
        Ok(
            "Wombat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ResolveHit__4Rock",
        Ok(
            "Rock::ResolveHit(void)",
        ),
    ),
    (
        "UseCurrentVector__10GameCamerab",
        Ok(
            "GameCamera::UseCurrentVector(bool)",
        ),
    ),
    (
        "CalcShadowPos__3Gem",
        Ok(
            "Gem::CalcShadowPos(void)",
        ),
    ),
    (
        "ApproxMag__FP6VectorT0",
        Ok(
            "ApproxMag(Vector *, Vector *)",
        ),
    ),
    (
        "Translate__6MatrixP6MatrixP6Vector",
        Ok(
            "Matrix::Translate(Matrix *, Vector *)",
        ),
    ),
    (
        "__tfUx",
        Ok(
            "unsigned long long type_info function",
        ),
    ),
    (
        "ScreenEffect_Deinit__Fv",
        Ok(
            "ScreenEffect_Deinit(void)",
        ),
    ),
    (
        "Bilby_Line__FP12KromeIniLine",
        Ok(
            "Bilby_Line(KromeIniLine *)",
        ),
    ),
    (
        "Reset__7Farlapp",
        Ok(
            "Farlapp::Reset(void)",
        ),
    ),
    (
        "RepairPipe__11FrillLizard",
        Ok(
            "FrillLizard::RepairPipe(void)",
        ),
    ),
    (
        "_10WaterSlide$instanceCount",
        Ok(
            "WaterSlide::instanceCount",
        ),
    ),
    (
        "Shatter_Init__Fv",
        Ok(
            "Shatter_Init(void)",
        ),
    ),
    (
        "_7MKWater$randomNumberTable",
        Ok(
            "MKWater::randomNumberTable",
        ),
    ),
    (
        "Patrol__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Patrol(void)",
        ),
    ),
    (
        "CheckForTy__12ShearsStruct",
        Ok(
            "ShearsStruct::CheckForTy(void)",
        ),
    ),
    (
        "Tools_MatriceRotate__FfP6VectorP6Matrix",
        Ok(
            "Tools_MatriceRotate(float, Vector *, Matrix *)",
        ),
    ),
    (
        "InitPreWarp__2Ty",
        Ok(
            "Ty::InitPreWarp(void)",
        ),
    ),
    (
        "RotateQ__6MatrixP12QuatRotation",
        Ok(
            "Matrix::RotateQ(QuatRotation *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7KenOath",
        Ok(
            "ModuleInfo<KenOath> virtual table",
        ),
    ),
    (
        "Idle_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Idle_Init(void)",
        ),
    ),
    (
        "Update__9SoundProp",
        Ok(
            "SoundProp::Update(void)",
        ),
    ),
    (
        "LilyPad_LoadResources__FP8KromeIni",
        Ok(
            "LilyPad_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__malloc_av_",
        Err(
            InvalidSpecialMethod(
                "malloc_av_",
            ),
        ),
    ),
    (
        "Idle_CanGoToState__9BadBoonie",
        Ok(
            "BadBoonie::Idle_CanGoToState(void)",
        ),
    ),
    (
        "CheckReachedWayPoint__9BadBoonieP6Vector",
        Ok(
            "BadBoonie::CheckReachedWayPoint(Vector *)",
        ),
    ),
    (
        "PubeCrab_LoadResources__FP8KromeIni",
        Ok(
            "PubeCrab_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_CFMX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Assign__3FlyP13CritterField2",
        Ok(
            "Fly::Assign(CritterField2 *)",
        ),
    ),
    (
        "PipePart_AssignRepairer__FP10GameObjectT0",
        Ok(
            "PipePart_AssignRepairer(GameObject *, GameObject *)",
        ),
    ),
    (
        "IceBlock_Init__Fv",
        Ok(
            "IceBlock_Init(void)",
        ),
    ),
    (
        "SwallowDeinit__6Groper",
        Ok(
            "Groper::SwallowDeinit(void)",
        ),
    ),
    (
        "CruiseInit__6Groper",
        Ok(
            "Groper::CruiseInit(void)",
        ),
    ),
    (
        "Ty_Deinit__Fv",
        Ok(
            "Ty_Deinit(void)",
        ),
    ),
    (
        "SetLearntToDive__8GameDatab",
        Ok(
            "GameData::SetLearntToDive(bool)",
        ),
    ),
    (
        "AttackInit__4Tick",
        Ok(
            "Tick::AttackInit(void)",
        ),
    ),
    (
        "Crate_IsMember__FP16MKPropDescriptor",
        Ok(
            "Crate_IsMember(MKPropDescriptor *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10DialogPropPv",
        Ok(
            "ModuleInfo<DialogProp>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8FireDrum",
        Ok(
            "ModuleInfo<FireDrum>::Init(void)",
        ),
    ),
    (
        "_vt$10ScubaFrill",
        Ok(
            "ScubaFrill virtual table",
        ),
    ),
    (
        "TauntInit__5Neddy",
        Ok(
            "Neddy::TauntInit(void)",
        ),
    ),
    (
        "Tools_SetNode__FP9AnimationiP6Matrix17Tools_SetNodeFlag",
        Ok(
            "Tools_SetNode(Animation *, int, Matrix *, Tools_SetNodeFlag)",
        ),
    ),
    (
        "RFU061",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitLassoCaughtEmu__5Lasso",
        Ok(
            "Lasso::InitLassoCaughtEmu(void)",
        ),
    ),
    (
        "_GLOBAL_$I$ScubaFrill_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to ScubaFrill_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceDopen",
        Err(
            NotMangled,
        ),
    ),
    (
        "PassThunderEgg__11ScrubTurkey",
        Ok(
            "ScrubTurkey::PassThunderEgg(void)",
        ),
    ),
    (
        "SendYesEvent__10DialogProp",
        Ok(
            "DialogProp::SendYesEvent(void)",
        ),
    ),
    (
        "UseElevatorCamera__10GameCamerab",
        Ok(
            "GameCamera::UseElevatorCamera(bool)",
        ),
    ),
    (
        "ResumeThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "AtLastPoint__18BezierPathFollower",
        Ok(
            "BezierPathFollower::AtLastPoint(void)",
        ),
    ),
    (
        "MobilePlatform_LoadResources__FP8KromeIni",
        Ok(
            "MobilePlatform_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Deinit__13BubbleSpawner",
        Ok(
            "BubbleSpawner::Deinit(void)",
        ),
    ),
    (
        "ApplyGravity__6TyBite",
        Ok(
            "TyBite::ApplyGravity(void)",
        ),
    ),
    (
        "GetPosition__6Splinef",
        Ok(
            "Spline::GetPosition(float)",
        ),
    ),
    (
        "MiniGame_B3_Init__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B3_Init(void)",
        ),
    ),
    (
        "ModelRender_AExyW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "FinishEatingChum__6Crikey",
        Ok(
            "Crikey::FinishEatingChum(void)",
        ),
    ),
    (
        "Clamp__15GameCameraPointb",
        Ok(
            "GameCameraPoint::Clamp(bool)",
        ),
    ),
    (
        "GetState__10IceCoolant",
        Ok(
            "IceCoolant::GetState(void)",
        ),
    ),
    (
        "InterpolateLinear__12QuatRotationP12QuatRotationT1f",
        Ok(
            "QuatRotation::InterpolateLinear(QuatRotation *, QuatRotation *, float)",
        ),
    ),
    (
        "CrawlIdleDeinit__10NinjaGecko",
        Ok(
            "NinjaGecko::CrawlIdleDeinit(void)",
        ),
    ),
    (
        "UnderWaterIdleTransition__2Ty",
        Ok(
            "Ty::UnderWaterIdleTransition(void)",
        ),
    ),
    (
        "sceDmaPause",
        Err(
            NotMangled,
        ),
    ),
    (
        "atWinMonPrefix",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue::LoadDone(void)",
        ),
    ),
    (
        "DeathDeInit__11RhinoGround",
        Ok(
            "RhinoGround::DeathDeInit(void)",
        ),
    ),
    (
        "Kin_GetDiscreteAcceleration__FPfT0T0T0",
        Ok(
            "Kin_GetDiscreteAcceleration(float *, float *, float *, float *)",
        ),
    ),
    (
        "SetPos__14IceBlockStructP6Vector",
        Ok(
            "IceBlockStruct::SetPos(Vector *)",
        ),
    ),
    (
        "CalcLengths__11PathSegment",
        Ok(
            "PathSegment::CalcLengths(void)",
        ),
    ),
    (
        "_GLOBAL_$I$InitLevel__17CritterField2Desc",
        Ok(
            "global constructors keyed to CritterField2Desc::InitLevel(void)",
        ),
    ),
    (
        "EnemyObject_UpdateDebug__Fv",
        Ok(
            "EnemyObject_UpdateDebug(void)",
        ),
    ),
    (
        "SpawnShockGlow__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnShockGlow(Vector *, float)",
        ),
    ),
    (
        "_19DialogEffectManager$effects",
        Ok(
            "DialogEffectManager::effects",
        ),
    ),
    (
        "SpawnGhostSmoke__17TyParticleManagerP6Vectori",
        Ok(
            "TyParticleManager::SpawnGhostSmoke(Vector *, int)",
        ),
    ),
    (
        "Reset__9Speedboat",
        Ok(
            "Speedboat::Reset(void)",
        ),
    ),
    (
        "Spider_Draw__Fv",
        Ok(
            "Spider_Draw(void)",
        ),
    ),
    (
        "ThrowRockInit__10BlueTongue",
        Ok(
            "BlueTongue::ThrowRockInit(void)",
        ),
    ),
    (
        "SpawnWaterDropBlue__17TyParticleManagerP6VectorT1f",
        Ok(
            "TyParticleManager::SpawnWaterDropBlue(Vector *, Vector *, float)",
        ),
    ),
    (
        "AnimatingProp_LoadResources__FP8KromeIni",
        Ok(
            "AnimatingProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MORAY_EEL_HOLE",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChainExplosion__7SeaMine",
        Ok(
            "SeaMine::ChainExplosion(void)",
        ),
    ),
    (
        "PostUpdate__6Friend",
        Ok(
            "Friend::PostUpdate(void)",
        ),
    ),
    (
        "Init__10SnowSpiderP11GameObjDesc",
        Ok(
            "SnowSpider::Init(GameObjDesc *)",
        ),
    ),
    (
        "Reset__21RainbowScaleObjective",
        Ok(
            "RainbowScaleObjective::Reset(void)",
        ),
    ),
    (
        "__sread",
        Err(
            InvalidSpecialMethod(
                "sread",
            ),
        ),
    ),
    (
        "Ride__9FrillBikefb",
        Ok(
            "FrillBike::Ride(float, bool)",
        ),
    ),
    (
        "pModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "HasLooped__12MKAnimScript",
        Ok(
            "MKAnimScript::HasLooped(void)",
        ),
    ),
    (
        "SignedDistanceToPlane__6VectorP6VectorT1",
        Ok(
            "Vector::SignedDistanceToPlane(Vector *, Vector *)",
        ),
    ),
    (
        "LogicUpdate__5Shark",
        Ok(
            "Shark::LogicUpdate(void)",
        ),
    ),
    (
        "Init__7UIModelPcT1",
        Ok(
            "UIModel::Init(char *, char *)",
        ),
    ),
    (
        "DrawLines__13MKParticleGenP4ViewP6Vector",
        Ok(
            "MKParticleGen::DrawLines(View *, Vector *)",
        ),
    ),
    (
        "_LoadExecPS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "LetterBox_Init__FP9LetterBox",
        Ok(
            "LetterBox_Init(LetterBox *)",
        ),
    ),
    (
        "fread",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_OptionScreen_LoadResources__Fv",
        Ok(
            "PauseScreen_OptionScreen_LoadResources(void)",
        ),
    ),
    (
        "Init__8SignPostP11GameObjDesc",
        Ok(
            "SignPost::Init(GameObjDesc *)",
        ),
    ),
    (
        "GameCamera_UseWaterSlideCamera__Fb",
        Ok(
            "GameCamera_UseWaterSlideCamera(bool)",
        ),
    ),
    (
        "ENTRYPOINT",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$_9type_info",
        Ok(
            "type_info::~type_info(void)",
        ),
    ),
    (
        "_8Teleport$type",
        Ok(
            "Teleport::type",
        ),
    ),
    (
        "Maurie_IsLanding__Fv",
        Ok(
            "Maurie_IsLanding(void)",
        ),
    ),
    (
        "FrontEnd_MainMenu_Draw__Fv",
        Ok(
            "FrontEnd_MainMenu_Draw(void)",
        ),
    ),
    (
        "Deinit__8Elevator",
        Ok(
            "Elevator::Deinit(void)",
        ),
    ),
    (
        "Init__14MobilePlatformP11GameObjDesc",
        Ok(
            "MobilePlatform::Init(GameObjDesc *)",
        ),
    ),
    (
        "Exists__12MKAnimScriptPc",
        Ok(
            "MKAnimScript::Exists(char *)",
        ),
    ),
    (
        "DrawSuperGlow__6TyBite",
        Ok(
            "TyBite::DrawSuperGlow(void)",
        ),
    ),
    (
        "LoadLine__6JuliusP12KromeIniLine",
        Ok(
            "Julius::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "TryChangeState__Fb12BushPigState",
        Ok(
            "TryChangeState(bool, BushPigState)",
        ),
    ),
    (
        "Init__16BoomerangManagerP20BoomerangManagerInit",
        Ok(
            "BoomerangManager::Init(BoomerangManagerInit *)",
        ),
    ),
    (
        "SetIdealDeltas__21GameCameraPointsDeltaff9DeltaTypebf",
        Ok(
            "GameCameraPointsDelta::SetIdealDeltas(float, float, DeltaType, bool, float)",
        ),
    ),
    (
        "Init__10DDASession",
        Ok(
            "DDASession::Init(void)",
        ),
    ),
    (
        "_vt$8DiveRing",
        Ok(
            "DiveRing virtual table",
        ),
    ),
    (
        "SpitDeinit__6Groper",
        Ok(
            "Groper::SpitDeinit(void)",
        ),
    ),
    (
        "LoadLine__19EmuRoundupObjectiveP12KromeIniLine",
        Ok(
            "EmuRoundupObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DeinitHitWall__7BushPig",
        Ok(
            "BushPig::DeinitHitWall(void)",
        ),
    ),
    (
        "RenderTexture_Deinit__Fv",
        Ok(
            "RenderTexture_Deinit(void)",
        ),
    ),
    (
        "SetVTLBRefillHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__8DiveRing",
        Ok(
            "DiveRing::LoadDone(void)",
        ),
    ),
    (
        "ModelRender_CFLO1W_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "TyOnElevator__8Elevator",
        Ok(
            "Elevator::TyOnElevator(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13MusicalIcicle",
        Ok(
            "ModuleInfo<MusicalIcicle> virtual table",
        ),
    ),
    (
        "CameraOverrideHigh_Reset__Fv",
        Ok(
            "CameraOverrideHigh_Reset(void)",
        ),
    ),
    (
        "Init__5TyFSMPQ25TyFSM5State14HeroActorState",
        Ok(
            "TyFSM::Init(TyFSM::State *, HeroActorState)",
        ),
    ),
    (
        "MKWaterRender_WSEMFL2SCR_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15TurningPlatform",
        Ok(
            "ModuleInfo<TurningPlatform>::Init(void)",
        ),
    ),
    (
        "AddVif_FLUSHA__3Dma",
        Ok(
            "Dma::AddVif_FLUSHA(void)",
        ),
    ),
    (
        "_7MKWater$staticDataUploaded",
        Ok(
            "MKWater::staticDataUploaded",
        ),
    ),
    (
        "DeathInit__10NinjaGecko",
        Ok(
            "NinjaGecko::DeathInit(void)",
        ),
    ),
    (
        "SpawningInit__11BonusPickup",
        Ok(
            "BonusPickup::SpawningInit(void)",
        ),
    ),
    (
        "Collecting__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Collecting(void)",
        ),
    ),
    (
        "sceSetPtm",
        Err(
            NotMangled,
        ),
    ),
    (
        "Hud_ShowHealthMeter__Fb",
        Ok(
            "Hud_ShowHealthMeter(bool)",
        ),
    ),
    (
        "_vt$8Talisman",
        Ok(
            "Talisman virtual table",
        ),
    ),
    (
        "GameCamera_InitModule__FPUi",
        Ok(
            "GameCamera_InitModule(unsigned int *)",
        ),
    ),
    (
        "SetEnvelope__24SimpleParticleSystemTypeiP16ParticleEnvelope",
        Ok(
            "SimpleParticleSystemType::SetEnvelope(int, ParticleEnvelope *)",
        ),
    ),
    (
        "GetCurrWayPtNum__17WaterSlideManager",
        Ok(
            "WaterSlideManager::GetCurrWayPtNum(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Burnable",
        Ok(
            "ModuleInfo<Burnable>::Init(void)",
        ),
    ),
    (
        "PE_FrostyBreath_LoadResources__Fv",
        Ok(
            "PE_FrostyBreath_LoadResources(void)",
        ),
    ),
    (
        "Shadow_Init__Fv",
        Ok(
            "Shadow_Init(void)",
        ),
    ),
    (
        "sceSifRegisterRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "Gem_PickupParticle_Draw__Fv",
        Ok(
            "Gem_PickupParticle_Draw(void)",
        ),
    ),
    (
        "Jump__15LearnToDiveData",
        Ok(
            "LearnToDiveData::Jump(void)",
        ),
    ),
    (
        "Update__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::Update(void)",
        ),
    ),
    (
        "SwimSelectIdleOrMove__2Ty",
        Ok(
            "Ty::SwimSelectIdleOrMove(void)",
        ),
    ),
    (
        "InitLongFall__2Ty",
        Ok(
            "Ty::InitLongFall(void)",
        ),
    ),
    (
        "DoCurvedTargeting__9Boomerangf",
        Ok(
            "Boomerang::DoCurvedTargeting(float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6SpyEgg",
        Ok(
            "ModuleInfo<SpyEgg> virtual table",
        ),
    ),
    (
        "TweenAnim__5Lenny12tagLennyAnims",
        Ok(
            "Lenny::TweenAnim(tagLennyAnim, short)",
        ),
    ),
    (
        "AttackInit__5Yabby",
        Ok(
            "Yabby::AttackInit(void)",
        ),
    ),
    (
        "AttackIdlePunch__11FrillLizardb",
        Ok(
            "FrillLizard::AttackIdlePunch(bool)",
        ),
    ),
    (
        "GetDesc__17MiniGameObjective",
        Ok(
            "MiniGameObjective::GetDesc(void)",
        ),
    ),
    (
        "IncrementProgress__11ProgressBar",
        Ok(
            "ProgressBar::IncrementProgress(void)",
        ),
    ),
    (
        "InitDrag__3Emu",
        Ok(
            "Emu::InitDrag(void)",
        ),
    ),
    (
        "AuroraKid_ListStart__FPi",
        Ok(
            "AuroraKid_ListStart(int *)",
        ),
    ),
    (
        "DeinitFight__3Emu",
        Ok(
            "Emu::DeinitFight(void)",
        ),
    ),
    (
        "sceDeci2ExLock",
        Err(
            NotMangled,
        ),
    ),
    (
        "__malloc_lock",
        Err(
            InvalidSpecialMethod(
                "malloc_lock",
            ),
        ),
    ),
    (
        "GS_ClearRegs__Fv",
        Ok(
            "GS_ClearRegs(void)",
        ),
    ),
    (
        "Init__6GroperP11GameObjDesc",
        Ok(
            "Groper::Init(GameObjDesc *)",
        ),
    ),
    (
        "_7MKWater$pMenu",
        Ok(
            "MKWater::pMenu",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z12AquarangProp",
        Ok(
            "ModuleInfo<AquarangProp>::Init(void)",
        ),
    ),
    (
        "sceDclose",
        Err(
            NotMangled,
        ),
    ),
    (
        "sbrk",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckBoomerangs__14CrikeyCanister",
        Ok(
            "CrikeyCanister::CheckBoomerangs(void)",
        ),
    ),
    (
        "__ieee754_fmodf",
        Err(
            InvalidSpecialMethod(
                "ieee754_fmodf",
            ),
        ),
    ),
    (
        "Init__12DialogPlayer",
        Ok(
            "DialogPlayer::Init(void)",
        ),
    ),
    (
        "Fish_MaxFish",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitBreakout__3Emu",
        Ok(
            "Emu::DeinitBreakout(void)",
        ),
    ),
    (
        "Launch_Init__10GameCamera",
        Ok(
            "GameCamera::Launch_Init(void)",
        ),
    ),
    (
        "_vt$4Moth",
        Ok(
            "Moth virtual table",
        ),
    ),
    (
        "Init__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::Init(void)",
        ),
    ),
    (
        "Set__5TyFSM14HeroActorState",
        Ok(
            "TyFSM::Set(HeroActorState)",
        ),
    ),
    (
        "sceDmaPutEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__4Croc",
        Ok(
            "Croc::LogicUpdate(void)",
        ),
    ),
    (
        "UpdatePath__4BullP10GameObject",
        Ok(
            "Bull::UpdatePath(GameObject *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z22MusicalIcicleObjectivePv",
        Ok(
            "ModuleInfo<MusicalIcicleObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "_GLOBAL_$I$C3_Ringo_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to C3_Ringo_LoadResources(KromeIni *)",
        ),
    ),
    (
        "StartEatingChum__6Crikey",
        Ok(
            "Crikey::StartEatingChum(void)",
        ),
    ),
    (
        "Init__17CritterCruiseMove",
        Ok(
            "CritterCruiseMove::Init(void)",
        ),
    ),
    (
        "Create__8MaterialPc",
        Ok(
            "Material::Create(char *)",
        ),
    ),
    (
        "Message__13OpalCollectorP9MKMessage",
        Ok(
            "OpalCollector::Message(MKMessage *)",
        ),
    ),
    (
        "GetDropPos__7C3Chest",
        Ok(
            "C3Chest::GetDropPos(void)",
        ),
    ),
    (
        "_9GreySmoke$greySmokeType",
        Ok(
            "GreySmoke::greySmokeType",
        ),
    ),
    (
        "ChaseInit__10SnowSpider",
        Ok(
            "SnowSpider::ChaseInit(void)",
        ),
    ),
    (
        "WaitInit__8PubeCrab",
        Ok(
            "PubeCrab::WaitInit(void)",
        ),
    ),
    (
        "Cruise__4Croc",
        Ok(
            "Croc::Cruise(void)",
        ),
    ),
    (
        "High_Update__14CameraOverride",
        Ok(
            "CameraOverride::High_Update(void)",
        ),
    ),
    (
        "LoadLine__15KingFisherFieldP12KromeIniLine",
        Ok(
            "KingFisherField::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "AnimateUsingDistance__7BushPigff",
        Ok(
            "BushPig::AnimateUsingDistance(float, float)",
        ),
    ),
    (
        "UpdateWorldMatrix__5Gecko",
        Ok(
            "Gecko::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10KingFisherPv",
        Ok(
            "ModuleInfo<KingFisher>::ConstructObject(void *)",
        ),
    ),
    (
        "Tween__9Animationff",
        Ok(
            "Animation::Tween(float, float)",
        ),
    ),
    (
        "_alalcAlloc",
        Err(
            NotMangled,
        ),
    ),
    (
        "scalbnf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Heap_MemAllocAligned__Fii",
        Ok(
            "Heap_MemAllocAligned(int, int)",
        ),
    ),
    (
        "Particle_BullSplash_Init__FPP14ParticleSystemP6Vector",
        Ok(
            "Particle_BullSplash_Init(ParticleSystem **, Vector *)",
        ),
    ),
    (
        "MKShadow_EndScene__Fv",
        Ok(
            "MKShadow_EndScene(void)",
        ),
    ),
    (
        "Portal_Draw__FP6Portal",
        Ok(
            "Portal_Draw(Portal *)",
        ),
    ),
    (
        "_GLOBAL_$I$SMOKE_SOURCE_L",
        Ok(
            "global constructors keyed to SMOKE_SOURCE_L",
        ),
    ),
    (
        "SortWaterPropsByType__7MKWater",
        Ok(
            "MKWater::SortWaterPropsByType(void)",
        ),
    ),
    (
        "CustomCameraMatrix_Deinit__10GameCamera",
        Ok(
            "GameCamera::CustomCameraMatrix_Deinit(void)",
        ),
    ),
    (
        "RescueBilby__8GameData9BilbyType",
        Ok(
            "GameData::RescueBilby(BilbyType)",
        ),
    ),
    (
        "BarbedWire_Update__Fv",
        Ok(
            "BarbedWire_Update(void)",
        ),
    ),
    (
        "_ri0_101",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitParticles__9FrillBike",
        Ok(
            "FrillBike::InitParticles(void)",
        ),
    ),
    (
        "Deinit__3Bat",
        Ok(
            "Bat::Deinit(void)",
        ),
    ),
    (
        "SetHeroInfo__10GameCameraP18GameCameraHeroInfo",
        Ok(
            "GameCamera::SetHeroInfo(GameCameraHeroInfo *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11AirPlatformPv",
        Ok(
            "ModuleInfo<AirPlatform>::ConstructObject(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11BonusPickupPv",
        Ok(
            "ModuleInfo<BonusPickup>::ConstructObject(void *)",
        ),
    ),
    (
        "CheckWake__6Crikey",
        Ok(
            "Crikey::CheckWake(void)",
        ),
    ),
    (
        "Hit__10BlueTongue",
        Ok(
            "BlueTongue::Hit(void)",
        ),
    ),
    (
        "Message__6WombatP9MKMessage",
        Ok(
            "Wombat::Message(MKMessage *)",
        ),
    ),
    (
        "Gem_FireCustomUpdate__FP14ParticleSystem",
        Ok(
            "Gem_FireCustomUpdate(ParticleSystem *)",
        ),
    ),
    (
        "InitIdleDogPaddle__2Ty",
        Ok(
            "Ty::InitIdleDogPaddle(void)",
        ),
    ),
    (
        "_showCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "CompareModelRenderFunc__FPC10VUFunctionT0",
        Ok(
            "CompareModelRenderFunc(VUFunction const *, VUFunction const *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8BuzzSaw2",
        Ok(
            "ModuleInfo<BuzzSaw2> virtual table",
        ),
    ),
    (
        "Reset__8GameData11LevelNumber",
        Ok(
            "GameData::Reset(LevelNumber)",
        ),
    ),
    (
        "Reset__6SpyEgg",
        Ok(
            "SpyEgg::Reset(void)",
        ),
    ),
    (
        "MetalSpikes_LoadResources__FP8KromeIni",
        Ok(
            "MetalSpikes_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Draw__13Blitter_Imageif",
        Ok(
            "Blitter_Image::Draw(int, float)",
        ),
    ),
    (
        "ModelRender_CFST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Flip__5Roach",
        Ok(
            "Roach::Flip(void)",
        ),
    ),
    (
        "GetNodesAndSubObjects__2Ty",
        Ok(
            "Ty::GetNodesAndSubObjects(void)",
        ),
    ),
    (
        "_sceCd_ncmdsdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaitState__8Elevator",
        Ok(
            "Elevator::WaitState(void)",
        ),
    ),
    (
        "MiniBoulder_Draw__Fv",
        Ok(
            "MiniBoulder_Draw(void)",
        ),
    ),
    (
        "DUST_SOURCE_R",
        Err(
            NotMangled,
        ),
    ),
    (
        "Hud_DrawLives__Fv",
        Ok(
            "Hud_DrawLives(void)",
        ),
    ),
    (
        "Wake_Init__Fv",
        Ok(
            "Wake_Init(void)",
        ),
    ),
    (
        "LogicUpdate__11EnemyObject",
        Ok(
            "EnemyObject::LogicUpdate(void)",
        ),
    ),
    (
        "Init__11AirPlatformP11GameObjDesc",
        Ok(
            "AirPlatform::Init(GameObjDesc *)",
        ),
    ),
    (
        "iSyncDCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__13FallGuidePropP11GameObjDesc",
        Ok(
            "FallGuideProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11Shatterable",
        Ok(
            "ModuleInfo<Shatterable>::Init(void)",
        ),
    ),
    (
        "Play__13SoundMaterialP6VectoriP10SoundEvent",
        Ok(
            "SoundMaterial::Play(Vector *, int, SoundEvent *)",
        ),
    ),
    (
        "GetNextState__11FaderObjectQ211FaderObject9FadeStateQ211FaderObject8FadeMode",
        Ok(
            "FaderObject::GetNextState(FaderObject::FadeState, FaderObject::FadeMode)",
        ),
    ),
    (
        "_5Lenny$eventLeftFoot",
        Ok(
            "Lenny::eventLeftFoot",
        ),
    ),
    (
        "Draw__16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue::Draw(void)",
        ),
    ),
    (
        "Init__19ShadowBatStalactiteP11GameObjDesc",
        Ok(
            "ShadowBatStalactite::Init(GameObjDesc *)",
        ),
    ),
    (
        "ReSpawnInit__7SeaMine",
        Ok(
            "SeaMine::ReSpawnInit(void)",
        ),
    ),
    (
        "Increment__14LevelObjective",
        Ok(
            "LevelObjective::Increment(void)",
        ),
    ),
    (
        "Tools_CollisionBounce__FP6VectorT0P15CollisionResultf",
        Ok(
            "Tools_CollisionBounce(Vector *, Vector *, CollisionResult *, float)",
        ),
    ),
    (
        "IsTyInZone__17TriggerSphereProp",
        Ok(
            "TriggerSphereProp::IsTyInZone(void)",
        ),
    ),
    (
        "Init__7FurnaceP11GameObjDesc",
        Ok(
            "Furnace::Init(GameObjDesc *)",
        ),
    ),
    (
        "_11CrateStruct$waypoints",
        Ok(
            "CrateStruct::waypoints",
        ),
    ),
    (
        "Reset__10ScubaFrill",
        Ok(
            "ScubaFrill::Reset(void)",
        ),
    ),
    (
        "Init__14BoundingRegionP11PathSegment",
        Ok(
            "BoundingRegion::Init(PathSegment *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Torch",
        Ok(
            "ModuleInfo<Torch>::Init(void)",
        ),
    ),
    (
        "_calloc_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "HeatFlare_Draw__Fv",
        Ok(
            "HeatFlare_Draw(void)",
        ),
    ),
    (
        "ModelRender_FLT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ToppleDeath__8Sentinel",
        Ok(
            "Sentinel::ToppleDeath(void)",
        ),
    ),
    (
        "NodeOverride_Init__FP12NodeOverrideP9AnimationP6Matrixi",
        Ok(
            "NodeOverride_Init(NodeOverride *, Animation *, Matrix *, int)",
        ),
    ),
    (
        "GetAvailableEnemy__12EnemySpawner",
        Ok(
            "EnemySpawner::GetAvailableEnemy(void)",
        ),
    ),
    (
        "Str_UnicodeToChar__FPUs",
        Ok(
            "Str_UnicodeToChar(unsigned short *)",
        ),
    ),
    (
        "Draw__9AuroraKid",
        Ok(
            "AuroraKid::Draw(void)",
        ),
    ),
    (
        "_vt$10LavaBurner",
        Ok(
            "LavaBurner virtual table",
        ),
    ),
    (
        "Draw__7Farlapp",
        Ok(
            "Farlapp::Draw(void)",
        ),
    ),
    (
        "TopDown_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::TopDown_Create(void *)",
        ),
    ),
    (
        "RaceInit__3Rex",
        Ok(
            "Rex::RaceInit(void)",
        ),
    ),
    (
        "SaveStates_GetBilby__FPci",
        Ok(
            "SaveStates_GetBilby(char *, int)",
        ),
    ),
    (
        "MKWaterManager_Init__Fi",
        Ok(
            "MKWaterManager_Init(int)",
        ),
    ),
    (
        "Update__16ReflectionStruct",
        Ok(
            "ReflectionStruct::Update(void)",
        ),
    ),
    (
        "Bubble_CustomUpdate__FP14ParticleSystem",
        Ok(
            "Bubble_CustomUpdate(ParticleSystem *)",
        ),
    ),
    (
        "Reset__10NinjaGecko",
        Ok(
            "NinjaGecko::Reset(void)",
        ),
    ),
    (
        "UseUnderwaterCamera__10GameCamerab",
        Ok(
            "GameCamera::UseUnderwaterCamera(bool)",
        ),
    ),
    (
        "TimeAttack_OnRace__Fv",
        Ok(
            "TimeAttack_OnRace(void)",
        ),
    ),
    (
        "AddGif_AD_TEX2_1__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX2_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "_15SnowBallExplode$snowBallType",
        Ok(
            "SnowBallExplode::snowBallType",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Talisman",
        Ok(
            "ModuleInfo<Talisman>::Init(void)",
        ),
    ),
    (
        "_vt$7C3Chest",
        Ok(
            "C3Chest virtual table",
        ),
    ),
    (
        "SetGsVParam",
        Err(
            NotMangled,
        ),
    ),
    (
        "iSignalSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "TurnToPoint__5LennyP6Vector",
        Ok(
            "Lenny::TurnToPoint(Vector *)",
        ),
    ),
    (
        "Init__5LeechP11GameObjDesc",
        Ok(
            "Leech::Init(GameObjDesc *)",
        ),
    ),
    (
        "Deinit__8TyHealth",
        Ok(
            "TyHealth::Deinit(void)",
        ),
    ),
    (
        "SetCollectedGems__8GameDatai",
        Ok(
            "GameData::SetCollectedGems(int)",
        ),
    ),
    (
        "EndOfHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "gpTraceExStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadCodeMPG__10VU1ManagerPUiT1ii",
        Ok(
            "VU1Manager::LoadCodeMPG(unsigned int *, unsigned int *, int, int)",
        ),
    ),
    (
        "LoadDescriptors__H1Z18MobilePlatformDesc_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<MobilePlatformDesc>(KromeIni *, char *, MobilePlatformDesc *)",
        ),
    ),
    (
        "AirState__5TyFSMi",
        Ok(
            "TyFSM::AirState(int)",
        ),
    ),
    (
        "RegulateSpeed__13UniformSpline",
        Ok(
            "UniformSpline::RegulateSpeed(void)",
        ),
    ),
    (
        "ApplyNode__12MKAnimScriptP9Animationi",
        Ok(
            "MKAnimScript::ApplyNode(Animation *, int)",
        ),
    ),
    (
        "BubbleUpdate__3Rexi",
        Ok(
            "Rex::BubbleUpdate(int)",
        ),
    ),
    (
        "DrawString__4FontPcffP6MatrixiUiPFPQ24Font13TextCharStripi_vT7",
        Ok(
            "Font::DrawString(char *, float, float, Matrix *, int, unsigned int, void (*)(Font::TextCharStrip *, int), void (*)(Font::TextCharStrip *, int))",
        ),
    ),
    (
        "GenerateInitialPostion__5Gecko",
        Ok(
            "Gecko::GenerateInitialPostion(void)",
        ),
    ),
    (
        "Init__22Tools_AnimEventManagerP19Tools_AnimEventDesc",
        Ok(
            "Tools_AnimEventManager::Init(Tools_AnimEventDesc *)",
        ),
    ),
    (
        "Deinit__12StreamBuffer",
        Ok(
            "StreamBuffer::Deinit(void)",
        ),
    ),
    (
        "scePadRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitIdle__5Rhino",
        Ok(
            "Rhino::InitIdle(void)",
        ),
    ),
    (
        "GameCamera_OverrideHigh_Add__FP26CameraOverrideHighLoadInfo",
        Ok(
            "GameCamera_OverrideHigh_Add(CameraOverrideHighLoadInfo *)",
        ),
    ),
    (
        "Draw__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Draw(void)",
        ),
    ),
    (
        "DeathDeinit__6Crikey",
        Ok(
            "Crikey::DeathDeinit(void)",
        ),
    ),
    (
        "CycleDistance__10GameCameraib",
        Ok(
            "GameCamera::CycleDistance(int, bool)",
        ),
    ),
    (
        "Multiply__6MatrixP6Matrix",
        Ok(
            "Matrix::Multiply(Matrix *)",
        ),
    ),
    (
        "ScrollUVOffset__8Materialff",
        Ok(
            "Material::ScrollUVOffset(float, float)",
        ),
    ),
    (
        "LookOutInit__5Shark",
        Ok(
            "Shark::LookOutInit(void)",
        ),
    ),
    (
        "_vt$14StalactiteTrap",
        Ok(
            "StalactiteTrap virtual table",
        ),
    ),
    (
        "_3Dma$stackTopIndex",
        Ok(
            "Dma::stackTopIndex",
        ),
    ),
    (
        "timeAttackEventStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Slow__14WaterSlideData",
        Ok(
            "WaterSlideData::Slow(void)",
        ),
    ),
    (
        "Init__6SpyEggP11GameObjDesc",
        Ok(
            "SpyEgg::Init(GameObjDesc *)",
        ),
    ),
    (
        "ThroughRing__8DiveRing",
        Ok(
            "DiveRing::ThroughRing(void)",
        ),
    ),
    (
        "LoadLine__8DiveRingP12KromeIniLine",
        Ok(
            "DiveRing::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DamageTy__4Rock",
        Ok(
            "Rock::DamageTy(void)",
        ),
    ),
    (
        "gsRegs",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6ShazzaPv",
        Ok(
            "ModuleInfo<Shazza>::ConstructObject(void *)",
        ),
    ),
    (
        "IsTyVisible__3Bat",
        Ok(
            "Bat::IsTyVisible(void)",
        ),
    ),
    (
        "Reset__9FireWorks",
        Ok(
            "FireWorks::Reset(void)",
        ),
    ),
    (
        "Dot__12QuatRotationP12QuatRotation",
        Ok(
            "QuatRotation::Dot(QuatRotation *)",
        ),
    ),
    (
        "_7MKWater$bUseVUCode",
        Ok(
            "MKWater::bUseVUCode",
        ),
    ),
    (
        "Burn__8BeachHut",
        Ok(
            "BeachHut::Burn(void)",
        ),
    ),
    (
        "_vt$10Damageable",
        Ok(
            "Damageable virtual table",
        ),
    ),
    (
        "_vt$11DropPontoon",
        Ok(
            "DropPontoon virtual table",
        ),
    ),
    (
        "DeinitDogPaddle__2Ty",
        Ok(
            "Ty::DeinitDogPaddle(void)",
        ),
    ),
    (
        "_$_8bad_cast",
        Ok(
            "bad_cast::~bad_cast(void)",
        ),
    ),
    (
        "LeapStartInit__10NinjaGecko",
        Ok(
            "NinjaGecko::LeapStartInit(void)",
        ),
    ),
    (
        "ScubaFrill_LoadResources__FP8KromeIni",
        Ok(
            "ScubaFrill_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Hit__4Drum",
        Ok(
            "Drum::Hit(void)",
        ),
    ),
    (
        "Turn__5Shark",
        Ok(
            "Shark::Turn(void)",
        ),
    ),
    (
        "_vt$18SpeedboatObjective",
        Ok(
            "SpeedboatObjective virtual table",
        ),
    ),
    (
        "Draw__9Speedboat",
        Ok(
            "Speedboat::Draw(void)",
        ),
    ),
    (
        "Alert__10BlueTongueb",
        Ok(
            "BlueTongue::Alert(bool)",
        ),
    ),
    (
        "Explode__7Furnace",
        Ok(
            "Furnace::Explode(void)",
        ),
    ),
    (
        "ConfrontInit__5Rufus",
        Ok(
            "Rufus::ConfrontInit(void)",
        ),
    ),
    (
        "Hit__9RedButton",
        Ok(
            "RedButton::Hit(void)",
        ),
    ),
    (
        "FlyBackDeinit__7CaveBat",
        Ok(
            "CaveBat::FlyBackDeinit(void)",
        ),
    ),
    (
        "DeinitFlinch__9Speedboat",
        Ok(
            "Speedboat::DeinitFlinch(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8FireDrum",
        Ok(
            "ModuleInfo<FireDrum> virtual table",
        ),
    ),
    (
        "LoadDone__17MiniGameObjective",
        Ok(
            "MiniGameObjective::LoadDone(void)",
        ),
    ),
    (
        "Collision_SphereCollide__FP6VectorfP15CollisionResultii",
        Ok(
            "Collision_SphereCollide(Vector *, float, CollisionResult *, int, int)",
        ),
    ),
    (
        "BergQuickShatter__14IceBlockStruct",
        Ok(
            "IceBlockStruct::BergQuickShatter(void)",
        ),
    ),
    (
        "MiniGameC3_Deinit__Fv",
        Ok(
            "MiniGameC3_Deinit(void)",
        ),
    ),
    (
        "SetZoom__12ZoomerangHud",
        Ok(
            "ZoomerangHud::SetZoom(void)",
        ),
    ),
    (
        "LoadLine__15StopwatchStructP12KromeIniLine",
        Ok(
            "StopwatchStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$14__si_type_info",
        Ok(
            "__si_type_info virtual table",
        ),
    ),
    (
        "_ipuVdec",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__7C3Chest",
        Ok(
            "C3Chest::Draw(void)",
        ),
    ),
    (
        "CollideWithEnvironment__10FrostyrangP15CollisionResult",
        Ok(
            "Frostyrang::CollideWithEnvironment(CollisionResult *)",
        ),
    ),
    (
        "fopen",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__9ShadowBat",
        Ok(
            "ShadowBat::LogicUpdate(void)",
        ),
    ),
    (
        "Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::Deinit(void)",
        ),
    ),
    (
        "FrontEnd_MainMenu_Update__Fv",
        Ok(
            "FrontEnd_MainMenu_Update(void)",
        ),
    ),
    (
        "Update__8Talisman",
        Ok(
            "Talisman::Update(void)",
        ),
    ),
    (
        "ArePointsWithinAndAdjacent__14BoundingRegionP6VectorT1",
        Ok(
            "BoundingRegion::ArePointsWithinAndAdjacent(Vector *, Vector *)",
        ),
    ),
    (
        "InitRecover__5Rhino",
        Ok(
            "Rhino::InitRecover(void)",
        ),
    ),
    (
        "Reset__7BossHud",
        Ok(
            "BossHud::Reset(void)",
        ),
    ),
    (
        "Message__6GasJetP9MKMessage",
        Ok(
            "GasJet::Message(MKMessage *)",
        ),
    ),
    (
        "sceIoctl2",
        Err(
            NotMangled,
        ),
    ),
    (
        "get_interface_id",
        Err(
            NotMangled,
        ),
    ),
    (
        "Blitter_Line3D_Init_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Stop__6Wombat",
        Ok(
            "Wombat::Stop(void)",
        ),
    ),
    (
        "RepairPipeInit__11FrillLizard",
        Ok(
            "FrillLizard::RepairPipeInit(void)",
        ),
    ),
    (
        "TyMemCard_SetState__F14TyMemCardStatei",
        Ok(
            "TyMemCard_SetState(TyMemCardState, int)",
        ),
    ),
    (
        "Deinit__8GameData",
        Ok(
            "GameData::Deinit(void)",
        ),
    ),
    (
        "Open__7Furnace",
        Ok(
            "Furnace::Open(void)",
        ),
    ),
    (
        "AntHill_Next__FP7AntHill",
        Ok(
            "AntHill_Next(AntHill *)",
        ),
    ),
    (
        "InitDeath__7BushPig",
        Ok(
            "BushPig::InitDeath(void)",
        ),
    ),
    (
        "Tools_LinePlaneIntersection__FP6VectorT0T0T0",
        Ok(
            "Tools_LinePlaneIntersection(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "AddOcclusionModel__14MKSceneManagerP5Model",
        Ok(
            "MKSceneManager::AddOcclusionModel(Model *)",
        ),
    ),
    (
        "PatrolInit__10SnowSpider",
        Ok(
            "SnowSpider::PatrolInit(void)",
        ),
    ),
    (
        "Assign__4MothP13CritterField2",
        Ok(
            "Moth::Assign(CritterField2 *)",
        ),
    ),
    (
        "DrawPath__18BezierPathFollowerf",
        Ok(
            "BezierPathFollower::DrawPath(float)",
        ),
    ),
    (
        "Moving__4Jeep",
        Ok(
            "Jeep::Moving(void)",
        ),
    ),
    (
        "data",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Deinit(void)",
        ),
    ),
    (
        "Hud_LoadResources__Fv",
        Ok(
            "Hud_LoadResources(void)",
        ),
    ),
    (
        "_8FireDrum$nFlameRef",
        Ok(
            "FireDrum::nFlameRef",
        ),
    ),
    (
        "sceMcRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "Dialog_LoadResources__FP8KromeIni",
        Ok(
            "Dialog_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Message__12KidObjectiveP9MKMessage",
        Ok(
            "KidObjective::Message(MKMessage *)",
        ),
    ),
    (
        "IdleInit__8RingoArm",
        Ok(
            "RingoArm::IdleInit(void)",
        ),
    ),
    (
        "PlayerAdjust_Init__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjust_Init(void)",
        ),
    ),
    (
        "_vt$15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp virtual table",
        ),
    ),
    (
        "Basket_SpawnBonus__FP6Vector",
        Ok(
            "Basket_SpawnBonus(Vector *)",
        ),
    ),
    (
        "Assign__4IbisP13CritterField2",
        Ok(
            "Ibis::Assign(CritterField2 *)",
        ),
    ),
    (
        "Update__11MKWaterProp",
        Ok(
            "MKWaterProp::Update(void)",
        ),
    ),
    (
        "DeathDeinit__9Barracuda",
        Ok(
            "Barracuda::DeathDeinit(void)",
        ),
    ),
    (
        "Idle__9FrillBike",
        Ok(
            "FrillBike::Idle(void)",
        ),
    ),
    (
        "InitializeGame__Fv",
        Ok(
            "InitializeGame(void)",
        ),
    ),
    (
        "SneakState__5TyFSMi",
        Ok(
            "TyFSM::SneakState(int)",
        ),
    ),
    (
        "MKShadow_SetMetreScale__Ff",
        Ok(
            "MKShadow_SetMetreScale(float)",
        ),
    ),
    (
        "TurnAround__5Rhino",
        Ok(
            "Rhino::TurnAround(void)",
        ),
    ),
    (
        "AnimatingCamera_Update__10GameCamera",
        Ok(
            "GameCamera::AnimatingCamera_Update(void)",
        ),
    ),
    (
        "bStopwatchLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResetDrownTimer__2Ty",
        Ok(
            "Ty::ResetDrownTimer(void)",
        ),
    ),
    (
        "memset",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_KickUpDust_Init__FPP14ParticleSystemP6Vectorf",
        Ok(
            "Particle_KickUpDust_Init(ParticleSystem **, Vector *, float)",
        ),
    ),
    (
        "DeinitBreakAndTurn__2Ty",
        Ok(
            "Ty::DeinitBreakAndTurn(void)",
        ),
    ),
    (
        "__ieee754_sqrtf",
        Err(
            InvalidSpecialMethod(
                "ieee754_sqrtf",
            ),
        ),
    ),
    (
        "AutoPlayerAdjust_Deinit__10GameCamera",
        Ok(
            "GameCamera::AutoPlayerAdjust_Deinit(void)",
        ),
    ),
    (
        "Assign__4FrogP13CritterField2",
        Ok(
            "Frog::Assign(CritterField2 *)",
        ),
    ),
    (
        "Tools_SideOfLine2D__FP6VectorT0T0",
        Ok(
            "Tools_SideOfLine2D(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "_lastFrame",
        Err(
            NotMangled,
        ),
    ),
    (
        "dcast__C14__si_type_infoRC9type_infoiPvPC9type_infoT3",
        Ok(
            "__si_type_info::dcast(type_info const &, int, void *, type_info const *, void *) const",
        ),
    ),
    (
        "IsTyInZone__14TriggerBoxProp",
        Ok(
            "TriggerBoxProp::IsTyInZone(void)",
        ),
    ),
    (
        "LassoCaughtEmu__5Lasso",
        Ok(
            "Lasso::LassoCaughtEmu(void)",
        ),
    ),
    (
        "DeinitModule__7Texture",
        Ok(
            "Texture::DeinitModule(void)",
        ),
    ),
    (
        "GenerateInitialPosition__9SmallCrab",
        Ok(
            "SmallCrab::GenerateInitialPosition(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10TyFlyFieldPv",
        Ok(
            "ModuleInfo<TyFlyField>::ConstructObject(void *)",
        ),
    ),
    (
        "SetState__19SpecialPickupStruct18SpecialPickupStateb",
        Ok(
            "SpecialPickupStruct::SetState(SpecialPickupState, bool)",
        ),
    ),
    (
        "Tools_CapsuleTest__FP6VectorT0T0fb",
        Ok(
            "Tools_CapsuleTest(Vector *, Vector *, Vector *, float, bool)",
        ),
    ),
    (
        "Game_InitSystem__Fv",
        Ok(
            "Game_InitSystem(void)",
        ),
    ),
    (
        "_7SnowGun$animIdle",
        Ok(
            "SnowGun::animIdle",
        ),
    ),
    (
        "GrabbingInit__8RingoArm",
        Ok(
            "RingoArm::GrabbingInit(void)",
        ),
    ),
    (
        "TyMemCard_AutoSaveGame__Fv",
        Ok(
            "TyMemCard_AutoSaveGame(void)",
        ),
    ),
    (
        "Reset__8RingoArm",
        Ok(
            "RingoArm::Reset(void)",
        ),
    ),
    (
        "DownInit__8RingoArm",
        Ok(
            "RingoArm::DownInit(void)",
        ),
    ),
    (
        "TyMemCard_String__Fi",
        Ok(
            "TyMemCard_String(int)",
        ),
    ),
    (
        "SoundBank_PlayMusic__F9MusicTypeff",
        Ok(
            "SoundBank_PlayMusic(MusicType, float, float)",
        ),
    ),
    (
        "GameCamera_UseEnemyCamera__Fb",
        Ok(
            "GameCamera_UseEnemyCamera(bool)",
        ),
    ),
    (
        "SpawnParticles__11AirPlatformP6Vector",
        Ok(
            "AirPlatform::SpawnParticles(Vector *)",
        ),
    ),
    (
        "NextPoint__11PathManagerb",
        Ok(
            "PathManager::NextPoint(bool)",
        ),
    ),
    (
        "main",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKShadow_CreateAnimatedFromModel__FPc",
        Ok(
            "MKShadow_CreateAnimatedFromModel(char *)",
        ),
    ),
    (
        "SpecialPickup_ShowAll__Fv",
        Ok(
            "SpecialPickup_ShowAll(void)",
        ),
    ),
    (
        "GetInverseScaleValue__5Modeli",
        Ok(
            "Model::GetInverseScaleValue(int)",
        ),
    ),
    (
        "BlueTongueRock_LoadResources__FP8KromeIni",
        Ok(
            "BlueTongueRock_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_9Speedboat$propNode",
        Ok(
            "Speedboat::propNode",
        ),
    ),
    (
        "Ty_Init__Fv",
        Ok(
            "Ty_Init(void)",
        ),
    ),
    (
        "__eh_free",
        Err(
            InvalidSpecialMethod(
                "eh_free",
            ),
        ),
    ),
    (
        "Collision_Draw__Fv",
        Ok(
            "Collision_Draw(void)",
        ),
    ),
    (
        "SetCounterTexture__13PickupCounter",
        Ok(
            "PickupCounter::SetCounterTexture(void)",
        ),
    ),
    (
        "Draw_DrawPostDrawModels__Fb",
        Ok(
            "Draw_DrawPostDrawModels(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$SynkerFrillLizard_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SynkerFrillLizard_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceFsInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Neddy",
        Ok(
            "ModuleInfo<Neddy>::Init(void)",
        ),
    ),
    (
        "_GLOBAL_$I$LoadDone__14FishShoalField",
        Ok(
            "global constructors keyed to FishShoalField::LoadDone(void)",
        ),
    ),
    (
        "Alert__8LilNeddy",
        Ok(
            "LilNeddy::Alert(void)",
        ),
    ),
    (
        "AttachInit__5Leech",
        Ok(
            "Leech::AttachInit(void)",
        ),
    ),
    (
        "WalkToWaypoint__11FrillLizard",
        Ok(
            "FrillLizard::WalkToWaypoint(void)",
        ),
    ),
    (
        "AddGif_AD_BITBLTBUF__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_BITBLTBUF(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "AuroraKid_PathReset__Fv",
        Ok(
            "AuroraKid_PathReset(void)",
        ),
    ),
    (
        "Collect__3Gem",
        Ok(
            "Gem::Collect(void)",
        ),
    ),
    (
        "ChaseDeinit__6Wombat",
        Ok(
            "Wombat::ChaseDeinit(void)",
        ),
    ),
    (
        "Deinit__7Wallaby",
        Ok(
            "Wallaby::Deinit(void)",
        ),
    ),
    (
        "Weather_SetType__Fi",
        Ok(
            "Weather_SetType(int)",
        ),
    ),
    (
        "LogicUpdate__4Bull",
        Ok(
            "Bull::LogicUpdate(void)",
        ),
    ),
    (
        "Update__14HealthLivesHud",
        Ok(
            "HealthLivesHud::Update(void)",
        ),
    ),
    (
        "Message__9OpalCrateP9MKMessage",
        Ok(
            "OpalCrate::Message(MKMessage *)",
        ),
    ),
    (
        "__cp_pop_exception",
        Err(
            InvalidSpecialMethod(
                "cp_pop_exception",
            ),
        ),
    ),
    (
        "SMOKE_SOURCE_R",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__9SoundProp",
        Ok(
            "SoundProp::Deinit(void)",
        ),
    ),
    (
        "LobbingBarrel__9Speedboat",
        Ok(
            "Speedboat::LobbingBarrel(void)",
        ),
    ),
    (
        "LogicUpdate__9FrillBike",
        Ok(
            "FrillBike::LogicUpdate(void)",
        ),
    ),
    (
        "GetTime__14MobilePlatform",
        Ok(
            "MobilePlatform::GetTime(void)",
        ),
    ),
    (
        "ModelRender_ACWX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitWallTransition__7BushPig",
        Ok(
            "BushPig::HitWallTransition(void)",
        ),
    ),
    (
        "Str_Dup__FPc",
        Ok(
            "Str_Dup(char *)",
        ),
    ),
    (
        "On__9Generator",
        Ok(
            "Generator::On(void)",
        ),
    ),
    (
        "ShowAll__16BoomerangManager",
        Ok(
            "BoomerangManager::ShowAll(void)",
        ),
    ),
    (
        "IdleInit__10SnowSpider",
        Ok(
            "SnowSpider::IdleInit(void)",
        ),
    ),
    (
        "Flinch__3Bat",
        Ok(
            "Bat::Flinch(void)",
        ),
    ),
    (
        "Outro__6Portal",
        Ok(
            "Portal::Outro(void)",
        ),
    ),
    (
        "Tools_PlaneTest__FP6VectorT0T0",
        Ok(
            "Tools_PlaneTest(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "__malloc_max_total_mem",
        Err(
            InvalidSpecialMethod(
                "malloc_max_total_mem",
            ),
        ),
    ),
    (
        "sceSifAllocSysMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "ReachedTarget_Update__6Dennis",
        Ok(
            "Dennis::ReachedTarget_Update(void)",
        ),
    ),
    (
        "SpawnWaterfallSplash__15WaterfallStructP6VectorT1ifP16Blitter_ParticlePQ215WaterfallStruct10SplashData",
        Ok(
            "WaterfallStruct::SpawnWaterfallSplash(Vector *, Vector *, int, float, Blitter_Particle *, WaterfallStruct::SplashData *)",
        ),
    ),
    (
        "EnableAndInitOverride__21CameraOverrideManagerP14CameraOverrideP16CameraDescriptor",
        Ok(
            "CameraOverrideManager::EnableAndInitOverride(CameraOverride *, CameraDescriptor *)",
        ),
    ),
    (
        "GetClosestObjectInRange__17GameObjectManagerP6Vectorfi",
        Ok(
            "GameObjectManager::GetClosestObjectInRange(Vector *, float, int)",
        ),
    ),
    (
        "LoadDone__7CaveBat",
        Ok(
            "CaveBat::LoadDone(void)",
        ),
    ),
    (
        "Init__13UniformSplineib",
        Ok(
            "UniformSpline::Init(int, bool)",
        ),
    ),
    (
        "Swim__2Ty",
        Ok(
            "Ty::Swim(void)",
        ),
    ),
    (
        "Init__10TotalCount",
        Ok(
            "TotalCount::Init(void)",
        ),
    ),
    (
        "IsStripLowDetail__11MKWaterPropP16WaterStripHeader",
        Ok(
            "MKWaterProp::IsStripLowDetail(WaterStripHeader *)",
        ),
    ),
    (
        "AttackTy__8WhiteBat",
        Ok(
            "WhiteBat::AttackTy(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12AquarangPropPv",
        Ok(
            "ModuleInfo<AquarangProp>::ConstructObject(void *)",
        ),
    ),
    (
        "CrashDeinit__9FrillBike",
        Ok(
            "FrillBike::CrashDeinit(void)",
        ),
    ),
    (
        "Bitten_Init__9BadBoonie",
        Ok(
            "BadBoonie::Bitten_Init(void)",
        ),
    ),
    (
        "Multiply__12QuatRotationP12QuatRotation",
        Ok(
            "QuatRotation::Multiply(QuatRotation *)",
        ),
    ),
    (
        "GetStandardSourceHeight__10GameCamerab",
        Ok(
            "GameCamera::GetStandardSourceHeight(bool)",
        ),
    ),
    (
        "Idle__3Rex",
        Ok(
            "Rex::Idle(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13CritterField2",
        Ok(
            "ModuleInfo<CritterField2>::Init(void)",
        ),
    ),
    (
        "__ti13bad_exception",
        Ok(
            "bad_exception type_info node",
        ),
    ),
    (
        "SetAnimation__5ModelP9Animation",
        Ok(
            "Model::SetAnimation(Animation *)",
        ),
    ),
    (
        "SetScale__7UIModelf",
        Ok(
            "UIModel::SetScale(float)",
        ),
    ),
    (
        "_9FrillBike$nRopeAttach",
        Ok(
            "FrillBike::nRopeAttach",
        ),
    ),
    (
        "buttons",
        Err(
            NotMangled,
        ),
    ),
    (
        "LandMediumUpdate__2Ty",
        Ok(
            "Ty::LandMediumUpdate(void)",
        ),
    ),
    (
        "ShadowBatProps_LoadResources__FP8KromeIni",
        Ok(
            "ShadowBatProps_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PE_Goo_LoadResources__Fv",
        Ok(
            "PE_Goo_LoadResources(void)",
        ),
    ),
    (
        "sceSifSendCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tfd",
        Ok(
            "double type_info function",
        ),
    ),
    (
        "AddGif_AD_ZBUF_2__3DmaUlUlUl",
        Ok(
            "Dma::AddGif_AD_ZBUF_2(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "GetNmbrOfFaces__5Modeli",
        Ok(
            "Model::GetNmbrOfFaces(int)",
        ),
    ),
    (
        "Start__7BoulderP11BoulderTrap",
        Ok(
            "Boulder::Start(BoulderTrap *)",
        ),
    ),
    (
        "ModelRenderStub_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Mist_Deinit__Fv",
        Ok(
            "Mist_Deinit(void)",
        ),
    ),
    (
        "ClampPos__14FishShoalFieldP6Vector",
        Ok(
            "FishShoalField::ClampPos(Vector *)",
        ),
    ),
    (
        "File_Sync__Fii",
        Ok(
            "File_Sync(int, int)",
        ),
    ),
    (
        "UpdateTilt__8Platform",
        Ok(
            "Platform::UpdateTilt(void)",
        ),
    ),
    (
        "Attach__8PlatformP10GameObject",
        Ok(
            "Platform::Attach(GameObject *)",
        ),
    ),
    (
        "ResyncDma__7Texture",
        Ok(
            "Texture::ResyncDma(void)",
        ),
    ),
    (
        "GetAsyncHandle__6RkvTOC",
        Ok(
            "RkvTOC::GetAsyncHandle(void)",
        ),
    ),
    (
        "Reposition__6Camera11Camera_ModeP6VectorT2",
        Ok(
            "Camera::Reposition(Camera_Mode, Vector *, Vector *)",
        ),
    ),
    (
        "srand",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Reset(void)",
        ),
    ),
    (
        "LoadDone__3Emu",
        Ok(
            "Emu::LoadDone(void)",
        ),
    ),
    (
        "Jump__14WaterSlideData",
        Ok(
            "WaterSlideData::Jump(void)",
        ),
    ),
    (
        "_iEnableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "Rebound__10NinjaGecko",
        Ok(
            "NinjaGecko::Rebound(void)",
        ),
    ),
    (
        "Init__11MetalSpikesP11GameObjDesc",
        Ok(
            "MetalSpikes::Init(GameObjDesc *)",
        ),
    ),
    (
        "File_Write__FiPvi",
        Ok(
            "File_Write(int, void *, int)",
        ),
    ),
    (
        "GameCamera_LoadCameraINI__Fv",
        Ok(
            "GameCamera_LoadCameraINI(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10IceCoolantPv",
        Ok(
            "ModuleInfo<IceCoolant>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__6SpyEgg",
        Ok(
            "SpyEgg::Deinit(void)",
        ),
    ),
    (
        "InitWhomp__5Rhino",
        Ok(
            "Rhino::InitWhomp(void)",
        ),
    ),
    (
        "Deinit__6Crikey",
        Ok(
            "Crikey::Deinit(void)",
        ),
    ),
    (
        "LongFallTransition__2Ty",
        Ok(
            "Ty::LongFallTransition(void)",
        ),
    ),
    (
        "__ti9exception",
        Ok(
            "exception type_info node",
        ),
    ),
    (
        "Message__3SlyP9MKMessage",
        Ok(
            "Sly::Message(MKMessage *)",
        ),
    ),
    (
        "CheckForBushPig__11EnemyObject",
        Ok(
            "EnemyObject::CheckForBushPig(void)",
        ),
    ),
    (
        "Deinit__8Teleport",
        Ok(
            "Teleport::Deinit(void)",
        ),
    ),
    (
        "DoCatch__15BoomerangWeaponP9Boomerang",
        Ok(
            "BoomerangWeapon::DoCatch(Boomerang *)",
        ),
    ),
    (
        "DestroyParticleSystem__21ParticleSystemManagerP14ParticleSystem",
        Ok(
            "ParticleSystemManager::DestroyParticleSystem(ParticleSystem *)",
        ),
    ),
    (
        "Draw__6Crikey",
        Ok(
            "Crikey::Draw(void)",
        ),
    ),
    (
        "BonusPickup_Deinit__Fv",
        Ok(
            "BonusPickup_Deinit(void)",
        ),
    ),
    (
        "Rotate__4TickP6Vector",
        Ok(
            "Tick::Rotate(Vector *)",
        ),
    ),
    (
        "MoveInit__4Tick",
        Ok(
            "Tick::MoveInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Speedboat",
        Ok(
            "ModuleInfo<Speedboat> virtual table",
        ),
    ),
    (
        "Load__21ShatterableDescriptorP8KromeIni",
        Ok(
            "ShatterableDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "Brake__7BushPig",
        Ok(
            "BushPig::Brake(void)",
        ),
    ),
    (
        "__get_eh_table_language",
        Err(
            InvalidSpecialMethod(
                "get_eh_table_language",
            ),
        ),
    ),
    (
        "npmPuts__FPc",
        Ok(
            "npmPuts(char *)",
        ),
    ),
    (
        "Init__6AuroraP11GameObjDesc",
        Ok(
            "Aurora::Init(GameObjDesc *)",
        ),
    ),
    (
        "DropEgg__11ScrubTurkey",
        Ok(
            "ScrubTurkey::DropEgg(void)",
        ),
    ),
    (
        "DeadInit__6Fluffy",
        Ok(
            "Fluffy::DeadInit(void)",
        ),
    ),
    (
        "FlyBack__7CaveBat",
        Ok(
            "CaveBat::FlyBack(void)",
        ),
    ),
    (
        "UpdateMovement__6Wombat",
        Ok(
            "Wombat::UpdateMovement(void)",
        ),
    ),
    (
        "PatrolInit__8PubeCrab",
        Ok(
            "PubeCrab::PatrolInit(void)",
        ),
    ),
    (
        "Spit__6Groper",
        Ok(
            "Groper::Spit(void)",
        ),
    ),
    (
        "Reset__15StopwatchStruct",
        Ok(
            "StopwatchStruct::Reset(void)",
        ),
    ),
    (
        "Reset__11CrateStruct",
        Ok(
            "CrateStruct::Reset(void)",
        ),
    ),
    (
        "Draw__18SpeedboatObjective",
        Ok(
            "SpeedboatObjective::Draw(void)",
        ),
    ),
    (
        "GetPositionAlongPath__18BezierPathFollowerP6Vector",
        Ok(
            "BezierPathFollower::GetPositionAlongPath(Vector *)",
        ),
    ),
    (
        "CheckCollisions__15CollisionObjectP6VectorT1P15CollisionResult",
        Ok(
            "CollisionObject::CheckCollisions(Vector *, Vector *, CollisionResult *)",
        ),
    ),
    (
        "TyMemCard_GetQueryType__Fv",
        Ok(
            "TyMemCard_GetQueryType(void)",
        ),
    ),
    (
        "Draw__14BoomerangTrail",
        Ok(
            "BoomerangTrail::Draw(void)",
        ),
    ),
    (
        "Miss__4Tick",
        Ok(
            "Tick::Miss(void)",
        ),
    ),
    (
        "Assign__8Critter2P13CritterField2",
        Ok(
            "Critter2::Assign(CritterField2 *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8SentinelPv",
        Ok(
            "ModuleInfo<Sentinel>::ConstructObject(void *)",
        ),
    ),
    (
        "HeatFlare_Init__Fv",
        Ok(
            "HeatFlare_Init(void)",
        ),
    ),
    (
        "UpdateHorzVel__2Tyf",
        Ok(
            "Ty::UpdateHorzVel(float)",
        ),
    ),
    (
        "_ulp",
        Err(
            NotMangled,
        ),
    ),
    (
        "FrontEnd_NewGame_OnExit__Fv",
        Ok(
            "FrontEnd_NewGame_OnExit(void)",
        ),
    ),
    (
        "Flinch__8RingoArm",
        Ok(
            "RingoArm::Flinch(void)",
        ),
    ),
    (
        "HeadTurningCallback__Fv",
        Ok(
            "HeadTurningCallback(void)",
        ),
    ),
    (
        "ascii_special",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__8SentinelP11GameObjDesc",
        Ok(
            "Sentinel::Init(GameObjDesc *)",
        ),
    ),
    (
        "FrontEnd_NewGame_Draw__Fv",
        Ok(
            "FrontEnd_NewGame_Draw(void)",
        ),
    ),
    (
        "InitGrab__15LedgePullUpData",
        Ok(
            "LedgePullUpData::InitGrab(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Lenny",
        Ok(
            "ModuleInfo<Lenny>::Init(void)",
        ),
    ),
    (
        "gpDebugFont",
        Err(
            NotMangled,
        ),
    ),
    (
        "Projection__6VectorP6VectorT1",
        Ok(
            "Vector::Projection(Vector *, Vector *)",
        ),
    ),
    (
        "__eq__C9type_infoRC9type_info",
        Ok(
            "type_info::operator==(type_info const &) const",
        ),
    ),
    (
        "LandMediumDeinit__2Ty",
        Ok(
            "Ty::LandMediumDeinit(void)",
        ),
    ),
    (
        "ModelRender_ACW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Falling__7Coconut",
        Ok(
            "Coconut::Falling(void)",
        ),
    ),
    (
        "Debug__5Leech",
        Ok(
            "Leech::Debug(void)",
        ),
    ),
    (
        "StableReposition__7BushPigP6VectorT1",
        Ok(
            "BushPig::StableReposition(Vector *, Vector *)",
        ),
    ),
    (
        "Draw_AddPostDrawModel__FP5Modelfb",
        Ok(
            "Draw_AddPostDrawModel(Model *, float, bool)",
        ),
    ),
    (
        "_GLOBAL_$I$Bird_LoadResources__Fv",
        Ok(
            "global constructors keyed to Bird_LoadResources(void)",
        ),
    ),
    (
        "AnimateRetreat__5Skinkb",
        Ok(
            "Skink::AnimateRetreat(bool)",
        ),
    ),
    (
        "LogicUpdate__3Sly",
        Ok(
            "Sly::LogicUpdate(void)",
        ),
    ),
    (
        "pUnderlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$16__ptmd_type_info",
        Ok(
            "__ptmd_type_info virtual table",
        ),
    ),
    (
        "EIntr",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__5Leech",
        Ok(
            "Leech::Reset(void)",
        ),
    ),
    (
        "UpdateIcePhysics__2TyG6VectorT1T1",
        Ok(
            "Ty::UpdateIcePhysics(Vector, Vector, Vector)",
        ),
    ),
    (
        "CheckForPositionChange__7BushPig",
        Ok(
            "BushPig::CheckForPositionChange(void)",
        ),
    ),
    (
        "SharkCageEnterInit__2Ty",
        Ok(
            "Ty::SharkCageEnterInit(void)",
        ),
    ),
    (
        "_vt$7IceRamp",
        Ok(
            "IceRamp virtual table",
        ),
    ),
    (
        "Inverse__6Matrix",
        Ok(
            "Matrix::Inverse(void)",
        ),
    ),
    (
        "RenderTexture_LavaEnd__Fv",
        Ok(
            "RenderTexture_LavaEnd(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7PontoonPv",
        Ok(
            "ModuleInfo<Pontoon>::ConstructObject(void *)",
        ),
    ),
    (
        "InitExit__14WaterSlideData",
        Ok(
            "WaterSlideData::InitExit(void)",
        ),
    ),
    (
        "SharkCageLeaveDeinit__2Ty",
        Ok(
            "Ty::SharkCageLeaveDeinit(void)",
        ),
    ),
    (
        "GetTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "_kDebugException",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKMemoryCard_UnFormat__Fi",
        Ok(
            "MKMemoryCard_UnFormat(int)",
        ),
    ),
    (
        "Update__8Sentinel",
        Ok(
            "Sentinel::Update(void)",
        ),
    ),
    (
        "IceCoolant_LoadResources__FP8KromeIni",
        Ok(
            "IceCoolant_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Hurt__6Crikey",
        Ok(
            "Crikey::Hurt(void)",
        ),
    ),
    (
        "LoadDone__11DropPontoon",
        Ok(
            "DropPontoon::LoadDone(void)",
        ),
    ),
    (
        "DeinitializeLevel__Fv",
        Ok(
            "DeinitializeLevel(void)",
        ),
    ),
    (
        "Create__7TexturePc",
        Ok(
            "Texture::Create(char *)",
        ),
    ),
    (
        "Gem_ParticleSystem_Deinit__Fv",
        Ok(
            "Gem_ParticleSystem_Deinit(void)",
        ),
    ),
    (
        "_8Teleport$pMat",
        Ok(
            "Teleport::pMat",
        ),
    ),
    (
        "Message__8LilNeddyP9MKMessage",
        Ok(
            "LilNeddy::Message(MKMessage *)",
        ),
    ),
    (
        "CollectingInit__11BonusPickup",
        Ok(
            "BonusPickup::CollectingInit(void)",
        ),
    ),
    (
        "LoadLine__16CheckpointStructP12KromeIniLine",
        Ok(
            "CheckpointStruct::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Input_StopAllVibration__Fv",
        Ok(
            "Input_StopAllVibration(void)",
        ),
    ),
    (
        "ModelRender_FLWX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "AsciiString2Sjis__FPcPUs",
        Ok(
            "AsciiString2Sjis(char *, unsigned short *)",
        ),
    ),
    (
        "DieInit__4Bull",
        Ok(
            "Bull::DieInit(void)",
        ),
    ),
    (
        "DeinitDrag__3Emu",
        Ok(
            "Emu::DeinitDrag(void)",
        ),
    ),
    (
        "Reset__15Tools_WayPoints",
        Ok(
            "Tools_WayPoints::Reset(void)",
        ),
    ),
    (
        "_vt$13BoomerangDesc",
        Ok(
            "BoomerangDesc virtual table",
        ),
    ),
    (
        "JumpInit__10SnowSpider",
        Ok(
            "SnowSpider::JumpInit(void)",
        ),
    ),
    (
        "DeinitSurfacing__2Ty",
        Ok(
            "Ty::DeinitSurfacing(void)",
        ),
    ),
    (
        "GetOsdConfigParam2",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetCurrentZBUF__4Viewbb",
        Ok(
            "View::GetCurrentZBUF(bool, bool)",
        ),
    ),
    (
        "Race__6Wombat",
        Ok(
            "Wombat::Race(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7SnowRoo",
        Ok(
            "ModuleInfo<SnowRoo>::Init(void)",
        ),
    ),
    (
        "CountSoundMaterials__10SoundEventP8KromeIni",
        Ok(
            "SoundEvent::CountSoundMaterials(KromeIni *)",
        ),
    ),
    (
        "UnderWaterToWaterTransition__2Ty",
        Ok(
            "Ty::UnderWaterToWaterTransition(void)",
        ),
    ),
    (
        "ChargeInit__5Neddy",
        Ok(
            "Neddy::ChargeInit(void)",
        ),
    ),
    (
        "Reset__12EnemySpawner",
        Ok(
            "EnemySpawner::Reset(void)",
        ),
    ),
    (
        "ClearVelocities__10GameCamera",
        Ok(
            "GameCamera::ClearVelocities(void)",
        ),
    ),
    (
        "UpdateModules__17GameObjectManager",
        Ok(
            "GameObjectManager::UpdateModules(void)",
        ),
    ),
    (
        "__sclose",
        Err(
            InvalidSpecialMethod(
                "sclose",
            ),
        ),
    ),
    (
        "_7Furnace$fTempDelta",
        Ok(
            "Furnace::fTempDelta",
        ),
    ),
    (
        "sceInetInterfaceControl",
        Err(
            NotMangled,
        ),
    ),
    (
        "matherr",
        Err(
            NotMangled,
        ),
    ),
    (
        "CameraOverrideSpiral_Reset__Fv",
        Ok(
            "CameraOverrideSpiral_Reset(void)",
        ),
    ),
    (
        "Tools_RayToVertCyl__FP6VectorT0T0ff",
        Ok(
            "Tools_RayToVertCyl(Vector *, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "collisionHeapSize",
        Err(
            NotMangled,
        ),
    ),
    (
        "Ram__9FrillBike",
        Ok(
            "FrillBike::Ram(void)",
        ),
    ),
    (
        "_vt$5Roach",
        Ok(
            "Roach virtual table",
        ),
    ),
    (
        "miniGame_C3_DDA",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_GroundColor__FP15CollisionResult",
        Ok(
            "Tools_GroundColor(CollisionResult *)",
        ),
    ),
    (
        "ChargeInit__5Shark",
        Ok(
            "Shark::ChargeInit(void)",
        ),
    ),
    (
        "Deinit__7UIImage",
        Ok(
            "UIImage::Deinit(void)",
        ),
    ),
    (
        "DeathInit__3Eel",
        Ok(
            "Eel::DeathInit(void)",
        ),
    ),
    (
        "Deinit__13CritterField2",
        Ok(
            "CritterField2::Deinit(void)",
        ),
    ),
    (
        "_vt$15TurningPlatform",
        Ok(
            "TurningPlatform virtual table",
        ),
    ),
    (
        "Draw__8KoalaKid",
        Ok(
            "KoalaKid::Draw(void)",
        ),
    ),
    (
        "mallopt",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitWorld__10FrostyrangP6Vectori",
        Ok(
            "Frostyrang::HitWorld(Vector *, int)",
        ),
    ),
    (
        "LoadDescriptors__H1Z14GateDescriptor_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<GateDescriptor>(KromeIni *, char *, GateDescriptor *)",
        ),
    ),
    (
        "LoadDone__6Groper",
        Ok(
            "Groper::LoadDone(void)",
        ),
    ),
    (
        "KnockBackState__5TyFSMi",
        Ok(
            "TyFSM::KnockBackState(int)",
        ),
    ),
    (
        "Main_UpdateGlobalGameCameraHeroInfo__Fv",
        Ok(
            "Main_UpdateGlobalGameCameraHeroInfo(void)",
        ),
    ),
    (
        "sceDmaDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "fclose",
        Err(
            NotMangled,
        ),
    ),
    (
        "setPolyBoundingRect__14BoundingRegionP6RectXZP11PathSegment",
        Ok(
            "BoundingRegion::setPolyBoundingRect(RectXZ *, PathSegment *)",
        ),
    ),
    (
        "Spawn__3Gem",
        Ok(
            "Gem::Spawn(void)",
        ),
    ),
    (
        "_GLOBAL_$I$projectileModule",
        Ok(
            "global constructors keyed to projectileModule",
        ),
    ),
    (
        "GetPreviousNode__18BezierPathFollower",
        Ok(
            "BezierPathFollower::GetPreviousNode(void)",
        ),
    ),
    (
        "Idle__9Speedboat",
        Ok(
            "Speedboat::Idle(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Ibis",
        Ok(
            "ModuleInfo<Ibis> virtual table",
        ),
    ),
    (
        "_vt$12TyAttributes",
        Ok(
            "TyAttributes virtual table",
        ),
    ),
    (
        "_7MKWater$radiusDraw",
        Ok(
            "MKWater::radiusDraw",
        ),
    ),
    (
        "_strtol_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "SaveStates_SetLevelUnlocked__FPc",
        Ok(
            "SaveStates_SetLevelUnlocked(char *)",
        ),
    ),
    (
        "ShouldSlip__14WaterSlideData",
        Ok(
            "WaterSlideData::ShouldSlip(void)",
        ),
    ),
    (
        "_vt$13SmallCrabDesc",
        Ok(
            "SmallCrabDesc virtual table",
        ),
    ),
    (
        "Init__15WaterTankStructP11GameObjDesc",
        Ok(
            "WaterTankStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "__9type_infoPCc",
        Ok(
            "type_info::type_info(char const *)",
        ),
    ),
    (
        "Load__20SynkerBlueTongueDescP8KromeIni",
        Ok(
            "SynkerBlueTongueDesc::Load(KromeIni *)",
        ),
    ),
    (
        "GetClosestWaypoint__14EnemyWaypointsP6Vector",
        Ok(
            "EnemyWaypoints::GetClosestWaypoint(Vector *)",
        ),
    ),
    (
        "InSharkCageInit__2Ty",
        Ok(
            "Ty::InSharkCageInit(void)",
        ),
    ),
    (
        "Sheila_LoadResources__FP8KromeIni",
        Ok(
            "Sheila_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14TriggerBoxProp",
        Ok(
            "ModuleInfo<TriggerBoxProp>::Init(void)",
        ),
    ),
    (
        "SplatOnGround__7BushPig",
        Ok(
            "BushPig::SplatOnGround(void)",
        ),
    ),
    (
        "LoadDone__4Jeep",
        Ok(
            "Jeep::LoadDone(void)",
        ),
    ),
    (
        "_vt$9exception",
        Ok(
            "exception virtual table",
        ),
    ),
    (
        "FlyInInit__6Maurie",
        Ok(
            "Maurie::FlyInInit(void)",
        ),
    ),
    (
        "Bunyip_Draw__Fv",
        Ok(
            "Bunyip_Draw(void)",
        ),
    ),
    (
        "AddShadowLight__2TyP6Vectorf",
        Ok(
            "Ty::AddShadowLight(Vector *, float)",
        ),
    ),
    (
        "IdleEdgeWobble__2Ty",
        Ok(
            "Ty::IdleEdgeWobble(void)",
        ),
    ),
    (
        "GetMaterialIni__8Material",
        Ok(
            "Material::GetMaterialIni(void)",
        ),
    ),
    (
        "WalkInit__3Sly",
        Ok(
            "Sly::WalkInit(void)",
        ),
    ),
    (
        "Hidden__11Collapsible",
        Ok(
            "Collapsible::Hidden(void)",
        ),
    ),
    (
        "Init__10HudCounteri",
        Ok(
            "HudCounter::Init(int)",
        ),
    ),
    (
        "UpdateShadow__11CrateStructb",
        Ok(
            "CrateStruct::UpdateShadow(bool)",
        ),
    ),
    (
        "sceSifSetSysCmdBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::LogicUpdate(void)",
        ),
    ),
    (
        "ReceiveOpalLifeup__8GameData",
        Ok(
            "GameData::ReceiveOpalLifeup(void)",
        ),
    ),
    (
        "InitThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Model_UpdateProfileData__Fv",
        Ok(
            "Model_UpdateProfileData(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Sly",
        Ok(
            "ModuleInfo<Sly> virtual table",
        ),
    ),
    (
        "GetDesc__3Fly",
        Ok(
            "Fly::GetDesc(void)",
        ),
    ),
    (
        "TurnRunInit__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::TurnRunInit(void)",
        ),
    ),
    (
        "Heap_AllocHeapProfile__FPviPcT2",
        Ok(
            "Heap_AllocHeapProfile(void *, int, char *, char *)",
        ),
    ),
    (
        "LogicUpdate__8LilNeddy",
        Ok(
            "LilNeddy::LogicUpdate(void)",
        ),
    ),
    (
        "_8FireDrum$pFlameMat",
        Ok(
            "FireDrum::pFlameMat",
        ),
    ),
    (
        "_14MobilePlatform$mpfLoadInfo",
        Ok(
            "MobilePlatform::mpfLoadInfo",
        ),
    ),
    (
        "Bunyip_Update__Fv",
        Ok(
            "Bunyip_Update(void)",
        ),
    ),
    (
        "_dtoa_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14StalactiteTrapP11GameObjDesc",
        Ok(
            "StalactiteTrap::Init(GameObjDesc *)",
        ),
    ),
    (
        "DeinitFindItem__2Ty",
        Ok(
            "Ty::DeinitFindItem(void)",
        ),
    ),
    (
        "_malloc_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "moduleInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "Use__10GameCamerab",
        Ok(
            "GameCamera::Use(bool)",
        ),
    ),
    (
        "LoadLine__9SoundPropP12KromeIniLine",
        Ok(
            "SoundProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SolidSurfaceState__5TyFSMi",
        Ok(
            "TyFSM::SolidSurfaceState(int)",
        ),
    ),
    (
        "RFU116",
        Err(
            NotMangled,
        ),
    ),
    (
        "Heap_MemFreeAligned__FPv",
        Ok(
            "Heap_MemFreeAligned(void *)",
        ),
    ),
    (
        "Init__10ProjectileP11GameObjDesc",
        Ok(
            "Projectile::Init(GameObjDesc *)",
        ),
    ),
    (
        "SplatOnGroundTransition__7BushPig",
        Ok(
            "BushPig::SplatOnGroundTransition(void)",
        ),
    ),
    (
        "Init__8LilNeddyP11GameObjDesc",
        Ok(
            "LilNeddy::Init(GameObjDesc *)",
        ),
    ),
    (
        "_6Spider$moveInfo",
        Ok(
            "Spider::moveInfo",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Aquarang",
        Ok(
            "ModuleInfo<Aquarang> virtual table",
        ),
    ),
    (
        "_mallopt_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Gem_GetCount__Fv",
        Ok(
            "Gem_GetCount(void)",
        ),
    ),
    (
        "Message__6BurnerP9MKMessage",
        Ok(
            "Burner::Message(MKMessage *)",
        ),
    ),
    (
        "AsString__12KromeIniLineiPPc",
        Ok(
            "KromeIniLine::AsString(int, char **)",
        ),
    ),
    (
        "Dialog_Play__Fib",
        Ok(
            "Dialog_Play(int, bool)",
        ),
    ),
    (
        "Hud_ResetZoomerangProjection__Fv",
        Ok(
            "Hud_ResetZoomerangProjection(void)",
        ),
    ),
    (
        "PauseScreen_OptionControls_Update__Fv",
        Ok(
            "PauseScreen_OptionControls_Update(void)",
        ),
    ),
    (
        "fpsub",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaGetChan",
        Err(
            NotMangled,
        ),
    ),
    (
        "Normal_Update__10GameCamera",
        Ok(
            "GameCamera::Normal_Update(void)",
        ),
    ),
    (
        "_vt$14BlitterCritter",
        Ok(
            "BlitterCritter virtual table",
        ),
    ),
    (
        "Init__5FlameP6VectorP14BoundingVolumef",
        Ok(
            "Flame::Init(Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "Init__10ScriptPropP11GameObjDesc",
        Ok(
            "ScriptProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Tools_GetPYR__FP6MatrixPfT1T1",
        Ok(
            "Tools_GetPYR(Matrix *, float *, float *, float *)",
        ),
    ),
    (
        "LogicUpdate__5Rhino",
        Ok(
            "Rhino::LogicUpdate(void)",
        ),
    ),
    (
        "Reset__11MetalSpikes",
        Ok(
            "MetalSpikes::Reset(void)",
        ),
    ),
    (
        "Update__15TyIdleAnimTablebUi14IdleAnimNumberf",
        Ok(
            "TyIdleAnimTable::Update(bool, unsigned int, IdleAnimNumber, float)",
        ),
    ),
    (
        "_7MKWater$debugNumStripsInvisible",
        Ok(
            "MKWater::debugNumStripsInvisible",
        ),
    ),
    (
        "Sound_Stop3d",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddNode__13UniformSplineP6Vector",
        Ok(
            "UniformSpline::AddNode(Vector *)",
        ),
    ),
    (
        "C3_MiniGameActors_LoadResources__FP8KromeIni",
        Ok(
            "C3_MiniGameActors_LoadResources(KromeIni *)",
        ),
    ),
    (
        "fpcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Chase__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Chase(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7AntHill",
        Ok(
            "ModuleInfo<AntHill> virtual table",
        ),
    ),
    (
        "Shatter_Deinit__Fv",
        Ok(
            "Shatter_Deinit(void)",
        ),
    ),
    (
        "_vt$10WaterWheel",
        Ok(
            "WaterWheel virtual table",
        ),
    ),
    (
        "MKPackage_LoadDynamic__FPcb",
        Ok(
            "MKPackage_LoadDynamic(char *, bool)",
        ),
    ),
    (
        "_$_19__pointer_type_info",
        Ok(
            "__pointer_type_info::~__pointer_type_info(void)",
        ),
    ),
    (
        "GetEntry__6RkvTOCPc",
        Ok(
            "RkvTOC::GetEntry(char *)",
        ),
    ),
    (
        "Fall_Deinit__10GameCamera",
        Ok(
            "GameCamera::Fall_Deinit(void)",
        ),
    ),
    (
        "Collecting__3Gem",
        Ok(
            "Gem::Collecting(void)",
        ),
    ),
    (
        "_3Gem$gemPtrList",
        Ok(
            "Gem::gemPtrList",
        ),
    ),
    (
        "Reset__11BonusPickup",
        Ok(
            "BonusPickup::Reset(void)",
        ),
    ),
    (
        "Fly_DeinitTyFlies__Fv",
        Ok(
            "Fly_DeinitTyFlies(void)",
        ),
    ),
    (
        "Init__6Camera",
        Ok(
            "Camera::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9DoomerangPv",
        Ok(
            "ModuleInfo<Doomerang>::ConstructObject(void *)",
        ),
    ),
    (
        "AirMediumInit__2Ty",
        Ok(
            "Ty::AirMediumInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Burner",
        Ok(
            "ModuleInfo<Burner> virtual table",
        ),
    ),
    (
        "RunAway__5Roach",
        Ok(
            "Roach::RunAway(void)",
        ),
    ),
    (
        "DoSnaps__10GameCamera",
        Ok(
            "GameCamera::DoSnaps(void)",
        ),
    ),
    (
        "FireInit__4Tick",
        Ok(
            "Tick::FireInit(void)",
        ),
    ),
    (
        "PauseScreen_RangInfo_Init__Fv",
        Ok(
            "PauseScreen_RangInfo_Init(void)",
        ),
    ),
    (
        "Particle_KickUpSplash_Init__FPP14ParticleSystemP6Vectorf",
        Ok(
            "Particle_KickUpSplash_Init(ParticleSystem **, Vector *, float)",
        ),
    ),
    (
        "PathInit__4Jeep",
        Ok(
            "Jeep::PathInit(void)",
        ),
    ),
    (
        "Deinit__16SoundEventHelper",
        Ok(
            "SoundEventHelper::Deinit(void)",
        ),
    ),
    (
        "InitDive__15LearnToDiveData",
        Ok(
            "LearnToDiveData::InitDive(void)",
        ),
    ),
    (
        "Draw__11BunyipElder",
        Ok(
            "BunyipElder::Draw(void)",
        ),
    ),
    (
        "Roach_LoadResources__FP8KromeIni",
        Ok(
            "Roach_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Rocket_CustomUpdate__FP14ParticleSystem",
        Ok(
            "Rocket_CustomUpdate(ParticleSystem *)",
        ),
    ),
    (
        "Find__8MaterialPc",
        Ok(
            "Material::Find(char *)",
        ),
    ),
    (
        "Windmill_Update__Fv",
        Ok(
            "Windmill_Update(void)",
        ),
    ),
    (
        "LogicUpdate__10SnowSpider",
        Ok(
            "SnowSpider::LogicUpdate(void)",
        ),
    ),
    (
        "__submore",
        Err(
            InvalidSpecialMethod(
                "submore",
            ),
        ),
    ),
    (
        "Generator_LoadResources__FP8KromeIni",
        Ok(
            "Generator_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__11SpiderCrate",
        Ok(
            "SpiderCrate::LoadDone(void)",
        ),
    ),
    (
        "InitStopAggressive__5Rhino",
        Ok(
            "Rhino::InitStopAggressive(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Ibis_LoadResources__Fv",
        Ok(
            "global constructors keyed to Ibis_LoadResources(void)",
        ),
    ),
    (
        "LoadLevel_Path_End__Fv",
        Ok(
            "LoadLevel_Path_End(void)",
        ),
    ),
    (
        "Show__6Portalb",
        Ok(
            "Portal::Show(bool)",
        ),
    ),
    (
        "StartChase__6Wombat",
        Ok(
            "Wombat::StartChase(void)",
        ),
    ),
    (
        "Wait__11CrateStruct",
        Ok(
            "CrateStruct::Wait(void)",
        ),
    ),
    (
        "UpdateRangSpecial__2Ty",
        Ok(
            "Ty::UpdateRangSpecial(void)",
        ),
    ),
    (
        "_init_signal",
        Err(
            NotMangled,
        ),
    ),
    (
        "GameCamera_UseFluffyCamera__FbP5Model",
        Ok(
            "GameCamera_UseFluffyCamera(bool, Model *)",
        ),
    ),
    (
        "Spiral_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::Spiral_Create(void *)",
        ),
    ),
    (
        "DeinitSurfaceSwim__2Ty",
        Ok(
            "Ty::DeinitSurfaceSwim(void)",
        ),
    ),
    (
        "_vt$7SeaMine",
        Ok(
            "SeaMine virtual table",
        ),
    ),
    (
        "Init__2Ty",
        Ok(
            "Ty::Init(void)",
        ),
    ),
    (
        "ScaredDeinit__5Yabby",
        Ok(
            "Yabby::ScaredDeinit(void)",
        ),
    ),
    (
        "FreakOut_Update__6Dennis",
        Ok(
            "Dennis::FreakOut_Update(void)",
        ),
    ),
    (
        "TestFloor__13CritterField2P6VectorP15CollisionResulti13CollisionMode",
        Ok(
            "CritterField2::TestFloor(Vector *, CollisionResult *, int, CollisionMode)",
        ),
    ),
    (
        "Message__13TreasureChestP9MKMessage",
        Ok(
            "TreasureChest::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$10WhirlyWind",
        Ok(
            "WhirlyWind virtual table",
        ),
    ),
    (
        "_vt$14CrikeyCanister",
        Ok(
            "CrikeyCanister virtual table",
        ),
    ),
    (
        "BonusPickup_SetAbsolutePos__FP11BonusPickupP6Vector",
        Ok(
            "BonusPickup_SetAbsolutePos(BonusPickup *, Vector *)",
        ),
    ),
    (
        "GlideTransition__2Ty",
        Ok(
            "Ty::GlideTransition(void)",
        ),
    ),
    (
        "JumpIdle__6Wombat",
        Ok(
            "Wombat::JumpIdle(void)",
        ),
    ),
    (
        "UseLaunchCamera__10GameCamerab",
        Ok(
            "GameCamera::UseLaunchCamera(bool)",
        ),
    ),
    (
        "Message__6TargetP9MKMessage",
        Ok(
            "Target::Message(MKMessage *)",
        ),
    ),
    (
        "ModelRender_CFL_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__10GCT_Camera",
        Ok(
            "GCT_Camera::Deinit(void)",
        ),
    ),
    (
        "Draw__13FeatherStruct",
        Ok(
            "FeatherStruct::Draw(void)",
        ),
    ),
    (
        "Init__6TyBite",
        Ok(
            "TyBite::Init(void)",
        ),
    ),
    (
        "ConfigureVRam__8MaterialPP8Material",
        Ok(
            "Material::ConfigureVRam(Material **)",
        ),
    ),
    (
        "ClearZBuffer__4View",
        Ok(
            "View::ClearZBuffer(void)",
        ),
    ),
    (
        "IdleInit__4Ibis",
        Ok(
            "Ibis::IdleInit(void)",
        ),
    ),
    (
        "zoneBlocking",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsClaiming__7BushPig",
        Ok(
            "BushPig::IsClaiming(void)",
        ),
    ),
    (
        "SpeedUpCrate_Draw__Fv",
        Ok(
            "SpeedUpCrate_Draw(void)",
        ),
    ),
    (
        "Translation_GetLanguageCode__F19TranslationLanguage",
        Ok(
            "Translation_GetLanguageCode(TranslationLanguage)",
        ),
    ),
    (
        "_quantMatrixExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__6JuliusP9MKMessage",
        Ok(
            "Julius::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__11BoulderTrap",
        Ok(
            "BoulderTrap::Reset(void)",
        ),
    ),
    (
        "_fwalk",
        Err(
            NotMangled,
        ),
    ),
    (
        "Landing__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Landing(void)",
        ),
    ),
    (
        "Hud_DrawSpecial__Fv",
        Ok(
            "Hud_DrawSpecial(void)",
        ),
    ),
    (
        "_vt$6MKProp",
        Ok(
            "MKProp virtual table",
        ),
    ),
    (
        "_ri0_111",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckBitten__6TyBiteP5Model",
        Ok(
            "TyBite::CheckBitten(Model *)",
        ),
    ),
    (
        "Geyser_LoadResources__FP8KromeIni",
        Ok(
            "Geyser_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Tools_RandomRadialVectorXZ__FR6Vector",
        Ok(
            "Tools_RandomRadialVectorXZ(Vector &)",
        ),
    ),
    (
        "isalnum",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNmbrOfAnimDefs__9Animation",
        Ok(
            "Animation::GetNmbrOfAnimDefs(void)",
        ),
    ),
    (
        "FleeState__9SmallCrab",
        Ok(
            "SmallCrab::FleeState(void)",
        ),
    ),
    (
        "_vt$6SpyEgg",
        Ok(
            "SpyEgg virtual table",
        ),
    ),
    (
        "HopForward__5Rufusb",
        Ok(
            "Rufus::HopForward(bool)",
        ),
    ),
    (
        "Create__14CameraOverride24CameraOverrideCreateTypePvP21CameraOverrideManager",
        Ok(
            "CameraOverride::Create(CameraOverrideCreateType, void *, CameraOverrideManager *)",
        ),
    ),
    (
        "SpawnFeather__17TyParticleManagerP6VectorT1",
        Ok(
            "TyParticleManager::SpawnFeather(Vector *, Vector *)",
        ),
    ),
    (
        "GameData_New__Fv",
        Ok(
            "GameData_New(void)",
        ),
    ),
    (
        "Init__15GameSubStateFSM12GameSubState",
        Ok(
            "GameSubStateFSM::Init(GameSubState)",
        ),
    ),
    (
        "SharkCageLeave__2Ty",
        Ok(
            "Ty::SharkCageLeave(void)",
        ),
    ),
    (
        "JumpFromRang_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::JumpFromRang_Init(void)",
        ),
    ),
    (
        "CreateRenderTarget__8MaterialPciii",
        Ok(
            "Material::CreateRenderTarget(char *, int, int, int)",
        ),
    ),
    (
        "FrillLizard_LoadResources__FP8KromeIni",
        Ok(
            "FrillLizard_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11WaterVolumePv",
        Ok(
            "ModuleInfo<WaterVolume>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__9SoundProp",
        Ok(
            "SoundProp::Reset(void)",
        ),
    ),
    (
        "temp__Fi",
        Ok(
            "temp(int)",
        ),
    ),
    (
        "MKWaterRender_WSEMTM_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SteamInit__9ShadowBat",
        Ok(
            "ShadowBat::SteamInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14RockProjectile",
        Ok(
            "ModuleInfo<RockProjectile> virtual table",
        ),
    ),
    (
        "Init__14BlitterCritterP11GameObjDesc",
        Ok(
            "BlitterCritter::Init(GameObjDesc *)",
        ),
    ),
    (
        "LoadDone__10TumbleWeed",
        Ok(
            "TumbleWeed::LoadDone(void)",
        ),
    ),
    (
        "CreateFromMem__7TexturePcPv",
        Ok(
            "Texture::CreateFromMem(char *, void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11SpinningLog",
        Ok(
            "ModuleInfo<SpinningLog> virtual table",
        ),
    ),
    (
        "Sound_SetPitch",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetThunderEgg__8GameData14ThunderEggType",
        Ok(
            "GameData::GetThunderEgg(ThunderEggType)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Ice",
        Ok(
            "ModuleInfo<Ice> virtual table",
        ),
    ),
    (
        "Clear__27CommonGameObjFlagsComponent18CommonGameObjFlags",
        Ok(
            "CommonGameObjFlagsComponent::Clear(CommonGameObjFlags)",
        ),
    ),
    (
        "SpawnBilbyPickupAtom__17TyParticleManagerP6Vectorfi",
        Ok(
            "TyParticleManager::SpawnBilbyPickupAtom(Vector *, float, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10Damageable",
        Ok(
            "ModuleInfo<Damageable>::Init(void)",
        ),
    ),
    (
        "AddIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7SnowGun$gunNode",
        Ok(
            "SnowGun::gunNode",
        ),
    ),
    (
        "Taunt__8PubeCrabb",
        Ok(
            "PubeCrab::Taunt(bool)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10TumbleWeed",
        Ok(
            "ModuleInfo<TumbleWeed> virtual table",
        ),
    ),
    (
        "CreateDebugMenus__13LightningInitP15DebugOptionMenu",
        Ok(
            "LightningInit::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "MiniBoulder_Add__FP6VectorT0T0P21MiniBoulderDescriptor",
        Ok(
            "MiniBoulder_Add(Vector *, Vector *, Vector *, MiniBoulderDescriptor *)",
        ),
    ),
    (
        "DeinitSlide__2Ty",
        Ok(
            "Ty::DeinitSlide(void)",
        ),
    ),
    (
        "sceDelDrv",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10WhirlyWind",
        Ok(
            "ModuleInfo<WhirlyWind> virtual table",
        ),
    ),
    (
        "iResumeThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Input_IsKeyMappingEnabled__Fv",
        Ok(
            "Input_IsKeyMappingEnabled(void)",
        ),
    ),
    (
        "Deinit__7BushPig",
        Ok(
            "BushPig::Deinit(void)",
        ),
    ),
    (
        "MKWaterManager_GetSine__Ff",
        Ok(
            "MKWaterManager_GetSine(float)",
        ),
    ),
    (
        "AnimateRun__5Skinkb",
        Ok(
            "Skink::AnimateRun(bool)",
        ),
    ),
    (
        "Fluffy_Update__10GameCamera",
        Ok(
            "GameCamera::Fluffy_Update(void)",
        ),
    ),
    (
        "Init__12PlatformDescP14ModuleInfoBasePcT2ii",
        Ok(
            "PlatformDesc::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "_mbtowc_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKPackage_Cancel__Fv",
        Ok(
            "MKPackage_Cancel(void)",
        ),
    ),
    (
        "Draw__10LODManagerP5Modeliffb",
        Ok(
            "LODManager::Draw(Model *, int, float, float, bool)",
        ),
    ),
    (
        "__tii",
        Ok(
            "int type_info node",
        ),
    ),
    (
        "IdleInit__6Geyser",
        Ok(
            "Geyser::IdleInit(void)",
        ),
    ),
    (
        "SetPower__7BushPigfff",
        Ok(
            "BushPig::SetPower(float, float, float)",
        ),
    ),
    (
        "LinearDataAvailable__12StreamBuffer",
        Ok(
            "StreamBuffer::LinearDataAvailable(void)",
        ),
    ),
    (
        "ModelRender_CFO1T_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14FireworksCratePv",
        Ok(
            "ModuleInfo<FireworksCrate>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitStopped__3Emu",
        Ok(
            "Emu::DeinitStopped(void)",
        ),
    ),
    (
        "IsAlpha__Fc",
        Ok(
            "IsAlpha(char)",
        ),
    ),
    (
        "__fixunssfdi",
        Err(
            InvalidSpecialMethod(
                "fixunssfdi",
            ),
        ),
    ),
    (
        "UpdateBarrelExploding__9Speedboat",
        Ok(
            "Speedboat::UpdateBarrelExploding(void)",
        ),
    ),
    (
        "__ti16__user_type_info",
        Ok(
            "__user_type_info type_info node",
        ),
    ),
    (
        "Bitten_Init__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Bitten_Init(void)",
        ),
    ),
    (
        "Deinit__14MobilePlatform",
        Ok(
            "MobilePlatform::Deinit(void)",
        ),
    ),
    (
        "Critters_Update__Fv",
        Ok(
            "Critters_Update(void)",
        ),
    ),
    (
        "ModelRender_CFLO1TW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8PubeCrab",
        Ok(
            "ModuleInfo<PubeCrab>::Init(void)",
        ),
    ),
    (
        "Wait__8PubeCrab",
        Ok(
            "PubeCrab::Wait(void)",
        ),
    ),
    (
        "Breath__4Bull",
        Ok(
            "Bull::Breath(void)",
        ),
    ),
    (
        "Activate__12EnemySpawner",
        Ok(
            "EnemySpawner::Activate(void)",
        ),
    ),
    (
        "Message__14MobilePlatformP9MKMessage",
        Ok(
            "MobilePlatform::Message(MKMessage *)",
        ),
    ),
    (
        "MKShadow_DetectEdges__FP8MKShadowP6VectorP5ModelT1",
        Ok(
            "MKShadow_DetectEdges(MKShadow *, Vector *, Model *, Vector *)",
        ),
    ),
    (
        "BouncingBoulder_LoadResources__FP8KromeIni",
        Ok(
            "BouncingBoulder_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SubObjectExists__5ModelPcPi",
        Ok(
            "Model::SubObjectExists(char *, int *)",
        ),
    ),
    (
        "IdealTarget__14CameraOverride",
        Ok(
            "CameraOverride::IdealTarget(void)",
        ),
    ),
    (
        "InitRun__2Ty",
        Ok(
            "Ty::InitRun(void)",
        ),
    ),
    (
        "__kernel_tanf",
        Err(
            InvalidSpecialMethod(
                "kernel_tanf",
            ),
        ),
    ),
    (
        "_vt$6Geyser",
        Ok(
            "Geyser virtual table",
        ),
    ),
    (
        "PlayerAdjust_SetControlPointsClamped__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjust_SetControlPointsClamped(void)",
        ),
    ),
    (
        "sceMcDelete",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResolveHit__10Projectile",
        Ok(
            "Projectile::ResolveHit(void)",
        ),
    ),
    (
        "SetState__6Portal11PortalState",
        Ok(
            "Portal::SetState(PortalState)",
        ),
    ),
    (
        "PauseScreen_Continue_Draw__Fv",
        Ok(
            "PauseScreen_Continue_Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15StopwatchStruct",
        Ok(
            "ModuleInfo<StopwatchStruct>::Init(void)",
        ),
    ),
    (
        "OmniLight_InitModule__Fv",
        Ok(
            "OmniLight_InitModule(void)",
        ),
    ),
    (
        "MiniGameB1_Deinit__Fv",
        Ok(
            "MiniGameB1_Deinit(void)",
        ),
    ),
    (
        "Init__4LavaP11GameObjDesc",
        Ok(
            "Lava::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Boomerang",
        Ok(
            "ModuleInfo<Boomerang>::Init(void)",
        ),
    ),
    (
        "_dispRefImageField",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FLO1_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CrashInit__9FrillBike",
        Ok(
            "FrillBike::CrashInit(void)",
        ),
    ),
    (
        "SetWaypoint__14EnemyWaypointsi",
        Ok(
            "EnemyWaypoints::SetWaypoint(int)",
        ),
    ),
    (
        "GameCamera_SnapSource__FP6Vector",
        Ok(
            "GameCamera_SnapSource(Vector *)",
        ),
    ),
    (
        "Init__15BonusPickupDescP14ModuleInfoBasePcT2ii",
        Ok(
            "BonusPickupDesc::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "Init__8PubeCrabP11GameObjDesc",
        Ok(
            "PubeCrab::Init(GameObjDesc *)",
        ),
    ),
    (
        "Launch__2Ty",
        Ok(
            "Ty::Launch(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Wallaby",
        Ok(
            "ModuleInfo<Wallaby> virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7Furnace",
        Ok(
            "ModuleInfo<Furnace> virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$bDrawCheatLines",
        Ok(
            "global constructors keyed to bDrawCheatLines",
        ),
    ),
    (
        "Neddy_LoadResources__FP8KromeIni",
        Ok(
            "Neddy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Draw__13CritterField2",
        Ok(
            "CritterField2::Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5YabbyPv",
        Ok(
            "ModuleInfo<Yabby>::ConstructObject(void *)",
        ),
    ),
    (
        "UpdateShadow__8FireDrum",
        Ok(
            "FireDrum::UpdateShadow(void)",
        ),
    ),
    (
        "LassoThrow__5Lasso",
        Ok(
            "Lasso::LassoThrow(void)",
        ),
    ),
    (
        "sceSifSearchModuleByName",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomPos__6Crikey",
        Ok(
            "Crikey::GenerateRandomPos(void)",
        ),
    ),
    (
        "szRoofSnowModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "Shatter_Reset__Fv",
        Ok(
            "Shatter_Reset(void)",
        ),
    ),
    (
        "PlatformUpdate__2Ty",
        Ok(
            "Ty::PlatformUpdate(void)",
        ),
    ),
    (
        "ModelRender_CFLTW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Elle",
        Ok(
            "ModuleInfo<Elle> virtual table",
        ),
    ),
    (
        "Update__7Furnace",
        Ok(
            "Furnace::Update(void)",
        ),
    ),
    (
        "Destroy__5Model",
        Ok(
            "Model::Destroy(void)",
        ),
    ),
    (
        "ModelRender_CFSTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ThrowBurningJunk__11FrillLizard",
        Ok(
            "FrillLizard::ThrowBurningJunk(void)",
        ),
    ),
    (
        "_malloc_trim_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__7FarlappP11GameObjDesc",
        Ok(
            "Farlapp::Init(GameObjDesc *)",
        ),
    ),
    (
        "DeinitCrash__9Speedboat",
        Ok(
            "Speedboat::DeinitCrash(void)",
        ),
    ),
    (
        "CreateNewSplash__19WaterfallBaseStructff",
        Ok(
            "WaterfallBaseStruct::CreateNewSplash(float, float)",
        ),
    ),
    (
        "FindItem__2Ty",
        Ok(
            "Ty::FindItem(void)",
        ),
    ),
    (
        "Init__4ElleP11GameObjDesc",
        Ok(
            "Elle::Init(GameObjDesc *)",
        ),
    ),
    (
        "GenerateRandomTargetPos__10SnowSpiderRC6Vectorf",
        Ok(
            "SnowSpider::GenerateRandomTargetPos(Vector const &, float)",
        ),
    ),
    (
        "bDisplayEventAreas",
        Err(
            NotMangled,
        ),
    ),
    (
        "Collision_Deinit__Fv",
        Ok(
            "Collision_Deinit(void)",
        ),
    ),
    (
        "Init__11GameObjDescP14ModuleInfoBasePcT2ii",
        Ok(
            "GameObjDesc::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "Spawn__9GreySmokeP6Vector",
        Ok(
            "GreySmoke::Spawn(Vector *)",
        ),
    ),
    (
        "GetActorModelNodePos__12DialogEffect",
        Ok(
            "DialogEffect::GetActorModelNodePos(void)",
        ),
    ),
    (
        "Reset__7Boulder",
        Ok(
            "Boulder::Reset(void)",
        ),
    ),
    (
        "FreeManuallyScrollingTexturePointers__Fv",
        Ok(
            "FreeManuallyScrollingTexturePointers(void)",
        ),
    ),
    (
        "__sjpopnthrow",
        Err(
            InvalidSpecialMethod(
                "sjpopnthrow",
            ),
        ),
    ),
    (
        "LoadDone__3Eel",
        Ok(
            "Eel::LoadDone(void)",
        ),
    ),
    (
        "Deinit__10WaterWheel",
        Ok(
            "WaterWheel::Deinit(void)",
        ),
    ),
    (
        "LoadAnimations__2Ty",
        Ok(
            "Ty::LoadAnimations(void)",
        ),
    ),
    (
        "UpdateLogic__11BaseCritter",
        Ok(
            "BaseCritter::UpdateLogic(void)",
        ),
    ),
    (
        "BittenIdle__11ScrubTurkey",
        Ok(
            "ScrubTurkey::BittenIdle(void)",
        ),
    ),
    (
        "Gecko_LoadResources__Fv",
        Ok(
            "Gecko_LoadResources(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Geyser",
        Ok(
            "ModuleInfo<Geyser> virtual table",
        ),
    ),
    (
        "Message__5RoachP9MKMessage",
        Ok(
            "Roach::Message(MKMessage *)",
        ),
    ),
    (
        "Appear__7C1Water",
        Ok(
            "C1Water::Appear(void)",
        ),
    ),
    (
        "Message__5TorchP9MKMessage",
        Ok(
            "Torch::Message(MKMessage *)",
        ),
    ),
    (
        "StartTime__8GameData",
        Ok(
            "GameData::StartTime(void)",
        ),
    ),
    (
        "sceMcFlush",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeathDeinit__10SnowSpider",
        Ok(
            "SnowSpider::DeathDeinit(void)",
        ),
    ),
    (
        "sceMcSeek",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckForShadowShift__6ShadowfP6VectorfT2",
        Ok(
            "Shadow::CheckForShadowShift(float, Vector *, float, Vector *)",
        ),
    ),
    (
        "Reset__16BoomerangManager",
        Ok(
            "BoomerangManager::Reset(void)",
        ),
    ),
    (
        "System_SetOrthoSize__Fii",
        Ok(
            "System_SetOrthoSize(int, int)",
        ),
    ),
    (
        "_14WindmillStruct$MaxWindmills",
        Ok(
            "WindmillStruct::MaxWindmills",
        ),
    ),
    (
        "System_FlashScreen__Fi",
        Ok(
            "System_FlashScreen(int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Fluffy",
        Ok(
            "ModuleInfo<Fluffy>::Init(void)",
        ),
    ),
    (
        "PlaySound__8KoalaKid",
        Ok(
            "KoalaKid::PlaySound(void)",
        ),
    ),
    (
        "CameraOverrideDir_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideDir_Line(KromeIniLine *)",
        ),
    ),
    (
        "finite",
        Err(
            NotMangled,
        ),
    ),
    (
        "Teleport__6Wombat",
        Ok(
            "Wombat::Teleport(void)",
        ),
    ),
    (
        "GetStartAndEnd__12MKAnimScriptP6MKAnimPsT2",
        Ok(
            "MKAnimScript::GetStartAndEnd(MKAnim *, short *, short *)",
        ),
    ),
    (
        "LoadLine__13OpalCollectorP12KromeIniLine",
        Ok(
            "OpalCollector::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Die__5Skink",
        Ok(
            "Skink::Die(void)",
        ),
    ),
    (
        "_13OpalCollector$vEffectEnd",
        Ok(
            "OpalCollector::vEffectEnd",
        ),
    ),
    (
        "viewSeed",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitDive__2Ty",
        Ok(
            "Ty::InitDive(void)",
        ),
    ),
    (
        "SetState__5Sharkib",
        Ok(
            "Shark::SetState(int, bool)",
        ),
    ),
    (
        "IdleInit__5Rufus",
        Ok(
            "Rufus::IdleInit(void)",
        ),
    ),
    (
        "Reset__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::Reset(void)",
        ),
    ),
    (
        "Emit__11LineEmitteri",
        Ok(
            "LineEmitter::Emit(int)",
        ),
    ),
    (
        "__tiUi",
        Ok(
            "unsigned int type_info node",
        ),
    ),
    (
        "RestoreCycleDeltas__21GameCameraPointsDelta",
        Ok(
            "GameCameraPointsDelta::RestoreCycleDeltas(void)",
        ),
    ),
    (
        "LoadLine__14TriggerBoxPropP12KromeIniLine",
        Ok(
            "TriggerBoxProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "AddGif_AD_TRXDIR__3DmaUl",
        Ok(
            "Dma::AddGif_AD_TRXDIR(unsigned long)",
        ),
    ),
    (
        "Kin_GetInitialVelocity__FPfT0T0T0",
        Ok(
            "Kin_GetInitialVelocity(float *, float *, float *, float *)",
        ),
    ),
    (
        "GuideParticle_HasPassedThoughAll__Fv",
        Ok(
            "GuideParticle_HasPassedThoughAll(void)",
        ),
    ),
    (
        "_7MKWater$debugNumModelsClipped",
        Ok(
            "MKWater::debugNumModelsClipped",
        ),
    ),
    (
        "_7MKWater$bDrawWireFrame",
        Ok(
            "MKWater::bDrawWireFrame",
        ),
    ),
    (
        "LoadDone__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::LoadDone(void)",
        ),
    ),
    (
        "GameCamera_SetAnimationFrame__Ff",
        Ok(
            "GameCamera_SetAnimationFrame(float)",
        ),
    ),
    (
        "DeinitWalk__7BushPig",
        Ok(
            "BushPig::DeinitWalk(void)",
        ),
    ),
    (
        "CaptureDrawBuffer__8Materialffff",
        Ok(
            "Material::CaptureDrawBuffer(float, float, float, float)",
        ),
    ),
    (
        "TyCameraChecksUpdate__2Ty",
        Ok(
            "Ty::TyCameraChecksUpdate(void)",
        ),
    ),
    (
        "wait_get_addr",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3BatPv",
        Ok(
            "ModuleInfo<Bat>::ConstructObject(void *)",
        ),
    ),
    (
        "Draw__10WakeStruct",
        Ok(
            "WakeStruct::Draw(void)",
        ),
    ),
    (
        "Reset__3Eel",
        Ok(
            "Eel::Reset(void)",
        ),
    ),
    (
        "BiteGrowl__6TyBite",
        Ok(
            "TyBite::BiteGrowl(void)",
        ),
    ),
    (
        "Message__8MorayEelP9MKMessage",
        Ok(
            "MorayEel::Message(MKMessage *)",
        ),
    ),
    (
        "GetDesc__9SmallCrab",
        Ok(
            "SmallCrab::GetDesc(void)",
        ),
    ),
    (
        "Reset__9WaterPipe",
        Ok(
            "WaterPipe::Reset(void)",
        ),
    ),
    (
        "ScaleOut__15StopwatchStruct",
        Ok(
            "StopwatchStruct::ScaleOut(void)",
        ),
    ),
    (
        "Message__6MKPropP9MKMessage",
        Ok(
            "MKProp::Message(MKMessage *)",
        ),
    ),
    (
        "LoadDone__16CaveBatObjective",
        Ok(
            "CaveBatObjective::LoadDone(void)",
        ),
    ),
    (
        "SetAnimState__5Ringo11RingoStates",
        Ok(
            "Ringo::SetAnimState(RingoStates)",
        ),
    ),
    (
        "FindNearestPickup__FP6VectorPc",
        Ok(
            "FindNearestPickup(Vector *, char *)",
        ),
    ),
    (
        "ModelRender_CFM_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8BuzzSaw2",
        Ok(
            "ModuleInfo<BuzzSaw2>::Init(void)",
        ),
    ),
    (
        "Load__9Boomerang",
        Ok(
            "Boomerang::Load(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15WaterTankStructPv",
        Ok(
            "ModuleInfo<WaterTankStruct>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__10SpecialHud",
        Ok(
            "SpecialHud::Update(void)",
        ),
    ),
    (
        "Block__8LilNeddy",
        Ok(
            "LilNeddy::Block(void)",
        ),
    ),
    (
        "Gem_HideAll__Fv",
        Ok(
            "Gem_HideAll(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_10ArsonTorch$refPoint",
        Ok(
            "global constructors keyed to ArsonTorch::refPoint",
        ),
    ),
    (
        "GetFloor__FP6VectorfP15CollisionResult",
        Ok(
            "GetFloor(Vector *, float, CollisionResult *)",
        ),
    ),
    (
        "AddGif_AD_TEST_2__3DmaUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEST_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "GeneratePos_RunAwayFromTy__FR6VectorRC6VectorT1f",
        Ok(
            "GeneratePos_RunAwayFromTy(Vector &, Vector const &, Vector const &, float)",
        ),
    ),
    (
        "strcmp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z2Ty",
        Ok(
            "ModuleInfo<Ty>::Init(void)",
        ),
    ),
    (
        "EnableHead__2Ty7TyHeads",
        Ok(
            "Ty::EnableHead(TyHeads)",
        ),
    ),
    (
        "AddVif_FLUSHE__3Dma",
        Ok(
            "Dma::AddVif_FLUSHE(void)",
        ),
    ),
    (
        "Setup__7TendrilfP6Vector",
        Ok(
            "Tendril::Setup(float, Vector *)",
        ),
    ),
    (
        "GetDesc__8Platform",
        Ok(
            "Platform::GetDesc(void)",
        ),
    ),
    (
        "ResolveSubObjects__13LODDescriptorP5Model",
        Ok(
            "LODDescriptor::ResolveSubObjects(Model *)",
        ),
    ),
    (
        "InitLaunch__2Ty",
        Ok(
            "Ty::InitLaunch(void)",
        ),
    ),
    (
        "SetMode__6Camera11Camera_Mode",
        Ok(
            "Camera::SetMode(Camera_Mode)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Maurie",
        Ok(
            "ModuleInfo<Maurie> virtual table",
        ),
    ),
    (
        "Jeep_LoadResources__FP8KromeIni",
        Ok(
            "Jeep_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_7MKWater$debugNumQuadsClipped",
        Ok(
            "MKWater::debugNumQuadsClipped",
        ),
    ),
    (
        "MKRumble_Stop__F12InputDevices",
        Ok(
            "MKRumble_Stop(InputDevices)",
        ),
    ),
    (
        "Fire__4Tick",
        Ok(
            "Tick::Fire(void)",
        ),
    ),
    (
        "DestroyAll__14ParticleSystem",
        Ok(
            "ParticleSystem::DestroyAll(void)",
        ),
    ),
    (
        "LoadLevel_LoadRotation__FP12KromeIniLinePcP8Rotation",
        Ok(
            "LoadLevel_LoadRotation(KromeIniLine *, char *, Rotation *)",
        ),
    ),
    (
        "GetVelocity__6Splinef",
        Ok(
            "Spline::GetVelocity(float)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z2Ty",
        Ok(
            "ModuleInfo<Ty> virtual table",
        ),
    ),
    (
        "StopAttack__8PubeCrabb",
        Ok(
            "PubeCrab::StopAttack(bool)",
        ),
    ),
    (
        "_vt$11PontoonRope",
        Ok(
            "PontoonRope virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8LilNeddy",
        Ok(
            "ModuleInfo<LilNeddy>::Init(void)",
        ),
    ),
    (
        "FollowTy__12FlameThrower",
        Ok(
            "FlameThrower::FollowTy(void)",
        ),
    ),
    (
        "UpdateModelNormal__10SnowSpider",
        Ok(
            "SnowSpider::UpdateModelNormal(void)",
        ),
    ),
    (
        "Finish__6Wombat",
        Ok(
            "Wombat::Finish(void)",
        ),
    ),
    (
        "_GLOBAL_$I$WaterPipe_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WaterPipe_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$8BossCass",
        Ok(
            "BossCass virtual table",
        ),
    ),
    (
        "LoadLevel_LoadFloat__FP12KromeIniLinePcPf",
        Ok(
            "LoadLevel_LoadFloat(KromeIniLine *, char *, float *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8AquarangPv",
        Ok(
            "ModuleInfo<Aquarang>::ConstructObject(void *)",
        ),
    ),
    (
        "IdleState__7Wallaby",
        Ok(
            "Wallaby::IdleState(void)",
        ),
    ),
    (
        "LogicUpdate__5Skink",
        Ok(
            "Skink::LogicUpdate(void)",
        ),
    ),
    (
        "DamageJeep__4Jeep",
        Ok(
            "Jeep::DamageJeep(void)",
        ),
    ),
    (
        "Message__4ElleP9MKMessage",
        Ok(
            "Elle::Message(MKMessage *)",
        ),
    ),
    (
        "FieldAdded__17CritterField2Desc",
        Ok(
            "CritterField2Desc::FieldAdded(void)",
        ),
    ),
    (
        "GetAnimDef__9AnimationPc",
        Ok(
            "Animation::GetAnimDef(char *)",
        ),
    ),
    (
        "AnimateWalk__5Skinkb",
        Ok(
            "Skink::AnimateWalk(bool)",
        ),
    ),
    (
        "ModelRender_CFSTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "FrontEnd_DrawB__FPcT0T0T0",
        Ok(
            "FrontEnd_DrawB(char *, char *, char *, char *)",
        ),
    ),
    (
        "AttackIdle__11FrillLizard",
        Ok(
            "FrillLizard::AttackIdle(void)",
        ),
    ),
    (
        "_21ParticleSystemManager$menuInit",
        Ok(
            "ParticleSystemManager::menuInit",
        ),
    ),
    (
        "FrontEnd_Title_Init__Fv",
        Ok(
            "FrontEnd_Title_Init(void)",
        ),
    ),
    (
        "CameraOverrideFixedRail_Start__Fv",
        Ok(
            "CameraOverrideFixedRail_Start(void)",
        ),
    ),
    (
        "MKShadow_InitModule__Fv",
        Ok(
            "MKShadow_InitModule(void)",
        ),
    ),
    (
        "Destroy__7Texture",
        Ok(
            "Texture::Destroy(void)",
        ),
    ),
    (
        "DebugPoint__FP6VectorUif",
        Ok(
            "DebugPoint(Vector *, unsigned int, float)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z23BlueTongueRockObjective",
        Ok(
            "ModuleInfo<BlueTongueRockObjective>::Init(void)",
        ),
    ),
    (
        "__DTOR_LIST__",
        Err(
            UnrecognizedSpecialMethod(
                "DTOR_LIST",
            ),
        ),
    ),
    (
        "File_FileServerIrxName__FPc",
        Ok(
            "File_FileServerIrxName(char *)",
        ),
    ),
    (
        "ShatteredUpdate__11ThinIceProp",
        Ok(
            "ThinIceProp::ShatteredUpdate(void)",
        ),
    ),
    (
        "DrawDebugMessage__10DDASession",
        Ok(
            "DDASession::DrawDebugMessage(void)",
        ),
    ),
    (
        "PushOff__15LedgePullUpData",
        Ok(
            "LedgePullUpData::PushOff(void)",
        ),
    ),
    (
        "CameraOverrideFixedPoint_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideFixedPoint_Line(KromeIniLine *)",
        ),
    ),
    (
        "BergSink__14IceBlockStruct",
        Ok(
            "IceBlockStruct::BergSink(void)",
        ),
    ),
    (
        "Multiply__6MatrixP6MatrixT1",
        Ok(
            "Matrix::Multiply(Matrix *, Matrix *)",
        ),
    ),
    (
        "StartEatingChumDeinit__6Crikey",
        Ok(
            "Crikey::StartEatingChumDeinit(void)",
        ),
    ),
    (
        "_vt$10IceCoolant",
        Ok(
            "IceCoolant virtual table",
        ),
    ),
    (
        "SetAnimIndex__14SpiderTrapdoor18SpiderTrapdoorAnim",
        Ok(
            "SpiderTrapdoor::SetAnimIndex(SpiderTrapdoorAnim)",
        ),
    ),
    (
        "sceSifGetDataTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__14TrapdoorSpiderP9MKMessage",
        Ok(
            "TrapdoorSpider::Message(MKMessage *)",
        ),
    ),
    (
        "Collision_UpdateHitQ__10GameCamera",
        Ok(
            "GameCamera::Collision_UpdateHitQ(void)",
        ),
    ),
    (
        "__17__class_type_infoPCcPCQ217__class_type_info9base_infoUi",
        Ok(
            "__class_type_info::__class_type_info(char const *, __class_type_info::base_info const *, unsigned int)",
        ),
    ),
    (
        "Scale__6MatrixP6MatrixP6Vector",
        Ok(
            "Matrix::Scale(Matrix *, Vector *)",
        ),
    ),
    (
        "PatrolDeinit__5Roach",
        Ok(
            "Roach::PatrolDeinit(void)",
        ),
    ),
    (
        "Deinit__10NinjaGecko",
        Ok(
            "NinjaGecko::Deinit(void)",
        ),
    ),
    (
        "SetUpKidPositions__6Aurora",
        Ok(
            "Aurora::SetUpKidPositions(void)",
        ),
    ),
    (
        "GameCamera_GetEnemyCameraTarget__Fv",
        Ok(
            "GameCamera_GetEnemyCameraTarget(void)",
        ),
    ),
    (
        "Roar__4Bull",
        Ok(
            "Bull::Roar(void)",
        ),
    ),
    (
        "Kin_GetDiscretefinalVel__FPfT0T0T0",
        Ok(
            "Kin_GetDiscretefinalVel(float *, float *, float *, float *)",
        ),
    ),
    (
        "LastPt__17WaterSlideSection",
        Ok(
            "WaterSlideSection::LastPt(void)",
        ),
    ),
    (
        "vfiprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "daveDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9RedButton",
        Ok(
            "ModuleInfo<RedButton>::Init(void)",
        ),
    ),
    (
        "Explode__9ExplosionP6Vectorf",
        Ok(
            "Explosion::Explode(Vector *, float)",
        ),
    ),
    (
        "wobbleEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitDraw__11MKGrassType",
        Ok(
            "MKGrassType::InitDraw(void)",
        ),
    ),
    (
        "TauntInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::TauntInit(void)",
        ),
    ),
    (
        "_3Gem$totalGems",
        Ok(
            "Gem::totalGems",
        ),
    ),
    (
        "CrikeyProps_LoadResources__FP8KromeIni",
        Ok(
            "CrikeyProps_LoadResources(KromeIni *)",
        ),
    ),
    (
        "AddGif_AD_ZBUF_1__3DmaUlUlUl",
        Ok(
            "Dma::AddGif_AD_ZBUF_1(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "MKShadowVU1_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SaveStates_GetTotalGems__Fv",
        Ok(
            "SaveStates_GetTotalGems(void)",
        ),
    ),
    (
        "TransformPoint2Dto3D__4ViewfffP6Vector",
        Ok(
            "View::TransformPoint2Dto3D(float, float, float, Vector *)",
        ),
    ),
    (
        "UpdateDropLeaf__12StaticFXProp",
        Ok(
            "StaticFXProp::UpdateDropLeaf(void)",
        ),
    ),
    (
        "YabbyStalactite_LoadResources__FP8KromeIni",
        Ok(
            "YabbyStalactite_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Deinit__9Flamerang",
        Ok(
            "Flamerang::Deinit(void)",
        ),
    ),
    (
        "CameraOverride_GetContainterPoints__FP6MatrixP6VectorT1T1T1T1",
        Ok(
            "CameraOverride_GetContainterPoints(Matrix *, Vector *, Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Burning__11BurningTree",
        Ok(
            "BurningTree::Burning(void)",
        ),
    ),
    (
        "SetPosition__8UIButtonP6Vectorc",
        Ok(
            "UIButton::SetPosition(Vector *, char)",
        ),
    ),
    (
        "Sound_Stop",
        Err(
            NotMangled,
        ),
    ),
    (
        "BlockInit__8LilNeddy",
        Ok(
            "LilNeddy::BlockInit(void)",
        ),
    ),
    (
        "sceMpegGetDecodeMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDebugInfo__11MKWaterProp",
        Ok(
            "MKWaterProp::DrawDebugInfo(void)",
        ),
    ),
    (
        "SetFogPlanes__4Viewff",
        Ok(
            "View::SetFogPlanes(float, float)",
        ),
    ),
    (
        "SpikeyIce_Deinit__Fv",
        Ok(
            "SpikeyIce_Deinit(void)",
        ),
    ),
    (
        "Init__8TyHealth12TyHealthType",
        Ok(
            "TyHealth::Init(TyHealthType)",
        ),
    ),
    (
        "_$_16__ptmd_type_info",
        Ok(
            "__ptmd_type_info::~__ptmd_type_info(void)",
        ),
    ),
    (
        "pTerrainModel",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetAnimKeepingPosition__12MKAnimScriptP6MKAnim",
        Ok(
            "MKAnimScript::SetAnimKeepingPosition(MKAnim *)",
        ),
    ),
    (
        "Taunt__6Muddieb",
        Ok(
            "Muddie::Taunt(bool)",
        ),
    ),
    (
        "Swim_Deinit__10GameCamera",
        Ok(
            "GameCamera::Swim_Deinit(void)",
        ),
    ),
    (
        "SelectPrev__13UIButtonGroup",
        Ok(
            "UIButtonGroup::SelectPrev(void)",
        ),
    ),
    (
        "SMOKE_SOURCE_L",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPosition__8UIButtonP6Vector",
        Ok(
            "UIButton::GetPosition(Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z18WaterPipeObjectivePv",
        Ok(
            "ModuleInfo<WaterPipeObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "UpdateTargetForwardVector__5Gecko",
        Ok(
            "Gecko::UpdateTargetForwardVector(void)",
        ),
    ),
    (
        "Deinit__16ReflectionStruct",
        Ok(
            "ReflectionStruct::Deinit(void)",
        ),
    ),
    (
        "FileSys_GetOffset__FPc",
        Ok(
            "FileSys_GetOffset(char *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14RockProjectilePv",
        Ok(
            "ModuleInfo<RockProjectile>::ConstructObject(void *)",
        ),
    ),
    (
        "Draw__12BoomerangHud",
        Ok(
            "BoomerangHud::Draw(void)",
        ),
    ),
    (
        "HuntShazzaDeinit__10BlueTongue",
        Ok(
            "BlueTongue::HuntShazzaDeinit(void)",
        ),
    ),
    (
        "DeinitDiveBiteToFall__6TyBite",
        Ok(
            "TyBite::DeinitDiveBiteToFall(void)",
        ),
    ),
    (
        "LoadLine__5LennyP12KromeIniLine",
        Ok(
            "Lenny::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DropEgg__9BadBoonie",
        Ok(
            "BadBoonie::DropEgg(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Platform",
        Ok(
            "ModuleInfo<Platform>::Init(void)",
        ),
    ),
    (
        "TyMemCard_Draw__Fv",
        Ok(
            "TyMemCard_Draw(void)",
        ),
    ),
    (
        "Deinit__3Emu",
        Ok(
            "Emu::Deinit(void)",
        ),
    ),
    (
        "Blitter_Line3D_Draw_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15BurnerObjective",
        Ok(
            "ModuleInfo<BurnerObjective>::Init(void)",
        ),
    ),
    (
        "Update__10LogicState",
        Ok(
            "LogicState::Update(void)",
        ),
    ),
    (
        "iPollSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__4GateP9MKMessage",
        Ok(
            "Gate::Message(MKMessage *)",
        ),
    ),
    (
        "GameCamera_Use__Fb",
        Ok(
            "GameCamera_Use(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$Rhino_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Rhino_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IdleInit__5Skink",
        Ok(
            "Skink::IdleInit(void)",
        ),
    ),
    (
        "Init__11IcePlatformP5ModelP14PlatformConfig",
        Ok(
            "IcePlatform::Init(Model *, PlatformConfig *)",
        ),
    ),
    (
        "_vt$21FrillProblemObjective",
        Ok(
            "FrillProblemObjective virtual table",
        ),
    ),
    (
        "ModelRender_A_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKAnimScript_InitModule__Fv",
        Ok(
            "MKAnimScript_InitModule(void)",
        ),
    ),
    (
        "BushPig_Init__Fv",
        Ok(
            "BushPig_Init(void)",
        ),
    ),
    (
        "GetAngleDifference__Fff",
        Ok(
            "GetAngleDifference(float, float)",
        ),
    ),
    (
        "_7MKWater$cameraPos",
        Ok(
            "MKWater::cameraPos",
        ),
    ),
    (
        "InitModule__9AuroraKid",
        Ok(
            "AuroraKid::InitModule(void)",
        ),
    ),
    (
        "DeinitSound__8KoalaKid",
        Ok(
            "KoalaKid::DeinitSound(void)",
        ),
    ),
    (
        "sceMcGetEntSpace",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8Elevator$bStateChange",
        Ok(
            "Elevator::bStateChange",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11WeatherPropPv",
        Ok(
            "ModuleInfo<WeatherProp>::ConstructObject(void *)",
        ),
    ),
    (
        "copysign",
        Err(
            NotMangled,
        ),
    ),
    (
        "CaptureZBuffer__8Materialffff",
        Ok(
            "Material::CaptureZBuffer(float, float, float, float)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9FrillBikePv",
        Ok(
            "ModuleInfo<FrillBike>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7CaveBat",
        Ok(
            "ModuleInfo<CaveBat>::Init(void)",
        ),
    ),
    (
        "Deinit__24Tools_DynamicStringTable",
        Ok(
            "Tools_DynamicStringTable::Deinit(void)",
        ),
    ),
    (
        "RandomI__FPi",
        Ok(
            "RandomI(int *)",
        ),
    ),
    (
        "sceSifLoadElf",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CaptureZBuffer__8Material",
        Ok(
            "Material::CaptureZBuffer(void)",
        ),
    ),
    (
        "MKWaterRenderStub_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__5Yabby",
        Ok(
            "Yabby::Reset(void)",
        ),
    ),
    (
        "__tfw",
        Ok(
            "wchar_t type_info function",
        ),
    ),
    (
        "GameCamera_UseMiniGameC2Camera__Fb",
        Ok(
            "GameCamera_UseMiniGameC2Camera(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$Rufus_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Rufus_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Deinit__13GuideParticle",
        Ok(
            "GuideParticle::Deinit(void)",
        ),
    ),
    (
        "UpdateTrail__9Boomerang",
        Ok(
            "Boomerang::UpdateTrail(void)",
        ),
    ),
    (
        "_vt$12StaticFXProp",
        Ok(
            "StaticFXProp virtual table",
        ),
    ),
    (
        "AddDescriptor__17GameObjectManagerP11GameObjDesc",
        Ok(
            "GameObjectManager::AddDescriptor(GameObjDesc *)",
        ),
    ),
    (
        "__fixunsdfdi",
        Err(
            InvalidSpecialMethod(
                "fixunsdfdi",
            ),
        ),
    ),
    (
        "SphereCollide__10GameCameraP6Vectorfi",
        Ok(
            "GameCamera::SphereCollide(Vector *, float, int)",
        ),
    ),
    (
        "LoadLine__13PickupCounterP12KromeIniLine",
        Ok(
            "PickupCounter::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Message__15ZoneBlockerPropP9MKMessage",
        Ok(
            "ZoneBlockerProp::Message(MKMessage *)",
        ),
    ),
    (
        "DeathCount__10DDASession",
        Ok(
            "DDASession::DeathCount(void)",
        ),
    ),
    (
        "SpeedUpCrate_Reset__Fv",
        Ok(
            "SpeedUpCrate_Reset(void)",
        ),
    ),
    (
        "Level_ParseColor__FP12KromeIniLineP6Vector",
        Ok(
            "Level_ParseColor(KromeIniLine *, Vector *)",
        ),
    ),
    (
        "Show__13AnimatingPropb",
        Ok(
            "AnimatingProp::Show(bool)",
        ),
    ),
    (
        "OmniLight_DestroyLight__FP14OmniLightSceneP9OmniLight",
        Ok(
            "OmniLight_DestroyLight(OmniLightScene *, OmniLight *)",
        ),
    ),
    (
        "UpdateFloorNormal__5Yabby",
        Ok(
            "Yabby::UpdateFloorNormal(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9FrillBike",
        Ok(
            "ModuleInfo<FrillBike> virtual table",
        ),
    ),
    (
        "EnemyObject_LoadResources__FP8KromeIni",
        Ok(
            "EnemyObject_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IsReady__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::IsReady(void)",
        ),
    ),
    (
        "_vt$9Speedboat",
        Ok(
            "Speedboat virtual table",
        ),
    ),
    (
        "TimeTrial_StopTimeAttack__Fv",
        Ok(
            "TimeTrial_StopTimeAttack(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_11ThinIceProp$states",
        Ok(
            "global constructors keyed to ThinIceProp::states",
        ),
    ),
    (
        "MungCompare__FPUc",
        Ok(
            "MungCompare(unsigned char *)",
        ),
    ),
    (
        "Fly__4Moth",
        Ok(
            "Moth::Fly(void)",
        ),
    ),
    (
        "Init__11PathManagerSc",
        Ok(
            "PathManager::Init(signed char)",
        ),
    ),
    (
        "Update__12EnemySpawner",
        Ok(
            "EnemySpawner::Update(void)",
        ),
    ),
    (
        "RunDeinit__3Sly",
        Ok(
            "Sly::RunDeinit(void)",
        ),
    ),
    (
        "_14YabbyObjective$bCompleted",
        Ok(
            "YabbyObjective::bCompleted",
        ),
    ),
    (
        "StartAnimation__2TyP12MKAnimScriptP6MKAnimib",
        Ok(
            "Ty::StartAnimation(MKAnimScript *, MKAnim *, int, bool)",
        ),
    ),
    (
        "__deregister_frame",
        Err(
            InvalidSpecialMethod(
                "deregister_frame",
            ),
        ),
    ),
    (
        "CheckEvents__7C3Actor",
        Ok(
            "C3Actor::CheckEvents(void)",
        ),
    ),
    (
        "SaveStates_GetThunderEgg__FPci",
        Ok(
            "SaveStates_GetThunderEgg(char *, int)",
        ),
    ),
    (
        "acosf",
        Err(
            NotMangled,
        ),
    ),
    (
        "_15SnowBallExplode$pMat",
        Ok(
            "SnowBallExplode::pMat",
        ),
    ),
    (
        "Ibis_LoadResources__Fv",
        Ok(
            "Ibis_LoadResources(void)",
        ),
    ),
    (
        "ModelRender_CFT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseInit__5Skink",
        Ok(
            "Skink::ChaseInit(void)",
        ),
    ),
    (
        "Idle__4Moth",
        Ok(
            "Moth::Idle(void)",
        ),
    ),
    (
        "_vt$4Drum",
        Ok(
            "Drum virtual table",
        ),
    ),
    (
        "Wake_Draw__Fv",
        Ok(
            "Wake_Draw(void)",
        ),
    ),
    (
        "__rtti_func",
        Err(
            InvalidSpecialMethod(
                "rtti_func",
            ),
        ),
    ),
    (
        "gModelDrawGrid",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNextPoint__7C3Actor",
        Ok(
            "C3Actor::GetNextPoint(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7SeaMine",
        Ok(
            "ModuleInfo<SeaMine>::Init(void)",
        ),
    ),
    (
        "Shatterable_LoadResources__FP8KromeIni",
        Ok(
            "Shatterable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "FrontEnd_Extras_Draw__Fv",
        Ok(
            "FrontEnd_Extras_Draw(void)",
        ),
    ),
    (
        "CameraOverrideFixedRail_End__Fv",
        Ok(
            "CameraOverrideFixedRail_End(void)",
        ),
    ),
    (
        "SetFakeFloor__2Ty",
        Ok(
            "Ty::SetFakeFloor(void)",
        ),
    ),
    (
        "Util_BinarySearch__FPvT0iiPFPvPv_i",
        Ok(
            "Util_BinarySearch(void *, void *, int, int, int (*)(void *, void *))",
        ),
    ),
    (
        "GenerateEnvMapUV__11MKWaterPropP7WaterUVP6VectorT1T2fQ211MKWaterType10RenderType",
        Ok(
            "MKWaterProp::GenerateEnvMapUV(WaterUV *, Vector *, WaterUV *, Vector *, float, MKWaterType::RenderType)",
        ),
    ),
    (
        "FollowBoss__8WhiteBat",
        Ok(
            "WhiteBat::FollowBoss(void)",
        ),
    ),
    (
        "GetStartPos__6Friend",
        Ok(
            "Friend::GetStartPos(void)",
        ),
    ),
    (
        "Load__8LavaDescP8KromeIni",
        Ok(
            "LavaDesc::Load(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13DDACheckpoint",
        Ok(
            "ModuleInfo<DDACheckpoint>::Init(void)",
        ),
    ),
    (
        "SpawnWaterfallSplash__21WaterfallStreamStructP6VectorT1ifP16Blitter_ParticlePQ221WaterfallStreamStruct10SplashData",
        Ok(
            "WaterfallStreamStruct::SpawnWaterfallSplash(Vector *, Vector *, int, float, Blitter_Particle *, WaterfallStreamStruct::SplashData *)",
        ),
    ),
    (
        "_GLOBAL_$I$WaterVolume_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WaterVolume_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PauseScreen_Options_Deinit__Fv",
        Ok(
            "PauseScreen_Options_Deinit(void)",
        ),
    ),
    (
        "_vt$18WaterPipeObjective",
        Ok(
            "WaterPipeObjective virtual table",
        ),
    ),
    (
        "sceWrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__13SkinkDropTail",
        Ok(
            "SkinkDropTail::Update(void)",
        ),
    ),
    (
        "HeatFlare_Update__Fv",
        Ok(
            "HeatFlare_Update(void)",
        ),
    ),
    (
        "_vt$6Sheila",
        Ok(
            "Sheila virtual table",
        ),
    ),
    (
        "CheckEvents__7SnowRoo",
        Ok(
            "SnowRoo::CheckEvents(void)",
        ),
    ),
    (
        "FlameThrower_LoadResources__FP8KromeIni",
        Ok(
            "FlameThrower_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$4Jeep",
        Ok(
            "Jeep virtual table",
        ),
    ),
    (
        "Bite__2Ty",
        Ok(
            "Ty::Bite(void)",
        ),
    ),
    (
        "pCounterModelSubObjectsScissored",
        Err(
            NotMangled,
        ),
    ),
    (
        "Copy__5ImageP5Imageiiiiii",
        Ok(
            "Image::Copy(Image *, int, int, int, int, int, int)",
        ),
    ),
    (
        "DrawModules__17GameObjectManager",
        Ok(
            "GameObjectManager::DrawModules(void)",
        ),
    ),
    (
        "Deinit__14CameraOverrideP16CameraDescriptori",
        Ok(
            "CameraOverride::Deinit(CameraDescriptor *, int)",
        ),
    ),
    (
        "UpdateShake__12StaticFXProp",
        Ok(
            "StaticFXProp::UpdateShake(void)",
        ),
    ),
    (
        "MORAY_EEL_HOLE_MDL",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__17LineOfSightObjectP6VectorT1T1",
        Ok(
            "LineOfSightObject::Reset(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12EnemySpawner",
        Ok(
            "ModuleInfo<EnemySpawner> virtual table",
        ),
    ),
    (
        "FrontEnd_ExitScreen__F17tagFrontEndScreen",
        Ok(
            "FrontEnd_ExitScreen(tagFrontEndScreen)",
        ),
    ),
    (
        "BeachHut_LoadResources__FP8KromeIni",
        Ok(
            "BeachHut_LoadResources(KromeIni *)",
        ),
    ),
    (
        "BonusPickup_Scale__FP11BonusPickupf",
        Ok(
            "BonusPickup_Scale(BonusPickup *, float)",
        ),
    ),
    (
        "TyMemCard_SaveGame__Fv",
        Ok(
            "TyMemCard_SaveGame(void)",
        ),
    ),
    (
        "TimeTrial_Active__Fv",
        Ok(
            "TimeTrial_Active(void)",
        ),
    ),
    (
        "Draw__9ShoalFish",
        Ok(
            "ShoalFish::Draw(void)",
        ),
    ),
    (
        "Assign__11GrasshopperP13CritterField2",
        Ok(
            "Grasshopper::Assign(CritterField2 *)",
        ),
    ),
    (
        "Idle__15ZoneBlockerProp",
        Ok(
            "ZoneBlockerProp::Idle(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14CrikeyCanisterPv",
        Ok(
            "ModuleInfo<CrikeyCanister>::ConstructObject(void *)",
        ),
    ),
    (
        "SetAnim__7FurnaceUi",
        Ok(
            "Furnace::SetAnim(unsigned int)",
        ),
    ),
    (
        "ConstructObject__11GameObjDescPv",
        Ok(
            "GameObjDesc::ConstructObject(void *)",
        ),
    ),
    (
        "Message__13AnimatingPropP9MKMessage",
        Ok(
            "AnimatingProp::Message(MKMessage *)",
        ),
    ),
    (
        "DodgeInit__5Skink",
        Ok(
            "Skink::DodgeInit(void)",
        ),
    ),
    (
        "StaticSpikes_Init__Fv",
        Ok(
            "StaticSpikes_Init(void)",
        ),
    ),
    (
        "__eh_rtime_match",
        Err(
            InvalidSpecialMethod(
                "eh_rtime_match",
            ),
        ),
    ),
    (
        "AddGif_CLAMP_2__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_CLAMP_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "TimeTrial_IntroductionDialog__Fv",
        Ok(
            "TimeTrial_IntroductionDialog(void)",
        ),
    ),
    (
        "Activate__14LevelObjective",
        Ok(
            "LevelObjective::Activate(void)",
        ),
    ),
    (
        "sceInetAddress2Name",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckAlert__10CuttleFish",
        Ok(
            "CuttleFish::CheckAlert(void)",
        ),
    ),
    (
        "MovingUp__14CrikeyCanister",
        Ok(
            "CrikeyCanister::MovingUp(void)",
        ),
    ),
    (
        "SetFakeWall__2TyP6Vector",
        Ok(
            "Ty::SetFakeWall(Vector *)",
        ),
    ),
    (
        "Reset__9StarTrail",
        Ok(
            "StarTrail::Reset(void)",
        ),
    ),
    (
        "LoadDone__7IceRamp",
        Ok(
            "IceRamp::LoadDone(void)",
        ),
    ),
    (
        "NewFailureHandler__Fv",
        Ok(
            "NewFailureHandler(void)",
        ),
    ),
    (
        "InitKnockBack__2Ty",
        Ok(
            "Ty::InitKnockBack(void)",
        ),
    ),
    (
        "Video_CbStrM2V__FP7sceMpegP16sceMpegCbDataStrP5Video",
        Ok(
            "Video_CbStrM2V(sceMpeg *, sceMpegCbDataStr *, Video *)",
        ),
    ),
    (
        "_vt$9FrillBike",
        Ok(
            "FrillBike virtual table",
        ),
    ),
    (
        "FindThrowTargetPos__17BlueTongueThrowerP6VectorT1",
        Ok(
            "BlueTongueThrower::FindThrowTargetPos(Vector *, Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z14MobilePlatformPv",
        Ok(
            "ModuleInfo<MobilePlatform>::ConstructObject(void *)",
        ),
    ),
    (
        "AntHill_Begin__Fv",
        Ok(
            "AntHill_Begin(void)",
        ),
    ),
    (
        "copysignf",
        Err(
            NotMangled,
        ),
    ),
    (
        "pAtWinMonPrefix",
        Err(
            NotMangled,
        ),
    ),
    (
        "Death__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Death(void)",
        ),
    ),
    (
        "Fall_CanDisableState__10GameCamera",
        Ok(
            "GameCamera::Fall_CanDisableState(void)",
        ),
    ),
    (
        "Idle__4Bull",
        Ok(
            "Bull::Idle(void)",
        ),
    ),
    (
        "ClipPointToField__13CritterField2P6Vectorb",
        Ok(
            "CritterField2::ClipPointToField(Vector *, bool)",
        ),
    ),
    (
        "Init__16FriendDescriptorP14ModuleInfoBasePcT2ii",
        Ok(
            "FriendDescriptor::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "Wait__6Muddie",
        Ok(
            "Muddie::Wait(void)",
        ),
    ),
    (
        "FadeIn__17GalleryScreenDataii",
        Ok(
            "GalleryScreenData::FadeIn(int, int)",
        ),
    ),
    (
        "_GLOBAL_$I$gSceneManager",
        Ok(
            "global constructors keyed to gSceneManager",
        ),
    ),
    (
        "ModelRender_FO1T_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$LoadDone__15TurningPlatform",
        Ok(
            "global constructors keyed to TurningPlatform::LoadDone(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10ProjectilePv",
        Ok(
            "ModuleInfo<Projectile>::ConstructObject(void *)",
        ),
    ),
    (
        "__swsetup",
        Err(
            InvalidSpecialMethod(
                "swsetup",
            ),
        ),
    ),
    (
        "HurtDeinit__6Crikey",
        Ok(
            "Crikey::HurtDeinit(void)",
        ),
    ),
    (
        "Tools_DrawDropShadow__FP8MaterialP6Vectorffffffffb",
        Ok(
            "Tools_DrawDropShadow(Material *, Vector *, float, float, float, float, float, float, float, float, bool)",
        ),
    ),
    (
        "BushPig_LoadResources__Fv",
        Ok(
            "BushPig_LoadResources(void)",
        ),
    ),
    (
        "EnableIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "TeleportInit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::TeleportInit(void)",
        ),
    ),
    (
        "Particles__12DialogEffect",
        Ok(
            "DialogEffect::Particles(void)",
        ),
    ),
    (
        "MKMemoryCard_Save__FiiPvi",
        Ok(
            "MKMemoryCard_Save(int, int, void *, int)",
        ),
    ),
    (
        "StaticProp_LoadResources__FP8KromeIni",
        Ok(
            "StaticProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "InitIdleStand__2Ty",
        Ok(
            "Ty::InitIdleStand(void)",
        ),
    ),
    (
        "FrontEnd_LoadGame_Init__Fv",
        Ok(
            "FrontEnd_LoadGame_Init(void)",
        ),
    ),
    (
        "atan",
        Err(
            NotMangled,
        ),
    ),
    (
        "Crikey_GetPos__Fv",
        Ok(
            "Crikey_GetPos(void)",
        ),
    ),
    (
        "LoadDone__14YabbyObjective",
        Ok(
            "YabbyObjective::LoadDone(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7BoulderPv",
        Ok(
            "ModuleInfo<Boulder>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__12SpeedUpCrate",
        Ok(
            "SpeedUpCrate::Reset(void)",
        ),
    ),
    (
        "LedgeMoved__15LedgePullUpDataP6Vectorf",
        Ok(
            "LedgePullUpData::LedgeMoved(Vector *, float)",
        ),
    ),
    (
        "StaticSpikes_Deinit__Fv",
        Ok(
            "StaticSpikes_Deinit(void)",
        ),
    ),
    (
        "sceInetGetNameServers",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetTyAttacker__5Rufus",
        Ok(
            "Rufus::GetTyAttacker(void)",
        ),
    ),
    (
        "IdleInit__11ThinIceProp",
        Ok(
            "ThinIceProp::IdleInit(void)",
        ),
    ),
    (
        "SaveStates_Init__Fv",
        Ok(
            "SaveStates_Init(void)",
        ),
    ),
    (
        "Fast__14WaterSlideData",
        Ok(
            "WaterSlideData::Fast(void)",
        ),
    ),
    (
        "RFU008",
        Err(
            NotMangled,
        ),
    ),
    (
        "_iRotateThreadReadyQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpaceAvailable__12StreamBuffer",
        Ok(
            "StreamBuffer::SpaceAvailable(void)",
        ),
    ),
    (
        "ClipPoly__FP6VectorT0PiPFP6Vectorf_ff",
        Ok(
            "ClipPoly(Vector *, Vector *, int *, float (*)(Vector *, float), float)",
        ),
    ),
    (
        "IsTyVisible__5Sharkf",
        Ok(
            "Shark::IsTyVisible(float)",
        ),
    ),
    (
        "LoadDone__6GasJet",
        Ok(
            "GasJet::LoadDone(void)",
        ),
    ),
    (
        "PunchCombo__12BunyipStruct",
        Ok(
            "BunyipStruct::PunchCombo(void)",
        ),
    ),
    (
        "sprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__6Groper",
        Ok(
            "Groper::Deinit(void)",
        ),
    ),
    (
        "Init__21ConditionalScriptPropP11GameObjDesc",
        Ok(
            "ConditionalScriptProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "Play__10SoundEventP6VectorUi",
        Ok(
            "SoundEvent::Play(Vector *, unsigned int)",
        ),
    ),
    (
        "ConvertRotation__12QuatRotationP12AxisRotation",
        Ok(
            "QuatRotation::ConvertRotation(AxisRotation *)",
        ),
    ),
    (
        "Input_WasDirectionReleased__F12InputDevicesiP12InputDevices",
        Ok(
            "Input_WasDirectionReleased(InputDevices, int, InputDevices *)",
        ),
    ),
    (
        "ModelRender_FO1_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetVertexColorFromPoly__FP6VectorT0P4Item",
        Ok(
            "GetVertexColorFromPoly(Vector *, Vector *, Item *)",
        ),
    ),
    (
        "saveGameInfoDisp",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__8PubeCrabP9MKMessage",
        Ok(
            "PubeCrab::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__11TriggerProp",
        Ok(
            "TriggerProp::Reset(void)",
        ),
    ),
    (
        "Slide__2Ty",
        Ok(
            "Ty::Slide(void)",
        ),
    ),
    (
        "LoadDone__6Fluffy",
        Ok(
            "Fluffy::LoadDone(void)",
        ),
    ),
    (
        "Warning__7SeaMine",
        Ok(
            "SeaMine::Warning(void)",
        ),
    ),
    (
        "UpdateProps__14MKSceneManager",
        Ok(
            "MKSceneManager::UpdateProps(void)",
        ),
    ),
    (
        "sceGsResetGraph",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKMemoryCard_CalculateBlocks__FiiPi",
        Ok(
            "MKMemoryCard_CalculateBlocks(int, int, int *)",
        ),
    ),
    (
        "AddGif_AD_CLAMP_2__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_CLAMP_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Breathing__12TurtleStruct",
        Ok(
            "TurtleStruct::Breathing(void)",
        ),
    ),
    (
        "Torch_LoadResources__FP8KromeIni",
        Ok(
            "Torch_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Blitter_ParticleRender_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResolveHit__14RockProjectile",
        Ok(
            "RockProjectile::ResolveHit(void)",
        ),
    ),
    (
        "AfterDunny__7BushPig",
        Ok(
            "BushPig::AfterDunny(void)",
        ),
    ),
    (
        "SkipData__12StreamBufferi",
        Ok(
            "StreamBuffer::SkipData(int)",
        ),
    ),
    (
        "ModelRender_FT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14FireworksCrateP11GameObjDesc",
        Ok(
            "FireworksCrate::Init(GameObjDesc *)",
        ),
    ),
    (
        "Blitter_Line3D_Draw_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadMadFile__8MaterialPc",
        Ok(
            "Material::LoadMadFile(char *)",
        ),
    ),
    (
        "CheckForHit__14RockProjectile",
        Ok(
            "RockProjectile::CheckForHit(void)",
        ),
    ),
    (
        "Init__6BasketP11GameObjDesc",
        Ok(
            "Basket::Init(GameObjDesc *)",
        ),
    ),
    (
        "StartCatch__15BoomerangWeaponP9Boomerang",
        Ok(
            "BoomerangWeapon::StartCatch(Boomerang *)",
        ),
    ),
    (
        "PrimeStrip__16ModelExplorer_P2",
        Ok(
            "ModelExplorer_P2::PrimeStrip(void)",
        ),
    ),
    (
        "SetPos__10ProjectileP6Vector",
        Ok(
            "Projectile::SetPos(Vector *)",
        ),
    ),
    (
        "MKMemoryCard_CreateIconSys__Fv",
        Ok(
            "MKMemoryCard_CreateIconSys(void)",
        ),
    ),
    (
        "scePadSetActAlign",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7C3Chest",
        Ok(
            "ModuleInfo<C3Chest> virtual table",
        ),
    ),
    (
        "Draw2D__14Blitter_TriFanif",
        Ok(
            "Blitter_TriFan::Draw2D(int, float)",
        ),
    ),
    (
        "LassoPullIn__5Lasso",
        Ok(
            "Lasso::LassoPullIn(void)",
        ),
    ),
    (
        "ReplicateLODData__13LODDescriptorii",
        Ok(
            "LODDescriptor::ReplicateLODData(int, int)",
        ),
    ),
    (
        "AddIceberg__14IceBlockStructP6Vector",
        Ok(
            "IceBlockStruct::AddIceberg(Vector *)",
        ),
    ),
    (
        "CurrWayPt__17WaterSlideManager",
        Ok(
            "WaterSlideManager::CurrWayPt(void)",
        ),
    ),
    (
        "__fixdfdi",
        Err(
            InvalidSpecialMethod(
                "fixdfdi",
            ),
        ),
    ),
    (
        "ReferThreadStatus",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsComment__6Parser",
        Ok(
            "Parser::IsComment(void)",
        ),
    ),
    (
        "Flinch__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Flinch(void)",
        ),
    ),
    (
        "Init__17GalleryScreenDataffffi",
        Ok(
            "GalleryScreenData::Init(float, float, float, float, int)",
        ),
    ),
    (
        "MagnetisedInit__11BonusPickup",
        Ok(
            "BonusPickup::MagnetisedInit(void)",
        ),
    ),
    (
        "Dodge__7SnowRoo",
        Ok(
            "SnowRoo::Dodge(void)",
        ),
    ),
    (
        "Deinit__10SynkerFrog",
        Ok(
            "SynkerFrog::Deinit(void)",
        ),
    ),
    (
        "FallDive__2Ty",
        Ok(
            "Ty::FallDive(void)",
        ),
    ),
    (
        "_sysbitMarker",
        Err(
            NotMangled,
        ),
    ),
    (
        "Chase__3Eel",
        Ok(
            "Eel::Chase(void)",
        ),
    ),
    (
        "GuideBarrel_HideAll__Fv",
        Ok(
            "GuideBarrel_HideAll(void)",
        ),
    ),
    (
        "ModelRender_ACExyW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "SoundBank_Init__Fv",
        Ok(
            "SoundBank_Init(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9RedButton",
        Ok(
            "ModuleInfo<RedButton> virtual table",
        ),
    ),
    (
        "Bitten__4Drum",
        Ok(
            "Drum::Bitten(void)",
        ),
    ),
    (
        "sceSifIsAliveIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitModule__7Texture",
        Ok(
            "Texture::InitModule(void)",
        ),
    ),
    (
        "ThrowRock__10BlueTongue",
        Ok(
            "BlueTongue::ThrowRock(void)",
        ),
    ),
    (
        "Update__10ScriptProp",
        Ok(
            "ScriptProp::Update(void)",
        ),
    ),
    (
        "Message__8PlatformP9MKMessage",
        Ok(
            "Platform::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Reset(void)",
        ),
    ),
    (
        "descr_cast__H1ZP17CritterField2Desc_P16MKPropDescriptor_X01",
        Ok(
            "CritterField2Desc * descr_cast<CritterField2Desc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Activate__11EnemyObject",
        Ok(
            "EnemyObject::Activate(void)",
        ),
    ),
    (
        "MiniGame_C2_Update__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C2_Update(void)",
        ),
    ),
    (
        "LoadTGA__5ImagePc",
        Ok(
            "Image::LoadTGA(char *)",
        ),
    ),
    (
        "LoadDone__11WeatherProp",
        Ok(
            "WeatherProp::LoadDone(void)",
        ),
    ),
    (
        "FillUp__8TyHealth",
        Ok(
            "TyHealth::FillUp(void)",
        ),
    ),
    (
        "Reset__14BoomerangTrail",
        Ok(
            "BoomerangTrail::Reset(void)",
        ),
    ),
    (
        "GCT_LoadInt__FP12KromeIniLinePcPi",
        Ok(
            "GCT_LoadInt(KromeIniLine *, char *, int *)",
        ),
    ),
    (
        "CalculateEnvelope__24SimpleParticleSystemType",
        Ok(
            "SimpleParticleSystemType::CalculateEnvelope(void)",
        ),
    ),
    (
        "Draw__11Grasshopper",
        Ok(
            "Grasshopper::Draw(void)",
        ),
    ),
    (
        "LoadLine__13CausticEffectP12KromeIniLine",
        Ok(
            "CausticEffect::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_sysbitInit",
        Err(
            NotMangled,
        ),
    ),
    (
        "DataAvailable__12StreamBuffer",
        Ok(
            "StreamBuffer::DataAvailable(void)",
        ),
    ),
    (
        "IsNearSq__14EnemyRefPointsP6Vectorf",
        Ok(
            "EnemyRefPoints::IsNearSq(Vector *, float)",
        ),
    ),
    (
        "CancelWakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__8BeachHut",
        Ok(
            "BeachHut::Update(void)",
        ),
    ),
    (
        "sceMcSetFileInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__8LilNeddy",
        Ok(
            "LilNeddy::Reset(void)",
        ),
    ),
    (
        "ShowPropDeinit__12DialogEffect",
        Ok(
            "DialogEffect::ShowPropDeinit(void)",
        ),
    ),
    (
        "Send__3Dma",
        Ok(
            "Dma::Send(void)",
        ),
    ),
    (
        "Init__7C3ActorP11GameObjDesc",
        Ok(
            "C3Actor::Init(GameObjDesc *)",
        ),
    ),
    (
        "Death__10SnowSpider",
        Ok(
            "SnowSpider::Death(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5SpearPv",
        Ok(
            "ModuleInfo<Spear>::ConstructObject(void *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11FrillLizardPv",
        Ok(
            "ModuleInfo<FrillLizard>::ConstructObject(void *)",
        ),
    ),
    (
        "Alert_Init__9BadBoonie",
        Ok(
            "BadBoonie::Alert_Init(void)",
        ),
    ),
    (
        "Gem_DrawModel__FP6VectorT011ElementType",
        Ok(
            "Gem_DrawModel(Vector *, Vector *, ElementType)",
        ),
    ),
    (
        "DieDeinit__4Bull",
        Ok(
            "Bull::DieDeinit(void)",
        ),
    ),
    (
        "Deinit__10WhirlyWind",
        Ok(
            "WhirlyWind::Deinit(void)",
        ),
    ),
    (
        "_vt$10TumbleWeed",
        Ok(
            "TumbleWeed virtual table",
        ),
    ),
    (
        "Delete__12SpeedUpCrate",
        Ok(
            "SpeedUpCrate::Delete(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11Kaboomerang",
        Ok(
            "ModuleInfo<Kaboomerang> virtual table",
        ),
    ),
    (
        "Lasso__9FrillBike",
        Ok(
            "FrillBike::Lasso(void)",
        ),
    ),
    (
        "Update__6Spider",
        Ok(
            "Spider::Update(void)",
        ),
    ),
    (
        "Grasshopper_LoadResources__Fv",
        Ok(
            "Grasshopper_LoadResources(void)",
        ),
    ),
    (
        "KissOfDeathEnd__9ShadowBat",
        Ok(
            "ShadowBat::KissOfDeathEnd(void)",
        ),
    ),
    (
        "Reset__5Rhino",
        Ok(
            "Rhino::Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7SeaMinePv",
        Ok(
            "ModuleInfo<SeaMine>::ConstructObject(void *)",
        ),
    ),
    (
        "Death__3Bat",
        Ok(
            "Bat::Death(void)",
        ),
    ),
    (
        "LoadLine__11WeatherPropP12KromeIniLine",
        Ok(
            "WeatherProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Elle_LoadResources__FP8KromeIni",
        Ok(
            "Elle_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Jump__7C3Actor",
        Ok(
            "C3Actor::Jump(void)",
        ),
    ),
    (
        "MKGrassRender_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8PubeCrab",
        Ok(
            "ModuleInfo<PubeCrab> virtual table",
        ),
    ),
    (
        "DeinitEscape__3Emu",
        Ok(
            "Emu::DeinitEscape(void)",
        ),
    ),
    (
        "_write_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Load__7DataVal",
        Ok(
            "DataVal::Load(void)",
        ),
    ),
    (
        "Reset__7Coconut",
        Ok(
            "Coconut::Reset(void)",
        ),
    ),
    (
        "ModelRender_ACWT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8Material$matRenderMarker",
        Ok(
            "Material::matRenderMarker",
        ),
    ),
    (
        "InitModule__4Font",
        Ok(
            "Font::InitModule(void)",
        ),
    ),
    (
        "_vt$11WaterVolume",
        Ok(
            "WaterVolume virtual table",
        ),
    ),
    (
        "GetDesc__10Projectile",
        Ok(
            "Projectile::GetDesc(void)",
        ),
    ),
    (
        "Deinit__7SeaMine",
        Ok(
            "SeaMine::Deinit(void)",
        ),
    ),
    (
        "Boomerang_GetName__F13BoomerangType",
        Ok(
            "Boomerang_GetName(BoomerangType)",
        ),
    ),
    (
        "kbAndMouse",
        Err(
            NotMangled,
        ),
    ),
    (
        "EndSession__10DDASession",
        Ok(
            "DDASession::EndSession(void)",
        ),
    ),
    (
        "RayCollide__10GameCameraP6VectorT113CollisionModei",
        Ok(
            "GameCamera::RayCollide(Vector *, Vector *, CollisionMode, int)",
        ),
    ),
    (
        "_13MusicalIcicle$miStates",
        Ok(
            "MusicalIcicle::miStates",
        ),
    ),
    (
        "Death__2Ty",
        Ok(
            "Ty::Death(void)",
        ),
    ),
    (
        "_b2d",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__6Sheila",
        Ok(
            "Sheila::Reset(void)",
        ),
    ),
    (
        "Reset__7BushPig",
        Ok(
            "BushPig::Reset(void)",
        ),
    ),
    (
        "LensFlare_Deinit__Fv",
        Ok(
            "LensFlare_Deinit(void)",
        ),
    ),
    (
        "_vt$7C1Water",
        Ok(
            "C1Water virtual table",
        ),
    ),
    (
        "GetPos__10GameObject",
        Ok(
            "GameObject::GetPos(void)",
        ),
    ),
    (
        "SpawnCrateChunk__17TyParticleManagerP6VectorT1b",
        Ok(
            "TyParticleManager::SpawnCrateChunk(Vector *, Vector *, bool)",
        ),
    ),
    (
        "actorInfoCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "Main_LoadStaticResources__Fv",
        Ok(
            "Main_LoadStaticResources(void)",
        ),
    ),
    (
        "__tiUc",
        Ok(
            "unsigned char type_info node",
        ),
    ),
    (
        "AddGif_AD_TEX2_2__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX2_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7SeaMine",
        Ok(
            "ModuleInfo<SeaMine> virtual table",
        ),
    ),
    (
        "CheckEvents__12BunyipStruct",
        Ok(
            "BunyipStruct::CheckEvents(void)",
        ),
    ),
    (
        "Draw__10GameObject",
        Ok(
            "GameObject::Draw(void)",
        ),
    ),
    (
        "PauseScreen_LoadResources__Fv",
        Ok(
            "PauseScreen_LoadResources(void)",
        ),
    ),
    (
        "QuickSandTransition__2Ty",
        Ok(
            "Ty::QuickSandTransition(void)",
        ),
    ),
    (
        "Init__4BullP11GameObjDesc",
        Ok(
            "Bull::Init(GameObjDesc *)",
        ),
    ),
    (
        "Particle_WaterMist_Init__FPP14ParticleSystemP6VectorP14BoundingVolumef",
        Ok(
            "Particle_WaterMist_Init(ParticleSystem **, Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "Draw__10DropShadow",
        Ok(
            "DropShadow::Draw(void)",
        ),
    ),
    (
        "SwitchToAquaRang__2Ty",
        Ok(
            "Ty::SwitchToAquaRang(void)",
        ),
    ),
    (
        "DampenedTurn__11EnemyObjectf",
        Ok(
            "EnemyObject::DampenedTurn(float)",
        ),
    ),
    (
        "Spider_Deinit__Fv",
        Ok(
            "Spider_Deinit(void)",
        ),
    ),
    (
        "UpdateLocalToWorldMatrix__2Ty",
        Ok(
            "Ty::UpdateLocalToWorldMatrix(void)",
        ),
    ),
    (
        "Reset__14YabbyObjective",
        Ok(
            "YabbyObjective::Reset(void)",
        ),
    ),
    (
        "MovingInit__8CableCar",
        Ok(
            "CableCar::MovingInit(void)",
        ),
    ),
    (
        "_initSeq",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__12EventMessageP12KromeIniLinePCc",
        Ok(
            "EventMessage::LoadLine(KromeIniLine *, char const *)",
        ),
    ),
    (
        "setlocale",
        Err(
            NotMangled,
        ),
    ),
    (
        "PreUpdate__11EnemyObject",
        Ok(
            "EnemyObject::PreUpdate(void)",
        ),
    ),
    (
        "_11ThinIceProp$states",
        Ok(
            "ThinIceProp::states",
        ),
    ),
    (
        "Deinit__18BezierPathFollower",
        Ok(
            "BezierPathFollower::Deinit(void)",
        ),
    ),
    (
        "LoadRot__8ElevatorP12KromeIniLine",
        Ok(
            "Elevator::LoadRot(KromeIniLine *)",
        ),
    ),
    (
        "Hit__6Basket",
        Ok(
            "Basket::Hit(void)",
        ),
    ),
    (
        "StopExclamation__17TyParticleManagerb",
        Ok(
            "TyParticleManager::StopExclamation(bool)",
        ),
    ),
    (
        "_8Material$frameCounter",
        Ok(
            "Material::frameCounter",
        ),
    ),
    (
        "SetAlphaLightIntensity__5Modelif",
        Ok(
            "Model::SetAlphaLightIntensity(int, float)",
        ),
    ),
    (
        "Enemies_DeinitBoundingRegions__Fv",
        Ok(
            "Enemies_DeinitBoundingRegions(void)",
        ),
    ),
    (
        "GreySmoke_LoadResources__Fv",
        Ok(
            "GreySmoke_LoadResources(void)",
        ),
    ),
    (
        "Init__8MorayEelP11GameObjDesc",
        Ok(
            "MorayEel::Init(GameObjDesc *)",
        ),
    ),
    (
        "LoadLine__6ShazzaP12KromeIniLine",
        Ok(
            "Shazza::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LandDeinit__9ShadowBat",
        Ok(
            "ShadowBat::LandDeinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7CaveBat",
        Ok(
            "ModuleInfo<CaveBat> virtual table",
        ),
    ),
    (
        "ChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "System_GetNumParameters__Fv",
        Ok(
            "System_GetNumParameters(void)",
        ),
    ),
    (
        "FlyDeinit__5Roach",
        Ok(
            "Roach::FlyDeinit(void)",
        ),
    ),
    (
        "Tools_TestFloor__FP6VectorP15CollisionResultfb",
        Ok(
            "Tools_TestFloor(Vector *, CollisionResult *, float, bool)",
        ),
    ),
    (
        "ExactMag__FPC6VectorT0",
        Ok(
            "ExactMag(Vector const *, Vector const *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6TargetPv",
        Ok(
            "ModuleInfo<Target>::ConstructObject(void *)",
        ),
    ),
    (
        "Sound_SetMasterVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__12TurtleStructP6Vectorffb",
        Ok(
            "TurtleStruct::Init(Vector *, float, float, bool)",
        ),
    ),
    (
        "Opening_Init__4Gate",
        Ok(
            "Gate::Opening_Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11MetalSpikes",
        Ok(
            "ModuleInfo<MetalSpikes>::Init(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6JuliusPv",
        Ok(
            "ModuleInfo<Julius>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__10WaterSlide",
        Ok(
            "WaterSlide::Init(void)",
        ),
    ),
    (
        "IsCrossedBy__16FinishLineStructP6Vector",
        Ok(
            "FinishLineStruct::IsCrossedBy(Vector *)",
        ),
    ),
    (
        "WaterDragon_MaxWaterDragons",
        Err(
            NotMangled,
        ),
    ),
    (
        "EventTriggers_ShowAll__Fv",
        Ok(
            "EventTriggers_ShowAll(void)",
        ),
    ),
    (
        "Draw__13WobbleTextureP8Materialb",
        Ok(
            "WobbleTexture::Draw(Material *, bool)",
        ),
    ),
    (
        "_GLOBAL_$I$Neddy_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Neddy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MKParticleGen_Render_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "SendFromInterrupt__3Dma",
        Ok(
            "Dma::SendFromInterrupt(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6PortalPv",
        Ok(
            "ModuleInfo<Portal>::ConstructObject(void *)",
        ),
    ),
    (
        "spikeyIce",
        Err(
            NotMangled,
        ),
    ),
    (
        "Idle__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::Idle(void)",
        ),
    ),
    (
        "Cross__6VectorP6VectorT1",
        Ok(
            "Vector::Cross(Vector *, Vector *)",
        ),
    ),
    (
        "IdleStand__2Ty",
        Ok(
            "Ty::IdleStand(void)",
        ),
    ),
    (
        "_sceFs_q",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateActors__12DialogPlayer",
        Ok(
            "DialogPlayer::UpdateActors(void)",
        ),
    ),
    (
        "AngleDifference__Fff",
        Ok(
            "AngleDifference(float, float)",
        ),
    ),
    (
        "_vt$10LavaEffect",
        Ok(
            "LavaEffect virtual table",
        ),
    ),
    (
        "GetThunderEggCount__8GameData11ElementType",
        Ok(
            "GameData::GetThunderEggCount(ElementType)",
        ),
    ),
    (
        "AddGif_AD_TEXFLUSH__3Dma",
        Ok(
            "Dma::AddGif_AD_TEXFLUSH(void)",
        ),
    ),
    (
        "MKGrass_GetGrassTypeId__Fi",
        Ok(
            "MKGrass_GetGrassTypeId(int)",
        ),
    ),
    (
        "_vt$4Rock",
        Ok(
            "Rock virtual table",
        ),
    ),
    (
        "RotateTorso__6Fluffy",
        Ok(
            "Fluffy::RotateTorso(void)",
        ),
    ),
    (
        "Reeds",
        Err(
            NotMangled,
        ),
    ),
    (
        "StartAnimation__11EnemyObjectP6MKAnim",
        Ok(
            "EnemyObject::StartAnimation(MKAnim *)",
        ),
    ),
    (
        "GetGoldenCog__F13GoldenCogType",
        Ok(
            "GetGoldenCog(GoldenCogType)",
        ),
    ),
    (
        "Open_Update__4Gate",
        Ok(
            "Gate::Open_Update(void)",
        ),
    ),
    (
        "MKWaterManager_Deinit__Fv",
        Ok(
            "MKWaterManager_Deinit(void)",
        ),
    ),
    (
        "UpdateSound__6Fluffy",
        Ok(
            "Fluffy::UpdateSound(void)",
        ),
    ),
    (
        "Load__12PlatformDescP8KromeIni",
        Ok(
            "PlatformDesc::Load(KromeIni *)",
        ),
    ),
    (
        "_GLOBAL_$I$CrikeyProps_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to CrikeyProps_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MoveGreenToAlpha__4View",
        Ok(
            "View::MoveGreenToAlpha(void)",
        ),
    ),
    (
        "Fall_RaiseHeight_SetSource__10GameCamera",
        Ok(
            "GameCamera::Fall_RaiseHeight_SetSource(void)",
        ),
    ),
    (
        "Happy__8KoalaKid",
        Ok(
            "KoalaKid::Happy(void)",
        ),
    ),
    (
        "Tools_SquareDistanceFromLine__FP6VectorT0T0",
        Ok(
            "Tools_SquareDistanceFromLine(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "SetGsCrt",
        Err(
            NotMangled,
        ),
    ),
    (
        "UploadToDrawBuffer__7Texture",
        Ok(
            "Texture::UploadToDrawBuffer(void)",
        ),
    ),
    (
        "Reset__12TurtleStruct",
        Ok(
            "TurtleStruct::Reset(void)",
        ),
    ),
    (
        "Level_ParseRot__FP12KromeIniLineP6Vector",
        Ok(
            "Level_ParseRot(KromeIniLine *, Vector *)",
        ),
    ),
    (
        "UploadVUDrawData__14ParticleSystem",
        Ok(
            "ParticleSystem::UploadVUDrawData(void)",
        ),
    ),
    (
        "ToLocal__13PlatformRiderP6Vector",
        Ok(
            "PlatformRider::ToLocal(Vector *)",
        ),
    ),
    (
        "FrillProblem_HouseLost__Fv",
        Ok(
            "FrillProblem_HouseLost(void)",
        ),
    ),
    (
        "_10FootEffect$pSnowMat",
        Ok(
            "FootEffect::pSnowMat",
        ),
    ),
    (
        "Kin_GetDiscreteInitialVelocity__FPfT0T0T0",
        Ok(
            "Kin_GetDiscreteInitialVelocity(float *, float *, float *, float *)",
        ),
    ),
    (
        "CopyRotation__6MatrixP6Matrix",
        Ok(
            "Matrix::CopyRotation(Matrix *)",
        ),
    ),
    (
        "Deinit__6Shadow",
        Ok(
            "Shadow::Deinit(void)",
        ),
    ),
    (
        "LoadDone__11Collapsible",
        Ok(
            "Collapsible::LoadDone(void)",
        ),
    ),
    (
        "Weather_Update__Fv",
        Ok(
            "Weather_Update(void)",
        ),
    ),
    (
        "Destroy__t7PtrList1Z9AnimationP9Animation",
        Ok(
            "PtrList<Animation>::Destroy(Animation *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z10SpiderDirt",
        Ok(
            "ModuleInfo<SpiderDirt> virtual table",
        ),
    ),
    (
        "IdleInit__8Sentinel",
        Ok(
            "Sentinel::IdleInit(void)",
        ),
    ),
    (
        "Tools_DebugPtLine__FG6VectorT0fiif",
        Ok(
            "Tools_DebugPtLine(Vector, Vector, float, int, int, float)",
        ),
    ),
    (
        "_GLOBAL_$I$_10NinjaGecko$nStarObj",
        Ok(
            "global constructors keyed to NinjaGecko::nStarObj",
        ),
    ),
    (
        "Debug__4Tick",
        Ok(
            "Tick::Debug(void)",
        ),
    ),
    (
        "FileSys_Open__FPcPib",
        Ok(
            "FileSys_Open(char *, int *, bool)",
        ),
    ),
    (
        "Chase__11FrillLizard",
        Ok(
            "FrillLizard::Chase(void)",
        ),
    ),
    (
        "_waitIpuIdle",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSetBrokenLink",
        Err(
            NotMangled,
        ),
    ),
    (
        "AttackInit__10SnowSpider",
        Ok(
            "SnowSpider::AttackInit(void)",
        ),
    ),
    (
        "Message__18WaterPipeObjectiveP9MKMessage",
        Ok(
            "WaterPipeObjective::Message(MKMessage *)",
        ),
    ),
    (
        "Ty_Line__FP12KromeIniLine",
        Ok(
            "Ty_Line(KromeIniLine *)",
        ),
    ),
    (
        "GetEventByName__12MKAnimScriptPc",
        Ok(
            "MKAnimScript::GetEventByName(char *)",
        ),
    ),
    (
        "Update__9WaterDrip",
        Ok(
            "WaterDrip::Update(void)",
        ),
    ),
    (
        "GetDesc__10StaticProp",
        Ok(
            "StaticProp::GetDesc(void)",
        ),
    ),
    (
        "MKPackage_IsLoaded__FPf",
        Ok(
            "MKPackage_IsLoaded(float *)",
        ),
    ),
    (
        "GetCurrentHoverPos__9ShadowBat",
        Ok(
            "ShadowBat::GetCurrentHoverPos(void)",
        ),
    ),
    (
        "SwallowedByGroper__2Ty",
        Ok(
            "Ty::SwallowedByGroper(void)",
        ),
    ),
    (
        "Grab__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Grab(void)",
        ),
    ),
    (
        "_sequenceDisplayExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLO1ST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACExy_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "TyMemCard_AutoSaveUpdate__Fv",
        Ok(
            "TyMemCard_AutoSaveUpdate(void)",
        ),
    ),
    (
        "MissCrate__15LearnToDiveData",
        Ok(
            "LearnToDiveData::MissCrate(void)",
        ),
    ),
    (
        "_impure_ptr",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FLT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateFromRawData__7TexturePcPviii",
        Ok(
            "Texture::CreateFromRawData(char *, void *, int, int, int)",
        ),
    ),
    (
        "Punch__10BlueTongueb",
        Ok(
            "BlueTongue::Punch(bool)",
        ),
    ),
    (
        "SetState__15StopwatchStruct14StopwatchState",
        Ok(
            "StopwatchStruct::SetState(StopwatchState)",
        ),
    ),
    (
        "UpdateBoomerangs__2Ty",
        Ok(
            "Ty::UpdateBoomerangs(void)",
        ),
    ),
    (
        "Interrupt2Iop",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$debugNumLowDetailStrips",
        Ok(
            "MKWater::debugNumLowDetailStrips",
        ),
    ),
    (
        "BlueTongue_LoadResources__FP8KromeIni",
        Ok(
            "BlueTongue_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SpikeyIce_Draw__Fv",
        Ok(
            "SpikeyIce_Draw(void)",
        ),
    ),
    (
        "TyAnimTables_InitIndexTable__FP12MKAnimScript",
        Ok(
            "TyAnimTables_InitIndexTable(MKAnimScript *)",
        ),
    ),
    (
        "Reset__8WhiteBat",
        Ok(
            "WhiteBat::Reset(void)",
        ),
    ),
    (
        "LoadDone__13ShadowBatPipe",
        Ok(
            "ShadowBatPipe::LoadDone(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9OpalCrate",
        Ok(
            "ModuleInfo<OpalCrate> virtual table",
        ),
    ),
    (
        "Init__10BurningBatP6VectorP14BoundingVolume",
        Ok(
            "BurningBat::Init(Vector *, BoundingVolume *)",
        ),
    ),
    (
        "FreakOut_Init__6Dennis",
        Ok(
            "Dennis::FreakOut_Init(void)",
        ),
    ),
    (
        "Init__3EmuP11GameObjDesc",
        Ok(
            "Emu::Init(GameObjDesc *)",
        ),
    ),
    (
        "DrawDebug__14ParticleSystemfPf",
        Ok(
            "ParticleSystem::DrawDebug(float, float *)",
        ),
    ),
    (
        "BunyipElder_LoadResources__FP8KromeIni",
        Ok(
            "BunyipElder_LoadResources(KromeIni *)",
        ),
    ),
    (
        "PrevWaypoint__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::PrevWaypoint(void)",
        ),
    ),
    (
        "_13OpalCollector$nNextPoint",
        Ok(
            "OpalCollector::nNextPoint",
        ),
    ),
    (
        "_GLOBAL_$F$before__C9type_infoRC9type_info",
        Ok(
            "type_info::_GLOBAL_$F$before(type_info const &) const",
        ),
    ),
    (
        "RotatePropeller__9Speedboat",
        Ok(
            "Speedboat::RotatePropeller(void)",
        ),
    ),
    (
        "actorInfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "UnderWaterMediumUpdate__2Ty",
        Ok(
            "Ty::UnderWaterMediumUpdate(void)",
        ),
    ),
    (
        "__rtti_ptr",
        Err(
            InvalidSpecialMethod(
                "rtti_ptr",
            ),
        ),
    ),
    (
        "Init__t10ModuleInfo1Z21ConditionalScriptProp",
        Ok(
            "ModuleInfo<ConditionalScriptProp>::Init(void)",
        ),
    ),
    (
        "Begin__17GameObjectManager",
        Ok(
            "GameObjectManager::Begin(void)",
        ),
    ),
    (
        "Init__11BoulderTrapP11GameObjDesc",
        Ok(
            "BoulderTrap::Init(GameObjDesc *)",
        ),
    ),
    (
        "_20WaterfallPointStruct$pointType",
        Ok(
            "WaterfallPointStruct::pointType",
        ),
    ),
    (
        "Deinit__14BoomerangTrail",
        Ok(
            "BoomerangTrail::Deinit(void)",
        ),
    ),
    (
        "_9Avalanche$cloudType",
        Ok(
            "Avalanche::cloudType",
        ),
    ),
    (
        "Init__7SnowRooP11GameObjDesc",
        Ok(
            "SnowRoo::Init(GameObjDesc *)",
        ),
    ),
    (
        "IsTargeting__6TyBiteP5Model",
        Ok(
            "TyBite::IsTargeting(Model *)",
        ),
    ),
    (
        "__ti16__ptmd_type_info",
        Ok(
            "__ptmd_type_info type_info node",
        ),
    ),
    (
        "scalbn",
        Err(
            NotMangled,
        ),
    ),
    (
        "_6Bubble$bubbleType",
        Ok(
            "Bubble::bubbleType",
        ),
    ),
    (
        "FreeAllVRam__7Texture",
        Ok(
            "Texture::FreeAllVRam(void)",
        ),
    ),
    (
        "Reset__4Elle",
        Ok(
            "Elle::Reset(void)",
        ),
    ),
    (
        "AddShadow__14SnowBallAttack",
        Ok(
            "SnowBallAttack::AddShadow(void)",
        ),
    ),
    (
        "LogicUpdate__8KoalaKid",
        Ok(
            "KoalaKid::LogicUpdate(void)",
        ),
    ),
    (
        "LandMediumInit__2Ty",
        Ok(
            "Ty::LandMediumInit(void)",
        ),
    ),
    (
        "Deinit__3Sly",
        Ok(
            "Sly::Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z14ShadowBatSonar",
        Ok(
            "ModuleInfo<ShadowBatSonar> virtual table",
        ),
    ),
    (
        "Collision_AddDynamicModel__FP5ModelP13CollisionInfo",
        Ok(
            "Collision_AddDynamicModel(Model *, CollisionInfo *)",
        ),
    ),
    (
        "sceMpegAddBs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Chase__10SnowSpider",
        Ok(
            "SnowSpider::Chase(void)",
        ),
    ),
    (
        "Deinit__10GameCamera",
        Ok(
            "GameCamera::Deinit(void)",
        ),
    ),
    (
        "_vt$13FallGuideProp",
        Ok(
            "FallGuideProp virtual table",
        ),
    ),
    (
        "defaultPGTEnvelope",
        Err(
            NotMangled,
        ),
    ),
    (
        "RunToBunkerInit__11FrillLizard",
        Ok(
            "FrillLizard::RunToBunkerInit(void)",
        ),
    ),
    (
        "Deinit__10LavaBurner",
        Ok(
            "LavaBurner::Deinit(void)",
        ),
    ),
    (
        "Deinit__8Burnable",
        Ok(
            "Burnable::Deinit(void)",
        ),
    ),
    (
        "iGsPutIMR",
        Err(
            NotMangled,
        ),
    ),
    (
        "Sound_MusicSetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_AT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNextWayPoint__17WaterSlideManagerP6Vector",
        Ok(
            "WaterSlideManager::GetNextWayPoint(Vector *)",
        ),
    ),
    (
        "IdleInit__6Sheila",
        Ok(
            "Sheila::IdleInit(void)",
        ),
    ),
    (
        "Message__7FurnaceP9MKMessage",
        Ok(
            "Furnace::Message(MKMessage *)",
        ),
    ),
    (
        "CheckForHit__8SnowBall",
        Ok(
            "SnowBall::CheckForHit(void)",
        ),
    ),
    (
        "FrontEnd_Title_Deinit__Fv",
        Ok(
            "FrontEnd_Title_Deinit(void)",
        ),
    ),
    (
        "Update__12FlameThrower",
        Ok(
            "FlameThrower::Update(void)",
        ),
    ),
    (
        "ParticlesInit__12DialogEffect",
        Ok(
            "DialogEffect::ParticlesInit(void)",
        ),
    ),
    (
        "atan2f",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14ParticleSystemP18ParticleSystemTypeP6VectorP14BoundingVolumefi",
        Ok(
            "ParticleSystem::Init(ParticleSystemType *, Vector *, BoundingVolume *, float, int)",
        ),
    ),
    (
        "Message__6SheilaP9MKMessage",
        Ok(
            "Sheila::Message(MKMessage *)",
        ),
    ),
    (
        "FlinchInit__10SnowSpider",
        Ok(
            "SnowSpider::FlinchInit(void)",
        ),
    ),
    (
        "Path_Exists__FSc",
        Ok(
            "Path_Exists(signed char)",
        ),
    ),
    (
        "__tfr",
        Ok(
            "long double type_info function",
        ),
    ),
    (
        "LogicUpdate__7CaveBat",
        Ok(
            "CaveBat::LogicUpdate(void)",
        ),
    ),
    (
        "Pickup__14RockProjectile",
        Ok(
            "RockProjectile::Pickup(void)",
        ),
    ),
    (
        "Deinit__10ArsonTorch",
        Ok(
            "ArsonTorch::Deinit(void)",
        ),
    ),
    (
        "LoadDone__11TriggerProp",
        Ok(
            "TriggerProp::LoadDone(void)",
        ),
    ),
    (
        "Deinit__9FrillBike",
        Ok(
            "FrillBike::Deinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6CrikeyPv",
        Ok(
            "ModuleInfo<Crikey>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadDone__8Talisman",
        Ok(
            "Talisman::LoadDone(void)",
        ),
    ),
    (
        "_14ParticleSystem$nextUniqueId",
        Ok(
            "ParticleSystem::nextUniqueId",
        ),
    ),
    (
        "GetBiteRange__8MorayEel",
        Ok(
            "MorayEel::GetBiteRange(void)",
        ),
    ),
    (
        "WaterTank_IsMember__FP16MKPropDescriptor",
        Ok(
            "WaterTank_IsMember(MKPropDescriptor *)",
        ),
    ),
    (
        "AddGif_AD_FBA_1__3DmaUl",
        Ok(
            "Dma::AddGif_AD_FBA_1(unsigned long)",
        ),
    ),
    (
        "StartFiring__7SnowGun",
        Ok(
            "SnowGun::StartFiring(void)",
        ),
    ),
    (
        "InitPath__6Wombat",
        Ok(
            "Wombat::InitPath(void)",
        ),
    ),
    (
        "MovingUp__10CrikeyChum",
        Ok(
            "CrikeyChum::MovingUp(void)",
        ),
    ),
    (
        "Portal_CheckForEnter__Fv",
        Ok(
            "Portal_CheckForEnter(void)",
        ),
    ),
    (
        "bDisplayLocation",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__15MiniGame_C3_DDAP5Ringo",
        Ok(
            "MiniGame_C3_DDA::Update(Ringo *)",
        ),
    ),
    (
        "DeinitBiteCharge__6TyBite",
        Ok(
            "TyBite::DeinitBiteCharge(void)",
        ),
    ),
    (
        "CheckForHit__5Torch",
        Ok(
            "Torch::CheckForHit(void)",
        ),
    ),
    (
        "Reset__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Reset(void)",
        ),
    ),
    (
        "ParticleSystemRender_Init",
        Err(
            NotMangled,
        ),
    ),
    (
        "_9WaterDrip$pWaterDripMat",
        Ok(
            "WaterDrip::pWaterDripMat",
        ),
    ),
    (
        "Sound_PlayVInternal",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ieee754_log",
        Err(
            InvalidSpecialMethod(
                "ieee754_log",
            ),
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14SnowBallAttack",
        Ok(
            "ModuleInfo<SnowBallAttack>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14FishShoalField",
        Ok(
            "ModuleInfo<FishShoalField>::Init(void)",
        ),
    ),
    (
        "Deinit__21WaterfallStreamStruct",
        Ok(
            "WaterfallStreamStruct::Deinit(void)",
        ),
    ),
    (
        "Hud_DrawTimeFont__Ffffi",
        Ok(
            "Hud_DrawTimeFont(float, float, float, int)",
        ),
    ),
    (
        "GetName__5Model",
        Ok(
            "Model::GetName(void)",
        ),
    ),
    (
        "HeatFlare_LoadResources__Fv",
        Ok(
            "HeatFlare_LoadResources(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Elle",
        Ok(
            "ModuleInfo<Elle>::Init(void)",
        ),
    ),
    (
        "FishShoal_LoadResources__Fv",
        Ok(
            "FishShoal_LoadResources(void)",
        ),
    ),
    (
        "LoadLine__10LavaBurnerP12KromeIniLine",
        Ok(
            "LavaBurner::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "GetStringValue__19DialogEffectManagerPc",
        Ok(
            "DialogEffectManager::GetStringValue(char *)",
        ),
    ),
    (
        "Deactivate__14LevelObjective",
        Ok(
            "LevelObjective::Deactivate(void)",
        ),
    ),
    (
        "BarbedWire_Reset__Fv",
        Ok(
            "BarbedWire_Reset(void)",
        ),
    ),
    (
        "EventTriggers_LoadResources__FP8KromeIni",
        Ok(
            "EventTriggers_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MKShadow_DeinitModule__Fv",
        Ok(
            "MKShadow_DeinitModule(void)",
        ),
    ),
    (
        "Init__24GCT_WaypointPlaneManagerP16WayPointLoadInfoff",
        Ok(
            "GCT_WaypointPlaneManager::Init(WayPointLoadInfo *, float, float)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7SnowRooPv",
        Ok(
            "ModuleInfo<SnowRoo>::ConstructObject(void *)",
        ),
    ),
    (
        "DeinitModule__6Fluffy",
        Ok(
            "Fluffy::DeinitModule(void)",
        ),
    ),
    (
        "GetDesc__10SynkerFrog",
        Ok(
            "SynkerFrog::GetDesc(void)",
        ),
    ),
    (
        "DrawShadow__16BoomerangManagerP6Vector",
        Ok(
            "BoomerangManager::DrawShadow(Vector *)",
        ),
    ),
    (
        "Init__6MuddieP11GameObjDesc",
        Ok(
            "Muddie::Init(GameObjDesc *)",
        ),
    ),
    (
        "Fish_End__Fv",
        Ok(
            "Fish_End(void)",
        ),
    ),
    (
        "Model_InitModule__Fv",
        Ok(
            "Model_InitModule(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Frog",
        Ok(
            "ModuleInfo<Frog>::Init(void)",
        ),
    ),
    (
        "sceSifWriteBackDCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_GetFloor2__FP6VectorP15CollisionResultf13CollisionModeUi",
        Ok(
            "Tools_GetFloor2(Vector *, CollisionResult *, float, CollisionMode, unsigned int)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8BuzzSaw2Pv",
        Ok(
            "ModuleInfo<BuzzSaw2>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__17SoundEventManager",
        Ok(
            "SoundEventManager::Reset(void)",
        ),
    ),
    (
        "ExecPS2",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceSifInitCmd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomPos__3Bat",
        Ok(
            "Bat::GenerateRandomPos(void)",
        ),
    ),
    (
        "_9Avalanche$pMat",
        Ok(
            "Avalanche::pMat",
        ),
    ),
    (
        "Windmill_Deinit__Fv",
        Ok(
            "Windmill_Deinit(void)",
        ),
    ),
    (
        "DrawNoMat__11Blitter_Boxi",
        Ok(
            "Blitter_Box::DrawNoMat(int)",
        ),
    ),
    (
        "Spawn__6Wombat",
        Ok(
            "Wombat::Spawn(void)",
        ),
    ),
    (
        "EnemyRadius",
        Err(
            NotMangled,
        ),
    ),
    (
        "__throw_bad_typeid",
        Err(
            InvalidCustomNameOnTemplate(
                "hrow_bad_typeid",
            ),
        ),
    ),
    (
        "HandleBoomerangHit__8LilNeddyP9Boomerang",
        Ok(
            "LilNeddy::HandleBoomerangHit(Boomerang *)",
        ),
    ),
    (
        "_vt$4Croc",
        Ok(
            "Croc virtual table",
        ),
    ),
    (
        "UpdateLogic__4Frog",
        Ok(
            "Frog::UpdateLogic(void)",
        ),
    ),
    (
        "LoadDescriptors__H1Z20StaticPropDescriptor_P8KromeIniPcPX01_v",
        Ok(
            "void LoadDescriptors<StaticPropDescriptor>(KromeIni *, char *, StaticPropDescriptor *)",
        ),
    ),
    (
        "gameCamera_bDrawDebug",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3EelPv",
        Ok(
            "ModuleInfo<Eel>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$11Kaboomerang",
        Ok(
            "Kaboomerang virtual table",
        ),
    ),
    (
        "InitPull__15LedgePullUpData",
        Ok(
            "LedgePullUpData::InitPull(void)",
        ),
    ),
    (
        "LoadDone__5Lenny",
        Ok(
            "Lenny::LoadDone(void)",
        ),
    ),
    (
        "Attack__6Wombat",
        Ok(
            "Wombat::Attack(void)",
        ),
    ),
    (
        "Init__9FlamerangP11GameObjDescP15BoomerangWeapon",
        Ok(
            "Flamerang::Init(GameObjDesc *, BoomerangWeapon *)",
        ),
    ),
    (
        "Draw__6SpyEgg",
        Ok(
            "SpyEgg::Draw(void)",
        ),
    ),
    (
        "GetDesiredSourceY__10GameCamera",
        Ok(
            "GameCamera::GetDesiredSourceY(void)",
        ),
    ),
    (
        "Deinit__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Deinit(void)",
        ),
    ),
    (
        "Update__14BoomerangTrailP6VectorT1",
        Ok(
            "BoomerangTrail::Update(Vector *, Vector *)",
        ),
    ),
    (
        "LoadLine__11BunyipElderP12KromeIniLine",
        Ok(
            "BunyipElder::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_6Geyser$states",
        Ok(
            "Geyser::states",
        ),
    ),
    (
        "Draw__11CrateStruct",
        Ok(
            "CrateStruct::Draw(void)",
        ),
    ),
    (
        "gAssertFloat",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9SpeedboatPv",
        Ok(
            "ModuleInfo<Speedboat>::ConstructObject(void *)",
        ),
    ),
    (
        "WaterSlide_Init__Fv",
        Ok(
            "WaterSlide_Init(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_6Geyser$states",
        Ok(
            "global constructors keyed to Geyser::states",
        ),
    ),
    (
        "Walk__8KoalaKid",
        Ok(
            "KoalaKid::Walk(void)",
        ),
    ),
    (
        "isnan",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_WSEM_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Use__8Material",
        Ok(
            "Material::Use(void)",
        ),
    ),
    (
        "GetLightPos__6ShadowP6Vector",
        Ok(
            "Shadow::GetLightPos(Vector *)",
        ),
    ),
    (
        "CheckEvents__3Sly",
        Ok(
            "Sly::CheckEvents(void)",
        ),
    ),
    (
        "GetFreeSonar__9ShadowBat",
        Ok(
            "ShadowBat::GetFreeSonar(void)",
        ),
    ),
    (
        "Init__11BurningJunkP11GameObjDesc",
        Ok(
            "BurningJunk::Init(GameObjDesc *)",
        ),
    ),
    (
        "SmoothY_Update__10GameCamera",
        Ok(
            "GameCamera::SmoothY_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10Frostyrang",
        Ok(
            "ModuleInfo<Frostyrang>::Init(void)",
        ),
    ),
    (
        "IsNearSq__11EnemyObjectP6VectorT1f",
        Ok(
            "EnemyObject::IsNearSq(Vector *, Vector *, float)",
        ),
    ),
    (
        "DebugState__10LogicState9GameState",
        Ok(
            "LogicState::DebugState(GameState)",
        ),
    ),
    (
        "__9exception",
        Ok(
            "exception::exception(void)",
        ),
    ),
    (
        "AttackDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::AttackDeinit(void)",
        ),
    ),
    (
        "Reset__14RockProjectile",
        Ok(
            "RockProjectile::Reset(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Shazza",
        Ok(
            "ModuleInfo<Shazza>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10TyFlyField",
        Ok(
            "ModuleInfo<TyFlyField>::Init(void)",
        ),
    ),
    (
        "_vt$9Boomerang",
        Ok(
            "Boomerang virtual table",
        ),
    ),
    (
        "InitIdle__3Emu",
        Ok(
            "Emu::InitIdle(void)",
        ),
    ),
    (
        "Init__10ArsonTorchP5Model",
        Ok(
            "ArsonTorch::Init(Model *)",
        ),
    ),
    (
        "Init__15KingFisherFieldP11GameObjDesc",
        Ok(
            "KingFisherField::Init(GameObjDesc *)",
        ),
    ),
    (
        "SendEnable__9WaterPipe",
        Ok(
            "WaterPipe::SendEnable(void)",
        ),
    ),
    (
        "RunInit__8KoalaKid",
        Ok(
            "KoalaKid::RunInit(void)",
        ),
    ),
    (
        "Shadow_EndDraw__Fv",
        Ok(
            "Shadow_EndDraw(void)",
        ),
    ),
    (
        "StartDeath__2Ty8HurtTypeb",
        Ok(
            "Ty::StartDeath(HurtType, bool)",
        ),
    ),
    (
        "UpdateFillState__FPv",
        Ok(
            "UpdateFillState(void *)",
        ),
    ),
    (
        "Path_Load__FP12PathLoadInfo",
        Ok(
            "Path_Load(PathLoadInfo *)",
        ),
    ),
    (
        "Init__21ParticleSystemManagerii",
        Ok(
            "ParticleSystemManager::Init(int, int)",
        ),
    ),
    (
        "DeathInit__6Wombat",
        Ok(
            "Wombat::DeathInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11BurningTree",
        Ok(
            "ModuleInfo<BurningTree>::Init(void)",
        ),
    ),
    (
        "Update__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Update(void)",
        ),
    ),
    (
        "Tools_GetFloor__FRC6VectorP15CollisionResultfbUi",
        Ok(
            "Tools_GetFloor(Vector const &, CollisionResult *, float, bool, unsigned int)",
        ),
    ),
    (
        "RemoveDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "PatrolInit__6Muddie",
        Ok(
            "Muddie::PatrolInit(void)",
        ),
    ),
    (
        "SetAnim__8Critter2Uii",
        Ok(
            "Critter2::SetAnim(unsigned int, int)",
        ),
    ),
    (
        "Message__11EnemyObjectP9MKMessage",
        Ok(
            "EnemyObject::Message(MKMessage *)",
        ),
    ),
    (
        "WobbleUVs__13WobbleTexturef",
        Ok(
            "WobbleTexture::WobbleUVs(float)",
        ),
    ),
    (
        "FindString__24Tools_DynamicStringTablePc",
        Ok(
            "Tools_DynamicStringTable::FindString(char *)",
        ),
    ),
    (
        "InitJump__15LearnToDiveData",
        Ok(
            "LearnToDiveData::InitJump(void)",
        ),
    ),
    (
        "iSetTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "SnapToSource__14CameraOverride",
        Ok(
            "CameraOverride::SnapToSource(void)",
        ),
    ),
    (
        "GetFragInfo__13ShatterStruct",
        Ok(
            "ShatterStruct::GetFragInfo(void)",
        ),
    ),
    (
        "ConvertNormal__12QuatRotationP6Vectorf",
        Ok(
            "QuatRotation::ConvertNormal(Vector *, float)",
        ),
    ),
    (
        "Init__15BoomerangWeapon13BoomerangSideP13BoomerangDescP16BoomerangManager",
        Ok(
            "BoomerangWeapon::Init(BoomerangSide, BoomerangDesc *, BoomerangManager *)",
        ),
    ),
    (
        "PauseScreen_Update__Fv",
        Ok(
            "PauseScreen_Update(void)",
        ),
    ),
    (
        "kputs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__4Jeep",
        Ok(
            "Jeep::Update(void)",
        ),
    ),
    (
        "sceInetChangeThreadPriority",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__11Blitter_Boxi",
        Ok(
            "Blitter_Box::Draw(int)",
        ),
    ),
    (
        "OpalCollector_GetPos__Fv",
        Ok(
            "OpalCollector_GetPos(void)",
        ),
    ),
    (
        "Smoke_Update__9FireWorksP14ParticleSystem",
        Ok(
            "FireWorks::Smoke_Update(ParticleSystem *)",
        ),
    ),
    (
        "descr_cast__H1ZP12CritterDesc2_P16MKPropDescriptor_X01",
        Ok(
            "CritterDesc2 * descr_cast<CritterDesc2 *>(MKPropDescriptor *)",
        ),
    ),
    (
        "MKWaterRender_LDTMF_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitKookaburra__14KingFisherDescP14ModuleInfoBasePcT2",
        Ok(
            "KingFisherDesc::InitKookaburra(ModuleInfoBase *, char *, char *)",
        ),
    ),
    (
        "Crc_Calculate__FPCvi",
        Ok(
            "Crc_Calculate(void const *, int)",
        ),
    ),
    (
        "GameCamera_UseDropCamera__Fb",
        Ok(
            "GameCamera_UseDropCamera(bool)",
        ),
    ),
    (
        "UpdateParticleEffect__8Aquarang",
        Ok(
            "Aquarang::UpdateParticleEffect(void)",
        ),
    ),
    (
        "PE_WaterMist_LoadResources__Fv",
        Ok(
            "PE_WaterMist_LoadResources(void)",
        ),
    ),
    (
        "_nextBit",
        Err(
            NotMangled,
        ),
    ),
    (
        "FallInit__15WaterTankStruct",
        Ok(
            "WaterTankStruct::FallInit(void)",
        ),
    ),
    (
        "Reeds_Draw__Fv",
        Ok(
            "Reeds_Draw(void)",
        ),
    ),
    (
        "_dualPrimeVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "RainbowEffect_Update__FP14ParticleSystem",
        Ok(
            "RainbowEffect_Update(ParticleSystem *)",
        ),
    ),
    (
        "BergIntro__14IceBlockStruct",
        Ok(
            "IceBlockStruct::BergIntro(void)",
        ),
    ),
    (
        "Gem_PickupParticle_Update__Fv",
        Ok(
            "Gem_PickupParticle_Update(void)",
        ),
    ),
    (
        "Draw__16FinishLineStruct",
        Ok(
            "FinishLineStruct::Draw(void)",
        ),
    ),
    (
        "iEnableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "pCounterModelSubObjectsRejected",
        Err(
            NotMangled,
        ),
    ),
    (
        "LandInit__6Maurie",
        Ok(
            "Maurie::LandInit(void)",
        ),
    ),
    (
        "Video_IsReady__FP5Video",
        Ok(
            "Video_IsReady(Video *)",
        ),
    ),
    (
        "_vt$7BushPig",
        Ok(
            "BushPig virtual table",
        ),
    ),
    (
        "TyMemCard_NewGame__Fv",
        Ok(
            "TyMemCard_NewGame(void)",
        ),
    ),
    (
        "AddWaterSplash__2Ty",
        Ok(
            "Ty::AddWaterSplash(void)",
        ),
    ),
    (
        "Deinit__8KromeIni",
        Ok(
            "KromeIni::Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7BeerCan",
        Ok(
            "ModuleInfo<BeerCan> virtual table",
        ),
    ),
    (
        "Message__13DDACheckpointP9MKMessage",
        Ok(
            "DDACheckpoint::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__7ChumBox",
        Ok(
            "ChumBox::Reset(void)",
        ),
    ),
    (
        "Init__8BossCassP11GameObjDesc",
        Ok(
            "BossCass::Init(GameObjDesc *)",
        ),
    ),
    (
        "Reset__19DialogEffectManager",
        Ok(
            "DialogEffectManager::Reset(void)",
        ),
    ),
    (
        "Draw__8FireDrum",
        Ok(
            "FireDrum::Draw(void)",
        ),
    ),
    (
        "DeinitFall__2Ty",
        Ok(
            "Ty::DeinitFall(void)",
        ),
    ),
    (
        "__tiUs",
        Ok(
            "unsigned short type_info node",
        ),
    ),
    (
        "Message__10ScubaFrillP9MKMessage",
        Ok(
            "ScubaFrill::Message(MKMessage *)",
        ),
    ),
    (
        "TyMemCard_LoadResources__Fv",
        Ok(
            "TyMemCard_LoadResources(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Moth_LoadResources__Fv",
        Ok(
            "global constructors keyed to Moth_LoadResources(void)",
        ),
    ),
    (
        "FileSys_InitModule__Fv",
        Ok(
            "FileSys_InitModule(void)",
        ),
    ),
    (
        "UpdateModifyType__14CameraOverride",
        Ok(
            "CameraOverride::UpdateModifyType(void)",
        ),
    ),
    (
        "szIcicleModelName",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitBiteGrowl__6TyBite",
        Ok(
            "TyBite::InitBiteGrowl(void)",
        ),
    ),
    (
        "Swim__10ScubaFrill",
        Ok(
            "ScubaFrill::Swim(void)",
        ),
    ),
    (
        "Input_GetNumConnectedJoypads__Fv",
        Ok(
            "Input_GetNumConnectedJoypads(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8CableCarPv",
        Ok(
            "ModuleInfo<CableCar>::ConstructObject(void *)",
        ),
    ),
    (
        "UploadVUChunk__14ParticleSystemP13ParticleChunk",
        Ok(
            "ParticleSystem::UploadVUChunk(ParticleChunk *)",
        ),
    ),
    (
        "MKShadow_CreateStaticFromModel__FPcT0",
        Ok(
            "MKShadow_CreateStaticFromModel(char *, char *)",
        ),
    ),
    (
        "Update__17CritterCruiseMoveR6MatrixRC21CritterCruiseMoveInfof",
        Ok(
            "CritterCruiseMove::Update(Matrix &, CritterCruiseMoveInfo const &, float)",
        ),
    ),
    (
        "Props_LoadResources__FP8KromeIni",
        Ok(
            "Props_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Input_AllPadsGetButtonState__FP12InputDevicesi",
        Ok(
            "Input_AllPadsGetButtonState(InputDevices *, int)",
        ),
    ),
    (
        "LoadDone__7AntHill",
        Ok(
            "AntHill::LoadDone(void)",
        ),
    ),
    (
        "_nextStartCode",
        Err(
            NotMangled,
        ),
    ),
    (
        "reg_handler",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterManager_Add__FP7MKWater",
        Ok(
            "MKWaterManager_Add(MKWater *)",
        ),
    ),
    (
        "Deinit__10MKGrassGen",
        Ok(
            "MKGrassGen::Deinit(void)",
        ),
    ),
    (
        "UpdateOverride__21CameraOverrideManagerP16CameraDescriptor",
        Ok(
            "CameraOverrideManager::UpdateOverride(CameraDescriptor *)",
        ),
    ),
    (
        "Init__11CollapsibleP11GameObjDesc",
        Ok(
            "Collapsible::Init(GameObjDesc *)",
        ),
    ),
    (
        "__16__user_type_infoPCc",
        Ok(
            "__user_type_info::__user_type_info(char const *)",
        ),
    ),
    (
        "CalcScreenZ__4Viewf",
        Ok(
            "View::CalcScreenZ(float)",
        ),
    ),
    (
        "MKWaterRender_LD_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Startled__6Julius",
        Ok(
            "Julius::Startled(void)",
        ),
    ),
    (
        "MoveInit__5Leech",
        Ok(
            "Leech::MoveInit(void)",
        ),
    ),
    (
        "LogicUpdate__9Speedboat",
        Ok(
            "Speedboat::LogicUpdate(void)",
        ),
    ),
    (
        "sceScfGetTimeZone",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__5Ringo",
        Ok(
            "Ringo::Update(void)",
        ),
    ),
    (
        "CloseCameraState__7BushPig",
        Ok(
            "BushPig::CloseCameraState(void)",
        ),
    ),
    (
        "Deinit__4Gate",
        Ok(
            "Gate::Deinit(void)",
        ),
    ),
    (
        "AttackInit__3Eel",
        Ok(
            "Eel::AttackInit(void)",
        ),
    ),
    (
        "eaTyLogo",
        Err(
            NotMangled,
        ),
    ),
    (
        "pRenderMenu",
        Err(
            NotMangled,
        ),
    ),
    (
        "Emit__9GreySmoke",
        Ok(
            "GreySmoke::Emit(void)",
        ),
    ),
    (
        "descr_cast__H1ZP18ElevatorDescriptor_P16MKPropDescriptor_X01",
        Ok(
            "ElevatorDescriptor * descr_cast<ElevatorDescriptor *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Destroy__14ParticleSystemf",
        Ok(
            "ParticleSystem::Destroy(float)",
        ),
    ),
    (
        "Input_HasAnyButtonChanged__Fv",
        Ok(
            "Input_HasAnyButtonChanged(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13GuideParticle",
        Ok(
            "ModuleInfo<GuideParticle> virtual table",
        ),
    ),
    (
        "sceGetstat",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseDeinit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::ChaseDeinit(void)",
        ),
    ),
    (
        "Land__7CaveBat",
        Ok(
            "CaveBat::Land(void)",
        ),
    ),
    (
        "isCounterClockWise__14BoundingRegionP6VectorT1T1",
        Ok(
            "BoundingRegion::isCounterClockWise(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "scePadStateIntToStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateModelNormal__11RhinoGround",
        Ok(
            "RhinoGround::UpdateModelNormal(void)",
        ),
    ),
    (
        "Deinit__12ThrowingStar",
        Ok(
            "ThrowingStar::Deinit(void)",
        ),
    ),
    (
        "_vt$17TriggerSphereProp",
        Ok(
            "TriggerSphereProp virtual table",
        ),
    ),
    (
        "FirstPersonCalcCamInfo__2TyP19FirstPersonInitInfo",
        Ok(
            "Ty::FirstPersonCalcCamInfo(FirstPersonInitInfo *)",
        ),
    ),
    (
        "UpdateFX__8Elevator",
        Ok(
            "Elevator::UpdateFX(void)",
        ),
    ),
    (
        "Init__11PontoonRopeP11GameObjDesc",
        Ok(
            "PontoonRope::Init(GameObjDesc *)",
        ),
    ),
    (
        "SpeedUpCrate_LoadResources__Fv",
        Ok(
            "SpeedUpCrate_LoadResources(void)",
        ),
    ),
    (
        "MKMemoryCard_DeinitModule__Fv",
        Ok(
            "MKMemoryCard_DeinitModule(void)",
        ),
    ),
    (
        "AlertSpin__8PubeCrabb",
        Ok(
            "PubeCrab::AlertSpin(bool)",
        ),
    ),
    (
        "AttackRun__11FrillLizard",
        Ok(
            "FrillLizard::AttackRun(void)",
        ),
    ),
    (
        "Update__13OpalCollector",
        Ok(
            "OpalCollector::Update(void)",
        ),
    ),
    (
        "SP_MODEL_NAMES",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_CanSpray_Create__FPP14ParticleSystemP6VectorT1",
        Ok(
            "Particle_CanSpray_Create(ParticleSystem **, Vector *, Vector *)",
        ),
    ),
    (
        "ExploreNextMaterial__5ModelP13ModelExplorer",
        Ok(
            "Model::ExploreNextMaterial(ModelExplorer *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Gate",
        Ok(
            "ModuleInfo<Gate>::Init(void)",
        ),
    ),
    (
        "LogicUpdate__11FrillLizard",
        Ok(
            "FrillLizard::LogicUpdate(void)",
        ),
    ),
    (
        "_defRestartDMA",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FLO1_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterRender_WSEMSCR_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_InitSys",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseTyInit__5Lenny",
        Ok(
            "Lenny::ChaseTyInit(void)",
        ),
    ),
    (
        "Idle__9AuroraKid",
        Ok(
            "AuroraKid::Idle(void)",
        ),
    ),
    (
        "AddEnemyManual__12EnemySpawner",
        Ok(
            "EnemySpawner::AddEnemyManual(void)",
        ),
    ),
    (
        "StaticSpikes_Delete__FP18StaticSpikesStruct",
        Ok(
            "StaticSpikes_Delete(StaticSpikesStruct *)",
        ),
    ),
    (
        "GameCamera_Init__FP18GameCameraHeroInfoi",
        Ok(
            "GameCamera_Init(GameCameraHeroInfo *, int)",
        ),
    ),
    (
        "SetPos__14IceBlockStructfff",
        Ok(
            "IceBlockStruct::SetPos(float, float, float)",
        ),
    ),
    (
        "InitSurfacing__2Ty",
        Ok(
            "Ty::InitSurfacing(void)",
        ),
    ),
    (
        "__tff",
        Ok(
            "float type_info function",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6WombatPv",
        Ok(
            "ModuleInfo<Wombat>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$3Ice",
        Ok(
            "Ice virtual table",
        ),
    ),
    (
        "StartMove__6Cattle",
        Ok(
            "Cattle::StartMove(void)",
        ),
    ),
    (
        "Draw__17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard::Draw(void)",
        ),
    ),
    (
        "Basket_CanSpawnBonus__Fv",
        Ok(
            "Basket_CanSpawnBonus(void)",
        ),
    ),
    (
        "_vt$21ConditionalScriptProp",
        Ok(
            "ConditionalScriptProp virtual table",
        ),
    ),
    (
        "DrawObjects__17GameObjectManager",
        Ok(
            "GameObjectManager::DrawObjects(void)",
        ),
    ),
    (
        "_7MKWater$boxDraw",
        Ok(
            "MKWater::boxDraw",
        ),
    ),
    (
        "LassoLost__9FrillBike",
        Ok(
            "FrillBike::LassoLost(void)",
        ),
    ),
    (
        "IsEnabled__15CollisionObject",
        Ok(
            "CollisionObject::IsEnabled(void)",
        ),
    ),
    (
        "SetAnim__5Lenny12tagLennyAnim",
        Ok(
            "Lenny::SetAnim(tagLennyAnim)",
        ),
    ),
    (
        "CheckForLedge__11EnemyObjectP6Vector",
        Ok(
            "EnemyObject::CheckForLedge(Vector *)",
        ),
    ),
    (
        "LoadDone__13BubbleSpawner",
        Ok(
            "BubbleSpawner::LoadDone(void)",
        ),
    ),
    (
        "CheckForRangChange__2Ty",
        Ok(
            "Ty::CheckForRangChange(void)",
        ),
    ),
    (
        "Init__5SharkP11GameObjDesc",
        Ok(
            "Shark::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__14TriggerBoxPropP11GameObjDesc",
        Ok(
            "TriggerBoxProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "ResetEE",
        Err(
            NotMangled,
        ),
    ),
    (
        "_5Lenny$currentBankNr",
        Ok(
            "Lenny::currentBankNr",
        ),
    ),
    (
        "FileSys_OutputFileOrder__Fv",
        Ok(
            "FileSys_OutputFileOrder(void)",
        ),
    ),
    (
        "Deinit__6Basket",
        Ok(
            "Basket::Deinit(void)",
        ),
    ),
    (
        "sceSifLoadIopHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKMemoryCard_InitModule__Fv",
        Ok(
            "MKMemoryCard_InitModule(void)",
        ),
    ),
    (
        "DriftBack__7SeaMine",
        Ok(
            "SeaMine::DriftBack(void)",
        ),
    ),
    (
        "Input_GetDeviceStatus__F12InputDevices",
        Ok(
            "Input_GetDeviceStatus(InputDevices)",
        ),
    ),
    (
        "_GLOBAL_$I$SpiderWeb_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SpiderWeb_LoadResources(KromeIni *)",
        ),
    ),
    (
        "UpdateFloorNormal__10SnowSpider",
        Ok(
            "SnowSpider::UpdateFloorNormal(void)",
        ),
    ),
    (
        "_vt$8LavaDesc",
        Ok(
            "LavaDesc virtual table",
        ),
    ),
    (
        "Ty_LoadResources__Fv",
        Ok(
            "Ty_LoadResources(void)",
        ),
    ),
    (
        "SharkCageEnter__2Ty",
        Ok(
            "Ty::SharkCageEnter(void)",
        ),
    ),
    (
        "Translation_GetLanguageLocalName__F19TranslationLanguage",
        Ok(
            "Translation_GetLanguageLocalName(TranslationLanguage)",
        ),
    ),
    (
        "AlertIdle__11FrillLizardb",
        Ok(
            "FrillLizard::AlertIdle(bool)",
        ),
    ),
    (
        "isceSifDmaStat",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__9StarTrail",
        Ok(
            "StarTrail::Init(void)",
        ),
    ),
    (
        "_20WaterfallSprayStruct$mistType",
        Ok(
            "WaterfallSprayStruct::mistType",
        ),
    ),
    (
        "Reset__5Torch",
        Ok(
            "Torch::Reset(void)",
        ),
    ),
    (
        "Portal_HideAll__Fv",
        Ok(
            "Portal_HideAll(void)",
        ),
    ),
    (
        "SetState__11ScrubTurkey16ScrubTurkeyStateb",
        Ok(
            "ScrubTurkey::SetState(ScrubTurkeyState, bool)",
        ),
    ),
    (
        "SaveStates_GetCogs__FPc",
        Ok(
            "SaveStates_GetCogs(char *)",
        ),
    ),
    (
        "_10MKGrassGen$bStaticDataUploaded",
        Ok(
            "MKGrassGen::bStaticDataUploaded",
        ),
    ),
    (
        "Deinit__17SynkerFrillLizard",
        Ok(
            "SynkerFrillLizard::Deinit(void)",
        ),
    ),
    (
        "ChaseInit__10BlueTongue",
        Ok(
            "BlueTongue::ChaseInit(void)",
        ),
    ),
    (
        "dptoli",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__5Roach",
        Ok(
            "Roach::LogicUpdate(void)",
        ),
    ),
    (
        "ResetLevel__Fv",
        Ok(
            "ResetLevel(void)",
        ),
    ),
    (
        "pauseabit__Fv",
        Ok(
            "pauseabit(void)",
        ),
    ),
    (
        "Turtle_Init__Fv",
        Ok(
            "Turtle_Init(void)",
        ),
    ),
    (
        "GetTargetRollFromJoyXAxis__2Tyf",
        Ok(
            "Ty::GetTargetRollFromJoyXAxis(float)",
        ),
    ),
    (
        "UpdateModelNormal__5Yabby",
        Ok(
            "Yabby::UpdateModelNormal(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Generator",
        Ok(
            "ModuleInfo<Generator>::Init(void)",
        ),
    ),
    (
        "HitWorld__9FlamerangP6Vectori",
        Ok(
            "Flamerang::HitWorld(Vector *, int)",
        ),
    ),
    (
        "Boomerang_Reset__Fv",
        Ok(
            "Boomerang_Reset(void)",
        ),
    ),
    (
        "mTapOnPort1",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPos__6Basket",
        Ok(
            "Basket::GetPos(void)",
        ),
    ),
    (
        "_$_16__ptmf_type_info",
        Ok(
            "__ptmf_type_info::~__ptmf_type_info(void)",
        ),
    ),
    (
        "RenderTexture_CausticsLine__FP12KromeIniLine",
        Ok(
            "RenderTexture_CausticsLine(KromeIniLine *)",
        ),
    ),
    (
        "LandInit__9ShadowBat",
        Ok(
            "ShadowBat::LandInit(void)",
        ),
    ),
    (
        "defaultParticleManager",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7C1Water",
        Ok(
            "ModuleInfo<C1Water> virtual table",
        ),
    ),
    (
        "IsTyWithinChaseArea__9FrillBike",
        Ok(
            "FrillBike::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "mallinfo",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z21ConditionalScriptProp",
        Ok(
            "ModuleInfo<ConditionalScriptProp> virtual table",
        ),
    ),
    (
        "Hud_ResetPositions__Fv",
        Ok(
            "Hud_ResetPositions(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z18SpeedboatObjective",
        Ok(
            "ModuleInfo<SpeedboatObjective>::Init(void)",
        ),
    ),
    (
        "HasFallenOver__15WaterTankStruct",
        Ok(
            "WaterTankStruct::HasFallenOver(void)",
        ),
    ),
    (
        "load_set_conf_only",
        Err(
            NotMangled,
        ),
    ),
    (
        "DefaultDraw__2Ty",
        Ok(
            "Ty::DefaultDraw(void)",
        ),
    ),
    (
        "PatrolInit__9FrillBike",
        Ok(
            "FrillBike::PatrolInit(void)",
        ),
    ),
    (
        "WaitForRespawnInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::WaitForRespawnInit(void)",
        ),
    ),
    (
        "UpdateFloorNormal__5Roach",
        Ok(
            "Roach::UpdateFloorNormal(void)",
        ),
    ),
    (
        "_vt$12FlameThrower",
        Ok(
            "FlameThrower virtual table",
        ),
    ),
    (
        "TyGrabs__8Elevator",
        Ok(
            "Elevator::TyGrabs(void)",
        ),
    ),
    (
        "SetLookAt__6MatrixP6VectorT1",
        Ok(
            "Matrix::SetLookAt(Vector *, Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6GasJetPv",
        Ok(
            "ModuleInfo<GasJet>::ConstructObject(void *)",
        ),
    ),
    (
        "sceMcClose",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9Flamerang",
        Ok(
            "ModuleInfo<Flamerang>::Init(void)",
        ),
    ),
    (
        "SignalSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10BlueTonguePv",
        Ok(
            "ModuleInfo<BlueTongue>::ConstructObject(void *)",
        ),
    ),
    (
        "CreateDebugMenus__17MKParticleGenTypeP15DebugOptionMenu",
        Ok(
            "MKParticleGenType::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "Patrol__5Rhino",
        Ok(
            "Rhino::Patrol(void)",
        ),
    ),
    (
        "Path_Update__14CameraOverride",
        Ok(
            "CameraOverride::Path_Update(void)",
        ),
    ),
    (
        "Deinit__13RainbowEffect",
        Ok(
            "RainbowEffect::Deinit(void)",
        ),
    ),
    (
        "IdleInit__4Elle",
        Ok(
            "Elle::IdleInit(void)",
        ),
    ),
    (
        "Idle__10BlueTongue",
        Ok(
            "BlueTongue::Idle(void)",
        ),
    ),
    (
        "LoadLine__16A1FrillObjectiveP12KromeIniLine",
        Ok(
            "A1FrillObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadDone__6Basket",
        Ok(
            "Basket::LoadDone(void)",
        ),
    ),
    (
        "_vt$10SpiderDirt",
        Ok(
            "SpiderDirt virtual table",
        ),
    ),
    (
        "Idle__5Neddy",
        Ok(
            "Neddy::Idle(void)",
        ),
    ),
    (
        "MiniGameB1_Init__10GameCamera",
        Ok(
            "GameCamera::MiniGameB1_Init(void)",
        ),
    ),
    (
        "LoadLine__11EnemyObjectP12KromeIniLine",
        Ok(
            "EnemyObject::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SoundBank_PlayExclusiveAmbientSound__Fb",
        Ok(
            "SoundBank_PlayExclusiveAmbientSound(bool)",
        ),
    ),
    (
        "MKShadowVU0_Backface_Prime",
        Err(
            NotMangled,
        ),
    ),
    (
        "IdleUpdate__7IceRamp",
        Ok(
            "IceRamp::IdleUpdate(void)",
        ),
    ),
    (
        "Deinit__13OpalCollector",
        Ok(
            "OpalCollector::Deinit(void)",
        ),
    ),
    (
        "Deinit__6Bubble",
        Ok(
            "Bubble::Deinit(void)",
        ),
    ),
    (
        "RenderChars__4FontPQ24Font13TextCharStripi",
        Ok(
            "Font::RenderChars(Font::TextCharStrip *, int)",
        ),
    ),
    (
        "Message__3EmuP9MKMessage",
        Ok(
            "Emu::Message(MKMessage *)",
        ),
    ),
    (
        "Hud_DeinitBossHealth__Fv",
        Ok(
            "Hud_DeinitBossHealth(void)",
        ),
    ),
    (
        "MiniGame_B3_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B3_Draw(void)",
        ),
    ),
    (
        "LoadDone__11SpinningLog",
        Ok(
            "SpinningLog::LoadDone(void)",
        ),
    ),
    (
        "SwallowInit__6Groper",
        Ok(
            "Groper::SwallowInit(void)",
        ),
    ),
    (
        "AllowedToAttack__11EnemyObject",
        Ok(
            "EnemyObject::AllowedToAttack(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10CuttleFishPv",
        Ok(
            "ModuleInfo<CuttleFish>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10Projectile",
        Ok(
            "ModuleInfo<Projectile>::Init(void)",
        ),
    ),
    (
        "Tools_TurnLR__FP6VectorT0f",
        Ok(
            "Tools_TurnLR(Vector *, Vector *, float)",
        ),
    ),
    (
        "Dive__10KingFisher",
        Ok(
            "KingFisher::Dive(void)",
        ),
    ),
    (
        "_vt$7SnowGun",
        Ok(
            "SnowGun virtual table",
        ),
    ),
    (
        "NinjaGecko_LoadResources__FP8KromeIni",
        Ok(
            "NinjaGecko_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z15YabbyStalactite",
        Ok(
            "ModuleInfo<YabbyStalactite>::Init(void)",
        ),
    ),
    (
        "Update__13AnimatingProp",
        Ok(
            "AnimatingProp::Update(void)",
        ),
    ),
    (
        "Weather_Deinit__Fv",
        Ok(
            "Weather_Deinit(void)",
        ),
    ),
    (
        "sceCdMmode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__10BurningBat",
        Ok(
            "BurningBat::Deinit(void)",
        ),
    ),
    (
        "SetScale__7UIModelP6Vector",
        Ok(
            "UIModel::SetScale(Vector *)",
        ),
    ),
    (
        "_GLOBAL_$I$LilNeddy_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to LilNeddy_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IceBlock_Reset__Fv",
        Ok(
            "IceBlock_Reset(void)",
        ),
    ),
    (
        "DrawQuad_LowDetail__11MKWaterPropP16WaterStripHeaderiP16WaterStripVertexP16WaterStripNormalP12WaterStripUVP15WaterStripColorP6VectorP8Material",
        Ok(
            "MKWaterProp::DrawQuad_LowDetail(WaterStripHeader *, int, WaterStripVertex *, WaterStripNormal *, WaterStripUV *, WaterStripColor *, Vector *, Material *)",
        ),
    ),
    (
        "Init__7UIImagePc",
        Ok(
            "UIImage::Init(char *)",
        ),
    ),
    (
        "BreakAndTurn__2Ty",
        Ok(
            "Ty::BreakAndTurn(void)",
        ),
    ),
    (
        "Flinch__9Barracuda",
        Ok(
            "Barracuda::Flinch(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7FurnacePv",
        Ok(
            "ModuleInfo<Furnace>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__19EmuRoundupObjective",
        Ok(
            "EmuRoundupObjective::Update(void)",
        ),
    ),
    (
        "Draw__15StopwatchStruct",
        Ok(
            "StopwatchStruct::Draw(void)",
        ),
    ),
    (
        "Open__13OpalCollector",
        Ok(
            "OpalCollector::Open(void)",
        ),
    ),
    (
        "__tf14__si_type_info",
        Ok(
            "__si_type_info type_info function",
        ),
    ),
    (
        "IdleInit__6Shazza",
        Ok(
            "Shazza::IdleInit(void)",
        ),
    ),
    (
        "MiniGameC2_LoadResources__FP8KromeIni",
        Ok(
            "MiniGameC2_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z17BlueTongueThrower",
        Ok(
            "ModuleInfo<BlueTongueThrower> virtual table",
        ),
    ),
    (
        "Camera__14CameraOverride",
        Ok(
            "CameraOverride::Camera(void)",
        ),
    ),
    (
        "Show__12StaticFXPropb",
        Ok(
            "StaticFXProp::Show(bool)",
        ),
    ),
    (
        "VSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "_7MKWater$bDrawOverideMat",
        Ok(
            "MKWater::bDrawOverideMat",
        ),
    ),
    (
        "TurnInit__5Shark",
        Ok(
            "Shark::TurnInit(void)",
        ),
    ),
    (
        "Emu_LoadResources__Fv",
        Ok(
            "Emu_LoadResources(void)",
        ),
    ),
    (
        "UpdateLogic__4Bird",
        Ok(
            "Bird::UpdateLogic(void)",
        ),
    ),
    (
        "_vt$11Collapsible",
        Ok(
            "Collapsible virtual table",
        ),
    ),
    (
        "__til",
        Ok(
            "long type_info node",
        ),
    ),
    (
        "Message__6FriendP9MKMessage",
        Ok(
            "Friend::Message(MKMessage *)",
        ),
    ),
    (
        "InitBite__6TyBite",
        Ok(
            "TyBite::InitBite(void)",
        ),
    ),
    (
        "ModelRender_FLWX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKWaterManager_Remove__FP7MKWater",
        Ok(
            "MKWaterManager_Remove(MKWater *)",
        ),
    ),
    (
        "Update__13ShatterStruct",
        Ok(
            "ShatterStruct::Update(void)",
        ),
    ),
    (
        "Dump__4Font",
        Ok(
            "Font::Dump(void)",
        ),
    ),
    (
        "UploadVUTypeData__11MKWaterPropP11MKWaterType",
        Ok(
            "MKWaterProp::UploadVUTypeData(MKWaterType *)",
        ),
    ),
    (
        "LoadDone__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::LoadDone(void)",
        ),
    ),
    (
        "Bull_GetModel__Fv",
        Ok(
            "Bull_GetModel(void)",
        ),
    ),
    (
        "Hud_ShowCogs__Fv",
        Ok(
            "Hud_ShowCogs(void)",
        ),
    ),
    (
        "RemoveAll__21ParticleSystemManager",
        Ok(
            "ParticleSystemManager::RemoveAll(void)",
        ),
    ),
    (
        "SnoreInit__6Julius",
        Ok(
            "Julius::SnoreInit(void)",
        ),
    ),
    (
        "Teleport__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Teleport(void)",
        ),
    ),
    (
        "Reset__9FrillBike",
        Ok(
            "FrillBike::Reset(void)",
        ),
    ),
    (
        "LoadLine__3RexP12KromeIniLine",
        Ok(
            "Rex::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Init__5RufusP11GameObjDesc",
        Ok(
            "Rufus::Init(GameObjDesc *)",
        ),
    ),
    (
        "CaveBat_LoadResources__FP8KromeIni",
        Ok(
            "CaveBat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$13OpalCollector",
        Ok(
            "OpalCollector virtual table",
        ),
    ),
    (
        "_8FireDrum$nFlameSO",
        Ok(
            "FireDrum::nFlameSO",
        ),
    ),
    (
        "_7MKWater$debugNumStripsClipped",
        Ok(
            "MKWater::debugNumStripsClipped",
        ),
    ),
    (
        "Deinit__8Talisman",
        Ok(
            "Talisman::Deinit(void)",
        ),
    ),
    (
        "PushTy__14MobilePlatform",
        Ok(
            "MobilePlatform::PushTy(void)",
        ),
    ),
    (
        "ResetCurrLine__6Parser",
        Ok(
            "Parser::ResetCurrLine(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5RoachPv",
        Ok(
            "ModuleInfo<Roach>::ConstructObject(void *)",
        ),
    ),
    (
        "Render__13CausticEffect",
        Ok(
            "CausticEffect::Render(void)",
        ),
    ),
    (
        "Init__4CrocP11GameObjDesc",
        Ok(
            "Croc::Init(GameObjDesc *)",
        ),
    ),
    (
        "PoofInit__6Geyser",
        Ok(
            "Geyser::PoofInit(void)",
        ),
    ),
    (
        "MiniGameB3_Deinit__Fv",
        Ok(
            "MiniGameB3_Deinit(void)",
        ),
    ),
    (
        "bAutoMemCardOp",
        Err(
            NotMangled,
        ),
    ),
    (
        "LogicUpdate__9BadBoonie",
        Ok(
            "BadBoonie::LogicUpdate(void)",
        ),
    ),
    (
        "SetAspectRatio__4Viewff",
        Ok(
            "View::SetAspectRatio(float, float)",
        ),
    ),
    (
        "GlueToGround__FP6Vector",
        Ok(
            "GlueToGround(Vector *)",
        ),
    ),
    (
        "GetAnim__12MKAnimScripti",
        Ok(
            "MKAnimScript::GetAnim(int)",
        ),
    ),
    (
        "Draw__8Burnable",
        Ok(
            "Burnable::Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9OpalCrate",
        Ok(
            "ModuleInfo<OpalCrate>::Init(void)",
        ),
    ),
    (
        "SwitchBackFromAquaRang__2Ty",
        Ok(
            "Ty::SwitchBackFromAquaRang(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8TalismanPv",
        Ok(
            "ModuleInfo<Talisman>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z12FlameThrower",
        Ok(
            "ModuleInfo<FlameThrower> virtual table",
        ),
    ),
    (
        "Deinit__6Wombat",
        Ok(
            "Wombat::Deinit(void)",
        ),
    ),
    (
        "_vt$6Basket",
        Ok(
            "Basket virtual table",
        ),
    ),
    (
        "_8MorayEel$anims",
        Ok(
            "MorayEel::anims",
        ),
    ),
    (
        "_GLOBAL_$I$_17MiniGameObjective$pActiveMiniGame",
        Ok(
            "global constructors keyed to MiniGameObjective::pActiveMiniGame",
        ),
    ),
    (
        "System_SetGSDisplayRegs__Fv",
        Ok(
            "System_SetGSDisplayRegs(void)",
        ),
    ),
    (
        "Chase__4Croc",
        Ok(
            "Croc::Chase(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Frog",
        Ok(
            "ModuleInfo<Frog> virtual table",
        ),
    ),
    (
        "GetRotVector__8Rotation",
        Ok(
            "Rotation::GetRotVector(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Wombat",
        Ok(
            "ModuleInfo<Wombat>::Init(void)",
        ),
    ),
    (
        "Deinit__8WhiteBat",
        Ok(
            "WhiteBat::Deinit(void)",
        ),
    ),
    (
        "gNullStr",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7LilyPad",
        Ok(
            "ModuleInfo<LilyPad> virtual table",
        ),
    ),
    (
        "sceMcWrite",
        Err(
            NotMangled,
        ),
    ),
    (
        "BeingPulled__15WaterTankStructb",
        Ok(
            "WaterTankStruct::BeingPulled(bool)",
        ),
    ),
    (
        "Reset__14FireworksCrate",
        Ok(
            "FireworksCrate::Reset(void)",
        ),
    ),
    (
        "MKGrass_InitMixTable__Fv",
        Ok(
            "MKGrass_InitMixTable(void)",
        ),
    ),
    (
        "Message__10NinjaGeckoP9MKMessage",
        Ok(
            "NinjaGecko::Message(MKMessage *)",
        ),
    ),
    (
        "Init__11MKWaterTypePcP11MKWaterType",
        Ok(
            "MKWaterType::Init(char *, MKWaterType *)",
        ),
    ),
    (
        "CalcNextStartMixValues__11MKWaterPropP6VectorT1T1T1",
        Ok(
            "MKWaterProp::CalcNextStartMixValues(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "_vt$11SpinningLog",
        Ok(
            "SpinningLog virtual table",
        ),
    ),
    (
        "ClearRangTrails__2Ty",
        Ok(
            "Ty::ClearRangTrails(void)",
        ),
    ),
    (
        "sceSifLoadStartModuleBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "pATWinMonHomeDirectory",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z12KidObjectivePv",
        Ok(
            "ModuleInfo<KidObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__8BeachHutP11GameObjDesc",
        Ok(
            "BeachHut::Init(GameObjDesc *)",
        ),
    ),
    (
        "WaterSlide_Update__Fv",
        Ok(
            "WaterSlide_Update(void)",
        ),
    ),
    (
        "Message__6FluffyP9MKMessage",
        Ok(
            "Fluffy::Message(MKMessage *)",
        ),
    ),
    (
        "ThrowStar__10NinjaGecko",
        Ok(
            "NinjaGecko::ThrowStar(void)",
        ),
    ),
    (
        "ParseEffects__19DialogEffectManagerPc",
        Ok(
            "DialogEffectManager::ParseEffects(char *)",
        ),
    ),
    (
        "Crate_HideAll__Fv",
        Ok(
            "Crate_HideAll(void)",
        ),
    ),
    (
        "IceRunToStopTransition__2Tyb",
        Ok(
            "Ty::IceRunToStopTransition(bool)",
        ),
    ),
    (
        "FireDeinit__4Tick",
        Ok(
            "Tick::FireDeinit(void)",
        ),
    ),
    (
        "DeadInit__9ShadowBat",
        Ok(
            "ShadowBat::DeadInit(void)",
        ),
    ),
    (
        "InitPathManager__7CaveBat",
        Ok(
            "CaveBat::InitPathManager(void)",
        ),
    ),
    (
        "TimeAttack_OnDeinit__Fv",
        Ok(
            "TimeAttack_OnDeinit(void)",
        ),
    ),
    (
        "GameCamera_CycleDistance__Fv",
        Ok(
            "GameCamera_CycleDistance(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Shark_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Shark_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Update__5Cloudff",
        Ok(
            "Cloud::Update(float, float)",
        ),
    ),
    (
        "JumpFromHoleInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::JumpFromHoleInit(void)",
        ),
    ),
    (
        "MoveToPrevPoint_Update__6Dennis",
        Ok(
            "Dennis::MoveToPrevPoint_Update(void)",
        ),
    ),
    (
        "PlaySound__9Boomerang14BoomerangSoundi",
        Ok(
            "Boomerang::PlaySound(BoomerangSound, int)",
        ),
    ),
    (
        "SetHasExtraHealth__8GameDatab",
        Ok(
            "GameData::SetHasExtraHealth(bool)",
        ),
    ),
    (
        "UpdateLoaded__9Boomerang",
        Ok(
            "Boomerang::UpdateLoaded(void)",
        ),
    ),
    (
        "Update__11GuideBarrel",
        Ok(
            "GuideBarrel::Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Cattle",
        Ok(
            "ModuleInfo<Cattle>::Init(void)",
        ),
    ),
    (
        "Update__9Generator",
        Ok(
            "Generator::Update(void)",
        ),
    ),
    (
        "LoadDone__7Coconut",
        Ok(
            "Coconut::LoadDone(void)",
        ),
    ),
    (
        "Scroll__12BoomerangHud13BoomerangType",
        Ok(
            "BoomerangHud::Scroll(BoomerangType)",
        ),
    ),
    (
        "DrawTerrain__14MKSceneManageri",
        Ok(
            "MKSceneManager::DrawTerrain(int)",
        ),
    ),
    (
        "Deinit__6Fluffy",
        Ok(
            "Fluffy::Deinit(void)",
        ),
    ),
    (
        "EnemyCamera_CheckStateChange__10GameCamera",
        Ok(
            "GameCamera::EnemyCamera_CheckStateChange(void)",
        ),
    ),
    (
        "Collision_FindSafePointLR__10GameCameraP6VectoriifP15SafePointResult",
        Ok(
            "GameCamera::Collision_FindSafePointLR(Vector *, int, int, float, SafePointResult *)",
        ),
    ),
    (
        "InitBiteUncharge__6TyBite",
        Ok(
            "TyBite::InitBiteUncharge(void)",
        ),
    ),
    (
        "ValidPIRange__Ff",
        Ok(
            "ValidPIRange(float)",
        ),
    ),
    (
        "fpmul",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalcNextSpawnPoint__9Lightning",
        Ok(
            "Lightning::CalcNextSpawnPoint(void)",
        ),
    ),
    (
        "_vt$16A1FrillObjective",
        Ok(
            "A1FrillObjective virtual table",
        ),
    ),
    (
        "CheckFramerang__14FireworksCrate",
        Ok(
            "FireworksCrate::CheckFramerang(void)",
        ),
    ),
    (
        "Mist_Draw__Fv",
        Ok(
            "Mist_Draw(void)",
        ),
    ),
    (
        "InitFall__2Ty",
        Ok(
            "Ty::InitFall(void)",
        ),
    ),
    (
        "ModelRender_FLO1W_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetSelected__8UIButtonb",
        Ok(
            "UIButton::SetSelected(bool)",
        ),
    ),
    (
        "Flinch__9Speedboat",
        Ok(
            "Speedboat::Flinch(void)",
        ),
    ),
    (
        "InitState__15GameCameraState11CameraState",
        Ok(
            "GameCameraState::InitState(CameraState)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8SignPost",
        Ok(
            "ModuleInfo<SignPost> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14TrapdoorSpider",
        Ok(
            "ModuleInfo<TrapdoorSpider>::Init(void)",
        ),
    ),
    (
        "InitFromBuffer__8KromeIniPcT1",
        Ok(
            "KromeIni::InitFromBuffer(char *, char *)",
        ),
    ),
    (
        "GenerateValidRandomPos__4MothP6VectorT1",
        Ok(
            "Moth::GenerateValidRandomPos(Vector *, Vector *)",
        ),
    ),
    (
        "Str_CopyString__FPci",
        Ok(
            "Str_CopyString(char *, int)",
        ),
    ),
    (
        "Update__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Update(void)",
        ),
    ),
    (
        "playerFileNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "Setup_Start__Fv",
        Ok(
            "Setup_Start(void)",
        ),
    ),
    (
        "ModelRender_CF_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$11BaseCritter",
        Ok(
            "BaseCritter virtual table",
        ),
    ),
    (
        "Waterfall_Lock__Fv",
        Ok(
            "Waterfall_Lock(void)",
        ),
    ),
    (
        "ModelRender_CFW_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "renderTypeIniStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__12KidObjectiveP11GameObjDesc",
        Ok(
            "KidObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "DrawTextWrapped__4FontPcffP6Vector11FontJustifyUii",
        Ok(
            "Font::DrawTextWrapped(char *, float, float, Vector *, FontJustify, unsigned int, int)",
        ),
    ),
    (
        "MKWaterManager_InitPerFrameDebugData__Fv",
        Ok(
            "MKWaterManager_InitPerFrameDebugData(void)",
        ),
    ),
    (
        "Message__8DiveRingP9MKMessage",
        Ok(
            "DiveRing::Message(MKMessage *)",
        ),
    ),
    (
        "FrontEnd_Gallery_Update__Fv",
        Ok(
            "FrontEnd_Gallery_Update(void)",
        ),
    ),
    (
        "sceSifRemoveCmdHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10Teleporter",
        Ok(
            "ModuleInfo<Teleporter>::Init(void)",
        ),
    ),
    (
        "SaveStates_SetBoomerang__Fib",
        Ok(
            "SaveStates_SetBoomerang(int, bool)",
        ),
    ),
    (
        "CalcHeading__14WaterSlideData",
        Ok(
            "WaterSlideData::CalcHeading(void)",
        ),
    ),
    (
        "_rix_111",
        Err(
            NotMangled,
        ),
    ),
    (
        "PE_BlackSmoke_LoadResources__Fv",
        Ok(
            "PE_BlackSmoke_LoadResources(void)",
        ),
    ),
    (
        "ModelRenderStub_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__3BatP11GameObjDesc",
        Ok(
            "Bat::Init(GameObjDesc *)",
        ),
    ),
    (
        "Bouncer_LoadResources__FP8KromeIni",
        Ok(
            "Bouncer_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Render__10LavaEffect",
        Ok(
            "LavaEffect::Render(void)",
        ),
    ),
    (
        "LightPoint__4ViewP9IntVectorP6VectorT2T2",
        Ok(
            "View::LightPoint(IntVector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Miss__5Leech",
        Ok(
            "Leech::Miss(void)",
        ),
    ),
    (
        "Message__13FallGuidePropP9MKMessage",
        Ok(
            "FallGuideProp::Message(MKMessage *)",
        ),
    ),
    (
        "RunToWaypoint_Deinit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::RunToWaypoint_Deinit(void)",
        ),
    ),
    (
        "Fall__5Neddy",
        Ok(
            "Neddy::Fall(void)",
        ),
    ),
    (
        "Update__12BoomerangHud",
        Ok(
            "BoomerangHud::Update(void)",
        ),
    ),
    (
        "localeconv",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpiderTrapdoor_GetDescriptor__Fv",
        Ok(
            "SpiderTrapdoor_GetDescriptor(void)",
        ),
    ),
    (
        "ToggleE3Mode__Fv",
        Ok(
            "ToggleE3Mode(void)",
        ),
    ),
    (
        "Reset__10SoundEvent",
        Ok(
            "SoundEvent::Reset(void)",
        ),
    ),
    (
        "_multadd",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "Drum_LoadResources__FP8KromeIni",
        Ok(
            "Drum_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IsTyWithinChaseArea__5Leech",
        Ok(
            "Leech::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Death__5Rufus",
        Ok(
            "Rufus::Death(void)",
        ),
    ),
    (
        "_vt$8PubeCrab",
        Ok(
            "PubeCrab virtual table",
        ),
    ),
    (
        "DrawDebug__10KingFisher",
        Ok(
            "KingFisher::DrawDebug(void)",
        ),
    ),
    (
        "Draw__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Draw(void)",
        ),
    ),
    (
        "RFU085_iClearEventFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceInetAddress2String",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsVisible__7MKWater",
        Ok(
            "MKWater::IsVisible(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Maurie",
        Ok(
            "ModuleInfo<Maurie>::Init(void)",
        ),
    ),
    (
        "_5Skink$burningBat",
        Ok(
            "Skink::burningBat",
        ),
    ),
    (
        "AddWaypoint__17PathFindingObjectP6VectorT1",
        Ok(
            "PathFindingObject::AddWaypoint(Vector *, Vector *)",
        ),
    ),
    (
        "SetZoneTalismanLocated__8GameData10ZoneNumberb",
        Ok(
            "GameData::SetZoneTalismanLocated(ZoneNumber, bool)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10LavaBurner",
        Ok(
            "ModuleInfo<LavaBurner>::Init(void)",
        ),
    ),
    (
        "FindNeighbours__11EnemyObjectf",
        Ok(
            "EnemyObject::FindNeighbours(float)",
        ),
    ),
    (
        "Land__10NinjaGecko",
        Ok(
            "NinjaGecko::Land(void)",
        ),
    ),
    (
        "CheckForWaterEdge__4Croc",
        Ok(
            "Croc::CheckForWaterEdge(void)",
        ),
    ),
    (
        "Direction_Create__14CameraOverridePv",
        Ok(
            "CameraOverride::Direction_Create(void *)",
        ),
    ),
    (
        "UseMiniGameB1Camera__10GameCamerab",
        Ok(
            "GameCamera::UseMiniGameB1Camera(bool)",
        ),
    ),
    (
        "SharedUpdate__4Frog",
        Ok(
            "Frog::SharedUpdate(void)",
        ),
    ),
    (
        "__ieee754_sqrt",
        Err(
            InvalidSpecialMethod(
                "ieee754_sqrt",
            ),
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7C3ChestPv",
        Ok(
            "ModuleInfo<C3Chest>::ConstructObject(void *)",
        ),
    ),
    (
        "Enable__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Enable(void)",
        ),
    ),
    (
        "Checkpoint_ClearLast__Fv",
        Ok(
            "Checkpoint_ClearLast(void)",
        ),
    ),
    (
        "Deinit__10GameObject",
        Ok(
            "GameObject::Deinit(void)",
        ),
    ),
    (
        "_7SnowRoo$nSnowBallObj",
        Ok(
            "SnowRoo::nSnowBallObj",
        ),
    ),
    (
        "Dump__Q29Animation13FrameInstancePc",
        Ok(
            "Animation::FrameInstance::Dump(char *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8PlatformPv",
        Ok(
            "ModuleInfo<Platform>::ConstructObject(void *)",
        ),
    ),
    (
        "MKGrass_LoadIni__FPc",
        Ok(
            "MKGrass_LoadIni(char *)",
        ),
    ),
    (
        "_vt$6Maurie",
        Ok(
            "Maurie virtual table",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10TumbleWeedPv",
        Ok(
            "ModuleInfo<TumbleWeed>::ConstructObject(void *)",
        ),
    ),
    (
        "UpInit__8RingoArm",
        Ok(
            "RingoArm::UpInit(void)",
        ),
    ),
    (
        "BackOffInit__5Shark",
        Ok(
            "Shark::BackOffInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Eel",
        Ok(
            "ModuleInfo<Eel>::Init(void)",
        ),
    ),
    (
        "Show__12BunyipStructb",
        Ok(
            "BunyipStruct::Show(bool)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z16CaveBatObjectivePv",
        Ok(
            "ModuleInfo<CaveBatObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__15WaterTankStruct",
        Ok(
            "WaterTankStruct::Deinit(void)",
        ),
    ),
    (
        "Recover__9FrillBike",
        Ok(
            "FrillBike::Recover(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Load__13BoomerangDescP8KromeIni",
        Ok(
            "global constructors keyed to BoomerangDesc::Load(KromeIni *)",
        ),
    ),
    (
        "MergeEnds__6Spline",
        Ok(
            "Spline::MergeEnds(void)",
        ),
    ),
    (
        "ModelRender_ACX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__6MKWave",
        Ok(
            "MKWave::Deinit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11BunyipElder",
        Ok(
            "ModuleInfo<BunyipElder>::Init(void)",
        ),
    ),
    (
        "Init__13CritterField2P11GameObjDesc",
        Ok(
            "CritterField2::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$16FriendDescriptor",
        Ok(
            "FriendDescriptor virtual table",
        ),
    ),
    (
        "DogPaddle__2Ty",
        Ok(
            "Ty::DogPaddle(void)",
        ),
    ),
    (
        "_waitIpuIdle64",
        Err(
            NotMangled,
        ),
    ),
    (
        "Weather_CreateDebugMenus__FP15DebugOptionMenuPPc",
        Ok(
            "Weather_CreateDebugMenus(DebugOptionMenu *, char **)",
        ),
    ),
    (
        "sceScfGetDateNotation",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9OpalCratePv",
        Ok(
            "ModuleInfo<OpalCrate>::ConstructObject(void *)",
        ),
    ),
    (
        "stat",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsTyWithinChaseArea__10BlueTongue",
        Ok(
            "BlueTongue::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Collision_AddDynamicSubobject__FP5ModeliP13CollisionInfo",
        Ok(
            "Collision_AddDynamicSubobject(Model *, int, CollisionInfo *)",
        ),
    ),
    (
        "Init__11ProgressBarPcT1iififf",
        Ok(
            "ProgressBar::Init(char *, char *, int, int, float, int, float, float)",
        ),
    ),
    (
        "IceBlock_Update__Fv",
        Ok(
            "IceBlock_Update(void)",
        ),
    ),
    (
        "ApplyMatrix__6VectorP6Matrix",
        Ok(
            "Vector::ApplyMatrix(Matrix *)",
        ),
    ),
    (
        "Init__4RainP8RainInit",
        Ok(
            "Rain::Init(RainInit *)",
        ),
    ),
    (
        "Update__12AquarangProp",
        Ok(
            "AquarangProp::Update(void)",
        ),
    ),
    (
        "ROPE_MATERIAL_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "CheckObjectCollision__15CollisionObjectP6VectorT1P15CollisionObjectP15CollisionResult",
        Ok(
            "CollisionObject::CheckObjectCollision(Vector *, Vector *, CollisionObject *, CollisionResult *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9ZappyrangPv",
        Ok(
            "ModuleInfo<Zappyrang>::ConstructObject(void *)",
        ),
    ),
    (
        "GetPos__16CheckpointStruct",
        Ok(
            "CheckpointStruct::GetPos(void)",
        ),
    ),
    (
        "StickToHead__4Tick",
        Ok(
            "Tick::StickToHead(void)",
        ),
    ),
    (
        "BurnBatInit__5Skink",
        Ok(
            "Skink::BurnBatInit(void)",
        ),
    ),
    (
        "Attack__5Skink",
        Ok(
            "Skink::Attack(void)",
        ),
    ),
    (
        "StandOnPipeInit__9ShadowBat",
        Ok(
            "ShadowBat::StandOnPipeInit(void)",
        ),
    ),
    (
        "Deinit__11PontoonRope",
        Ok(
            "PontoonRope::Deinit(void)",
        ),
    ),
    (
        "Tools_BuildMatrixFromFwd__FP6MatrixP6VectorT1",
        Ok(
            "Tools_BuildMatrixFromFwd(Matrix *, Vector *, Vector *)",
        ),
    ),
    (
        "LoadLine__15Tools_WayPointsP12KromeIniLineQ215Tools_WayPoints8LoadMode",
        Ok(
            "Tools_WayPoints::LoadLine(KromeIniLine *, Tools_WayPoints::LoadMode)",
        ),
    ),
    (
        "BushPig_Deinit__Fv",
        Ok(
            "BushPig_Deinit(void)",
        ),
    ),
    (
        "gEmptyPtrList",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__4JeepP9MKMessage",
        Ok(
            "Jeep::Message(MKMessage *)",
        ),
    ),
    (
        "Idle__6Aurora",
        Ok(
            "Aurora::Idle(void)",
        ),
    ),
    (
        "CanPickup__14RockProjectile",
        Ok(
            "RockProjectile::CanPickup(void)",
        ),
    ),
    (
        "tanf",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsExecStoreImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__9StarTrail",
        Ok(
            "StarTrail::Deinit(void)",
        ),
    ),
    (
        "BlockRecoilInit__6Muddie",
        Ok(
            "Muddie::BlockRecoilInit(void)",
        ),
    ),
    (
        "UpdateExhaust__9FrillBike",
        Ok(
            "FrillBike::UpdateExhaust(void)",
        ),
    ),
    (
        "UpdateSlipperyPhysics__2TyG6VectorT1T1",
        Ok(
            "Ty::UpdateSlipperyPhysics(Vector, Vector, Vector)",
        ),
    ),
    (
        "SpawnFireParticle__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnFireParticle(Vector *, float)",
        ),
    ),
    (
        "UsePontoonCamera__10GameCamerab",
        Ok(
            "GameCamera::UsePontoonCamera(bool)",
        ),
    ),
    (
        "__sce_sema_id",
        Err(
            InvalidSpecialMethod(
                "sce_sema_id",
            ),
        ),
    ),
    (
        "SwapShort__FUs",
        Ok(
            "SwapShort(unsigned short)",
        ),
    ),
    (
        "Deinit__11WaterVolume",
        Ok(
            "WaterVolume::Deinit(void)",
        ),
    ),
    (
        "SendHitMessage__9BoomerangP15CollisionResult",
        Ok(
            "Boomerang::SendHitMessage(CollisionResult *)",
        ),
    ),
    (
        "Update__4Gate",
        Ok(
            "Gate::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10ScubaFrillPv",
        Ok(
            "ModuleInfo<ScubaFrill>::ConstructObject(void *)",
        ),
    ),
    (
        "Sjis2Ascii__FPc",
        Ok(
            "Sjis2Ascii(char *)",
        ),
    ),
    (
        "Shatter__14IceBlockStruct",
        Ok(
            "IceBlockStruct::Shatter(void)",
        ),
    ),
    (
        "Reset__6Spline",
        Ok(
            "Spline::Reset(void)",
        ),
    ),
    (
        "OmniLight_FindNearest__FP14OmniLightSceneP6Vectorf",
        Ok(
            "OmniLight_FindNearest(OmniLightScene *, Vector *, float)",
        ),
    ),
    (
        "SetState__8ElevatorQ28Elevator5State",
        Ok(
            "Elevator::SetState(Elevator::State)",
        ),
    ),
    (
        "iCpuConfig",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDebug__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::DrawDebug(void)",
        ),
    ),
    (
        "IsActive__12EnemySpawner",
        Ok(
            "EnemySpawner::IsActive(void)",
        ),
    ),
    (
        "Update__9WaterPipe",
        Ok(
            "WaterPipe::Update(void)",
        ),
    ),
    (
        "GameCamera_Reset__FP18GameCameraHeroInfoi",
        Ok(
            "GameCamera_Reset(GameCameraHeroInfo *, int)",
        ),
    ),
    (
        "RunStopUpdate__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::RunStopUpdate(void)",
        ),
    ),
    (
        "IsAscii__FPc",
        Ok(
            "IsAscii(char *)",
        ),
    ),
    (
        "Init__18MobilePlatformDescP14ModuleInfoBasePcT2ii",
        Ok(
            "MobilePlatformDesc::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "sceCdGetDiskType",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_TEST_1__3DmaUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEST_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "SetNearestTargetEnemy__16AutoTargetStructP6VectorP5ModelT1",
        Ok(
            "AutoTargetStruct::SetNearestTargetEnemy(Vector *, Model *, Vector *)",
        ),
    ),
    (
        "LoadLine__10IceCoolantP12KromeIniLine",
        Ok(
            "IceCoolant::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$23PerimeterCheckObjective",
        Ok(
            "PerimeterCheckObjective virtual table",
        ),
    ),
    (
        "SetTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeathInit__5Rufus",
        Ok(
            "Rufus::DeathInit(void)",
        ),
    ),
    (
        "SpikeyIce_Delete__FP15SpikeyIceStruct",
        Ok(
            "SpikeyIce_Delete(SpikeyIceStruct *)",
        ),
    ),
    (
        "_iEnableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "PontoonRope_LoadResource__FP8KromeIni",
        Ok(
            "PontoonRope_LoadResource(KromeIni *)",
        ),
    ),
    (
        "Activating__16CheckpointStruct",
        Ok(
            "CheckpointStruct::Activating(void)",
        ),
    ),
    (
        "Init__13ShadowBatPipeP11GameObjDesc",
        Ok(
            "ShadowBatPipe::Init(GameObjDesc *)",
        ),
    ),
    (
        "UpdateParticleEffect__9Boomerang",
        Ok(
            "Boomerang::UpdateParticleEffect(void)",
        ),
    ),
    (
        "DebugInfo_Sphere__FPcP6VectorfiT1",
        Ok(
            "DebugInfo_Sphere(char *, Vector *, float, int, Vector *)",
        ),
    ),
    (
        "LoadDone__14FireworksCrate",
        Ok(
            "FireworksCrate::LoadDone(void)",
        ),
    ),
    (
        "Tools_CapsuleTestMagSq__FP6VectorT0T0f",
        Ok(
            "Tools_CapsuleTestMagSq(Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "MKMem_Mark__Fv",
        Ok(
            "MKMem_Mark(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_Deinit__Fv",
        Ok(
            "FrontEnd_Gallery_Deinit(void)",
        ),
    ),
    (
        "CrikeyCanister_GetDescriptor__Fv",
        Ok(
            "CrikeyCanister_GetDescriptor(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_OnExit__Fv",
        Ok(
            "FrontEnd_Gallery_OnExit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SnowPile_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SnowPile_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_ipuSetMPEG1",
        Err(
            NotMangled,
        ),
    ),
    (
        "_5Skink$nBeerObj",
        Ok(
            "Skink::nBeerObj",
        ),
    ),
    (
        "LoadLine__15ZoneBlockerPropP12KromeIniLine",
        Ok(
            "ZoneBlockerProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "__sce_eh_sema_id",
        Err(
            InvalidSpecialMethod(
                "sce_eh_sema_id",
            ),
        ),
    ),
    (
        "PatrolDeinit__10SnowSpider",
        Ok(
            "SnowSpider::PatrolDeinit(void)",
        ),
    ),
    (
        "ReboundInit__10NinjaGecko",
        Ok(
            "NinjaGecko::ReboundInit(void)",
        ),
    ),
    (
        "Idle__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Idle(void)",
        ),
    ),
    (
        "gPSRes",
        Err(
            NotMangled,
        ),
    ),
    (
        "ty",
        Err(
            NotMangled,
        ),
    ),
    (
        "_MKMem_TFree__FPvPci",
        Ok(
            "_MKMem_TFree(void *, char *, int)",
        ),
    ),
    (
        "CollideWithEnvironment__9BoomerangP15CollisionResult",
        Ok(
            "Boomerang::CollideWithEnvironment(CollisionResult *)",
        ),
    ),
    (
        "ModelRender_AT_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__13OpalCollector",
        Ok(
            "OpalCollector::Draw(void)",
        ),
    ),
    (
        "LightDrum__8FireDrum",
        Ok(
            "FireDrum::LightDrum(void)",
        ),
    ),
    (
        "Shatter_Draw__Fv",
        Ok(
            "Shatter_Draw(void)",
        ),
    ),
    (
        "CheckAvailableChumOrCanister__6Crikey",
        Ok(
            "Crikey::CheckAvailableChumOrCanister(void)",
        ),
    ),
    (
        "Hud_ShowSpecialPickups__Fv",
        Ok(
            "Hud_ShowSpecialPickups(void)",
        ),
    ),
    (
        "SetRotationPYR__6MatrixP6Vector",
        Ok(
            "Matrix::SetRotationPYR(Vector *)",
        ),
    ),
    (
        "AddToUploadQueue__7Texture",
        Ok(
            "Texture::AddToUploadQueue(void)",
        ),
    ),
    (
        "Chase__5Skink",
        Ok(
            "Skink::Chase(void)",
        ),
    ),
    (
        "RunToWaypoint_Event__11ScrubTurkeyPc",
        Ok(
            "ScrubTurkey::RunToWaypoint_Event(char *)",
        ),
    ),
    (
        "DoAnAttack__4Bull",
        Ok(
            "Bull::DoAnAttack(void)",
        ),
    ),
    (
        "FinishLine_Hide__Fv",
        Ok(
            "FinishLine_Hide(void)",
        ),
    ),
    (
        "Reset__6MKProp",
        Ok(
            "MKProp::Reset(void)",
        ),
    ),
    (
        "Move__4Tick",
        Ok(
            "Tick::Move(void)",
        ),
    ),
    (
        "LoadLine__5NeddyP12KromeIniLine",
        Ok(
            "Neddy::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "WaterVolume_IsWithin__FP6VectorPf",
        Ok(
            "WaterVolume_IsWithin(Vector *, float *)",
        ),
    ),
    (
        "_7MKWater$pWhiteTexture",
        Ok(
            "MKWater::pWhiteTexture",
        ),
    ),
    (
        "RotateYaw__6MatrixP6Matrixf",
        Ok(
            "Matrix::RotateYaw(Matrix *, float)",
        ),
    ),
    (
        "__vn__FUiPv",
        Ok(
            "operator new [](unsigned int, void *)",
        ),
    ),
    (
        "WaterDragon_End__Fv",
        Ok(
            "WaterDragon_End(void)",
        ),
    ),
    (
        "PlayFootSFX__2Ty8FootSidebb",
        Ok(
            "Ty::PlayFootSFX(FootSide, bool, bool)",
        ),
    ),
    (
        "DeinitIdleSurfaceSwim__2Ty",
        Ok(
            "Ty::DeinitIdleSurfaceSwim(void)",
        ),
    ),
    (
        "Destroy__t7PtrList1Z10GameObjectP10GameObject",
        Ok(
            "PtrList<GameObject>::Destroy(GameObject *)",
        ),
    ),
    (
        "_vt$8SignPost",
        Ok(
            "SignPost virtual table",
        ),
    ),
    (
        "HopOnSpot__5Rufusb",
        Ok(
            "Rufus::HopOnSpot(bool)",
        ),
    ),
    (
        "GenerateRandomPos__10CuttleFish",
        Ok(
            "CuttleFish::GenerateRandomPos(void)",
        ),
    ),
    (
        "LoadLine__8SnowPileP12KromeIniLine",
        Ok(
            "SnowPile::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "DrawReflection__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::DrawReflection(void)",
        ),
    ),
    (
        "descr_cast__H1ZP13BoomerangDesc_P16MKPropDescriptor_X01",
        Ok(
            "BoomerangDesc * descr_cast<BoomerangDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "_GLOBAL_$I$pStaticCamEye",
        Ok(
            "global constructors keyed to pStaticCamEye",
        ),
    ),
    (
        "PollSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "Set__11DirectLightP6Vector",
        Ok(
            "DirectLight::Set(Vector *)",
        ),
    ),
    (
        "bBilbiesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "RFU060",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__5ImageiiPUi",
        Ok(
            "Image::Init(int, int, unsigned int *)",
        ),
    ),
    (
        "Draw__11PontoonRope",
        Ok(
            "PontoonRope::Draw(void)",
        ),
    ),
    (
        "StopSounds__9Boomerang",
        Ok(
            "Boomerang::StopSounds(void)",
        ),
    ),
    (
        "SetState__12BunyipStruct11BunyipState",
        Ok(
            "BunyipStruct::SetState(BunyipState)",
        ),
    ),
    (
        "RunAwayDeinit__7CaveBat",
        Ok(
            "CaveBat::RunAwayDeinit(void)",
        ),
    ),
    (
        "Message__21ConditionalScriptPropP9MKMessage",
        Ok(
            "ConditionalScriptProp::Message(MKMessage *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z17SynkerFrillLizardPv",
        Ok(
            "ModuleInfo<SynkerFrillLizard>::ConstructObject(void *)",
        ),
    ),
    (
        "Taunt__10BlueTongueb",
        Ok(
            "BlueTongue::Taunt(bool)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9SpiderWeb",
        Ok(
            "ModuleInfo<SpiderWeb>::Init(void)",
        ),
    ),
    (
        "CollectCog__8GameData13GoldenCogType",
        Ok(
            "GameData::CollectCog(GoldenCogType)",
        ),
    ),
    (
        "Init__21FrillProblemObjectiveP11GameObjDesc",
        Ok(
            "FrillProblemObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "WaitInit__6Muddie",
        Ok(
            "Muddie::WaitInit(void)",
        ),
    ),
    (
        "Update__8Elevator",
        Ok(
            "Elevator::Update(void)",
        ),
    ),
    (
        "AddGif_AD_HWREG__3DmaUl",
        Ok(
            "Dma::AddGif_AD_HWREG(unsigned long)",
        ),
    ),
    (
        "Struck__5Skink",
        Ok(
            "Skink::Struck(void)",
        ),
    ),
    (
        "Message__14FireworksCrateP9MKMessage",
        Ok(
            "FireworksCrate::Message(MKMessage *)",
        ),
    ),
    (
        "CircleCageInit__5Shark",
        Ok(
            "Shark::CircleCageInit(void)",
        ),
    ),
    (
        "vColours",
        Err(
            NotMangled,
        ),
    ),
    (
        "CruiseInit__5Shark",
        Ok(
            "Shark::CruiseInit(void)",
        ),
    ),
    (
        "Idle__14IceBlockStruct",
        Ok(
            "IceBlockStruct::Idle(void)",
        ),
    ),
    (
        "Idle__8LilNeddy",
        Ok(
            "LilNeddy::Idle(void)",
        ),
    ),
    (
        "Reset__13SpeedboatWake",
        Ok(
            "SpeedboatWake::Reset(void)",
        ),
    ),
    (
        "Flinch__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Flinch(void)",
        ),
    ),
    (
        "Reset__11BurningTree",
        Ok(
            "BurningTree::Reset(void)",
        ),
    ),
    (
        "GetJeep__Fv",
        Ok(
            "GetJeep(void)",
        ),
    ),
    (
        "ModelRender_FS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "HuntShazza__10BlueTongue",
        Ok(
            "BlueTongue::HuntShazza(void)",
        ),
    ),
    (
        "IsOwnRang__16BoomerangManagerP9Boomerang",
        Ok(
            "BoomerangManager::IsOwnRang(Boomerang *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8WhiteBatPv",
        Ok(
            "ModuleInfo<WhiteBat>::ConstructObject(void *)",
        ),
    ),
    (
        "Idle__7CaveBat",
        Ok(
            "CaveBat::Idle(void)",
        ),
    ),
    (
        "Shaking__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Shaking(void)",
        ),
    ),
    (
        "Update__3Ice",
        Ok(
            "Ice::Update(void)",
        ),
    ),
    (
        "UnloadSound__8KoalaKid",
        Ok(
            "KoalaKid::UnloadSound(void)",
        ),
    ),
    (
        "ModelRender_FTW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "TurnToNext__15TurningPlatform",
        Ok(
            "TurningPlatform::TurnToNext(void)",
        ),
    ),
    (
        "Heap_TrackAlloc__FPviPciT2",
        Ok(
            "Heap_TrackAlloc(void *, int, char *, int, char *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9FrillBike",
        Ok(
            "ModuleInfo<FrillBike>::Init(void)",
        ),
    ),
    (
        "GetMoveYaw__10GameCamera",
        Ok(
            "GameCamera::GetMoveYaw(void)",
        ),
    ),
    (
        "InitJump__14WaterSlideData",
        Ok(
            "WaterSlideData::InitJump(void)",
        ),
    ),
    (
        "_sceCd_ee_read_mode",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddSubObjectDraw__5ModelPvi",
        Ok(
            "Model::AddSubObjectDraw(void *, int)",
        ),
    ),
    (
        "Init__6RkvTOCPc",
        Ok(
            "RkvTOC::Init(char *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6DennisPv",
        Ok(
            "ModuleInfo<Dennis>::ConstructObject(void *)",
        ),
    ),
    (
        "Game_DebugModeUpdate__Fv",
        Ok(
            "Game_DebugModeUpdate(void)",
        ),
    ),
    (
        "sceSifSetRpcQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "Smooth__10GameCamera",
        Ok(
            "GameCamera::Smooth(void)",
        ),
    ),
    (
        "Init__22MusicalIcicleObjectiveP11GameObjDesc",
        Ok(
            "MusicalIcicleObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "RenderTexture_RenderWater__Fv",
        Ok(
            "RenderTexture_RenderWater(void)",
        ),
    ),
    (
        "Inverse__6Vector",
        Ok(
            "Vector::Inverse(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11ThinIceProp",
        Ok(
            "ModuleInfo<ThinIceProp>::Init(void)",
        ),
    ),
    (
        "AvoidObstacles__4Jeep",
        Ok(
            "Jeep::AvoidObstacles(void)",
        ),
    ),
    (
        "Init__8KromeIniPc",
        Ok(
            "KromeIni::Init(char *)",
        ),
    ),
    (
        "ArePointsWithin__14BoundingRegionP6VectorT1",
        Ok(
            "BoundingRegion::ArePointsWithin(Vector *, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Spear",
        Ok(
            "ModuleInfo<Spear> virtual table",
        ),
    ),
    (
        "Enemies_GetTrackedPos__FPvP6Vector",
        Ok(
            "Enemies_GetTrackedPos(void *, Vector *)",
        ),
    ),
    (
        "MoveTy__11IcePlatform",
        Ok(
            "IcePlatform::MoveTy(void)",
        ),
    ),
    (
        "kprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sendDataToIPU",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceGsSyncPath",
        Err(
            NotMangled,
        ),
    ),
    (
        "ShootSonar__9ShadowBat",
        Ok(
            "ShadowBat::ShootSonar(void)",
        ),
    ),
    (
        "Init__8BilbyHud",
        Ok(
            "BilbyHud::Init(void)",
        ),
    ),
    (
        "RenderTexture_SetWaterHigh__FPcf",
        Ok(
            "RenderTexture_SetWaterHigh(char *, float)",
        ),
    ),
    (
        "Reset__4Jeep",
        Ok(
            "Jeep::Reset(void)",
        ),
    ),
    (
        "Reset__6Dennis",
        Ok(
            "Dennis::Reset(void)",
        ),
    ),
    (
        "_14ParticleSystem$identityMatrix",
        Ok(
            "ParticleSystem::identityMatrix",
        ),
    ),
    (
        "Glide_Update__10GameCamera",
        Ok(
            "GameCamera::Glide_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13BubbleSpawner",
        Ok(
            "ModuleInfo<BubbleSpawner>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10DialogProp",
        Ok(
            "ModuleInfo<DialogProp>::Init(void)",
        ),
    ),
    (
        "DashState__9ShoalFish",
        Ok(
            "ShoalFish::DashState(void)",
        ),
    ),
    (
        "SetState__5TyFSM14HeroActorStateb",
        Ok(
            "TyFSM::SetState(HeroActorState, bool)",
        ),
    ),
    (
        "SetAnimNormalised__12MKAnimScriptP6MKAnimf",
        Ok(
            "MKAnimScript::SetAnimNormalised(MKAnim *, float)",
        ),
    ),
    (
        "isceSifSetDChain",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_MIPTBP1_2__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_MIPTBP1_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Message__7BoulderP9MKMessage",
        Ok(
            "Boulder::Message(MKMessage *)",
        ),
    ),
    (
        "Idle__3Emu",
        Ok(
            "Emu::Idle(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4GatePv",
        Ok(
            "ModuleInfo<Gate>::ConstructObject(void *)",
        ),
    ),
    (
        "SetToClosest__17WaterSlideSectionP6Vector",
        Ok(
            "WaterSlideSection::SetToClosest(Vector *)",
        ),
    ),
    (
        "Hit__6Maurie",
        Ok(
            "Maurie::Hit(void)",
        ),
    ),
    (
        "DeinitModule__10GameObject",
        Ok(
            "GameObject::DeinitModule(void)",
        ),
    ),
    (
        "HeadStuckInFloor__2Ty",
        Ok(
            "Ty::HeadStuckInFloor(void)",
        ),
    ),
    (
        "MKGrassRender_Draw",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetThrowDelay__14RockCollectioni",
        Ok(
            "RockCollection::SetThrowDelay(int)",
        ),
    ),
    (
        "FallUpdate__11DropPontoon",
        Ok(
            "DropPontoon::FallUpdate(void)",
        ),
    ),
    (
        "Message__6SpyEggP9MKMessage",
        Ok(
            "SpyEgg::Message(MKMessage *)",
        ),
    ),
    (
        "Fall_ForceNormal_SetSource__10GameCamera",
        Ok(
            "GameCamera::Fall_ForceNormal_SetSource(void)",
        ),
    ),
    (
        "PipePart_IsPipeRepaired__FP10GameObject",
        Ok(
            "PipePart_IsPipeRepaired(GameObject *)",
        ),
    ),
    (
        "Idle__3Gem",
        Ok(
            "Gem::Idle(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11BoulderTrapPv",
        Ok(
            "ModuleInfo<BoulderTrap>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__5Leech",
        Ok(
            "Leech::Deinit(void)",
        ),
    ),
    (
        "Init__8Critter2P11GameObjDesc",
        Ok(
            "Critter2::Init(GameObjDesc *)",
        ),
    ),
    (
        "CameraOverrideRail_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideRail_Line(KromeIniLine *)",
        ),
    ),
    (
        "bCratesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__13CritterField2",
        Ok(
            "CritterField2::Update(void)",
        ),
    ),
    (
        "SmoothY__15GameCameraPointff",
        Ok(
            "GameCameraPoint::SmoothY(float, float)",
        ),
    ),
    (
        "GameCamera_AddDynamicCollisionItem__FP5Modeli",
        Ok(
            "GameCamera_AddDynamicCollisionItem(Model *, int)",
        ),
    ),
    (
        "sceSifAllocIopHeap",
        Err(
            NotMangled,
        ),
    ),
    (
        "CurrentVector_Update__10GameCamera",
        Ok(
            "GameCamera::CurrentVector_Update(void)",
        ),
    ),
    (
        "SwallowedByGroperInit__2Ty",
        Ok(
            "Ty::SwallowedByGroperInit(void)",
        ),
    ),
    (
        "MergeEnds__13UniformSpline",
        Ok(
            "UniformSpline::MergeEnds(void)",
        ),
    ),
    (
        "Hud_DrawGems__Fv",
        Ok(
            "Hud_DrawGems(void)",
        ),
    ),
    (
        "Init__13OpalCollectorP11GameObjDesc",
        Ok(
            "OpalCollector::Init(GameObjDesc *)",
        ),
    ),
    (
        "Escape__3Emu",
        Ok(
            "Emu::Escape(void)",
        ),
    ),
    (
        "MKRumble_Play__F12InputDevicesfffcf",
        Ok(
            "MKRumble_Play(InputDevices, float, float, float, char, float)",
        ),
    ),
    (
        "CheckMix__11MKWaterPropiiP6Vector",
        Ok(
            "MKWaterProp::CheckMix(int, int, Vector *)",
        ),
    ),
    (
        "DropStalactite__9ShadowBatP6Vector",
        Ok(
            "ShadowBat::DropStalactite(Vector *)",
        ),
    ),
    (
        "__get_dynamic_handler_chain",
        Err(
            InvalidSpecialMethod(
                "get_dynamic_handler_chain",
            ),
        ),
    ),
    (
        "GS_SendRegs__Fv",
        Ok(
            "GS_SendRegs(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9FrogField",
        Ok(
            "ModuleInfo<FrogField> virtual table",
        ),
    ),
    (
        "_pictureDisplayExtension",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitFiring__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::InitFiring(void)",
        ),
    ),
    (
        "Tools_MatIDToStr__Fi",
        Ok(
            "Tools_MatIDToStr(int)",
        ),
    ),
    (
        "SwimmingState__5TyFSMi",
        Ok(
            "TyFSM::SwimmingState(int)",
        ),
    ),
    (
        "ResetLight__9GlobalVar",
        Ok(
            "GlobalVar::ResetLight(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z4BirdPv",
        Ok(
            "ModuleInfo<Bird>::ConstructObject(void *)",
        ),
    ),
    (
        "ThrowStarInit__10NinjaGecko",
        Ok(
            "NinjaGecko::ThrowStarInit(void)",
        ),
    ),
    (
        "Quadratic_Interpolate__FfP6Vector",
        Ok(
            "Quadratic_Interpolate(float, Vector *)",
        ),
    ),
    (
        "_vt$4Tick",
        Ok(
            "Tick virtual table",
        ),
    ),
    (
        "AttackDeinit__6Crikey",
        Ok(
            "Crikey::AttackDeinit(void)",
        ),
    ),
    (
        "UpdateSplineEndPosition__9Boomerang",
        Ok(
            "Boomerang::UpdateSplineEndPosition(void)",
        ),
    ),
    (
        "Reset__11ThinIceProp",
        Ok(
            "ThinIceProp::Reset(void)",
        ),
    ),
    (
        "InitBrake__7BushPig",
        Ok(
            "BushPig::InitBrake(void)",
        ),
    ),
    (
        "LetterBox_Update__Fv",
        Ok(
            "LetterBox_Update(void)",
        ),
    ),
    (
        "iEnableDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadExitPressMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsNear__12QuatRotationP12QuatRotationf",
        Ok(
            "QuatRotation::IsNear(QuatRotation *, float)",
        ),
    ),
    (
        "Message__8BeachHutP9MKMessage",
        Ok(
            "BeachHut::Message(MKMessage *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z10CrikeyChum",
        Ok(
            "ModuleInfo<CrikeyChum>::Init(void)",
        ),
    ),
    (
        "ParticleSystemManager_Draw__Fv",
        Ok(
            "ParticleSystemManager_Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8DiveRingPv",
        Ok(
            "ModuleInfo<DiveRing>::ConstructObject(void *)",
        ),
    ),
    (
        "SpawnParticles__7PontoonP6Vector",
        Ok(
            "Pontoon::SpawnParticles(Vector *)",
        ),
    ),
    (
        "UnderWaterKnockBack__2Ty",
        Ok(
            "Ty::UnderWaterKnockBack(void)",
        ),
    ),
    (
        "_vt$7KenOath",
        Ok(
            "KenOath virtual table",
        ),
    ),
    (
        "_vt$21SynkerFrillLizardDesc",
        Ok(
            "SynkerFrillLizardDesc virtual table",
        ),
    ),
    (
        "FadeSwimSoundIn__8TySoundsiPi",
        Ok(
            "TySounds::FadeSwimSoundIn(int, int *)",
        ),
    ),
    (
        "FrontEnd_MainMenu_Init__Fv",
        Ok(
            "FrontEnd_MainMenu_Init(void)",
        ),
    ),
    (
        "IdleInit__7Farlapp",
        Ok(
            "Farlapp::IdleInit(void)",
        ),
    ),
    (
        "AlertPause_CanGoToState__9BadBoonie",
        Ok(
            "BadBoonie::AlertPause_CanGoToState(void)",
        ),
    ),
    (
        "HitWorld__9BoomerangP6Vectori",
        Ok(
            "Boomerang::HitWorld(Vector *, int)",
        ),
    ),
    (
        "InitCharge__7BushPig",
        Ok(
            "BushPig::InitCharge(void)",
        ),
    ),
    (
        "FirstPerson__2Ty",
        Ok(
            "Ty::FirstPerson(void)",
        ),
    ),
    (
        "WakeupThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Collision_Decal__FP6VectorT0ffP11Blitter_TriiP6Matrixi",
        Ok(
            "Collision_Decal(Vector *, Vector *, float, float, Blitter_Tri *, int, Matrix *, int)",
        ),
    ),
    (
        "Deinit__5Shark",
        Ok(
            "Shark::Deinit(void)",
        ),
    ),
    (
        "TrapdoorSpider_LoadResources__FP8KromeIni",
        Ok(
            "TrapdoorSpider_LoadResources(KromeIni *)",
        ),
    ),
    (
        "MakePropTree__14MKSceneManager",
        Ok(
            "MKSceneManager::MakePropTree(void)",
        ),
    ),
    (
        "LinkUp__6SMTree",
        Ok(
            "SMTree::LinkUp(void)",
        ),
    ),
    (
        "sceInetAbortLog",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateLogic__11Grasshopper",
        Ok(
            "Grasshopper::UpdateLogic(void)",
        ),
    ),
    (
        "LogicUpdate__6Dennis",
        Ok(
            "Dennis::LogicUpdate(void)",
        ),
    ),
    (
        "Draw__8BeachHut",
        Ok(
            "BeachHut::Draw(void)",
        ),
    ),
    (
        "SuperBite__6TyBite",
        Ok(
            "TyBite::SuperBite(void)",
        ),
    ),
    (
        "Init__13SpeedboatWakePc",
        Ok(
            "SpeedboatWake::Init(char *)",
        ),
    ),
    (
        "Skid__3Sly",
        Ok(
            "Sly::Skid(void)",
        ),
    ),
    (
        "Deactivate__12EnemySpawner",
        Ok(
            "EnemySpawner::Deactivate(void)",
        ),
    ),
    (
        "MoveBull2__7BushPig",
        Ok(
            "BushPig::MoveBull2(void)",
        ),
    ),
    (
        "LoadLine__14MobilePlatformP12KromeIniLine",
        Ok(
            "MobilePlatform::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "SaveStates_GetLevelVisited__FPc",
        Ok(
            "SaveStates_GetLevelVisited(char *)",
        ),
    ),
    (
        "CheckSlide__14WaterSlideData",
        Ok(
            "WaterSlideData::CheckSlide(void)",
        ),
    ),
    (
        "TerminateThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateNextPosition_Flee__9SmallCrab",
        Ok(
            "SmallCrab::GenerateNextPosition_Flee(void)",
        ),
    ),
    (
        "__tiw",
        Ok(
            "wchar_t type_info node",
        ),
    ),
    (
        "Init__9FrillBikeP11GameObjDesc",
        Ok(
            "FrillBike::Init(GameObjDesc *)",
        ),
    ),
    (
        "GetWaypointRangeSq__11EnemyObject",
        Ok(
            "EnemyObject::GetWaypointRangeSq(void)",
        ),
    ),
    (
        "ReSpawn__7SeaMine",
        Ok(
            "SeaMine::ReSpawn(void)",
        ),
    ),
    (
        "GetCurrentAnim__11EnemyObject",
        Ok(
            "EnemyObject::GetCurrentAnim(void)",
        ),
    ),
    (
        "Init__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Init(void)",
        ),
    ),
    (
        "Chase__6Wombat",
        Ok(
            "Wombat::Chase(void)",
        ),
    ),
    (
        "Collision_AddDynamicItem__10GameCameraP5Modeli",
        Ok(
            "GameCamera::Collision_AddDynamicItem(Model *, int)",
        ),
    ),
    (
        "TyAttributes_LoadResources__FP8KromeIni",
        Ok(
            "TyAttributes_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Sound_StopAll",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9FlamerangPv",
        Ok(
            "ModuleInfo<Flamerang>::ConstructObject(void *)",
        ),
    ),
    (
        "Jump__2Ty",
        Ok(
            "Ty::Jump(void)",
        ),
    ),
    (
        "GetSubObjectName__5Modeli",
        Ok(
            "Model::GetSubObjectName(int)",
        ),
    ),
    (
        "Copyright_Draw__Fv",
        Ok(
            "Copyright_Draw(void)",
        ),
    ),
    (
        "Reset__9AuroraKid",
        Ok(
            "AuroraKid::Reset(void)",
        ),
    ),
    (
        "Reset__17MiniGameObjective",
        Ok(
            "MiniGameObjective::Reset(void)",
        ),
    ),
    (
        "MiniGameC3_LoadResources__FP8KromeIni",
        Ok(
            "MiniGameC3_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Play__9SoundProp",
        Ok(
            "SoundProp::Play(void)",
        ),
    ),
    (
        "SetTranslation__6MatrixP6Vector",
        Ok(
            "Matrix::SetTranslation(Vector *)",
        ),
    ),
    (
        "LoadDone__7C3Actor",
        Ok(
            "C3Actor::LoadDone(void)",
        ),
    ),
    (
        "_7SnowGun$animScript",
        Ok(
            "SnowGun::animScript",
        ),
    ),
    (
        "UsePlayerAdjustCamera__10GameCamerab",
        Ok(
            "GameCamera::UsePlayerAdjustCamera(bool)",
        ),
    ),
    (
        "UpdateWaterRipple__12StaticFXProp",
        Ok(
            "StaticFXProp::UpdateWaterRipple(void)",
        ),
    ),
    (
        "gDisplayBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitStart__15LearnToDiveData",
        Ok(
            "LearnToDiveData::InitStart(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8WhiteBat",
        Ok(
            "ModuleInfo<WhiteBat> virtual table",
        ),
    ),
    (
        "JumpAdjustTarget_GetOffset__10GameCamera",
        Ok(
            "GameCamera::JumpAdjustTarget_GetOffset(void)",
        ),
    ),
    (
        "Reset__5Flame",
        Ok(
            "Flame::Reset(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Sly_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Sly_LoadResources(KromeIni *)",
        ),
    ),
    (
        "descr_cast__H1ZP21SynkerFrillLizardDesc_P16MKPropDescriptor_X01",
        Ok(
            "SynkerFrillLizardDesc * descr_cast<SynkerFrillLizardDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "MiniGame_B1_Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B1_Deinit(void)",
        ),
    ),
    (
        "Get__12StreamBufferPvi",
        Ok(
            "StreamBuffer::Get(void *, int)",
        ),
    ),
    (
        "Init__8GameData",
        Ok(
            "GameData::Init(void)",
        ),
    ),
    (
        "Knockdown__3Sly",
        Ok(
            "Sly::Knockdown(void)",
        ),
    ),
    (
        "NormalInit__11DropPontoon",
        Ok(
            "DropPontoon::NormalInit(void)",
        ),
    ),
    (
        "_13RainbowEffect$rainbowEffectType",
        Ok(
            "RainbowEffect::rainbowEffectType",
        ),
    ),
    (
        "CheckForConfrontation__5Rufus",
        Ok(
            "Rufus::CheckForConfrontation(void)",
        ),
    ),
    (
        "Sweep__3Bat",
        Ok(
            "Bat::Sweep(void)",
        ),
    ),
    (
        "_vt$8RingoArm",
        Ok(
            "RingoArm virtual table",
        ),
    ),
    (
        "TyMemCard_WasCardRemoved__Fv",
        Ok(
            "TyMemCard_WasCardRemoved(void)",
        ),
    ),
    (
        "Hang__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Hang(void)",
        ),
    ),
    (
        "__cp_eh_info",
        Err(
            InvalidSpecialMethod(
                "cp_eh_info",
            ),
        ),
    ),
    (
        "GoToSleepInit__6Julius",
        Ok(
            "Julius::GoToSleepInit(void)",
        ),
    ),
    (
        "_vt$13PickupCounter",
        Ok(
            "PickupCounter virtual table",
        ),
    ),
    (
        "SetNewPos__7C3ChestP6Vectorf",
        Ok(
            "C3Chest::SetNewPos(Vector *, float)",
        ),
    ),
    (
        "Tools_DropShadow_Add__FfP6VectorT1f",
        Ok(
            "Tools_DropShadow_Add(float, Vector *, Vector *, float)",
        ),
    ),
    (
        "Message__5LennyP9MKMessage",
        Ok(
            "Lenny::Message(MKMessage *)",
        ),
    ),
    (
        "Closed_Init__4Gate",
        Ok(
            "Gate::Closed_Init(void)",
        ),
    ),
    (
        "Update__15LedgePullUpData",
        Ok(
            "LedgePullUpData::Update(void)",
        ),
    ),
    (
        "DeinitModule__3Dma",
        Ok(
            "Dma::DeinitModule(void)",
        ),
    ),
    (
        "barbedWire",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetCurrentPipe__9ShadowBat",
        Ok(
            "ShadowBat::GetCurrentPipe(void)",
        ),
    ),
    (
        "Draw__10Damageable",
        Ok(
            "Damageable::Draw(void)",
        ),
    ),
    (
        "GetDesc__4Gate",
        Ok(
            "Gate::GetDesc(void)",
        ),
    ),
    (
        "IsNumeric__Fc",
        Ok(
            "IsNumeric(char)",
        ),
    ),
    (
        "_23BlueTongueRockObjective$bCompleted",
        Ok(
            "BlueTongueRockObjective::bCompleted",
        ),
    ),
    (
        "gFERes",
        Err(
            NotMangled,
        ),
    ),
    (
        "__ti14__si_type_info",
        Ok(
            "__si_type_info type_info node",
        ),
    ),
    (
        "CreateDebugMenus__9LightningP15DebugOptionMenu",
        Ok(
            "Lightning::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "Message__11RhinoGroundP9MKMessage",
        Ok(
            "RhinoGround::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z13AnimatingProp",
        Ok(
            "ModuleInfo<AnimatingProp> virtual table",
        ),
    ),
    (
        "Tools_StripExtension__FPcPCc",
        Ok(
            "Tools_StripExtension(char *, char const *)",
        ),
    ),
    (
        "_vt$11BunyipElder",
        Ok(
            "BunyipElder virtual table",
        ),
    ),
    (
        "HangUpdate__11DropPontoon",
        Ok(
            "DropPontoon::HangUpdate(void)",
        ),
    ),
    (
        "pCounterModelsDrawnRejected",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetAnalogButtonState__6Camera12InputDevicesi",
        Ok(
            "Camera::GetAnalogButtonState(InputDevices, int)",
        ),
    ),
    (
        "CreateDebugMenus__4RainP15DebugOptionMenu",
        Ok(
            "Rain::CreateDebugMenus(DebugOptionMenu *)",
        ),
    ),
    (
        "Reset__10TumbleWeed",
        Ok(
            "TumbleWeed::Reset(void)",
        ),
    ),
    (
        "RandomIR__FPiii",
        Ok(
            "RandomIR(int *, int, int)",
        ),
    ),
    (
        "IDLE_ANIM_NAME",
        Err(
            NotMangled,
        ),
    ),
    (
        "Clear__8FILOListf",
        Ok(
            "FILOList::Clear(float)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z17TriggerSphereProp",
        Ok(
            "ModuleInfo<TriggerSphereProp>::Init(void)",
        ),
    ),
    (
        "Gem_ParticleSystem_Init__Fv",
        Ok(
            "Gem_ParticleSystem_Init(void)",
        ),
    ),
    (
        "Update__6Aurora",
        Ok(
            "Aurora::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5LeechPv",
        Ok(
            "ModuleInfo<Leech>::ConstructObject(void *)",
        ),
    ),
    (
        "Fall__13ShatterStruct",
        Ok(
            "ShatterStruct::Fall(void)",
        ),
    ),
    (
        "LoadDone__10LavaBurner",
        Ok(
            "LavaBurner::LoadDone(void)",
        ),
    ),
    (
        "HitWall__7BushPig",
        Ok(
            "BushPig::HitWall(void)",
        ),
    ),
    (
        "FileSys_Close__Fi",
        Ok(
            "FileSys_Close(int)",
        ),
    ),
    (
        "Hit__8SignPost",
        Ok(
            "SignPost::Hit(void)",
        ),
    ),
    (
        "InitSlide__2Ty",
        Ok(
            "Ty::InitSlide(void)",
        ),
    ),
    (
        "MiniGame_Deinit__Fv",
        Ok(
            "MiniGame_Deinit(void)",
        ),
    ),
    (
        "Flinch__3Eel",
        Ok(
            "Eel::Flinch(void)",
        ),
    ),
    (
        "sceCdCbfunc_num",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_SIGNAL__3DmaUlUl",
        Ok(
            "Dma::AddGif_AD_SIGNAL(unsigned long, unsigned long)",
        ),
    ),
    (
        "Destroy__t7PtrList1Z13ModelTemplateP13ModelTemplate",
        Ok(
            "PtrList<ModelTemplate>::Destroy(ModelTemplate *)",
        ),
    ),
    (
        "GetWidth__5Image",
        Ok(
            "Image::GetWidth(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7CoconutPv",
        Ok(
            "ModuleInfo<Coconut>::ConstructObject(void *)",
        ),
    ),
    (
        "Update__10ScreenData",
        Ok(
            "ScreenData::Update(void)",
        ),
    ),
    (
        "_setup",
        Err(
            NotMangled,
        ),
    ),
    (
        "SkipSpace__12StreamBufferi",
        Ok(
            "StreamBuffer::SkipSpace(int)",
        ),
    ),
    (
        "GameCamera_OverridePath_Add__FP26CameraOverridePathLoadInfo",
        Ok(
            "GameCamera_OverridePath_Add(CameraOverridePathLoadInfo *)",
        ),
    ),
    (
        "LoadDone__11GuideBarrel",
        Ok(
            "GuideBarrel::LoadDone(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z16FinishLineStruct",
        Ok(
            "ModuleInfo<FinishLineStruct> virtual table",
        ),
    ),
    (
        "Message__3EelP9MKMessage",
        Ok(
            "Eel::Message(MKMessage *)",
        ),
    ),
    (
        "Patrol__10BlueTongue",
        Ok(
            "BlueTongue::Patrol(void)",
        ),
    ),
    (
        "PauseScreen_SaveGame_Update__Fv",
        Ok(
            "PauseScreen_SaveGame_Update(void)",
        ),
    ),
    (
        "ProcessAnimationEvents__2TyP12MKAnimScript",
        Ok(
            "Ty::ProcessAnimationEvents(MKAnimScript *)",
        ),
    ),
    (
        "ToppleDeathInit__8Sentinel",
        Ok(
            "Sentinel::ToppleDeathInit(void)",
        ),
    ),
    (
        "Init__5TorchP11GameObjDesc",
        Ok(
            "Torch::Init(GameObjDesc *)",
        ),
    ),
    (
        "PostFinish__16FinishLineStruct",
        Ok(
            "FinishLineStruct::PostFinish(void)",
        ),
    ),
    (
        "WaterToUnderWaterTransition__2Ty",
        Ok(
            "Ty::WaterToUnderWaterTransition(void)",
        ),
    ),
    (
        "DeinitBite__6TyBite",
        Ok(
            "TyBite::DeinitBite(void)",
        ),
    ),
    (
        "_vt$7Pontoon",
        Ok(
            "Pontoon virtual table",
        ),
    ),
    (
        "System_GetCommandLineParameterByIndex__Fi",
        Ok(
            "System_GetCommandLineParameterByIndex(int)",
        ),
    ),
    (
        "DamageTy__10Projectile",
        Ok(
            "Projectile::DamageTy(void)",
        ),
    ),
    (
        "_vt$8Aquarang",
        Ok(
            "Aquarang virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7ChumBox",
        Ok(
            "ModuleInfo<ChumBox>::Init(void)",
        ),
    ),
    (
        "IsClaiming__2Ty",
        Ok(
            "Ty::IsClaiming(void)",
        ),
    ),
    (
        "Run__3Sly",
        Ok(
            "Sly::Run(void)",
        ),
    ),
    (
        "CameraOverrideFixedRail_Line__FP12KromeIniLine",
        Ok(
            "CameraOverrideFixedRail_Line(KromeIniLine *)",
        ),
    ),
    (
        "gATWinMonNetBuf",
        Err(
            NotMangled,
        ),
    ),
    (
        "SharkCage_LoadResources__FP8KromeIni",
        Ok(
            "SharkCage_LoadResources(KromeIni *)",
        ),
    ),
    (
        "GameCamera_UseFirstPerson__FbP19FirstPersonInitInfo",
        Ok(
            "GameCamera_UseFirstPerson(bool, FirstPersonInitInfo *)",
        ),
    ),
    (
        "IsTyCloseEnoughToSwallow__6Groper",
        Ok(
            "Groper::IsTyCloseEnoughToSwallow(void)",
        ),
    ),
    (
        "white",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__10Damageable",
        Ok(
            "Damageable::Deinit(void)",
        ),
    ),
    (
        "Shears",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaSendI",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__10BlueTongue",
        Ok(
            "BlueTongue::Deinit(void)",
        ),
    ),
    (
        "LoadLine__8TalismanP12KromeIniLine",
        Ok(
            "Talisman::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Bilby_Rescued__F9BilbyType",
        Ok(
            "Bilby_Rescued(BilbyType)",
        ),
    ),
    (
        "LoadLevel_LoadBool__FP12KromeIniLinePcPb",
        Ok(
            "LoadLevel_LoadBool(KromeIniLine *, char *, bool *)",
        ),
    ),
    (
        "Idle__7Furnace",
        Ok(
            "Furnace::Idle(void)",
        ),
    ),
    (
        "BootTest_Init__Fv",
        Ok(
            "BootTest_Init(void)",
        ),
    ),
    (
        "Init__15ObjectiveFinder",
        Ok(
            "ObjectiveFinder::Init(void)",
        ),
    ),
    (
        "SetTyCameraChecks__2TyUi",
        Ok(
            "Ty::SetTyCameraChecks(unsigned int)",
        ),
    ),
    (
        "UpdateFillState__7MKWater",
        Ok(
            "MKWater::UpdateFillState(void)",
        ),
    ),
    (
        "SpawnShardAndSnow__14IceBlockStructP6Vector",
        Ok(
            "IceBlockStruct::SpawnShardAndSnow(Vector *)",
        ),
    ),
    (
        "ResolveHit__8SnowBall",
        Ok(
            "SnowBall::ResolveHit(void)",
        ),
    ),
    (
        "GetSafestPoint__Q215SafePointResult4Side",
        Ok(
            "SafePointResult::Side::GetSafestPoint(void)",
        ),
    ),
    (
        "_20WaterfallSprayStruct$splashType",
        Ok(
            "WaterfallSprayStruct::splashType",
        ),
    ),
    (
        "ParseIni__13LODDescriptorP8KromeIniP12KromeIniLine",
        Ok(
            "LODDescriptor::ParseIni(KromeIni *, KromeIniLine *)",
        ),
    ),
    (
        "_7MKWater$debugNumLowDetailSubObjects",
        Ok(
            "MKWater::debugNumLowDetailSubObjects",
        ),
    ),
    (
        "Walk__10BlueTongueb",
        Ok(
            "BlueTongue::Walk(bool)",
        ),
    ),
    (
        "Init__8FILOListif",
        Ok(
            "FILOList::Init(int, float)",
        ),
    ),
    (
        "GetDesc__11Shatterable",
        Ok(
            "Shatterable::GetDesc(void)",
        ),
    ),
    (
        "Init__4ViewP8MaterialT1",
        Ok(
            "View::Init(Material *, Material *)",
        ),
    ),
    (
        "StopEffect__7SawDustb",
        Ok(
            "SawDust::StopEffect(bool)",
        ),
    ),
    (
        "bBarbedWireLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdGetError",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceChstat",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSubObjectMaterial__5Modelii",
        Ok(
            "Model::GetSubObjectMaterial(int, int)",
        ),
    ),
    (
        "Swim_Init__10GameCamera",
        Ok(
            "GameCamera::Swim_Init(void)",
        ),
    ),
    (
        "Level_ParseEffect__FP12KromeIniLinePi",
        Ok(
            "Level_ParseEffect(KromeIniLine *, int *)",
        ),
    ),
    (
        "GetOverrideType__21CameraOverrideManagerP14CameraOverride",
        Ok(
            "CameraOverrideManager::GetOverrideType(CameraOverride *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z16FinishLineStruct",
        Ok(
            "ModuleInfo<FinishLineStruct>::Init(void)",
        ),
    ),
    (
        "Tools_LogOpen__FPcPib",
        Ok(
            "Tools_LogOpen(char *, int *, bool)",
        ),
    ),
    (
        "CameraOverride_Init__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_Init(void)",
        ),
    ),
    (
        "Message__10IceCoolantP9MKMessage",
        Ok(
            "IceCoolant::Message(MKMessage *)",
        ),
    ),
    (
        "LoadLevel_LoadFlags__FP12KromeIniLinePcP12NameFlagPairiPi",
        Ok(
            "LoadLevel_LoadFlags(KromeIniLine *, char *, NameFlagPair *, int, int *)",
        ),
    ),
    (
        "YMin__FP6Vectorf",
        Ok(
            "YMin(Vector *, float)",
        ),
    ),
    (
        "Recover__5Rhino",
        Ok(
            "Rhino::Recover(void)",
        ),
    ),
    (
        "BurniningTree_GetTreeInRange__FP6Vectorf",
        Ok(
            "BurniningTree_GetTreeInRange(Vector *, float)",
        ),
    ),
    (
        "EventTriggers_HideAll__Fv",
        Ok(
            "EventTriggers_HideAll(void)",
        ),
    ),
    (
        "iceBlocks",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnWaterRipple__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnWaterRipple(Vector *, float)",
        ),
    ),
    (
        "Toss__4Bull",
        Ok(
            "Bull::Toss(void)",
        ),
    ),
    (
        "Inverse__6VectorP6Vector",
        Ok(
            "Vector::Inverse(Vector *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z23BlueTongueRockObjectivePv",
        Ok(
            "ModuleInfo<BlueTongueRockObjective>::ConstructObject(void *)",
        ),
    ),
    (
        "gameCamera_MaxCameraOverrides",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__15CollisionObjectP6Vectorf",
        Ok(
            "CollisionObject::Update(Vector *, float)",
        ),
    ),
    (
        "Update__10LavaEffect",
        Ok(
            "LavaEffect::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11BoulderTrap",
        Ok(
            "ModuleInfo<BoulderTrap> virtual table",
        ),
    ),
    (
        "Model_GetVertex__FP13ModelTemplateiiii",
        Ok(
            "Model_GetVertex(ModelTemplate *, int, int, int, int)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11PontoonRope",
        Ok(
            "ModuleInfo<PontoonRope> virtual table",
        ),
    ),
    (
        "Update__7SawDustP6Vector",
        Ok(
            "SawDust::Update(Vector *)",
        ),
    ),
    (
        "MiniGame_C3_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C3_Draw(void)",
        ),
    ),
    (
        "FrontEnd_NewGame_Deinit__Fv",
        Ok(
            "FrontEnd_NewGame_Deinit(void)",
        ),
    ),
    (
        "Init__11DirectLight",
        Ok(
            "DirectLight::Init(void)",
        ),
    ),
    (
        "Grow__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Grow(void)",
        ),
    ),
    (
        "Closed_Update__4Gate",
        Ok(
            "Gate::Closed_Update(void)",
        ),
    ),
    (
        "__swrite",
        Err(
            InvalidSpecialMethod(
                "swrite",
            ),
        ),
    ),
    (
        "UploadStaticData__10MKGrassGen",
        Ok(
            "MKGrassGen::UploadStaticData(void)",
        ),
    ),
    (
        "LoadDone__11FrillLizard",
        Ok(
            "FrillLizard::LoadDone(void)",
        ),
    ),
    (
        "Init__9DustTrailP6Vectorfff",
        Ok(
            "DustTrail::Init(Vector *, float, float, float)",
        ),
    ),
    (
        "AsFloatRange__12KromeIniLineiPfT2",
        Ok(
            "KromeIniLine::AsFloatRange(int, float *, float *)",
        ),
    ),
    (
        "_GLOBAL_$I$LoadDone__6Target",
        Ok(
            "global constructors keyed to Target::LoadDone(void)",
        ),
    ),
    (
        "SetState__6Friendib",
        Ok(
            "Friend::SetState(int, bool)",
        ),
    ),
    (
        "SetupPath__10WhirlyWind",
        Ok(
            "WhirlyWind::SetupPath(void)",
        ),
    ),
    (
        "GameCamera_UseFreeCamera__Fb",
        Ok(
            "GameCamera_UseFreeCamera(bool)",
        ),
    ),
    (
        "Init__11KaboomerangP11GameObjDescP15BoomerangWeapon",
        Ok(
            "Kaboomerang::Init(GameObjDesc *, BoomerangWeapon *)",
        ),
    ),
    (
        "NodeOverride_Update__FP12NodeOverride",
        Ok(
            "NodeOverride_Update(NodeOverride *)",
        ),
    ),
    (
        "__malloc_trim_threshold",
        Err(
            InvalidSpecialMethod(
                "malloc_trim_threshold",
            ),
        ),
    ),
    (
        "Init__12QuadTriStripP6VectorffbT1T1",
        Ok(
            "QuadTriStrip::Init(Vector *, float, float, bool, Vector *, Vector *)",
        ),
    ),
    (
        "BarbedWire_Add__FP6VectorT0",
        Ok(
            "BarbedWire_Add(Vector *, Vector *)",
        ),
    ),
    (
        "Tools_MakePlane__FP6VectorT0",
        Ok(
            "Tools_MakePlane(Vector *, Vector *)",
        ),
    ),
    (
        "Draw__9ShadowBat",
        Ok(
            "ShadowBat::Draw(void)",
        ),
    ),
    (
        "SetLearntToSwim__8GameDatab",
        Ok(
            "GameData::SetLearntToSwim(bool)",
        ),
    ),
    (
        "GetCurrentState__9ShadowBat",
        Ok(
            "ShadowBat::GetCurrentState(void)",
        ),
    ),
    (
        "TurnWheels__9FrillBike",
        Ok(
            "FrillBike::TurnWheels(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_Draw__Fv",
        Ok(
            "FrontEnd_Gallery_Draw(void)",
        ),
    ),
    (
        "MoveTy__8Elevatorf",
        Ok(
            "Elevator::MoveTy(float)",
        ),
    ),
    (
        "Shears_Deinit__Fv",
        Ok(
            "Shears_Deinit(void)",
        ),
    ),
    (
        "BossCass_LoadResources__FP8KromeIni",
        Ok(
            "BossCass_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Update__7BushPig",
        Ok(
            "BushPig::Update(void)",
        ),
    ),
    (
        "InitGlideJump__2Ty",
        Ok(
            "Ty::InitGlideJump(void)",
        ),
    ),
    (
        "SetUpBounds__13CritterField2",
        Ok(
            "CritterField2::SetUpBounds(void)",
        ),
    ),
    (
        "MKShadow_RenderStatic__FP8MKShadow",
        Ok(
            "MKShadow_RenderStatic(MKShadow *)",
        ),
    ),
    (
        "Teleport__9BadBoonie",
        Ok(
            "BadBoonie::Teleport(void)",
        ),
    ),
    (
        "AlertInit__5Skink",
        Ok(
            "Skink::AlertInit(void)",
        ),
    ),
    (
        "Run__10NinjaGecko",
        Ok(
            "NinjaGecko::Run(void)",
        ),
    ),
    (
        "LoadLine__3GemP12KromeIniLine",
        Ok(
            "Gem::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "RenderTexture_LavaLine__FP12KromeIniLine",
        Ok(
            "RenderTexture_LavaLine(KromeIniLine *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13ShadowBatPipePv",
        Ok(
            "ModuleInfo<ShadowBatPipe>::ConstructObject(void *)",
        ),
    ),
    (
        "FinishEaten__14CrikeyCanister",
        Ok(
            "CrikeyCanister::FinishEaten(void)",
        ),
    ),
    (
        "GameCamera_GetMoveYaw__Fv",
        Ok(
            "GameCamera_GetMoveYaw(void)",
        ),
    ),
    (
        "_rix_011",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$MORAY_EEL_HOLE_MDL",
        Ok(
            "global constructors keyed to MORAY_EEL_HOLE_MDL",
        ),
    ),
    (
        "MKMem_GetInfo__FPiT0",
        Ok(
            "MKMem_GetInfo(int *, int *)",
        ),
    ),
    (
        "Deactivate__17MiniGameObjective",
        Ok(
            "MiniGameObjective::Deactivate(void)",
        ),
    ),
    (
        "Draw__13AnimatingProp",
        Ok(
            "AnimatingProp::Draw(void)",
        ),
    ),
    (
        "Draw__16ReflectionStruct",
        Ok(
            "ReflectionStruct::Draw(void)",
        ),
    ),
    (
        "Rhino_LoadResources__FP8KromeIni",
        Ok(
            "Rhino_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Particle_SnowTrail_Create__FPP14ParticleSystemP6VectorT1",
        Ok(
            "Particle_SnowTrail_Create(ParticleSystem **, Vector *, Vector *)",
        ),
    ),
    (
        "ExploreNextFace__5ModelP13ModelExplorer",
        Ok(
            "Model::ExploreNextFace(ModelExplorer *)",
        ),
    ),
    (
        "MiniGameB1_LoadResources__FP8KromeIni",
        Ok(
            "MiniGameB1_LoadResources(KromeIni *)",
        ),
    ),
    (
        "RemoveAll__13CritterField2",
        Ok(
            "CritterField2::RemoveAll(void)",
        ),
    ),
    (
        "_10DDASession$bDrawCameraEnabled",
        Ok(
            "DDASession::bDrawCameraEnabled",
        ),
    ),
    (
        "MiniBoulder_IsNear__FP6Vectorf",
        Ok(
            "MiniBoulder_IsNear(Vector *, float)",
        ),
    ),
    (
        "FlinchInit__3Sly",
        Ok(
            "Sly::FlinchInit(void)",
        ),
    ),
    (
        "UseMiniGameC2Camera__10GameCamerab",
        Ok(
            "GameCamera::UseMiniGameC2Camera(bool)",
        ),
    ),
    (
        "ConvertStatsToReadable__10DDASession",
        Ok(
            "DDASession::ConvertStatsToReadable(void)",
        ),
    ),
    (
        "Update__9Boomerang",
        Ok(
            "Boomerang::Update(void)",
        ),
    ),
    (
        "StartledInit__6Julius",
        Ok(
            "Julius::StartledInit(void)",
        ),
    ),
    (
        "Assign__11BaseCritterP13CritterField2",
        Ok(
            "BaseCritter::Assign(CritterField2 *)",
        ),
    ),
    (
        "Update__5LassoP6VectorT1f",
        Ok(
            "Lasso::Update(Vector *, Vector *, float)",
        ),
    ),
    (
        "InitDeath__2Ty",
        Ok(
            "Ty::InitDeath(void)",
        ),
    ),
    (
        "Sound_GetVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdatePosition__8WhiteBat",
        Ok(
            "WhiteBat::UpdatePosition(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5GeckoPv",
        Ok(
            "ModuleInfo<Gecko>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__9Explosion",
        Ok(
            "Explosion::Deinit(void)",
        ),
    ),
    (
        "exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "fiprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLO1_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__4Rain",
        Ok(
            "Rain::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7SnowGunPv",
        Ok(
            "ModuleInfo<SnowGun>::ConstructObject(void *)",
        ),
    ),
    (
        "DrawOverlays__Fi",
        Ok(
            "DrawOverlays(int)",
        ),
    ),
    (
        "__default_terminate",
        Err(
            InvalidSpecialMethod(
                "default_terminate",
            ),
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8PubeCrabPv",
        Ok(
            "ModuleInfo<PubeCrab>::ConstructObject(void *)",
        ),
    ),
    (
        "UpdateShadow__19SpecialPickupStructf",
        Ok(
            "SpecialPickupStruct::UpdateShadow(float)",
        ),
    ),
    (
        "Tools_DrawOverlay__FP8MaterialP6Vectorffffffffffffffff",
        Ok(
            "Tools_DrawOverlay(Material *, Vector *, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)",
        ),
    ),
    (
        "_vfiprintf_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Elevator_LoadResources__FP8KromeIni",
        Ok(
            "Elevator_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3FlyPv",
        Ok(
            "ModuleInfo<Fly>::ConstructObject(void *)",
        ),
    ),
    (
        "InitFall__7Boulder",
        Ok(
            "Boulder::InitFall(void)",
        ),
    ),
    (
        "Assign__10BurningBatP5Skink",
        Ok(
            "BurningBat::Assign(Skink *)",
        ),
    ),
    (
        "Reset__5Ringo",
        Ok(
            "Ringo::Reset(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7Furnace",
        Ok(
            "ModuleInfo<Furnace>::Init(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8BossCass",
        Ok(
            "ModuleInfo<BossCass>::Init(void)",
        ),
    ),
    (
        "ShockWave__4Bull",
        Ok(
            "Bull::ShockWave(void)",
        ),
    ),
    (
        "UpdateWorldMatrix__15YabbyStalactite",
        Ok(
            "YabbyStalactite::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "_vt$10NinjaGecko",
        Ok(
            "NinjaGecko virtual table",
        ),
    ),
    (
        "SetTimeAttackBest__8GameDatai",
        Ok(
            "GameData::SetTimeAttackBest(int)",
        ),
    ),
    (
        "_vt$13TreasureChest",
        Ok(
            "TreasureChest virtual table",
        ),
    ),
    (
        "ThinIceProp_LoadResources__FP8KromeIni",
        Ok(
            "ThinIceProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SmallCrab_LoadResources__Fv",
        Ok(
            "SmallCrab_LoadResources(void)",
        ),
    ),
    (
        "Draw__10CrikeyChum",
        Ok(
            "CrikeyChum::Draw(void)",
        ),
    ),
    (
        "DeinitCharge__7BushPig",
        Ok(
            "BushPig::DeinitCharge(void)",
        ),
    ),
    (
        "_iSuspendThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Load__15Tools_WayPointsP16WayPointLoadInfoQ215Tools_WayPoints8LoadMode",
        Ok(
            "Tools_WayPoints::Load(WayPointLoadInfo *, Tools_WayPoints::LoadMode)",
        ),
    ),
    (
        "RunInit__7C3Actor",
        Ok(
            "C3Actor::RunInit(void)",
        ),
    ),
    (
        "scePadInfoComb",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceCdReadClock",
        Err(
            NotMangled,
        ),
    ),
    (
        "Defeated__3Sly",
        Ok(
            "Sly::Defeated(void)",
        ),
    ),
    (
        "AttackInit__5Skink",
        Ok(
            "Skink::AttackInit(void)",
        ),
    ),
    (
        "GetFloor__13CritterField2P6Vectori13CollisionMode",
        Ok(
            "CritterField2::GetFloor(Vector *, int, CollisionMode)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Basket",
        Ok(
            "ModuleInfo<Basket>::Init(void)",
        ),
    ),
    (
        "Draw__3Sly",
        Ok(
            "Sly::Draw(void)",
        ),
    ),
    (
        "LandInit__10NinjaGecko",
        Ok(
            "NinjaGecko::LandInit(void)",
        ),
    ),
    (
        "Draw__14ShadowBatSonar",
        Ok(
            "ShadowBatSonar::Draw(void)",
        ),
    ),
    (
        "AddGif_AD_ALPHA_2__3DmaUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_ALPHA_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "BadBoonie_PreUpdate__9BadBoonie",
        Ok(
            "BadBoonie::BadBoonie_PreUpdate(void)",
        ),
    ),
    (
        "__mdiff",
        Err(
            InvalidSpecialMethod(
                "mdiff",
            ),
        ),
    ),
    (
        "_vt$12KidObjective",
        Ok(
            "KidObjective virtual table",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z19ShadowBatStalactite",
        Ok(
            "ModuleInfo<ShadowBatStalactite> virtual table",
        ),
    ),
    (
        "Hanging__7Coconut",
        Ok(
            "Coconut::Hanging(void)",
        ),
    ),
    (
        "_$_16__attr_type_info",
        Ok(
            "__attr_type_info::~__attr_type_info(void)",
        ),
    ),
    (
        "Input_AllPadsWasDirectionPressed__FP12InputDevicesi",
        Ok(
            "Input_AllPadsWasDirectionPressed(InputDevices *, int)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z4Lava",
        Ok(
            "ModuleInfo<Lava>::Init(void)",
        ),
    ),
    (
        "List__9Animation",
        Ok(
            "Animation::List(void)",
        ),
    ),
    (
        "gsRegsCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "WaypointTyIsClosestTo__9Barracuda",
        Ok(
            "Barracuda::WaypointTyIsClosestTo(void)",
        ),
    ),
    (
        "Reset__18SpeedboatObjective",
        Ok(
            "SpeedboatObjective::Reset(void)",
        ),
    ),
    (
        "StartEaten__10CrikeyChum",
        Ok(
            "CrikeyChum::StartEaten(void)",
        ),
    ),
    (
        "SetCameraLookAt__4ViewP6VectorT1",
        Ok(
            "View::SetCameraLookAt(Vector *, Vector *)",
        ),
    ),
    (
        "Put__12StreamBufferPvi",
        Ok(
            "StreamBuffer::Put(void *, int)",
        ),
    ),
    (
        "UpdateIdle__9Boomerang",
        Ok(
            "Boomerang::UpdateIdle(void)",
        ),
    ),
    (
        "HitInit__10NinjaGecko",
        Ok(
            "NinjaGecko::HitInit(void)",
        ),
    ),
    (
        "Hud_ShowBoomerangs__Fv",
        Ok(
            "Hud_ShowBoomerangs(void)",
        ),
    ),
    (
        "ApproxMagXZ__FP6VectorT0",
        Ok(
            "ApproxMagXZ(Vector *, Vector *)",
        ),
    ),
    (
        "Quadratic_SetPoints__FP6VectorT0T0",
        Ok(
            "Quadratic_SetPoints(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "RainbowEffect_LoadResources__Fv",
        Ok(
            "RainbowEffect_LoadResources(void)",
        ),
    ),
    (
        "Patrol__5Roach",
        Ok(
            "Roach::Patrol(void)",
        ),
    ),
    (
        "Direction_Update__14CameraOverride",
        Ok(
            "CameraOverride::Direction_Update(void)",
        ),
    ),
    (
        "Idle__13TreasureChest",
        Ok(
            "TreasureChest::Idle(void)",
        ),
    ),
    (
        "SpikeyIce_Reset__Fv",
        Ok(
            "SpikeyIce_Reset(void)",
        ),
    ),
    (
        "IsTyVisible__5Rhino",
        Ok(
            "Rhino::IsTyVisible(void)",
        ),
    ),
    (
        "Draw__4Jeep",
        Ok(
            "Jeep::Draw(void)",
        ),
    ),
    (
        "Sound_MusicDuckVolume",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$14YabbyObjective",
        Ok(
            "YabbyObjective virtual table",
        ),
    ),
    (
        "Draw__6UITextPc",
        Ok(
            "UIText::Draw(char *)",
        ),
    ),
    (
        "FallTransition__2Ty",
        Ok(
            "Ty::FallTransition(void)",
        ),
    ),
    (
        "EnableCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z14SpiderTrapdoor",
        Ok(
            "ModuleInfo<SpiderTrapdoor>::Init(void)",
        ),
    ),
    (
        "ModelRender_CFLO1T_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "RequestTechnoRang__6Julius",
        Ok(
            "Julius::RequestTechnoRang(void)",
        ),
    ),
    (
        "descr_cast__H1ZP12PlatformDesc_P16MKPropDescriptor_X01",
        Ok(
            "PlatformDesc * descr_cast<PlatformDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "IdleDogPaddle__2Ty",
        Ok(
            "Ty::IdleDogPaddle(void)",
        ),
    ),
    (
        "Str_CharToUnicode__FPc",
        Ok(
            "Str_CharToUnicode(char *)",
        ),
    ),
    (
        "Model_CompressTemplate__FP13ModelTemplate",
        Ok(
            "Model_CompressTemplate(ModelTemplate *)",
        ),
    ),
    (
        "Shadow_BeginDraw__Fv",
        Ok(
            "Shadow_BeginDraw(void)",
        ),
    ),
    (
        "PauseScreen_Init__F17PauseScreen_State",
        Ok(
            "PauseScreen_Init(PauseScreen_State)",
        ),
    ),
    (
        "_GLOBAL_$I$_12AquarangProp$pGlow",
        Ok(
            "global constructors keyed to AquarangProp::pGlow",
        ),
    ),
    (
        "Deinit__6SMTree",
        Ok(
            "SMTree::Deinit(void)",
        ),
    ),
    (
        "InterpolateSlerp__12QuatRotationP12QuatRotationT1f",
        Ok(
            "QuatRotation::InterpolateSlerp(QuatRotation *, QuatRotation *, float)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Rufus",
        Ok(
            "ModuleInfo<Rufus>::Init(void)",
        ),
    ),
    (
        "Update__7UIModel",
        Ok(
            "UIModel::Update(void)",
        ),
    ),
    (
        "DeleteThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKTrivialRejectMM",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__14SnowBallAttack",
        Ok(
            "SnowBallAttack::Update(void)",
        ),
    ),
    (
        "Deinit__13UniformSpline",
        Ok(
            "UniformSpline::Deinit(void)",
        ),
    ),
    (
        "HeatFlare_Lock__Fv",
        Ok(
            "HeatFlare_Lock(void)",
        ),
    ),
    (
        "GiveUp__6Wombat",
        Ok(
            "Wombat::GiveUp(void)",
        ),
    ),
    (
        "sceSifSetSreg",
        Err(
            NotMangled,
        ),
    ),
    (
        "GoToSleep__6Julius",
        Ok(
            "Julius::GoToSleep(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13BubbleSpawnerPv",
        Ok(
            "ModuleInfo<BubbleSpawner>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__12DialogEffect",
        Ok(
            "DialogEffect::Deinit(void)",
        ),
    ),
    (
        "GetMemorySize",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13MusicalIcicle",
        Ok(
            "ModuleInfo<MusicalIcicle>::Init(void)",
        ),
    ),
    (
        "Reverse__5Yabby",
        Ok(
            "Yabby::Reverse(void)",
        ),
    ),
    (
        "Message__6GroperP9MKMessage",
        Ok(
            "Groper::Message(MKMessage *)",
        ),
    ),
    (
        "Collision_FindSafePoint__10GameCameraP6VectorifT1",
        Ok(
            "GameCamera::Collision_FindSafePoint(Vector *, int, float, Vector *)",
        ),
    ),
    (
        "MunchInit__4Croc",
        Ok(
            "Croc::MunchInit(void)",
        ),
    ),
    (
        "Draw__7BossHud",
        Ok(
            "BossHud::Draw(void)",
        ),
    ),
    (
        "Collision_DeleteDynamicModel__FP5Model",
        Ok(
            "Collision_DeleteDynamicModel(Model *)",
        ),
    ),
    (
        "UpdateBodyNodeRoll__2Tyfff",
        Ok(
            "Ty::UpdateBodyNodeRoll(float, float, float)",
        ),
    ),
    (
        "sceDeci2ExSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$5Skink",
        Ok(
            "Skink virtual table",
        ),
    ),
    (
        "Setup_PreloadLevel__Fv",
        Ok(
            "Setup_PreloadLevel(void)",
        ),
    ),
    (
        "AirMediumUpdate__2Ty",
        Ok(
            "Ty::AirMediumUpdate(void)",
        ),
    ),
    (
        "Tools_GetRefPointPos__FP5ModelPc",
        Ok(
            "Tools_GetRefPointPos(Model *, char *)",
        ),
    ),
    (
        "_vt$16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Aquarang",
        Ok(
            "ModuleInfo<Aquarang>::Init(void)",
        ),
    ),
    (
        "Gem_DeleteList__Fv",
        Ok(
            "Gem_DeleteList(void)",
        ),
    ),
    (
        "__nw__FUiPv",
        Ok(
            "operator new(unsigned int, void *)",
        ),
    ),
    (
        "Pontoon_Update__10GameCamera",
        Ok(
            "GameCamera::Pontoon_Update(void)",
        ),
    ),
    (
        "_vt$9type_info",
        Ok(
            "type_info virtual table",
        ),
    ),
    (
        "Draw__8Elevator",
        Ok(
            "Elevator::Draw(void)",
        ),
    ),
    (
        "_vt$8PipePart",
        Ok(
            "PipePart virtual table",
        ),
    ),
    (
        "SetRotationPitch__6Matrixf",
        Ok(
            "Matrix::SetRotationPitch(float)",
        ),
    ),
    (
        "System_Update_Normal__Fv",
        Ok(
            "System_Update_Normal(void)",
        ),
    ),
    (
        "AttackInit__6Wombat",
        Ok(
            "Wombat::AttackInit(void)",
        ),
    ),
    (
        "SwimInit__10ScubaFrill",
        Ok(
            "ScubaFrill::SwimInit(void)",
        ),
    ),
    (
        "Detach__13PlatformRiderP10GameObject",
        Ok(
            "PlatformRider::Detach(GameObject *)",
        ),
    ),
    (
        "__rtti_class",
        Err(
            InvalidSpecialMethod(
                "rtti_class",
            ),
        ),
    ),
    (
        "SaveToMemoryCard__10DDASessioniPc",
        Ok(
            "DDASession::SaveToMemoryCard(int, char *)",
        ),
    ),
    (
        "GetAngleToTarget__11EnemyObject",
        Ok(
            "EnemyObject::GetAngleToTarget(void)",
        ),
    ),
    (
        "WaterSlideMove__2Ty",
        Ok(
            "Ty::WaterSlideMove(void)",
        ),
    ),
    (
        "gpTraceExFile",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFO1TX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10SynkerFrogP11GameObjDesc",
        Ok(
            "SynkerFrog::Init(GameObjDesc *)",
        ),
    ),
    (
        "__tfUl",
        Ok(
            "unsigned long type_info function",
        ),
    ),
    (
        "_vt$11ScrubTurkey",
        Ok(
            "ScrubTurkey virtual table",
        ),
    ),
    (
        "UpdateWorldMatrix__14CrikeyCanister",
        Ok(
            "CrikeyCanister::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "_vt$9Doomerang",
        Ok(
            "Doomerang virtual table",
        ),
    ),
    (
        "staticSpikes",
        Err(
            NotMangled,
        ),
    ),
    (
        "__rtti_ptmf",
        Err(
            InvalidSpecialMethod(
                "rtti_ptmf",
            ),
        ),
    ),
    (
        "IdleUpdate__6Geyser",
        Ok(
            "Geyser::IdleUpdate(void)",
        ),
    ),
    (
        "WaterVolume_LoadResources__FP8KromeIni",
        Ok(
            "WaterVolume_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceFormat",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10LavaBurnerP11GameObjDesc",
        Ok(
            "LavaBurner::Init(GameObjDesc *)",
        ),
    ),
    (
        "Game_DebugMenuUpdate__Fv",
        Ok(
            "Game_DebugMenuUpdate(void)",
        ),
    ),
    (
        "Deinit__11MKWaterType",
        Ok(
            "MKWaterType::Deinit(void)",
        ),
    ),
    (
        "Draw__13MKParticleGenP4ViewP6VectorT2",
        Ok(
            "MKParticleGen::Draw(View *, Vector *, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8CableCar",
        Ok(
            "ModuleInfo<CableCar> virtual table",
        ),
    ),
    (
        "GenerateRandomOffsetFromBoss__8WhiteBat",
        Ok(
            "WhiteBat::GenerateRandomOffsetFromBoss(void)",
        ),
    ),
    (
        "DeckChairIdle__3Rex",
        Ok(
            "Rex::DeckChairIdle(void)",
        ),
    ),
    (
        "Deinit__7Furnace",
        Ok(
            "Furnace::Deinit(void)",
        ),
    ),
    (
        "Bunyip_Init__Fv",
        Ok(
            "Bunyip_Init(void)",
        ),
    ),
    (
        "WaitSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__9SpiderWeb",
        Ok(
            "SpiderWeb::Update(void)",
        ),
    ),
    (
        "Update__10WarpFlower",
        Ok(
            "WarpFlower::Update(void)",
        ),
    ),
    (
        "InitDiveBite__6TyBite",
        Ok(
            "TyBite::InitDiveBite(void)",
        ),
    ),
    (
        "SetZoneUnlocked__8GameData10ZoneNumberb",
        Ok(
            "GameData::SetZoneUnlocked(ZoneNumber, bool)",
        ),
    ),
    (
        "descr_cast__H1ZP20SynkerBlueTongueDesc_P16MKPropDescriptor_X01",
        Ok(
            "SynkerBlueTongueDesc * descr_cast<SynkerBlueTongueDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "WalkInit__4Bull",
        Ok(
            "Bull::WalkInit(void)",
        ),
    ),
    (
        "SetYaw__10GameCamera",
        Ok(
            "GameCamera::SetYaw(void)",
        ),
    ),
    (
        "FireUpdate__3Fly",
        Ok(
            "Fly::FireUpdate(void)",
        ),
    ),
    (
        "PreloadSound__8KoalaKid",
        Ok(
            "KoalaKid::PreloadSound(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Croc",
        Ok(
            "ModuleInfo<Croc> virtual table",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Elevator",
        Ok(
            "ModuleInfo<Elevator>::Init(void)",
        ),
    ),
    (
        "TyMemCard_SaveDDA__Fv",
        Ok(
            "TyMemCard_SaveDDA(void)",
        ),
    ),
    (
        "UpdateColor__9Boomerang",
        Ok(
            "Boomerang::UpdateColor(void)",
        ),
    ),
    (
        "MKWaterManager_Draw__FP8Material",
        Ok(
            "MKWaterManager_Draw(Material *)",
        ),
    ),
    (
        "Death__5Rhino",
        Ok(
            "Rhino::Death(void)",
        ),
    ),
    (
        "Fall_FindApproxHeroFloor__10GameCameraP6Vectorfb",
        Ok(
            "GameCamera::Fall_FindApproxHeroFloor(Vector *, float, bool)",
        ),
    ),
    (
        "SelectRandomWaterTarget__12TurtleStruct",
        Ok(
            "TurtleStruct::SelectRandomWaterTarget(void)",
        ),
    ),
    (
        "RotatePYR__6MatrixP6Vector",
        Ok(
            "Matrix::RotatePYR(Vector *)",
        ),
    ),
    (
        "NodeClipCheck__FP11ScissorNode",
        Ok(
            "NodeClipCheck(ScissorNode *)",
        ),
    ),
    (
        "SetFixedDir__6Camera16Camera_Direction",
        Ok(
            "Camera::SetFixedDir(Camera_Direction)",
        ),
    ),
    (
        "WaterSlide_End__Fv",
        Ok(
            "WaterSlide_End(void)",
        ),
    ),
    (
        "SpitInit__6Groper",
        Ok(
            "Groper::SpitInit(void)",
        ),
    ),
    (
        "atanf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Z1RainbowScaleObjective_LoadResources__FP8KromeIni",
        Ok(
            "Z1RainbowScaleObjective_LoadResources(KromeIni *)",
        ),
    ),
    (
        "FadeSwimSoundOut__8TySounds",
        Ok(
            "TySounds::FadeSwimSoundOut(void)",
        ),
    ),
    (
        "GameCamera_SetPlatformYawDelta__Ff",
        Ok(
            "GameCamera_SetPlatformYawDelta(float)",
        ),
    ),
    (
        "Collision_DoChecks__10GameCamera",
        Ok(
            "GameCamera::Collision_DoChecks(void)",
        ),
    ),
    (
        "LassoCaughtFrillBike__5Lasso",
        Ok(
            "Lasso::LassoCaughtFrillBike(void)",
        ),
    ),
    (
        "Message__11SpiderCrateP9MKMessage",
        Ok(
            "SpiderCrate::Message(MKMessage *)",
        ),
    ),
    (
        "Dump__24Tools_DynamicStringTable",
        Ok(
            "Tools_DynamicStringTable::Dump(void)",
        ),
    ),
    (
        "Str_Upper__FPc",
        Ok(
            "Str_Upper(char *)",
        ),
    ),
    (
        "GetDesc__5Gecko",
        Ok(
            "Gecko::GetDesc(void)",
        ),
    ),
    (
        "AddIntcHandler2",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z17TriggerSpherePropPv",
        Ok(
            "ModuleInfo<TriggerSphereProp>::ConstructObject(void *)",
        ),
    ),
    (
        "Sound_IsVoicePlaying",
        Err(
            NotMangled,
        ),
    ),
    (
        "PipePart_GetDamageCount__FPiT0",
        Ok(
            "PipePart_GetDamageCount(int *, int *)",
        ),
    ),
    (
        "SurfaceKnockBack__2Ty",
        Ok(
            "Ty::SurfaceKnockBack(void)",
        ),
    ),
    (
        "uncaught_exception__Fv",
        Ok(
            "uncaught_exception(void)",
        ),
    ),
    (
        "SetCameraMatrix__4ViewP6Matrix",
        Ok(
            "View::SetCameraMatrix(Matrix *)",
        ),
    ),
    (
        "SpeedLinesUpdate__2Ty",
        Ok(
            "Ty::SpeedLinesUpdate(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13OpalCollector",
        Ok(
            "ModuleInfo<OpalCollector>::Init(void)",
        ),
    ),
    (
        "IdleMove__2Ty",
        Ok(
            "Ty::IdleMove(void)",
        ),
    ),
    (
        "Message__7FarlappP9MKMessage",
        Ok(
            "Farlapp::Message(MKMessage *)",
        ),
    ),
    (
        "LoadLevel_LoadVector__FP12KromeIniLinePcP6Vector",
        Ok(
            "LoadLevel_LoadVector(KromeIniLine *, char *, Vector *)",
        ),
    ),
    (
        "FindDescriptor__17GameObjectManagerPc",
        Ok(
            "GameObjectManager::FindDescriptor(char *)",
        ),
    ),
    (
        "sceSifLoadStartModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceMpegClearRefBuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddFootPrintsOnLand__2Ty",
        Ok(
            "Ty::AddFootPrintsOnLand(void)",
        ),
    ),
    (
        "Message__5LeechP9MKMessage",
        Ok(
            "Leech::Message(MKMessage *)",
        ),
    ),
    (
        "CalcFloor__14FishShoalField",
        Ok(
            "FishShoalField::CalcFloor(void)",
        ),
    ),
    (
        "Init__11WaterVolumeP11GameObjDesc",
        Ok(
            "WaterVolume::Init(GameObjDesc *)",
        ),
    ),
    (
        "IdleInit__6Maurie",
        Ok(
            "Maurie::IdleInit(void)",
        ),
    ),
    (
        "StableReposition__2TyP6VectorT1",
        Ok(
            "Ty::StableReposition(Vector *, Vector *)",
        ),
    ),
    (
        "_print",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDebugUVPoint__FP11MKWaterPropP11MKWaterTypeP6VectorT2",
        Ok(
            "DrawDebugUVPoint(MKWaterProp *, MKWaterType *, Vector *, Vector *)",
        ),
    ),
    (
        "Deinit__17SoundEventManager",
        Ok(
            "SoundEventManager::Deinit(void)",
        ),
    ),
    (
        "Success__14LevelObjective",
        Ok(
            "LevelObjective::Success(void)",
        ),
    ),
    (
        "UnderWaterSwimTransition__2Ty",
        Ok(
            "Ty::UnderWaterSwimTransition(void)",
        ),
    ),
    (
        "_GLOBAL_$I$WhirlyWind_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to WhirlyWind_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Hit__6Wombat",
        Ok(
            "Wombat::Hit(void)",
        ),
    ),
    (
        "DeathInit__3Bat",
        Ok(
            "Bat::DeathInit(void)",
        ),
    ),
    (
        "ToWorld__13PlatformRiderP6Vector",
        Ok(
            "PlatformRider::ToWorld(Vector *)",
        ),
    ),
    (
        "Load__16FriendDescriptorP8KromeIni",
        Ok(
            "FriendDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "LoadLine__9OpalCrateP12KromeIniLine",
        Ok(
            "OpalCrate::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Script_LoadResources__FP8KromeIni",
        Ok(
            "Script_LoadResources(KromeIni *)",
        ),
    ),
    (
        "WindMill_LoadResources__Fv",
        Ok(
            "WindMill_LoadResources(void)",
        ),
    ),
    (
        "_5Skink$nBatObj",
        Ok(
            "Skink::nBatObj",
        ),
    ),
    (
        "Groper_LoadResources__FP8KromeIni",
        Ok(
            "Groper_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Idle__7SnowRoo",
        Ok(
            "SnowRoo::Idle(void)",
        ),
    ),
    (
        "UseRobotEffect__10GameCamerab",
        Ok(
            "GameCamera::UseRobotEffect(bool)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7LilyPadPv",
        Ok(
            "ModuleInfo<LilyPad>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadDone__10WaterWheel",
        Ok(
            "WaterWheel::LoadDone(void)",
        ),
    ),
    (
        "AttackInit__8LilNeddy",
        Ok(
            "LilNeddy::AttackInit(void)",
        ),
    ),
    (
        "Init__5Lasso",
        Ok(
            "Lasso::Init(void)",
        ),
    ),
    (
        "Draw__10ScreenData",
        Ok(
            "ScreenData::Draw(void)",
        ),
    ),
    (
        "AddGif_AD_TEXA__3DmaUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEXA(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "CrashInit__5Shark",
        Ok(
            "Shark::CrashInit(void)",
        ),
    ),
    (
        "LoadLine__4DrumP12KromeIniLine",
        Ok(
            "Drum::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "MiniGame_C2_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C2_Draw(void)",
        ),
    ),
    (
        "DrawQuadDebugInfo__11MKWaterPropP16WaterStripHeaderi",
        Ok(
            "MKWaterProp::DrawQuadDebugInfo(WaterStripHeader *, int)",
        ),
    ),
    (
        "Draw__4Rock",
        Ok(
            "Rock::Draw(void)",
        ),
    ),
    (
        "LoadManuallyScrollingTextures__Fv",
        Ok(
            "LoadManuallyScrollingTextures(void)",
        ),
    ),
    (
        "SaveCurrentSession__10DDASession",
        Ok(
            "DDASession::SaveCurrentSession(void)",
        ),
    ),
    (
        "LoadDone__23PerimeterCheckObjective",
        Ok(
            "PerimeterCheckObjective::LoadDone(void)",
        ),
    ),
    (
        "GetTotalTalismanCount__8GameData",
        Ok(
            "GameData::GetTotalTalismanCount(void)",
        ),
    ),
    (
        "_vt$11BurningJunk",
        Ok(
            "BurningJunk virtual table",
        ),
    ),
    (
        "WalkToPipeInit__11FrillLizard",
        Ok(
            "FrillLizard::WalkToPipeInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9WaterPipePv",
        Ok(
            "ModuleInfo<WaterPipe>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__13TreasureChestP11GameObjDesc",
        Ok(
            "TreasureChest::Init(GameObjDesc *)",
        ),
    ),
    (
        "LoadDone__13FallGuideProp",
        Ok(
            "FallGuideProp::LoadDone(void)",
        ),
    ),
    (
        "__sccl",
        Err(
            InvalidSpecialMethod(
                "sccl",
            ),
        ),
    ),
    (
        "AttackTyInit__8WhiteBat",
        Ok(
            "WhiteBat::AttackTyInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6GasJet",
        Ok(
            "ModuleInfo<GasJet>::Init(void)",
        ),
    ),
    (
        "SetState__11BilbyStruct10BilbyState",
        Ok(
            "BilbyStruct::SetState(BilbyState)",
        ),
    ),
    (
        "_7Texture$pUploadVRamLocked",
        Ok(
            "Texture::pUploadVRamLocked",
        ),
    ),
    (
        "pCounterModelRender5th",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$9AuroraKid",
        Ok(
            "AuroraKid virtual table",
        ),
    ),
    (
        "atoi",
        Err(
            NotMangled,
        ),
    ),
    (
        "Tools_TurnToAngle__Ffff",
        Ok(
            "Tools_TurnToAngle(float, float, float)",
        ),
    ),
    (
        "sceMpegDispHeight",
        Err(
            NotMangled,
        ),
    ),
    (
        "MorayEel_LoadResources__FP8KromeIni",
        Ok(
            "MorayEel_LoadResources(KromeIni *)",
        ),
    ),
    (
        "RFU088_iPollEvnetFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "RotateThreadReadyQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10DamageableP11GameObjDesc",
        Ok(
            "Damageable::Init(GameObjDesc *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8ChuteLog",
        Ok(
            "ModuleInfo<ChuteLog> virtual table",
        ),
    ),
    (
        "File_Length__FPc",
        Ok(
            "File_Length(char *)",
        ),
    ),
    (
        "WaterSlide__2Ty",
        Ok(
            "Ty::WaterSlide(void)",
        ),
    ),
    (
        "GetNextNearestNode__11PathManagerP6VectorP11PathSegmentf",
        Ok(
            "PathManager::GetNextNearestNode(Vector *, PathSegment *, float)",
        ),
    ),
    (
        "Critter_ClipToCircleXZ__FP6VectorT0T0f",
        Ok(
            "Critter_ClipToCircleXZ(Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "SetRotationRoll__6Matrixf",
        Ok(
            "Matrix::SetRotationRoll(float)",
        ),
    ),
    (
        "_GLOBAL_$I$bDisplayEventAreas",
        Ok(
            "global constructors keyed to bDisplayEventAreas",
        ),
    ),
    (
        "descr_cast__H1ZP8FrogDesc_P16MKPropDescriptor_X01",
        Ok(
            "FrogDesc * descr_cast<FrogDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Update__6GasJet",
        Ok(
            "GasJet::Update(void)",
        ),
    ),
    (
        "pZBufferMemory",
        Err(
            NotMangled,
        ),
    ),
    (
        "Timer_GetSystemTime__FP9TimerInfo",
        Ok(
            "Timer_GetSystemTime(TimerInfo *)",
        ),
    ),
    (
        "GlideJump__2Ty",
        Ok(
            "Ty::GlideJump(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11SpinningLogPv",
        Ok(
            "ModuleInfo<SpinningLog>::ConstructObject(void *)",
        ),
    ),
    (
        "ResolveHit__5Spear",
        Ok(
            "Spear::ResolveHit(void)",
        ),
    ),
    (
        "HitOnBackInit__5Neddy",
        Ok(
            "Neddy::HitOnBackInit(void)",
        ),
    ),
    (
        "Message__7C1WaterP9MKMessage",
        Ok(
            "C1Water::Message(MKMessage *)",
        ),
    ),
    (
        "Burnable_LoadResources__FP8KromeIni",
        Ok(
            "Burnable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Explore__5ModelPiT1T1",
        Ok(
            "Model::Explore(int *, int *, int *)",
        ),
    ),
    (
        "_ctype_",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__11SpiderCrateP11GameObjDesc",
        Ok(
            "SpiderCrate::Init(GameObjDesc *)",
        ),
    ),
    (
        "sceChdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "Run__8KoalaKid",
        Ok(
            "KoalaKid::Run(void)",
        ),
    ),
    (
        "LoadLine__14LevelObjectiveP12KromeIniLine",
        Ok(
            "LevelObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Message__6MuddieP9MKMessage",
        Ok(
            "Muddie::Message(MKMessage *)",
        ),
    ),
    (
        "sceMpegIsRefBuffEmpty",
        Err(
            NotMangled,
        ),
    ),
    (
        "CustomVectors_Update__10GameCamera",
        Ok(
            "GameCamera::CustomVectors_Update(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z19ShadowBatStalactite",
        Ok(
            "ModuleInfo<ShadowBatStalactite>::Init(void)",
        ),
    ),
    (
        "Platform_LoadResources__FP8KromeIni",
        Ok(
            "Platform_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_vt$21RainbowScaleObjective",
        Ok(
            "RainbowScaleObjective virtual table",
        ),
    ),
    (
        "Reset__7C1Water",
        Ok(
            "C1Water::Reset(void)",
        ),
    ),
    (
        "SetColObjList__15CollisionObjectUcPP15CollisionObject",
        Ok(
            "CollisionObject::SetColObjList(unsigned char, CollisionObject **)",
        ),
    ),
    (
        "sceMount",
        Err(
            NotMangled,
        ),
    ),
    (
        "Animation_InterpolateFrame__FPQ29Animation13FrameInstancePQ213AnimationData4Nodef",
        Ok(
            "Animation_InterpolateFrame(Animation::FrameInstance *, AnimationData::Node *, float)",
        ),
    ),
    (
        "CollectThunderEgg__8GameData14ThunderEggType",
        Ok(
            "GameData::CollectThunderEgg(ThunderEggType)",
        ),
    ),
    (
        "_GLOBAL_$I$BadBoonie_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BadBoonie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Input_AllPadsWasDirectionReleased__FP12InputDevicesi",
        Ok(
            "Input_AllPadsWasDirectionReleased(InputDevices *, int)",
        ),
    ),
    (
        "_GLOBAL_$I$SoundProp_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SoundProp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SleepThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitLassoSnapped__5Lasso",
        Ok(
            "Lasso::InitLassoSnapped(void)",
        ),
    ),
    (
        "_system_header",
        Err(
            NotMangled,
        ),
    ),
    (
        "System_DoGameLoop__Fv",
        Ok(
            "System_DoGameLoop(void)",
        ),
    ),
    (
        "_11EnemyObject$enemyAnimEvents",
        Ok(
            "EnemyObject::enemyAnimEvents",
        ),
    ),
    (
        "LoadSavedData__10GameCameraP19CameraDebugSaveInfo",
        Ok(
            "GameCamera::LoadSavedData(CameraDebugSaveInfo *)",
        ),
    ),
    (
        "Tools_DrawDebugCircle__FPC6Vectorfifi",
        Ok(
            "Tools_DrawDebugCircle(Vector const *, float, int, float, int)",
        ),
    ),
    (
        "DrawQuad__FP6VectorT0T0T0T0T0T0T0P8MaterialP6Matrix",
        Ok(
            "DrawQuad(Vector *, Vector *, Vector *, Vector *, Vector *, Vector *, Vector *, Vector *, Material *, Matrix *)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11GuideBarrelPv",
        Ok(
            "ModuleInfo<GuideBarrel>::ConstructObject(void *)",
        ),
    ),
    (
        "DeathInit__10SnowSpider",
        Ok(
            "SnowSpider::DeathInit(void)",
        ),
    ),
    (
        "Init__13UIButtonGroupi",
        Ok(
            "UIButtonGroup::Init(int)",
        ),
    ),
    (
        "Update__7Farlapp",
        Ok(
            "Farlapp::Update(void)",
        ),
    ),
    (
        "Weather_Init__FP11WeatherInitiPPc",
        Ok(
            "Weather_Init(WeatherInit *, int, char **)",
        ),
    ),
    (
        "DiveRing_ThroughAllRings__Fv",
        Ok(
            "DiveRing_ThroughAllRings(void)",
        ),
    ),
    (
        "SynkerFrillLizard_LoadResources__FP8KromeIni",
        Ok(
            "SynkerFrillLizard_LoadResources(KromeIni *)",
        ),
    ),
    (
        "liveObjects",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$6GasJet",
        Ok(
            "GasJet virtual table",
        ),
    ),
    (
        "TimeTrial_TimeExceededDialog__Fv",
        Ok(
            "TimeTrial_TimeExceededDialog(void)",
        ),
    ),
    (
        "AddGifTag_REGLIST_LwrUpr__3DmaUlUl",
        Ok(
            "Dma::AddGifTag_REGLIST_LwrUpr(unsigned long, unsigned long)",
        ),
    ),
    (
        "GetWalkTurnSpeed__11EnemyObject",
        Ok(
            "EnemyObject::GetWalkTurnSpeed(void)",
        ),
    ),
    (
        "CameraOverrideTopDown_End__Fv",
        Ok(
            "CameraOverrideTopDown_End(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z4Drum",
        Ok(
            "ModuleInfo<Drum> virtual table",
        ),
    ),
    (
        "Draw__11BonusPickup",
        Ok(
            "BonusPickup::Draw(void)",
        ),
    ),
    (
        "BlinkSpyEgg__6SpyEgg",
        Ok(
            "SpyEgg::BlinkSpyEgg(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Checkpoint_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Checkpoint_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__builtin_delete",
        Err(
            InvalidSpecialMethod(
                "builtin_delete",
            ),
        ),
    ),
    (
        "Draw__12AquarangProp",
        Ok(
            "AquarangProp::Draw(void)",
        ),
    ),
    (
        "_vt$11MetalSpikes",
        Ok(
            "MetalSpikes virtual table",
        ),
    ),
    (
        "CameraOverride_Deinit__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_Deinit(void)",
        ),
    ),
    (
        "LoadDone__8PipePart",
        Ok(
            "PipePart::LoadDone(void)",
        ),
    ),
    (
        "KnockedOffTower__11FrillLizard",
        Ok(
            "FrillLizard::KnockedOffTower(void)",
        ),
    ),
    (
        "_vt$4Ibis",
        Ok(
            "Ibis virtual table",
        ),
    ),
    (
        "Eaten__10CrikeyChum",
        Ok(
            "CrikeyChum::Eaten(void)",
        ),
    ),
    (
        "IdleInit__11RhinoGround",
        Ok(
            "RhinoGround::IdleInit(void)",
        ),
    ),
    (
        "iFlushCache",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScreenEffect_Activate__Fb",
        Ok(
            "ScreenEffect_Activate(bool)",
        ),
    ),
    (
        "__moddi3",
        Err(
            InvalidSpecialMethod(
                "moddi3",
            ),
        ),
    ),
    (
        "_rix_000",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_A_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "gModelDrawCollisions",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$6Burner",
        Ok(
            "Burner virtual table",
        ),
    ),
    (
        "Game_Update__Fv",
        Ok(
            "Game_Update(void)",
        ),
    ),
    (
        "Sound_MusicBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__13OpalCollector",
        Ok(
            "OpalCollector::LoadDone(void)",
        ),
    ),
    (
        "Idle__7AntHill",
        Ok(
            "AntHill::Idle(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SynkerBlueTongue_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SynkerBlueTongue_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SetForegroundBlitterUV__11ProgressBarffff",
        Ok(
            "ProgressBar::SetForegroundBlitterUV(float, float, float, float)",
        ),
    ),
    (
        "ApplyMatrix__6VectorP6VectorP6Matrix",
        Ok(
            "Vector::ApplyMatrix(Vector *, Matrix *)",
        ),
    ),
    (
        "_GLOBAL_$I$_8DiveRing$pSystem",
        Ok(
            "global constructors keyed to DiveRing::pSystem",
        ),
    ),
    (
        "_7MKWater$bDrawSubObjectName",
        Ok(
            "MKWater::bDrawSubObjectName",
        ),
    ),
    (
        "SetColour__7UIModelP6Vector",
        Ok(
            "UIModel::SetColour(Vector *)",
        ),
    ),
    (
        "CheckSpeedMatID__14WaterSlideData",
        Ok(
            "WaterSlideData::CheckSpeedMatID(void)",
        ),
    ),
    (
        "MoveToNextPoint_Init__6Dennis",
        Ok(
            "Dennis::MoveToNextPoint_Init(void)",
        ),
    ),
    (
        "Hit__5Rufus",
        Ok(
            "Rufus::Hit(void)",
        ),
    ),
    (
        "Fly__5Roach",
        Ok(
            "Roach::Fly(void)",
        ),
    ),
    (
        "Deinit__12DialogPlayer",
        Ok(
            "DialogPlayer::Deinit(void)",
        ),
    ),
    (
        "bCheatCollectAllEggs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__9ExplosionP6Vectorbf",
        Ok(
            "Explosion::Init(Vector *, bool, float)",
        ),
    ),
    (
        "DeinitHeadStuckInFloor__2Ty",
        Ok(
            "Ty::DeinitHeadStuckInFloor(void)",
        ),
    ),
    (
        "gTraceExLine",
        Err(
            NotMangled,
        ),
    ),
    (
        "Maurie_SnapToSign__Fv",
        Ok(
            "Maurie_SnapToSign(void)",
        ),
    ),
    (
        "Main_SetCheatText__Fi",
        Ok(
            "Main_SetCheatText(int)",
        ),
    ),
    (
        "UploadCode__10VU0ManagerPUiT1",
        Ok(
            "VU0Manager::UploadCode(unsigned int *, unsigned int *)",
        ),
    ),
    (
        "LoadLine__12EnemySpawnerP12KromeIniLine",
        Ok(
            "EnemySpawner::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "FinishEatingChumInit__6Crikey",
        Ok(
            "Crikey::FinishEatingChumInit(void)",
        ),
    ),
    (
        "_vt$7Coconut",
        Ok(
            "Coconut virtual table",
        ),
    ),
    (
        "LoadDone__7SeaMine",
        Ok(
            "SeaMine::LoadDone(void)",
        ),
    ),
    (
        "TimeTrial_DrawTimer__Fv",
        Ok(
            "TimeTrial_DrawTimer(void)",
        ),
    ),
    (
        "GetYawFromJoy__2Ty",
        Ok(
            "Ty::GetYawFromJoy(void)",
        ),
    ),
    (
        "NodeOverride_SetTarget__FP12NodeOverrideP6VectorP5Model",
        Ok(
            "NodeOverride_SetTarget(NodeOverride *, Vector *, Model *)",
        ),
    ),
    (
        "_GLOBAL_$I$Friend_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Friend_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_isDirty",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__5YabbyP11GameObjDesc",
        Ok(
            "Yabby::Init(GameObjDesc *)",
        ),
    ),
    (
        "OpalCollectionEffect__13OpalCollector",
        Ok(
            "OpalCollector::OpalCollectionEffect(void)",
        ),
    ),
    (
        "shatterObjects",
        Err(
            NotMangled,
        ),
    ),
    (
        "Crate_ShowAll__Fv",
        Ok(
            "Crate_ShowAll(void)",
        ),
    ),
    (
        "EventLedgePullUp__2TyPc",
        Ok(
            "Ty::EventLedgePullUp(char *)",
        ),
    ),
    (
        "sceMpegReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "isIntersect__14BoundingRegionP6VectorT1T1T1",
        Ok(
            "BoundingRegion::isIntersect(Vector *, Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "MKParticleGen_Render_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__10WaterWheel",
        Ok(
            "WaterWheel::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z3Rex",
        Ok(
            "ModuleInfo<Rex> virtual table",
        ),
    ),
    (
        "Bilby_Deinit__Fv",
        Ok(
            "Bilby_Deinit(void)",
        ),
    ),
    (
        "EnableTyCollision__11EnemyObjectb",
        Ok(
            "EnemyObject::EnableTyCollision(bool)",
        ),
    ),
    (
        "Reset__13RainbowEffect",
        Ok(
            "RainbowEffect::Reset(void)",
        ),
    ),
    (
        "AsIntRange__12KromeIniLineiPiT2",
        Ok(
            "KromeIniLine::AsIntRange(int, int *, int *)",
        ),
    ),
    (
        "Heap_MungwallCheck__Fv",
        Ok(
            "Heap_MungwallCheck(void)",
        ),
    ),
    (
        "AddGif_AD_TEX1_1__3DmaUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEX1_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Draw__9Explosion",
        Ok(
            "Explosion::Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11RhinoGroundPv",
        Ok(
            "ModuleInfo<RhinoGround>::ConstructObject(void *)",
        ),
    ),
    (
        "sceMkdir",
        Err(
            NotMangled,
        ),
    ),
    (
        "RFU003",
        Err(
            NotMangled,
        ),
    ),
    (
        "BlockInit__8PubeCrab",
        Ok(
            "PubeCrab::BlockInit(void)",
        ),
    ),
    (
        "LensFlare_DrawSun__FG6Vectorf",
        Ok(
            "LensFlare_DrawSun(Vector, float)",
        ),
    ),
    (
        "MoveSplash__15WaterfallStructP16Blitter_ParticlePQ215WaterfallStruct10SplashDatai",
        Ok(
            "WaterfallStruct::MoveSplash(Blitter_Particle *, WaterfallStruct::SplashData *, int)",
        ),
    ),
    (
        "LoadDone__13CritterField2",
        Ok(
            "CritterField2::LoadDone(void)",
        ),
    ),
    (
        "Init__7BoulderP11GameObjDesc",
        Ok(
            "Boulder::Init(GameObjDesc *)",
        ),
    ),
    (
        "Idle__12BunyipStruct",
        Ok(
            "BunyipStruct::Idle(void)",
        ),
    ),
    (
        "InitSurfaceSwim__2Ty",
        Ok(
            "Ty::InitSurfaceSwim(void)",
        ),
    ),
    (
        "_GLOBAL_$I$IceRamp_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to IceRamp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ApplyRotMatrix__6VectorP6Matrix",
        Ok(
            "Vector::ApplyRotMatrix(Matrix *)",
        ),
    ),
    (
        "sceMtapPortOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNmbrOfSubObjectMaterials__5Modeli",
        Ok(
            "Model::GetNmbrOfSubObjectMaterials(int)",
        ),
    ),
    (
        "Rufus_LoadResources__FP8KromeIni",
        Ok(
            "Rufus_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ModelRender_ACExyS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Detach__8PlatformP10GameObject",
        Ok(
            "Platform::Detach(GameObject *)",
        ),
    ),
    (
        "UpdateNormalAndForward__9SmallCrab",
        Ok(
            "SmallCrab::UpdateNormalAndForward(void)",
        ),
    ),
    (
        "strupr",
        Err(
            NotMangled,
        ),
    ),
    (
        "HitOnBack__5Neddy",
        Ok(
            "Neddy::HitOnBack(void)",
        ),
    ),
    (
        "__fpcmp_parts_f",
        Err(
            InvalidSpecialMethod(
                "fpcmp_parts_f",
            ),
        ),
    ),
    (
        "DeathInit__6Crikey",
        Ok(
            "Crikey::DeathInit(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13FallGuideProp",
        Ok(
            "ModuleInfo<FallGuideProp>::Init(void)",
        ),
    ),
    (
        "InitSound__8KoalaKid",
        Ok(
            "KoalaKid::InitSound(void)",
        ),
    ),
    (
        "Draw__13ShatterStruct",
        Ok(
            "ShatterStruct::Draw(void)",
        ),
    ),
    (
        "Idle__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Idle(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z15ZoneBlockerProp",
        Ok(
            "ModuleInfo<ZoneBlockerProp> virtual table",
        ),
    ),
    (
        "pOverlay",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__6PortalP11GameObjDesc",
        Ok(
            "Portal::Init(GameObjDesc *)",
        ),
    ),
    (
        "Fight__3Emu",
        Ok(
            "Emu::Fight(void)",
        ),
    ),
    (
        "Init__9BoomerangP11GameObjDescP15BoomerangWeapon",
        Ok(
            "Boomerang::Init(GameObjDesc *, BoomerangWeapon *)",
        ),
    ),
    (
        "SetGoldenCog__8GameData13GoldenCogTypeP19SpecialPickupStruct",
        Ok(
            "GameData::SetGoldenCog(GoldenCogType, SpecialPickupStruct *)",
        ),
    ),
    (
        "_GLOBAL_$I$C3Chest_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to C3Chest_LoadResources(KromeIni *)",
        ),
    ),
    (
        "_fopen_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "StompInit__6Fluffy",
        Ok(
            "Fluffy::StompInit(void)",
        ),
    ),
    (
        "IsTyInCage__5Shark",
        Ok(
            "Shark::IsTyInCage(void)",
        ),
    ),
    (
        "_9FrillBike$fAccelerationRate",
        Ok(
            "FrillBike::fAccelerationRate",
        ),
    ),
    (
        "Message__10TimeAttackP9MKMessage",
        Ok(
            "TimeAttack::Message(MKMessage *)",
        ),
    ),
    (
        "RotateQ__6MatrixP6MatrixP12QuatRotation",
        Ok(
            "Matrix::RotateQ(Matrix *, QuatRotation *)",
        ),
    ),
    (
        "RotateRoll__6MatrixP6Matrixf",
        Ok(
            "Matrix::RotateRoll(Matrix *, float)",
        ),
    ),
    (
        "_defIQM",
        Err(
            NotMangled,
        ),
    ),
    (
        "_exit",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFLW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__9Lightning",
        Ok(
            "Lightning::Update(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__5Skink",
        Ok(
            "Skink::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "MKGrass_GetGrassTypeId__FPc",
        Ok(
            "MKGrass_GetGrassTypeId(char *)",
        ),
    ),
    (
        "CheckCollideWithTy__9ShadowBat",
        Ok(
            "ShadowBat::CheckCollideWithTy(void)",
        ),
    ),
    (
        "_vt$4Bird",
        Ok(
            "Bird virtual table",
        ),
    ),
    (
        "GetStatus__14LevelObjectivePsT1PP8Material",
        Ok(
            "LevelObjective::GetStatus(short *, short *, Material **)",
        ),
    ),
    (
        "__kernel_rem_pio2f",
        Err(
            InvalidSpecialMethod(
                "kernel_rem_pio2f",
            ),
        ),
    ),
    (
        "SetHasBoth__16BoomerangManagerb",
        Ok(
            "BoomerangManager::SetHasBoth(bool)",
        ),
    ),
    (
        "guideParticleSysType",
        Err(
            NotMangled,
        ),
    ),
    (
        "UnderWaterEffects_SetQuadColorScale__FP6Vector",
        Ok(
            "UnderWaterEffects_SetQuadColorScale(Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z3Ice",
        Ok(
            "ModuleInfo<Ice>::Init(void)",
        ),
    ),
    (
        "RhinoGround_LoadResources__FP8KromeIni",
        Ok(
            "RhinoGround_LoadResources(KromeIni *)",
        ),
    ),
    (
        "CalcHeroRepel__6Cattle",
        Ok(
            "Cattle::CalcHeroRepel(void)",
        ),
    ),
    (
        "GuideParticle_CustomUpdate__FP14ParticleSystem",
        Ok(
            "GuideParticle_CustomUpdate(ParticleSystem *)",
        ),
    ),
    (
        "IceBlock_TestCollision__FP6Vectorfb",
        Ok(
            "IceBlock_TestCollision(Vector *, float, bool)",
        ),
    ),
    (
        "Deinit__14ShadowBatSonar",
        Ok(
            "ShadowBatSonar::Deinit(void)",
        ),
    ),
    (
        "descr_cast__H1ZP12SignPostDesc_P16MKPropDescriptor_X01",
        Ok(
            "SignPostDesc * descr_cast<SignPostDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Respawn__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Respawn(void)",
        ),
    ),
    (
        "GetRefPointOrigin__5Modeli",
        Ok(
            "Model::GetRefPointOrigin(int)",
        ),
    ),
    (
        "_4View$pDefaultView",
        Ok(
            "View::pDefaultView",
        ),
    ),
    (
        "LogicUpdate__6Muddie",
        Ok(
            "Muddie::LogicUpdate(void)",
        ),
    ),
    (
        "UpdateActivateEnable__9WaterPipe",
        Ok(
            "WaterPipe::UpdateActivateEnable(void)",
        ),
    ),
    (
        "Teleport_LoadResources__Fv",
        Ok(
            "Teleport_LoadResources(void)",
        ),
    ),
    (
        "DrawDebug__6CamerafPf",
        Ok(
            "Camera::DrawDebug(float, float *)",
        ),
    ),
    (
        "ChaseInit__6Muddie",
        Ok(
            "Muddie::ChaseInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7IceRamp",
        Ok(
            "ModuleInfo<IceRamp> virtual table",
        ),
    ),
    (
        "DrawLowDetail__11MKWaterProp",
        Ok(
            "MKWaterProp::DrawLowDetail(void)",
        ),
    ),
    (
        "GetDesc__10KingFisher",
        Ok(
            "KingFisher::GetDesc(void)",
        ),
    ),
    (
        "Draw__10StaticProp",
        Ok(
            "StaticProp::Draw(void)",
        ),
    ),
    (
        "AddObject__17GameObjectManagerP10GameObjectP5Model",
        Ok(
            "GameObjectManager::AddObject(GameObject *, Model *)",
        ),
    ),
    (
        "_GLOBAL_$I$_8BeachHut$beachHutDesc",
        Ok(
            "global constructors keyed to BeachHut::beachHutDesc",
        ),
    ),
    (
        "__terminate",
        Err(
            InvalidCustomNameOnTemplate(
                "erminate",
            ),
        ),
    ),
    (
        "DestroyParticle__14ParticleSystemP8Particle",
        Ok(
            "ParticleSystem::DestroyParticle(Particle *)",
        ),
    ),
    (
        "sceDmaSend",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseTy__5Lenny",
        Ok(
            "Lenny::ChaseTy(void)",
        ),
    ),
    (
        "Update_Moving__11Grasshopper",
        Ok(
            "Grasshopper::Update_Moving(void)",
        ),
    ),
    (
        "SaveStates_GetBoomerang__Fi",
        Ok(
            "SaveStates_GetBoomerang(int)",
        ),
    ),
    (
        "DeinitFirstPerson__2Ty",
        Ok(
            "Ty::DeinitFirstPerson(void)",
        ),
    ),
    (
        "FallDiveOrBiteTransition__2Ty",
        Ok(
            "Ty::FallDiveOrBiteTransition(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Update__11Collapsible",
        Ok(
            "global constructors keyed to Collapsible::Update(void)",
        ),
    ),
    (
        "CollideWithEnvironment__9ZappyrangP15CollisionResult",
        Ok(
            "Zappyrang::CollideWithEnvironment(CollisionResult *)",
        ),
    ),
    (
        "PutTLBEntry",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeinitDeath__5Rhino",
        Ok(
            "Rhino::DeinitDeath(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6BasketPv",
        Ok(
            "ModuleInfo<Basket>::ConstructObject(void *)",
        ),
    ),
    (
        "LoadDone__16CheckpointStruct",
        Ok(
            "CheckpointStruct::LoadDone(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__5Rufus",
        Ok(
            "Rufus::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "Particle_Ice_Create__FPP14ParticleSystemP6VectorT1ff",
        Ok(
            "Particle_Ice_Create(ParticleSystem **, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "sceSifExitRpc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_5Steam$pMat",
        Ok(
            "Steam::pMat",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Sheila",
        Ok(
            "ModuleInfo<Sheila> virtual table",
        ),
    ),
    (
        "UpdateFloorNormal__11RhinoGround",
        Ok(
            "RhinoGround::UpdateFloorNormal(void)",
        ),
    ),
    (
        "MKWaterRender_WS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "gsRegsModified",
        Err(
            NotMangled,
        ),
    ),
    (
        "CreateModel__9RedButton",
        Ok(
            "RedButton::CreateModel(void)",
        ),
    ),
    (
        "IsTyVisible__6Groper",
        Ok(
            "Groper::IsTyVisible(void)",
        ),
    ),
    (
        "DripWater__9WaterPipe",
        Ok(
            "WaterPipe::DripWater(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SpiderTrapdoor_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SpiderTrapdoor_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__builtin_new",
        Err(
            InvalidSpecialMethod(
                "builtin_new",
            ),
        ),
    ),
    (
        "CameraOverride_CanUseEnemyCamera__10GameCamera",
        Ok(
            "GameCamera::CameraOverride_CanUseEnemyCamera(void)",
        ),
    ),
    (
        "UseAutoCenter__10GameCamerab",
        Ok(
            "GameCamera::UseAutoCenter(bool)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9Doomerang",
        Ok(
            "ModuleInfo<Doomerang> virtual table",
        ),
    ),
    (
        "_GLOBAL_$I$_8FireDrum$pFlameMat",
        Ok(
            "global constructors keyed to FireDrum::pFlameMat",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9ShadowBat",
        Ok(
            "ModuleInfo<ShadowBat>::Init(void)",
        ),
    ),
    (
        "Update__10Projectile",
        Ok(
            "Projectile::Update(void)",
        ),
    ),
    (
        "Run__7BushPig",
        Ok(
            "BushPig::Run(void)",
        ),
    ),
    (
        "JumpTransition__2Ty",
        Ok(
            "Ty::JumpTransition(void)",
        ),
    ),
    (
        "_vt$10SnowSpider",
        Ok(
            "SnowSpider virtual table",
        ),
    ),
    (
        "_vt$11BoulderTrap",
        Ok(
            "BoulderTrap virtual table",
        ),
    ),
    (
        "__muldi3",
        Err(
            InvalidSpecialMethod(
                "muldi3",
            ),
        ),
    ),
    (
        "Turtle_Update__Fv",
        Ok(
            "Turtle_Update(void)",
        ),
    ),
    (
        "__tf19__builtin_type_info",
        Ok(
            "__builtin_type_info type_info function",
        ),
    ),
    (
        "Init__6SpiderRC6VectorT110SpiderType",
        Ok(
            "Spider::Init(Vector const &, Vector const &, SpiderType)",
        ),
    ),
    (
        "Gem_SetElement__F11ElementType",
        Ok(
            "Gem_SetElement(ElementType)",
        ),
    ),
    (
        "Weather_Enable__Fb",
        Ok(
            "Weather_Enable(bool)",
        ),
    ),
    (
        "NodeExists__9AnimationPcPi",
        Ok(
            "Animation::NodeExists(char *, int *)",
        ),
    ),
    (
        "ChangeActivation__9Lightning",
        Ok(
            "Lightning::ChangeActivation(void)",
        ),
    ),
    (
        "LoadLine__6AuroraP12KromeIniLine",
        Ok(
            "Aurora::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Thrown__10CrikeyChum",
        Ok(
            "CrikeyChum::Thrown(void)",
        ),
    ),
    (
        "GetAnimIndex__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::GetAnimIndex(void)",
        ),
    ),
    (
        "Init__8DiveRingP11GameObjDesc",
        Ok(
            "DiveRing::Init(GameObjDesc *)",
        ),
    ),
    (
        "bWindmillsLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetCurrentFRAME__4ViewUi",
        Ok(
            "View::GetCurrentFRAME(unsigned int)",
        ),
    ),
    (
        "BarbedWire_Draw__Fv",
        Ok(
            "BarbedWire_Draw(void)",
        ),
    ),
    (
        "Fire__7SnowGun",
        Ok(
            "SnowGun::Fire(void)",
        ),
    ),
    (
        "RunAttack__8PubeCrabb",
        Ok(
            "PubeCrab::RunAttack(bool)",
        ),
    ),
    (
        "Message__14CrikeyCanisterP9MKMessage",
        Ok(
            "CrikeyCanister::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$15BonusPickupDesc",
        Ok(
            "BonusPickupDesc virtual table",
        ),
    ),
    (
        "Patrol__11FrillLizard",
        Ok(
            "FrillLizard::Patrol(void)",
        ),
    ),
    (
        "Idle__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Idle(void)",
        ),
    ),
    (
        "Draw__13Blitter_Imagefffff",
        Ok(
            "Blitter_Image::Draw(float, float, float, float, float)",
        ),
    ),
    (
        "_GLOBAL_$I$Maurie_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Maurie_LoadResources(KromeIni *)",
        ),
    ),
    (
        "SynkerBlueTongue_LoadResources__FP8KromeIni",
        Ok(
            "SynkerBlueTongue_LoadResources(KromeIni *)",
        ),
    ),
    (
        "LoadDone__8SnowPile",
        Ok(
            "SnowPile::LoadDone(void)",
        ),
    ),
    (
        "LoadLine__8PlatformP12KromeIniLine",
        Ok(
            "Platform::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LightTy__2Ty",
        Ok(
            "Ty::LightTy(void)",
        ),
    ),
    (
        "_GLOBAL_$I$SpecialPickup_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to SpecialPickup_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Translation_InitModule__Fv",
        Ok(
            "Translation_InitModule(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_Update__Fv",
        Ok(
            "PauseScreen_GameInfo_Update(void)",
        ),
    ),
    (
        "Destroy__t7PtrList1Z9BoomerangP9Boomerang",
        Ok(
            "PtrList<Boomerang>::Destroy(Boomerang *)",
        ),
    ),
    (
        "CheckForSplash__11DropPontoon",
        Ok(
            "DropPontoon::CheckForSplash(void)",
        ),
    ),
    (
        "UpdateCheck__15LedgePullUpData",
        Ok(
            "LedgePullUpData::UpdateCheck(void)",
        ),
    ),
    (
        "Draw__4Frog",
        Ok(
            "Frog::Draw(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z11SpiderCrate",
        Ok(
            "ModuleInfo<SpiderCrate>::Init(void)",
        ),
    ),
    (
        "Alert_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::Alert_Update(void)",
        ),
    ),
    (
        "FlinchInit__3Bat",
        Ok(
            "Bat::FlinchInit(void)",
        ),
    ),
    (
        "Spawn__11FrillLizard",
        Ok(
            "FrillLizard::Spawn(void)",
        ),
    ),
    (
        "AcceleratedTurn__11EnemyObjectff",
        Ok(
            "EnemyObject::AcceleratedTurn(float, float)",
        ),
    ),
    (
        "FrontEnd_LoadLevel_LoadResources__Fv",
        Ok(
            "FrontEnd_LoadLevel_LoadResources(void)",
        ),
    ),
    (
        "Create__10WaterSlide",
        Ok(
            "WaterSlide::Create(void)",
        ),
    ),
    (
        "Turtle_End__Fv",
        Ok(
            "Turtle_End(void)",
        ),
    ),
    (
        "Draw__7MKWater",
        Ok(
            "MKWater::Draw(void)",
        ),
    ),
    (
        "Dialog_Draw__Fv",
        Ok(
            "Dialog_Draw(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13MusicalIciclePv",
        Ok(
            "ModuleInfo<MusicalIcicle>::ConstructObject(void *)",
        ),
    ),
    (
        "DrawReflection__16BoomerangManager",
        Ok(
            "BoomerangManager::DrawReflection(void)",
        ),
    ),
    (
        "__get_eh_table_version",
        Err(
            InvalidSpecialMethod(
                "get_eh_table_version",
            ),
        ),
    ),
    (
        "DeleteSema",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_SCISSOR_2__3DmaUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_SCISSOR_2(unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "DeinitModule__11DirectLight",
        Ok(
            "DirectLight::DeinitModule(void)",
        ),
    ),
    (
        "Normal_MinimalUpdate__10GameCamera",
        Ok(
            "GameCamera::Normal_MinimalUpdate(void)",
        ),
    ),
    (
        "GetField__10KingFisher",
        Ok(
            "KingFisher::GetField(void)",
        ),
    ),
    (
        "PauseScreen_OptionSound_Draw__Fv",
        Ok(
            "PauseScreen_OptionSound_Draw(void)",
        ),
    ),
    (
        "Init__8TeleportP6VectorP14BoundingVolumef",
        Ok(
            "Teleport::Init(Vector *, BoundingVolume *, float)",
        ),
    ),
    (
        "Init__6UITextP4FontPc",
        Ok(
            "UIText::Init(Font *, char *)",
        ),
    ),
    (
        "shearsMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "ChaseAlongside__9FrillBike",
        Ok(
            "FrillBike::ChaseAlongside(void)",
        ),
    ),
    (
        "LoadLine__4BullP12KromeIniLine",
        Ok(
            "Bull::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_vt$7Wallaby",
        Ok(
            "Wallaby virtual table",
        ),
    ),
    (
        "LoadLine__13MusicalIcicleP12KromeIniLine",
        Ok(
            "MusicalIcicle::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadDone__15BurnerObjective",
        Ok(
            "BurnerObjective::LoadDone(void)",
        ),
    ),
    (
        "gModelDrawBoundingBoxes",
        Err(
            NotMangled,
        ),
    ),
    (
        "Video_Destroy__FP5Video",
        Ok(
            "Video_Destroy(Video *)",
        ),
    ),
    (
        "UpdateFires__8Burnable",
        Ok(
            "Burnable::UpdateFires(void)",
        ),
    ),
    (
        "AntHill_IsMember__FP16MKPropDescriptor",
        Ok(
            "AntHill_IsMember(MKPropDescriptor *)",
        ),
    ),
    (
        "GetOnPathPosition__18BezierPathFollower",
        Ok(
            "BezierPathFollower::GetOnPathPosition(void)",
        ),
    ),
    (
        "SetState__6Basketi",
        Ok(
            "Basket::SetState(int)",
        ),
    ),
    (
        "_GLOBAL_$F$nothrow",
        Err(
            InvalidNamespaceOnNamespacedGlobal(
                "GLOBAL_",
            ),
        ),
    ),
    (
        "Charge__4Bull",
        Ok(
            "Bull::Charge(void)",
        ),
    ),
    (
        "Reset__8BeachHut",
        Ok(
            "BeachHut::Reset(void)",
        ),
    ),
    (
        "strlen",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$KingFisher_LoadResources__Fv",
        Ok(
            "global constructors keyed to KingFisher_LoadResources(void)",
        ),
    ),
    (
        "sceSifLoadModule",
        Err(
            NotMangled,
        ),
    ),
    (
        "camPos",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__5ImagePUcUi",
        Ok(
            "Image::Init(unsigned char *, unsigned int)",
        ),
    ),
    (
        "Init__5SkinkP11GameObjDesc",
        Ok(
            "Skink::Init(GameObjDesc *)",
        ),
    ),
    (
        "gSceneDma",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z9BadBoonie",
        Ok(
            "ModuleInfo<BadBoonie> virtual table",
        ),
    ),
    (
        "UpdateWorldMatrix__14ShadowBatSonar",
        Ok(
            "ShadowBatSonar::UpdateWorldMatrix(void)",
        ),
    ),
    (
        "_vt$7Bouncer",
        Ok(
            "Bouncer virtual table",
        ),
    ),
    (
        "LoadResources__17TyParticleManager",
        Ok(
            "TyParticleManager::LoadResources(void)",
        ),
    ),
    (
        "CreateThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Main_GetValidJoypadAxisValue__Fi",
        Ok(
            "Main_GetValidJoypadAxisValue(int)",
        ),
    ),
    (
        "_initSeqAgain",
        Err(
            NotMangled,
        ),
    ),
    (
        "SelectState__14WaterSlideData",
        Ok(
            "WaterSlideData::SelectState(void)",
        ),
    ),
    (
        "Init__17SoundEventManager",
        Ok(
            "SoundEventManager::Init(void)",
        ),
    ),
    (
        "Create__4FontPc",
        Ok(
            "Font::Create(char *)",
        ),
    ),
    (
        "MKWaterRender_WSEMSCR_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalculateMatrices__9Animation",
        Ok(
            "Animation::CalculateMatrices(void)",
        ),
    ),
    (
        "GetNewNodePositions__2Ty",
        Ok(
            "Ty::GetNewNodePositions(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Shatterable_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Shatterable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "StartIdle__6Cattle",
        Ok(
            "Cattle::StartIdle(void)",
        ),
    ),
    (
        "Abort__14LevelObjective",
        Ok(
            "LevelObjective::Abort(void)",
        ),
    ),
    (
        "Shadow_DrawAnimatingShadows__Fv",
        Ok(
            "Shadow_DrawAnimatingShadows(void)",
        ),
    ),
    (
        "_init_signal_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__12SpeedUpCrate",
        Ok(
            "SpeedUpCrate::Draw(void)",
        ),
    ),
    (
        "open",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8MorayEelPv",
        Ok(
            "ModuleInfo<MorayEel>::ConstructObject(void *)",
        ),
    ),
    (
        "GuideBarrel_ShowAll__Fv",
        Ok(
            "GuideBarrel_ShowAll(void)",
        ),
    ),
    (
        "InitModule__14MKSceneManager",
        Ok(
            "MKSceneManager::InitModule(void)",
        ),
    ),
    (
        "Particle_BlackSmoke_Init__FPP14ParticleSystemP6VectorP14BoundingVolumefb",
        Ok(
            "Particle_BlackSmoke_Init(ParticleSystem **, Vector *, BoundingVolume *, float, bool)",
        ),
    ),
    (
        "Gem_ParticleSystem_Update__Fv",
        Ok(
            "Gem_ParticleSystem_Update(void)",
        ),
    ),
    (
        "waterTypeNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "Repair__8PipePart",
        Ok(
            "PipePart::Repair(void)",
        ),
    ),
    (
        "FrontEnd_Title_Update__Fv",
        Ok(
            "FrontEnd_Title_Update(void)",
        ),
    ),
    (
        "FieldRemoved__17CritterField2Desc",
        Ok(
            "CritterField2Desc::FieldRemoved(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8CableCar",
        Ok(
            "ModuleInfo<CableCar>::Init(void)",
        ),
    ),
    (
        "Message__16FinishLineStructP9MKMessage",
        Ok(
            "FinishLineStruct::Message(MKMessage *)",
        ),
    ),
    (
        "_sceCd_cd_callback",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z15YabbyStalactitePv",
        Ok(
            "ModuleInfo<YabbyStalactite>::ConstructObject(void *)",
        ),
    ),
    (
        "Particle_BiteGlow_SetToExpand__Fb",
        Ok(
            "Particle_BiteGlow_SetToExpand(bool)",
        ),
    ),
    (
        "_GLOBAL_$I$_7SnowRoo$nSnowBallObj",
        Ok(
            "global constructors keyed to SnowRoo::nSnowBallObj",
        ),
    ),
    (
        "Shazza_LoadResources__FP8KromeIni",
        Ok(
            "Shazza_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Death__11RhinoGround",
        Ok(
            "RhinoGround::Death(void)",
        ),
    ),
    (
        "Debug_InitModule__Fv",
        Ok(
            "Debug_InitModule(void)",
        ),
    ),
    (
        "ModelRender_Ai_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14MKSceneManagerP18MKSceneManagerInit",
        Ok(
            "MKSceneManager::Init(MKSceneManagerInit *)",
        ),
    ),
    (
        "Model_GetNmbrOfSubObjects__FP13ModelTemplate",
        Ok(
            "Model_GetNmbrOfSubObjects(ModelTemplate *)",
        ),
    ),
    (
        "QuickShatter__14IceBlockStruct",
        Ok(
            "IceBlockStruct::QuickShatter(void)",
        ),
    ),
    (
        "Taunt__5Neddy",
        Ok(
            "Neddy::Taunt(void)",
        ),
    ),
    (
        "SynchroniseLevel__8GameData",
        Ok(
            "GameData::SynchroniseLevel(void)",
        ),
    ),
    (
        "HitInit__10BlueTongue",
        Ok(
            "BlueTongue::HitInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z21ConditionalScriptPropPv",
        Ok(
            "ModuleInfo<ConditionalScriptProp>::ConstructObject(void *)",
        ),
    ),
    (
        "TyMemCard_QueryUpdate__Fv",
        Ok(
            "TyMemCard_QueryUpdate(void)",
        ),
    ),
    (
        "Sound_RPC__Fiii",
        Ok(
            "Sound_RPC(int, int, int)",
        ),
    ),
    (
        "IdleInit__6Muddie",
        Ok(
            "Muddie::IdleInit(void)",
        ),
    ),
    (
        "Idle__8KoalaKid",
        Ok(
            "KoalaKid::Idle(void)",
        ),
    ),
    (
        "_GLOBAL_$I$ToggleChangeLevel__Fv",
        Ok(
            "global constructors keyed to ToggleChangeLevel(void)",
        ),
    ),
    (
        "IsTyVisible__10ScubaFrill",
        Ok(
            "ScubaFrill::IsTyVisible(void)",
        ),
    ),
    (
        "Draw__7UIModel",
        Ok(
            "UIModel::Draw(void)",
        ),
    ),
    (
        "gTextureDisplayPage",
        Err(
            NotMangled,
        ),
    ),
    (
        "PairUp__6SMTreeii",
        Ok(
            "SMTree::PairUp(int, int)",
        ),
    ),
    (
        "UnlockZone__8GameData10ZoneNumber",
        Ok(
            "GameData::UnlockZone(ZoneNumber)",
        ),
    ),
    (
        "OutsideGOV__17LineOfSightObject",
        Ok(
            "LineOfSightObject::OutsideGOV(void)",
        ),
    ),
    (
        "Update__9Avalanche",
        Ok(
            "Avalanche::Update(void)",
        ),
    ),
    (
        "TY_COLLIDE_FLOOR_RATIO",
        Err(
            NotMangled,
        ),
    ),
    (
        "AllocParticleChunk__21ParticleSystemManager",
        Ok(
            "ParticleSystemManager::AllocParticleChunk(void)",
        ),
    ),
    (
        "Init__5ImagePc",
        Ok(
            "Image::Init(char *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9SoundProp",
        Ok(
            "ModuleInfo<SoundProp>::Init(void)",
        ),
    ),
    (
        "GameCamera_Deinit__Fv",
        Ok(
            "GameCamera_Deinit(void)",
        ),
    ),
    (
        "System_InitModule__FPPci",
        Ok(
            "System_InitModule(char **, int)",
        ),
    ),
    (
        "Reset__8Sentinel",
        Ok(
            "Sentinel::Reset(void)",
        ),
    ),
    (
        "Deinit__6GasJet",
        Ok(
            "GasJet::Deinit(void)",
        ),
    ),
    (
        "ParticleSystemManager_Init__Fii",
        Ok(
            "ParticleSystemManager_Init(int, int)",
        ),
    ),
    (
        "DebugInfo_Line3d__FPcP6VectorT1ib",
        Ok(
            "DebugInfo_Line3d(char *, Vector *, Vector *, int, bool)",
        ),
    ),
    (
        "Idle__8PubeCrab",
        Ok(
            "PubeCrab::Idle(void)",
        ),
    ),
    (
        "spikeyIceMax",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetNearestNode__11PathManagerP6Vectorf",
        Ok(
            "PathManager::GetNearestNode(Vector *, float)",
        ),
    ),
    (
        "SpeedLinesEnable__2TyP6Vector",
        Ok(
            "Ty::SpeedLinesEnable(Vector *)",
        ),
    ),
    (
        "Draw__14HealthLivesHud",
        Ok(
            "HealthLivesHud::Draw(void)",
        ),
    ),
    (
        "Reset__12ThrowingStar",
        Ok(
            "ThrowingStar::Reset(void)",
        ),
    ),
    (
        "Update__16WaterSlideEffect",
        Ok(
            "WaterSlideEffect::Update(void)",
        ),
    ),
    (
        "GroundCollision__4Jeep",
        Ok(
            "Jeep::GroundCollision(void)",
        ),
    ),
    (
        "RayToSphere__FP6VectorT0T0ffb",
        Ok(
            "RayToSphere(Vector *, Vector *, Vector *, float, float, bool)",
        ),
    ),
    (
        "Hud_ShowLives__Fv",
        Ok(
            "Hud_ShowLives(void)",
        ),
    ),
    (
        "EnableDmac",
        Err(
            NotMangled,
        ),
    ),
    (
        "_sysbitPtr",
        Err(
            NotMangled,
        ),
    ),
    (
        "CClamp__6VectorP6Vectorff",
        Ok(
            "Vector::CClamp(Vector *, float, float)",
        ),
    ),
    (
        "Create__5FlameP6Vectorf",
        Ok(
            "Flame::Create(Vector *, float)",
        ),
    ),
    (
        "Particle_WaterTrail_Init__FPP14ParticleSystemP6VectorP14BoundingVolume",
        Ok(
            "Particle_WaterTrail_Init(ParticleSystem **, Vector *, BoundingVolume *)",
        ),
    ),
    (
        "GetStartPos__11EnemyObject",
        Ok(
            "EnemyObject::GetStartPos(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8Sentinel",
        Ok(
            "ModuleInfo<Sentinel>::Init(void)",
        ),
    ),
    (
        "LoadLine__11MetalSpikesP12KromeIniLine",
        Ok(
            "MetalSpikes::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "Set__16AutoTargetStruct14TargetPriorityP6VectorT2T2P5Model",
        Ok(
            "AutoTargetStruct::Set(TargetPriority, Vector *, Vector *, Vector *, Model *)",
        ),
    ),
    (
        "Draw__8UIButton",
        Ok(
            "UIButton::Draw(void)",
        ),
    ),
    (
        "Smooth__15GameCameraPointP6Vectorff",
        Ok(
            "GameCameraPoint::Smooth(Vector *, float, float)",
        ),
    ),
    (
        "UpdateBob__14MobilePlatform",
        Ok(
            "MobilePlatform::UpdateBob(void)",
        ),
    ),
    (
        "MKMemoryCard_GetFileSlotFromName__FPc",
        Ok(
            "MKMemoryCard_GetFileSlotFromName(char *)",
        ),
    ),
    (
        "SelectMove__2Ty",
        Ok(
            "Ty::SelectMove(void)",
        ),
    ),
    (
        "sceDeci2ExUnLock",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFO1TX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ControlState__5TyFSMi",
        Ok(
            "TyFSM::ControlState(int)",
        ),
    ),
    (
        "_printf",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsNormalised__6Vector",
        Ok(
            "Vector::IsNormalised(void)",
        ),
    ),
    (
        "PickUp__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::PickUp(void)",
        ),
    ),
    (
        "MKMem_Release__Fi",
        Ok(
            "MKMem_Release(int)",
        ),
    ),
    (
        "AddNode__6SplineP6Vector",
        Ok(
            "Spline::AddNode(Vector *)",
        ),
    ),
    (
        "RangChangeTransition__2Ty",
        Ok(
            "Ty::RangChangeTransition(void)",
        ),
    ),
    (
        "InitJump__2Ty",
        Ok(
            "Ty::InitJump(void)",
        ),
    ),
    (
        "MKWaterRender_WSEM_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tix",
        Ok(
            "long long type_info node",
        ),
    ),
    (
        "InitStateFuncs__15GameCameraStateP20GameCameraStateFuncsPM10GameCameraFP10GameCamera_v",
        Ok(
            "GameCameraState::InitStateFuncs(GameCameraStateFuncs *, void (GameCamera::*)())",
        ),
    ),
    (
        "bInitialised",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_SaveGame_Init__Fv",
        Ok(
            "PauseScreen_SaveGame_Init(void)",
        ),
    ),
    (
        "PauseScreen_Options_Draw__Fv",
        Ok(
            "PauseScreen_Options_Draw(void)",
        ),
    ),
    (
        "IsCollected__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::IsCollected(void)",
        ),
    ),
    (
        "Deinit__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Deinit(void)",
        ),
    ),
    (
        "SuperGlowExpand__Fb",
        Ok(
            "SuperGlowExpand(bool)",
        ),
    ),
    (
        "AddGlobalProp__14MKSceneManagerP6MKPropi",
        Ok(
            "MKSceneManager::AddGlobalProp(MKProp *, int)",
        ),
    ),
    (
        "Throw__14RockProjectileP6VectorUc",
        Ok(
            "RockProjectile::Throw(Vector *, unsigned char)",
        ),
    ),
    (
        "Update__14CameraOverrideP16CameraDescriptor",
        Ok(
            "CameraOverride::Update(CameraDescriptor *)",
        ),
    ),
    (
        "__tfUs",
        Ok(
            "unsigned short type_info function",
        ),
    ),
    (
        "MKWaterManager_LoadWaterTypes__FPci",
        Ok(
            "MKWaterManager_LoadWaterTypes(char *, int)",
        ),
    ),
    (
        "TurningPlatform_LoadResources__FP8KromeIni",
        Ok(
            "TurningPlatform_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ScaleRang__9Boomerang",
        Ok(
            "Boomerang::ScaleRang(void)",
        ),
    ),
    (
        "Deinit__9Boomerang",
        Ok(
            "Boomerang::Deinit(void)",
        ),
    ),
    (
        "LoadLine__12StaticFXPropP12KromeIniLine",
        Ok(
            "StaticFXProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "InitialiseVars__12BoomerangHud13BoomerangType",
        Ok(
            "BoomerangHud::InitialiseVars(BoomerangType)",
        ),
    ),
    (
        "__tfl",
        Ok(
            "long type_info function",
        ),
    ),
    (
        "Deinit__7SnowGun",
        Ok(
            "SnowGun::Deinit(void)",
        ),
    ),
    (
        "Draw__4Bull",
        Ok(
            "Bull::Draw(void)",
        ),
    ),
    (
        "_19DialogEffectManager$nEffects",
        Ok(
            "DialogEffectManager::nEffects",
        ),
    ),
    (
        "Load__Q27DataVal2WSP12KromeIniLine",
        Ok(
            "DataVal::WS::Load(KromeIniLine *)",
        ),
    ),
    (
        "RFU086_WaitEvnetFlag",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__13BoomerangDescP14ModuleInfoBasePcT213BoomerangType",
        Ok(
            "BoomerangDesc::Init(ModuleInfoBase *, char *, char *, BoomerangType)",
        ),
    ),
    (
        "InitPushOff__15LedgePullUpData",
        Ok(
            "LedgePullUpData::InitPushOff(void)",
        ),
    ),
    (
        "ModelRender_FO1_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__22MusicalIcicleObjectiveP12KromeIniLine",
        Ok(
            "MusicalIcicleObjective::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "__tf19__pointer_type_info",
        Ok(
            "__pointer_type_info type_info function",
        ),
    ),
    (
        "Update__11EnemyObject",
        Ok(
            "EnemyObject::Update(void)",
        ),
    ),
    (
        "GetHeight__8Material",
        Ok(
            "Material::GetHeight(void)",
        ),
    ),
    (
        "_19GameCameraCollision$Descriptor",
        Ok(
            "GameCameraCollision::Descriptor",
        ),
    ),
    (
        "_vt$14ShadowBatSonar",
        Ok(
            "ShadowBatSonar virtual table",
        ),
    ),
    (
        "Message__10SnowSpiderP9MKMessage",
        Ok(
            "SnowSpider::Message(MKMessage *)",
        ),
    ),
    (
        "sceIpuStopDMA",
        Err(
            NotMangled,
        ),
    ),
    (
        "ApproachDeinit__5Lenny",
        Ok(
            "Lenny::ApproachDeinit(void)",
        ),
    ),
    (
        "Reset__4Tick",
        Ok(
            "Tick::Reset(void)",
        ),
    ),
    (
        "Update__8OpalsHud",
        Ok(
            "OpalsHud::Update(void)",
        ),
    ),
    (
        "WhatThe__4Bull",
        Ok(
            "Bull::WhatThe(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8SignPost",
        Ok(
            "ModuleInfo<SignPost>::Init(void)",
        ),
    ),
    (
        "DoLoseFX__8TyHealth",
        Ok(
            "TyHealth::DoLoseFX(void)",
        ),
    ),
    (
        "CheatJump_GetValidJoypadAxisValue__Fi",
        Ok(
            "CheatJump_GetValidJoypadAxisValue(int)",
        ),
    ),
    (
        "AddGif_AD_SCISSOR_1__3DmaUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_SCISSOR_1(unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7BeerCan",
        Ok(
            "ModuleInfo<BeerCan>::Init(void)",
        ),
    ),
    (
        "Init__6GeyserP11GameObjDesc",
        Ok(
            "Geyser::Init(GameObjDesc *)",
        ),
    ),
    (
        "Draw__11MKWaterProp",
        Ok(
            "MKWaterProp::Draw(void)",
        ),
    ),
    (
        "FlyInit__3Bat",
        Ok(
            "Bat::FlyInit(void)",
        ),
    ),
    (
        "Draw__16Blitter_Particlei",
        Ok(
            "Blitter_Particle::Draw(int)",
        ),
    ),
    (
        "Idle__6Wombat",
        Ok(
            "Wombat::Idle(void)",
        ),
    ),
    (
        "InitStartAggressive__5Rhino",
        Ok(
            "Rhino::InitStartAggressive(void)",
        ),
    ),
    (
        "CheckEvents__9BadBoonie",
        Ok(
            "BadBoonie::CheckEvents(void)",
        ),
    ),
    (
        "Update__6SpyEgg",
        Ok(
            "SpyEgg::Update(void)",
        ),
    ),
    (
        "FrontEnd_LoadResources__Fv",
        Ok(
            "FrontEnd_LoadResources(void)",
        ),
    ),
    (
        "sceSifExecRequest",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_TEX0_1__3DmaUlUlUlUlUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_TEX0_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "DrawNoPerspective__16Blitter_TriStripif",
        Ok(
            "Blitter_TriStrip::DrawNoPerspective(int, float)",
        ),
    ),
    (
        "SysExecPS2Entry",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FLO1ST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsTyVisible__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::IsTyVisible(void)",
        ),
    ),
    (
        "Draw__19ShadowBatStalactite",
        Ok(
            "ShadowBatStalactite::Draw(void)",
        ),
    ),
    (
        "Update__9FireWorks",
        Ok(
            "FireWorks::Update(void)",
        ),
    ),
    (
        "SpawnLeafGrassDust__17TyParticleManagerP6VectorT1b",
        Ok(
            "TyParticleManager::SpawnLeafGrassDust(Vector *, Vector *, bool)",
        ),
    ),
    (
        "ModelRender_CFO1_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetPos__12StaticFXProp",
        Ok(
            "StaticFXProp::GetPos(void)",
        ),
    ),
    (
        "ModelRender_CFLS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__11RhinoGround",
        Ok(
            "RhinoGround::Reset(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z13PickupCounter",
        Ok(
            "ModuleInfo<PickupCounter>::Init(void)",
        ),
    ),
    (
        "Update__8PipePart",
        Ok(
            "PipePart::Update(void)",
        ),
    ),
    (
        "FireAtTarget__14SnowBallAttackP6VectorT1f",
        Ok(
            "SnowBallAttack::FireAtTarget(Vector *, Vector *, float)",
        ),
    ),
    (
        "SceneDeinit__12DialogPlayer",
        Ok(
            "DialogPlayer::SceneDeinit(void)",
        ),
    ),
    (
        "_rix_010",
        Err(
            NotMangled,
        ),
    ),
    (
        "floorf",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__17TriggerSphereProp",
        Ok(
            "TriggerSphereProp::LoadDone(void)",
        ),
    ),
    (
        "FirstWaypoint__14EnemyWaypoints",
        Ok(
            "EnemyWaypoints::FirstWaypoint(void)",
        ),
    ),
    (
        "_vt$4Gate",
        Ok(
            "Gate virtual table",
        ),
    ),
    (
        "sceSifLoadModuleBuffer",
        Err(
            NotMangled,
        ),
    ),
    (
        "__srefill",
        Err(
            InvalidSpecialMethod(
                "srefill",
            ),
        ),
    ),
    (
        "Charge__7BushPig",
        Ok(
            "BushPig::Charge(void)",
        ),
    ),
    (
        "GetZoneFirstLevelNumber__9LevelData10ZoneNumber",
        Ok(
            "LevelData::GetZoneFirstLevelNumber(ZoneNumber)",
        ),
    ),
    (
        "ResolveHit__3Ice",
        Ok(
            "Ice::ResolveHit(void)",
        ),
    ),
    (
        "DamageTy__3Ice",
        Ok(
            "Ice::DamageTy(void)",
        ),
    ),
    (
        "Block__8PubeCrab",
        Ok(
            "PubeCrab::Block(void)",
        ),
    ),
    (
        "_11BilbyStruct$bVisible",
        Ok(
            "BilbyStruct::bVisible",
        ),
    ),
    (
        "_iDisableIntc",
        Err(
            NotMangled,
        ),
    ),
    (
        "_GLOBAL_$I$BurningTree_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BurningTree_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Blitter_Line3D_Init_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "EndCheckpoint__10DDASession",
        Ok(
            "DDASession::EndCheckpoint(void)",
        ),
    ),
    (
        "GetEntryFromString__13LODDescriptorPc",
        Ok(
            "LODDescriptor::GetEntryFromString(char *)",
        ),
    ),
    (
        "ToppleDeathDeinit__8Sentinel",
        Ok(
            "Sentinel::ToppleDeathDeinit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11InvisiCratePv",
        Ok(
            "ModuleInfo<InvisiCrate>::ConstructObject(void *)",
        ),
    ),
    (
        "DeathInit__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::DeathInit(void)",
        ),
    ),
    (
        "ModelRender_CFLST_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_FW_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "UpdateAnims__5Ringo",
        Ok(
            "Ringo::UpdateAnims(void)",
        ),
    ),
    (
        "sceSifGetOtherData",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetShadowPosition__9ShadowBat",
        Ok(
            "ShadowBat::GetShadowPosition(void)",
        ),
    ),
    (
        "IsTyWithinChaseArea__11EnemyObject",
        Ok(
            "EnemyObject::IsTyWithinChaseArea(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z13GuideParticlePv",
        Ok(
            "ModuleInfo<GuideParticle>::ConstructObject(void *)",
        ),
    ),
    (
        "CameraOverrideSpiral_End__Fv",
        Ok(
            "CameraOverrideSpiral_End(void)",
        ),
    ),
    (
        "_ri0_011",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_CFSX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Suck__5Leech",
        Ok(
            "Leech::Suck(void)",
        ),
    ),
    (
        "LoadLine__6GeyserP12KromeIniLine",
        Ok(
            "Geyser::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "PE_Ice_LoadResources__Fv",
        Ok(
            "PE_Ice_LoadResources(void)",
        ),
    ),
    (
        "WhiteBatAttackDeinit__9ShadowBat",
        Ok(
            "ShadowBat::WhiteBatAttackDeinit(void)",
        ),
    ),
    (
        "PauseScreen_GameTotals_LoadResources__Fv",
        Ok(
            "PauseScreen_GameTotals_LoadResources(void)",
        ),
    ),
    (
        "BurniningTree_Reset__Fv",
        Ok(
            "BurniningTree_Reset(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z9ShadowBatPv",
        Ok(
            "ModuleInfo<ShadowBat>::ConstructObject(void *)",
        ),
    ),
    (
        "InitSwim__2Ty",
        Ok(
            "Ty::InitSwim(void)",
        ),
    ),
    (
        "GetAnimDef__9Animationi",
        Ok(
            "Animation::GetAnimDef(int)",
        ),
    ),
    (
        "Update__11BonusPickup",
        Ok(
            "BonusPickup::Update(void)",
        ),
    ),
    (
        "Kin_GetDiscreteDistance__FPfT0T0T0",
        Ok(
            "Kin_GetDiscreteDistance(float *, float *, float *, float *)",
        ),
    ),
    (
        "PE_Fire_LoadResources__Fv",
        Ok(
            "PE_Fire_LoadResources(void)",
        ),
    ),
    (
        "WobbleJeep__4Jeep",
        Ok(
            "Jeep::WobbleJeep(void)",
        ),
    ),
    (
        "Init__6FriendP11GameObjDesc",
        Ok(
            "Friend::Init(GameObjDesc *)",
        ),
    ),
    (
        "Timer_GetDifference__FP9TimerInfoT0T0",
        Ok(
            "Timer_GetDifference(TimerInfo *, TimerInfo *, TimerInfo *)",
        ),
    ),
    (
        "_10FootEffect$pDustMat",
        Ok(
            "FootEffect::pDustMat",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Yabby",
        Ok(
            "ModuleInfo<Yabby> virtual table",
        ),
    ),
    (
        "FlashColor__12DialogEffect",
        Ok(
            "DialogEffect::FlashColor(void)",
        ),
    ),
    (
        "Draw__4Drum",
        Ok(
            "Drum::Draw(void)",
        ),
    ),
    (
        "Hud_SetGems__Fi",
        Ok(
            "Hud_SetGems(int)",
        ),
    ),
    (
        "ReleaseSaveData__8GameData",
        Ok(
            "GameData::ReleaseSaveData(void)",
        ),
    ),
    (
        "Hud_BoomerangScroll__Fii",
        Ok(
            "Hud_BoomerangScroll(int, int)",
        ),
    ),
    (
        "Death__8PubeCrab",
        Ok(
            "PubeCrab::Death(void)",
        ),
    ),
    (
        "AttackInit__5Leech",
        Ok(
            "Leech::AttackInit(void)",
        ),
    ),
    (
        "FlinchInit__6Crikey",
        Ok(
            "Crikey::FlinchInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z7BushPig",
        Ok(
            "ModuleInfo<BushPig> virtual table",
        ),
    ),
    (
        "Fish_Init__Fv",
        Ok(
            "Fish_Init(void)",
        ),
    ),
    (
        "InterpolatePos__6VectorP6VectorT1T1ff",
        Ok(
            "Vector::InterpolatePos(Vector *, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "DeathDeinit__5Rufus",
        Ok(
            "Rufus::DeathDeinit(void)",
        ),
    ),
    (
        "gDrawCounter",
        Err(
            NotMangled,
        ),
    ),
    (
        "CollisionCheck__9Speedboat",
        Ok(
            "Speedboat::CollisionCheck(void)",
        ),
    ),
    (
        "StartJump__4FrogP6Vector",
        Ok(
            "Frog::StartJump(Vector *)",
        ),
    ),
    (
        "InitDiveBiteStart__6TyBite",
        Ok(
            "TyBite::InitDiveBiteStart(void)",
        ),
    ),
    (
        "SpringOpen__16CheckpointStruct",
        Ok(
            "CheckpointStruct::SpringOpen(void)",
        ),
    ),
    (
        "UpdateYaw__2Tyf",
        Ok(
            "Ty::UpdateYaw(float)",
        ),
    ),
    (
        "AddGif_TEX0_2__3DmaUlUlUlUlUlUlUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_TEX0_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "Hud_GetHealthLeft__Fv",
        Ok(
            "Hud_GetHealthLeft(void)",
        ),
    ),
    (
        "MKWaterRender_WSEMTMF_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScaleIn__15StopwatchStruct",
        Ok(
            "StopwatchStruct::ScaleIn(void)",
        ),
    ),
    (
        "SignPost_ShowAll__Fv",
        Ok(
            "SignPost_ShowAll(void)",
        ),
    ),
    (
        "sceScfGetGMTfromRTC",
        Err(
            NotMangled,
        ),
    ),
    (
        "MoveWhileDiving__2Tyi",
        Ok(
            "Ty::MoveWhileDiving(int)",
        ),
    ),
    (
        "VibrateUpdate__Fv",
        Ok(
            "VibrateUpdate(void)",
        ),
    ),
    (
        "Message__15WaterTankStructP9MKMessage",
        Ok(
            "WaterTankStruct::Message(MKMessage *)",
        ),
    ),
    (
        "__tf16__ptmf_type_info",
        Ok(
            "__ptmf_type_info type_info function",
        ),
    ),
    (
        "sceMpegResetDefaultPtsGap",
        Err(
            NotMangled,
        ),
    ),
    (
        "DeckChairIdleInit__3Rex",
        Ok(
            "Rex::DeckChairIdleInit(void)",
        ),
    ),
    (
        "Init__9FallGuidefff",
        Ok(
            "FallGuide::Init(float, float, float)",
        ),
    ),
    (
        "sceMcRename",
        Err(
            NotMangled,
        ),
    ),
    (
        "Alert__5Skink",
        Ok(
            "Skink::Alert(void)",
        ),
    ),
    (
        "asinf",
        Err(
            NotMangled,
        ),
    ),
    (
        "iDisableIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__13CausticEffect",
        Ok(
            "CausticEffect::Deinit(void)",
        ),
    ),
    (
        "Init__10SpecialHud",
        Ok(
            "SpecialHud::Init(void)",
        ),
    ),
    (
        "_7SeaMine$magMineCounter",
        Ok(
            "SeaMine::magMineCounter",
        ),
    ),
    (
        "SetTLBHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "ResolveHit__10SpiderDirt",
        Ok(
            "SpiderDirt::ResolveHit(void)",
        ),
    ),
    (
        "Charge__5Neddy",
        Ok(
            "Neddy::Charge(void)",
        ),
    ),
    (
        "AttackDeinit__3Eel",
        Ok(
            "Eel::AttackDeinit(void)",
        ),
    ),
    (
        "Deinit__11BoulderTrap",
        Ok(
            "BoulderTrap::Deinit(void)",
        ),
    ),
    (
        "_Cdvd_cbLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetSoundFileName__5Lennyb",
        Ok(
            "Lenny::GetSoundFileName(bool)",
        ),
    ),
    (
        "InitLedgePullUp__2Ty",
        Ok(
            "Ty::InitLedgePullUp(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8RingoArm",
        Ok(
            "ModuleInfo<RingoArm> virtual table",
        ),
    ),
    (
        "SetRotationYaw__6Matrixf",
        Ok(
            "Matrix::SetRotationYaw(float)",
        ),
    ),
    (
        "SetDirectLight__4ViewP11DirectLight",
        Ok(
            "View::SetDirectLight(DirectLight *)",
        ),
    ),
    (
        "AddGif_AD_LABEL__3DmaUlUl",
        Ok(
            "Dma::AddGif_AD_LABEL(unsigned long, unsigned long)",
        ),
    ),
    (
        "ChooseNewAction__10NinjaGeckoi",
        Ok(
            "NinjaGecko::ChooseNewAction(int)",
        ),
    ),
    (
        "Init__21RainbowScaleObjectiveP11GameObjDesc",
        Ok(
            "RainbowScaleObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "SetLaunch__2Tyfb",
        Ok(
            "Ty::SetLaunch(float, bool)",
        ),
    ),
    (
        "FlashColorDeinit__12DialogEffect",
        Ok(
            "DialogEffect::FlashColorDeinit(void)",
        ),
    ),
    (
        "Update__3Emu",
        Ok(
            "Emu::Update(void)",
        ),
    ),
    (
        "GetNumSubObjects__7MKWater",
        Ok(
            "MKWater::GetNumSubObjects(void)",
        ),
    ),
    (
        "FlyBackInit__7CaveBat",
        Ok(
            "CaveBat::FlyBackInit(void)",
        ),
    ),
    (
        "CheckRangCollide__7AntHill",
        Ok(
            "AntHill::CheckRangCollide(void)",
        ),
    ),
    (
        "Kin_GetDiscreteTime__FPfT0T0T0",
        Ok(
            "Kin_GetDiscreteTime(float *, float *, float *, float *)",
        ),
    ),
    (
        "ModelRender_FWX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Rocket_Update__9FireWorksP14ParticleSystem",
        Ok(
            "FireWorks::Rocket_Update(ParticleSystem *)",
        ),
    ),
    (
        "MKShadow_BeginScene__Fi",
        Ok(
            "MKShadow_BeginScene(int)",
        ),
    ),
    (
        "DeinitQuickSand__2Ty",
        Ok(
            "Ty::DeinitQuickSand(void)",
        ),
    ),
    (
        "GetDistToWaterSurface__3Rex",
        Ok(
            "Rex::GetDistToWaterSurface(void)",
        ),
    ),
    (
        "_19DialogEffectManager$stringVals",
        Ok(
            "DialogEffectManager::stringVals",
        ),
    ),
    (
        "RequestElementalRang__6Julius",
        Ok(
            "Julius::RequestElementalRang(void)",
        ),
    ),
    (
        "Init__10GCT_CameraP28CameraOverrideCameraLoadInfo",
        Ok(
            "GCT_Camera::Init(CameraOverrideCameraLoadInfo *)",
        ),
    ),
    (
        "LetterBox_Draw__Fv",
        Ok(
            "LetterBox_Draw(void)",
        ),
    ),
    (
        "ChargeRecoveryInit__8LilNeddy",
        Ok(
            "LilNeddy::ChargeRecoveryInit(void)",
        ),
    ),
    (
        "FrontEnd_EnterScreen__F17tagFrontEndScreen",
        Ok(
            "FrontEnd_EnterScreen(tagFrontEndScreen)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z9FrogField",
        Ok(
            "ModuleInfo<FrogField>::Init(void)",
        ),
    ),
    (
        "HeatFlare_On__FPvi",
        Ok(
            "HeatFlare_On(void *, int)",
        ),
    ),
    (
        "DoAnimations__4Jeep",
        Ok(
            "Jeep::DoAnimations(void)",
        ),
    ),
    (
        "Flee__9Barracuda",
        Ok(
            "Barracuda::Flee(void)",
        ),
    ),
    (
        "JumpIdleDeinit__6Wombat",
        Ok(
            "Wombat::JumpIdleDeinit(void)",
        ),
    ),
    (
        "LassoDeinit__9FrillBike",
        Ok(
            "FrillBike::LassoDeinit(void)",
        ),
    ),
    (
        "Hurt__2Ty8HurtType14DDADamageCausebP6Vectorf",
        Ok(
            "Ty::Hurt(HurtType, DDADamageCause, bool, Vector *, float)",
        ),
    ),
    (
        "sceMpegCreate",
        Err(
            NotMangled,
        ),
    ),
    (
        "Fire__9SmallRockP6Vectorb",
        Ok(
            "SmallRock::Fire(Vector *, bool)",
        ),
    ),
    (
        "ResetView__10GameCamera",
        Ok(
            "GameCamera::ResetView(void)",
        ),
    ),
    (
        "RemovePointer__15ObjectiveFinderP6Vector",
        Ok(
            "ObjectiveFinder::RemovePointer(Vector *)",
        ),
    ),
    (
        "_vt$15WaterTankStruct",
        Ok(
            "WaterTankStruct virtual table",
        ),
    ),
    (
        "Idle__6Maurie",
        Ok(
            "Maurie::Idle(void)",
        ),
    ),
    (
        "Update_Swim__10CuttleFish",
        Ok(
            "CuttleFish::Update_Swim(void)",
        ),
    ),
    (
        "Init__8RingoArmP11GameObjDesc",
        Ok(
            "RingoArm::Init(GameObjDesc *)",
        ),
    ),
    (
        "InitIdle__7BushPig",
        Ok(
            "BushPig::InitIdle(void)",
        ),
    ),
    (
        "LaunchTransition__2Ty",
        Ok(
            "Ty::LaunchTransition(void)",
        ),
    ),
    (
        "Death__10ScubaFrill",
        Ok(
            "ScubaFrill::Death(void)",
        ),
    ),
    (
        "TakeOff__9ShadowBat",
        Ok(
            "ShadowBat::TakeOff(void)",
        ),
    ),
    (
        "Deinit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Deinit(void)",
        ),
    ),
    (
        "Init__20WaterfallSprayStructP6VectorT1T1f",
        Ok(
            "WaterfallSprayStruct::Init(Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "Hud_GetZoomerangTurnVel__Fv",
        Ok(
            "Hud_GetZoomerangTurnVel(void)",
        ),
    ),
    (
        "sceSifRemoveRpcQueue",
        Err(
            NotMangled,
        ),
    ),
    (
        "RemoveSbusIntcHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Alert_Update__9BadBoonie",
        Ok(
            "BadBoonie::Alert_Update(void)",
        ),
    ),
    (
        "LassoGetAttachPoint__9FrillBike",
        Ok(
            "FrillBike::LassoGetAttachPoint(void)",
        ),
    ),
    (
        "Update__8FILOListf",
        Ok(
            "FILOList::Update(float)",
        ),
    ),
    (
        "Multiply3x3__6MatrixP6MatrixT1",
        Ok(
            "Matrix::Multiply3x3(Matrix *, Matrix *)",
        ),
    ),
    (
        "InterpolateRot__6VectorP6VectorT1T1ff",
        Ok(
            "Vector::InterpolateRot(Vector *, Vector *, Vector *, float, float)",
        ),
    ),
    (
        "Explode__14CrikeyCanister",
        Ok(
            "CrikeyCanister::Explode(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8ChuteLogPv",
        Ok(
            "ModuleInfo<ChuteLog>::ConstructObject(void *)",
        ),
    ),
    (
        "_vt$11BonusPickup",
        Ok(
            "BonusPickup virtual table",
        ),
    ),
    (
        "TossRockInit__4Bull",
        Ok(
            "Bull::TossRockInit(void)",
        ),
    ),
    (
        "InitFired__9Boomerang",
        Ok(
            "Boomerang::InitFired(void)",
        ),
    ),
    (
        "Attack__14TrapdoorSpider",
        Ok(
            "TrapdoorSpider::Attack(void)",
        ),
    ),
    (
        "Update__10TyFlyField",
        Ok(
            "TyFlyField::Update(void)",
        ),
    ),
    (
        "Draw__6ShadowP6Vectorb",
        Ok(
            "Shadow::Draw(Vector *, bool)",
        ),
    ),
    (
        "AddSyncToDma__7Texture",
        Ok(
            "Texture::AddSyncToDma(void)",
        ),
    ),
    (
        "OmniLight_DeinitModule__Fv",
        Ok(
            "OmniLight_DeinitModule(void)",
        ),
    ),
    (
        "Init__7FlyDescP14ModuleInfoBasePcT2fffb",
        Ok(
            "FlyDesc::Init(ModuleInfoBase *, char *, char *, float, float, float, bool)",
        ),
    ),
    (
        "GameCamera_GetPitch__Fv",
        Ok(
            "GameCamera_GetPitch(void)",
        ),
    ),
    (
        "_dmVector",
        Err(
            NotMangled,
        ),
    ),
    (
        "descr_cast__H1ZP18MobilePlatformDesc_P16MKPropDescriptor_X01",
        Ok(
            "MobilePlatformDesc * descr_cast<MobilePlatformDesc *>(MKPropDescriptor *)",
        ),
    ),
    (
        "Draw__6GasJet",
        Ok(
            "GasJet::Draw(void)",
        ),
    ),
    (
        "Reset__10GameObject",
        Ok(
            "GameObject::Reset(void)",
        ),
    ),
    (
        "MiniGame_A2_Init__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_A2_Init(void)",
        ),
    ),
    (
        "Idle__6Shazza",
        Ok(
            "Shazza::Idle(void)",
        ),
    ),
    (
        "Alert__10BlueTongue",
        Ok(
            "BlueTongue::Alert(void)",
        ),
    ),
    (
        "LoadDone__8MorayEel",
        Ok(
            "MorayEel::LoadDone(void)",
        ),
    ),
    (
        "Message__7CoconutP9MKMessage",
        Ok(
            "Coconut::Message(MKMessage *)",
        ),
    ),
    (
        "Spider_Init__Fv",
        Ok(
            "Spider_Init(void)",
        ),
    ),
    (
        "SuspendThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceScfSetT10kConfig",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11BurningJunkPv",
        Ok(
            "ModuleInfo<BurningJunk>::ConstructObject(void *)",
        ),
    ),
    (
        "Wave__8KoalaKid",
        Ok(
            "KoalaKid::Wave(void)",
        ),
    ),
    (
        "MKShadow_ClearBuffer__Fv",
        Ok(
            "MKShadow_ClearBuffer(void)",
        ),
    ),
    (
        "Reset__8SignPost",
        Ok(
            "SignPost::Reset(void)",
        ),
    ),
    (
        "FirstPt__17WaterSlideSection",
        Ok(
            "WaterSlideSection::FirstPt(void)",
        ),
    ),
    (
        "_7MKWater$maxU",
        Ok(
            "MKWater::maxU",
        ),
    ),
    (
        "Tools_GetCentre__FP5Model",
        Ok(
            "Tools_GetCentre(Model *)",
        ),
    ),
    (
        "_sceIDC",
        Err(
            NotMangled,
        ),
    ),
    (
        "ScrubTurkey_PostUpdate__11ScrubTurkey",
        Ok(
            "ScrubTurkey::ScrubTurkey_PostUpdate(void)",
        ),
    ),
    (
        "DeathInit__8PubeCrab",
        Ok(
            "PubeCrab::DeathInit(void)",
        ),
    ),
    (
        "CalcLength__4FontPc",
        Ok(
            "Font::CalcLength(char *)",
        ),
    ),
    (
        "Update__15YabbyStalactite",
        Ok(
            "YabbyStalactite::Update(void)",
        ),
    ),
    (
        "BarbedWire_End__Fv",
        Ok(
            "BarbedWire_End(void)",
        ),
    ),
    (
        "Update__18ParticleSystemTypeP14ParticleSystem",
        Ok(
            "ParticleSystemType::Update(ParticleSystem *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Dennis",
        Ok(
            "ModuleInfo<Dennis>::Init(void)",
        ),
    ),
    (
        "Video_Update__FP5Video",
        Ok(
            "Video_Update(Video *)",
        ),
    ),
    (
        "Deinit__10ScubaFrill",
        Ok(
            "ScubaFrill::Deinit(void)",
        ),
    ),
    (
        "_vt$8Burnable",
        Ok(
            "Burnable virtual table",
        ),
    ),
    (
        "GetCurrentlyRenderingModel__Fv",
        Ok(
            "GetCurrentlyRenderingModel(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z11KaboomerangPv",
        Ok(
            "ModuleInfo<Kaboomerang>::ConstructObject(void *)",
        ),
    ),
    (
        "Deinit__6Portal",
        Ok(
            "Portal::Deinit(void)",
        ),
    ),
    (
        "Tools_GetGroundLightModel__FP6VectorPif",
        Ok(
            "Tools_GetGroundLightModel(Vector *, int *, float)",
        ),
    ),
    (
        "Alert__5Rhino",
        Ok(
            "Rhino::Alert(void)",
        ),
    ),
    (
        "Init__8AquarangP11GameObjDescP15BoomerangWeapon",
        Ok(
            "Aquarang::Init(GameObjDesc *, BoomerangWeapon *)",
        ),
    ),
    (
        "StaticSpikes_Update__Fv",
        Ok(
            "StaticSpikes_Update(void)",
        ),
    ),
    (
        "Collision_RayCollide__FP6VectorT0P15CollisionResult13CollisionModei",
        Ok(
            "Collision_RayCollide(Vector *, Vector *, CollisionResult *, CollisionMode, int)",
        ),
    ),
    (
        "CreateArrayOfAllTextures__7TexturePi",
        Ok(
            "Texture::CreateArrayOfAllTextures(int *)",
        ),
    ),
    (
        "ModelRender_CFTX_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_vt$11Grasshopper",
        Ok(
            "Grasshopper virtual table",
        ),
    ),
    (
        "Init__20StaticPropDescriptorP14ModuleInfoBasePcT2ii",
        Ok(
            "StaticPropDescriptor::Init(ModuleInfoBase *, char *, char *, int, int)",
        ),
    ),
    (
        "Reset__23BlueTongueRockObjective",
        Ok(
            "BlueTongueRockObjective::Reset(void)",
        ),
    ),
    (
        "GetSavedData__10GameCameraP19CameraDebugSaveInfo",
        Ok(
            "GameCamera::GetSavedData(CameraDebugSaveInfo *)",
        ),
    ),
    (
        "Alert__8MorayEel",
        Ok(
            "MorayEel::Alert(void)",
        ),
    ),
    (
        "GetGameCompletePercent__8GameData",
        Ok(
            "GameData::GetGameCompletePercent(void)",
        ),
    ),
    (
        "_vfprintf_r",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawDebugInfo__7MKWater",
        Ok(
            "MKWater::DrawDebugInfo(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Neddy",
        Ok(
            "ModuleInfo<Neddy> virtual table",
        ),
    ),
    (
        "ReturnInit__5Neddy",
        Ok(
            "Neddy::ReturnInit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z8Elevator",
        Ok(
            "ModuleInfo<Elevator> virtual table",
        ),
    ),
    (
        "Firing__15BoomerangWeapon",
        Ok(
            "BoomerangWeapon::Firing(void)",
        ),
    ),
    (
        "gYAxis",
        Err(
            NotMangled,
        ),
    ),
    (
        "JoinThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z21RainbowScaleObjective",
        Ok(
            "ModuleInfo<RainbowScaleObjective>::Init(void)",
        ),
    ),
    (
        "Deinit__7UIModel",
        Ok(
            "UIModel::Deinit(void)",
        ),
    ),
    (
        "UpdateShadow__5Torch",
        Ok(
            "Torch::UpdateShadow(void)",
        ),
    ),
    (
        "IsBossLevel__9LevelData11LevelNumber",
        Ok(
            "LevelData::IsBossLevel(LevelNumber)",
        ),
    ),
    (
        "_flushBuf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__16A1FrillObjectiveP9MKMessage",
        Ok(
            "A1FrillObjective::Message(MKMessage *)",
        ),
    ),
    (
        "LoadLine__11TriggerPropP12KromeIniLine",
        Ok(
            "TriggerProp::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "MiniGame_B3_Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B3_Deinit(void)",
        ),
    ),
    (
        "gAssertBool",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__17GalleryScreenData",
        Ok(
            "GalleryScreenData::Draw(void)",
        ),
    ),
    (
        "bReedsLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__4DrumP11GameObjDesc",
        Ok(
            "Drum::Init(GameObjDesc *)",
        ),
    ),
    (
        "_9Animation$updateRate",
        Ok(
            "Animation::updateRate",
        ),
    ),
    (
        "ModelRender_CF_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "JumpLand__6Wombat",
        Ok(
            "Wombat::JumpLand(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z6Muddie",
        Ok(
            "ModuleInfo<Muddie> virtual table",
        ),
    ),
    (
        "GetContouredSourceY__10GameCamerabf",
        Ok(
            "GameCamera::GetContouredSourceY(bool, float)",
        ),
    ),
    (
        "Windmill_Draw__Fv",
        Ok(
            "Windmill_Draw(void)",
        ),
    ),
    (
        "_GLOBAL_$I$PipePart_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to PipePart_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ExpandScratchPad",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__5RhinoP9MKMessage",
        Ok(
            "Rhino::Message(MKMessage *)",
        ),
    ),
    (
        "Reset__3Sly",
        Ok(
            "Sly::Reset(void)",
        ),
    ),
    (
        "WhiteBatAttack__9ShadowBat",
        Ok(
            "ShadowBat::WhiteBatAttack(void)",
        ),
    ),
    (
        "LoadLine__12FlameThrowerP12KromeIniLine",
        Ok(
            "FlameThrower::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "sceInetOpen",
        Err(
            NotMangled,
        ),
    ),
    (
        "InitFindItem__2Ty",
        Ok(
            "Ty::InitFindItem(void)",
        ),
    ),
    (
        "sceIpuSync",
        Err(
            NotMangled,
        ),
    ),
    (
        "List__7Texture",
        Ok(
            "Texture::List(void)",
        ),
    ),
    (
        "_vt$11SnowGunAmmo",
        Ok(
            "SnowGunAmmo virtual table",
        ),
    ),
    (
        "StopInit__6Wombat",
        Ok(
            "Wombat::StopInit(void)",
        ),
    ),
    (
        "UpdateParticlePositions__9FrillBike",
        Ok(
            "FrillBike::UpdateParticlePositions(void)",
        ),
    ),
    (
        "UnderWaterSelectIdleOrMove__2Ty",
        Ok(
            "Ty::UnderWaterSelectIdleOrMove(void)",
        ),
    ),
    (
        "ScaleIn__19SpecialPickupStruct",
        Ok(
            "SpecialPickupStruct::ScaleIn(void)",
        ),
    ),
    (
        "IsAbleToGlide__2Ty",
        Ok(
            "Ty::IsAbleToGlide(void)",
        ),
    ),
    (
        "_GLOBAL_$I$BonusPickup_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to BonusPickup_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceDmaDebugMode",
        Err(
            NotMangled,
        ),
    ),
    (
        "Update__13MusicalIcicle",
        Ok(
            "MusicalIcicle::Update(void)",
        ),
    ),
    (
        "InverseSimple__6Matrix",
        Ok(
            "Matrix::InverseSimple(void)",
        ),
    ),
    (
        "IsPastPoint__17WaterSlideSectionP6VectorT1",
        Ok(
            "WaterSlideSection::IsPastPoint(Vector *, Vector *)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z5Ringo",
        Ok(
            "ModuleInfo<Ringo> virtual table",
        ),
    ),
    (
        "globalMessageStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__13RenderTexture",
        Ok(
            "RenderTexture::Deinit(void)",
        ),
    ),
    (
        "CheckForHit__8SignPost",
        Ok(
            "SignPost::CheckForHit(void)",
        ),
    ),
    (
        "Tools_ColorToABGR__FP6Vector",
        Ok(
            "Tools_ColorToABGR(Vector *)",
        ),
    ),
    (
        "__ti17__class_type_info",
        Ok(
            "__class_type_info type_info node",
        ),
    ),
    (
        "AlertInit__6Muddie",
        Ok(
            "Muddie::AlertInit(void)",
        ),
    ),
    (
        "Init__9GreySmokeP6Vector",
        Ok(
            "GreySmoke::Init(Vector *)",
        ),
    ),
    (
        "descr_cast__H1ZP20StaticPropDescriptor_P16MKPropDescriptor_X01",
        Ok(
            "StaticPropDescriptor * descr_cast<StaticPropDescriptor *>(MKPropDescriptor *)",
        ),
    ),
    (
        "PatrolInit__11FrillLizard",
        Ok(
            "FrillLizard::PatrolInit(void)",
        ),
    ),
    (
        "FrontEnd_Gallery_Init__Fv",
        Ok(
            "FrontEnd_Gallery_Init(void)",
        ),
    ),
    (
        "GetSubTitle__12DialogPlayer",
        Ok(
            "DialogPlayer::GetSubTitle(void)",
        ),
    ),
    (
        "RoarInit__4Bull",
        Ok(
            "Bull::RoarInit(void)",
        ),
    ),
    (
        "ShakeCamera_Update__10GameCamera",
        Ok(
            "GameCamera::ShakeCamera_Update(void)",
        ),
    ),
    (
        "Draw__7C3Actor",
        Ok(
            "C3Actor::Draw(void)",
        ),
    ),
    (
        "Move__6SpiderRC6VectorRC21CritterCruiseMoveInfo",
        Ok(
            "Spider::Move(Vector const &, CritterCruiseMoveInfo const &)",
        ),
    ),
    (
        "Level_ParsePos__FP12KromeIniLineP6Vector",
        Ok(
            "Level_ParsePos(KromeIniLine *, Vector *)",
        ),
    ),
    (
        "LoadLine__3SlyP12KromeIniLine",
        Ok(
            "Sly::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "LoadDone__13MusicalIcicle",
        Ok(
            "MusicalIcicle::LoadDone(void)",
        ),
    ),
    (
        "Update__8CableCar",
        Ok(
            "CableCar::Update(void)",
        ),
    ),
    (
        "StealEnemy__12EnemySpawner",
        Ok(
            "EnemySpawner::StealEnemy(void)",
        ),
    ),
    (
        "LoadLine__6WombatP12KromeIniLine",
        Ok(
            "Wombat::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "_7MKWater$bDrawSineWave",
        Ok(
            "MKWater::bDrawSineWave",
        ),
    ),
    (
        "_vt$3Bat",
        Ok(
            "Bat virtual table",
        ),
    ),
    (
        "ModelRender_FLO1ST_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z7KenOathPv",
        Ok(
            "ModuleInfo<KenOath>::ConstructObject(void *)",
        ),
    ),
    (
        "Set__27CommonGameObjFlagsComponent18CommonGameObjFlags",
        Ok(
            "CommonGameObjFlagsComponent::Set(CommonGameObjFlags)",
        ),
    ),
    (
        "cameraINI",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddGif_AD_COLCLAMP__3Dmal",
        Ok(
            "Dma::AddGif_AD_COLCLAMP(long)",
        ),
    ),
    (
        "Init__20WaterfallPointStructP6Vector",
        Ok(
            "WaterfallPointStruct::Init(Vector *)",
        ),
    ),
    (
        "WalkHome__11FrillLizard",
        Ok(
            "FrillLizard::WalkHome(void)",
        ),
    ),
    (
        "spawnedGemList",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadLine__13DDACheckpointP12KromeIniLine",
        Ok(
            "DDACheckpoint::LoadLine(KromeIniLine *)",
        ),
    ),
    (
        "pWeatherTypeStrs",
        Err(
            NotMangled,
        ),
    ),
    (
        "Sound_GetSPUMemAvailable",
        Err(
            NotMangled,
        ),
    ),
    (
        "CalcCommonVertexData__11MKWaterPropP14Water_TriStrip",
        Ok(
            "MKWaterProp::CalcCommonVertexData(Water_TriStrip *)",
        ),
    ),
    (
        "sceSifResetIop",
        Err(
            NotMangled,
        ),
    ),
    (
        "Model_DrawCpu_Simple__FP6Vectori",
        Ok(
            "Model_DrawCpu_Simple(Vector *, int)",
        ),
    ),
    (
        "IceAttack__6Fluffy",
        Ok(
            "Fluffy::IceAttack(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Deinit__8Talisman",
        Ok(
            "global constructors keyed to Talisman::Deinit(void)",
        ),
    ),
    (
        "sceTtyRead",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaPutStallAddr",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKPackage_InitModule__Fv",
        Ok(
            "MKPackage_InitModule(void)",
        ),
    ),
    (
        "Deinit__5Image",
        Ok(
            "Image::Deinit(void)",
        ),
    ),
    (
        "Reset__7SnowGun",
        Ok(
            "SnowGun::Reset(void)",
        ),
    ),
    (
        "Message__5SkinkP9MKMessage",
        Ok(
            "Skink::Message(MKMessage *)",
        ),
    ),
    (
        "SetPgifHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Draw__14ParticleSystem",
        Ok(
            "ParticleSystem::Draw(void)",
        ),
    ),
    (
        "Model_GetStrip__FP13ModelTemplateiii",
        Ok(
            "Model_GetStrip(ModelTemplate *, int, int, int)",
        ),
    ),
    (
        "LeapInit__10NinjaGecko",
        Ok(
            "NinjaGecko::LeapInit(void)",
        ),
    ),
    (
        "ChaseAlongsideInit__9FrillBike",
        Ok(
            "FrillBike::ChaseAlongsideInit(void)",
        ),
    ),
    (
        "EnemySpawner_LoadResources__FP8KromeIni",
        Ok(
            "EnemySpawner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Deinit__13SoundMaterial",
        Ok(
            "SoundMaterial::Deinit(void)",
        ),
    ),
    (
        "Init__16CheckpointStructP11GameObjDesc",
        Ok(
            "CheckpointStruct::Init(GameObjDesc *)",
        ),
    ),
    (
        "ReachedEndOfRoll__7Boulder",
        Ok(
            "Boulder::ReachedEndOfRoll(void)",
        ),
    ),
    (
        "PrevPoint__11PathManagerb",
        Ok(
            "PathManager::PrevPoint(bool)",
        ),
    ),
    (
        "MiniGame_C3_Deinit__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C3_Deinit(void)",
        ),
    ),
    (
        "Create__6BubbleP6Vectorffff",
        Ok(
            "Bubble::Create(Vector *, float, float, float, float)",
        ),
    ),
    (
        "Draw__14Blitter_Line3Dif",
        Ok(
            "Blitter_Line3D::Draw(int, float)",
        ),
    ),
    (
        "Idle__6Fluffy",
        Ok(
            "Fluffy::Idle(void)",
        ),
    ),
    (
        "Crash__9FrillBike",
        Ok(
            "FrillBike::Crash(void)",
        ),
    ),
    (
        "InitLassoPullIn__5Lasso",
        Ok(
            "Lasso::InitLassoPullIn(void)",
        ),
    ),
    (
        "Deinit__16SynkerBlueTongue",
        Ok(
            "SynkerBlueTongue::Deinit(void)",
        ),
    ),
    (
        "Sound_GetID",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnChomp__17TyParticleManagerP6Vectorf",
        Ok(
            "TyParticleManager::SpawnChomp(Vector *, float)",
        ),
    ),
    (
        "Update__11BaseCritter",
        Ok(
            "BaseCritter::Update(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11ThinIceProp",
        Ok(
            "ModuleInfo<ThinIceProp> virtual table",
        ),
    ),
    (
        "Particle_KickUpParticle_Create__FPP14ParticleSystemP6VectorT1ffi",
        Ok(
            "Particle_KickUpParticle_Create(ParticleSystem **, Vector *, Vector *, float, float, int)",
        ),
    ),
    (
        "TakeOff__6Maurie",
        Ok(
            "Maurie::TakeOff(void)",
        ),
    ),
    (
        "Update__13TreasureChest",
        Ok(
            "TreasureChest::Update(void)",
        ),
    ),
    (
        "Init__10WarpFlowerP11GameObjDesc",
        Ok(
            "WarpFlower::Init(GameObjDesc *)",
        ),
    ),
    (
        "Reset__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::Reset(void)",
        ),
    ),
    (
        "ProjectOnGround__7BoulderP6VectorT1T1",
        Ok(
            "Boulder::ProjectOnGround(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "objectManager",
        Err(
            NotMangled,
        ),
    ),
    (
        "Underwater_Deinit__10GameCamera",
        Ok(
            "GameCamera::Underwater_Deinit(void)",
        ),
    ),
    (
        "BarbedWire_Init__Fv",
        Ok(
            "BarbedWire_Init(void)",
        ),
    ),
    (
        "SetNumSymbols__8TyHealthi",
        Ok(
            "TyHealth::SetNumSymbols(int)",
        ),
    ),
    (
        "Init__17BoomerangAnimInfo13BoomerangSide",
        Ok(
            "BoomerangAnimInfo::Init(BoomerangSide)",
        ),
    ),
    (
        "__register_frame_info_table",
        Err(
            InvalidSpecialMethod(
                "register_frame_info_table",
            ),
        ),
    ),
    (
        "_11BunyipElder$nScaleCheckDelay",
        Ok(
            "BunyipElder::nScaleCheckDelay",
        ),
    ),
    (
        "Death__9Barracuda",
        Ok(
            "Barracuda::Death(void)",
        ),
    ),
    (
        "ScaredInit__5Yabby",
        Ok(
            "Yabby::ScaredInit(void)",
        ),
    ),
    (
        "DamageTy__11EnemyObject8HurtTypeP6Vector",
        Ok(
            "EnemyObject::DamageTy(HurtType, Vector *)",
        ),
    ),
    (
        "TimeAttack__4Jeep",
        Ok(
            "Jeep::TimeAttack(void)",
        ),
    ),
    (
        "JogWalkUpdate__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::JogWalkUpdate(void)",
        ),
    ),
    (
        "ModelRender_CFS_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "scePadSetWarningLevel",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_AExy_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "_8MorayEel$nEelBody",
        Ok(
            "MorayEel::nEelBody",
        ),
    ),
    (
        "IdleWaterShake__2Ty",
        Ok(
            "Ty::IdleWaterShake(void)",
        ),
    ),
    (
        "Draw__5Skink",
        Ok(
            "Skink::Draw(void)",
        ),
    ),
    (
        "Update__8UIButton",
        Ok(
            "UIButton::Update(void)",
        ),
    ),
    (
        "GetPos__9SoundProp",
        Ok(
            "SoundProp::GetPos(void)",
        ),
    ),
    (
        "RopeHasSnapped__3Emu",
        Ok(
            "Emu::RopeHasSnapped(void)",
        ),
    ),
    (
        "TurnRunDeinit__16BreakAndTurnData",
        Ok(
            "BreakAndTurnData::TurnRunDeinit(void)",
        ),
    ),
    (
        "sceDeci2ExRecv",
        Err(
            NotMangled,
        ),
    ),
    (
        "_fbss",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_SaveGame_Deinit__Fv",
        Ok(
            "PauseScreen_SaveGame_Deinit(void)",
        ),
    ),
    (
        "UpdateNormalAndForward__5Gecko",
        Ok(
            "Gecko::UpdateNormalAndForward(void)",
        ),
    ),
    (
        "Push__5Shark",
        Ok(
            "Shark::Push(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z3SlyPv",
        Ok(
            "ModuleInfo<Sly>::ConstructObject(void *)",
        ),
    ),
    (
        "Init__13PhysicsObjectP15CollisionObject",
        Ok(
            "PhysicsObject::Init(CollisionObject *)",
        ),
    ),
    (
        "Deinit__5Skink",
        Ok(
            "Skink::Deinit(void)",
        ),
    ),
    (
        "InitFall__14WaterSlideData",
        Ok(
            "WaterSlideData::InitFall(void)",
        ),
    ),
    (
        "Crc_Update__FUiPCvi",
        Ok(
            "Crc_Update(unsigned int, void const *, int)",
        ),
    ),
    (
        "SonarAttack__9ShadowBat",
        Ok(
            "ShadowBat::SonarAttack(void)",
        ),
    ),
    (
        "IdleState__4Frog",
        Ok(
            "Frog::IdleState(void)",
        ),
    ),
    (
        "sceAddDrv",
        Err(
            NotMangled,
        ),
    ),
    (
        "_$_10bad_typeid",
        Ok(
            "bad_typeid::~bad_typeid(void)",
        ),
    ),
    (
        "HandleRangMsg__7FurnaceP16BoomerangMessage",
        Ok(
            "Furnace::HandleRangMsg(BoomerangMessage *)",
        ),
    ),
    (
        "SoundBank_PlayDialogMusic__Fb",
        Ok(
            "SoundBank_PlayDialogMusic(bool)",
        ),
    ),
    (
        "PullLasso__7BushPig",
        Ok(
            "BushPig::PullLasso(void)",
        ),
    ),
    (
        "Init__8PlatformP11GameObjDesc",
        Ok(
            "Platform::Init(GameObjDesc *)",
        ),
    ),
    (
        "Dialog_DrawSubtitle__Fv",
        Ok(
            "Dialog_DrawSubtitle(void)",
        ),
    ),
    (
        "_GLOBAL_$I$KoalaKid_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to KoalaKid_LoadResources(KromeIni *)",
        ),
    ),
    (
        "__sigtramp",
        Err(
            InvalidSpecialMethod(
                "sigtramp",
            ),
        ),
    ),
    (
        "PauseScreen_DeinitLevel__Fv",
        Ok(
            "PauseScreen_DeinitLevel(void)",
        ),
    ),
    (
        "Load__18ElevatorDescriptorP8KromeIni",
        Ok(
            "ElevatorDescriptor::Load(KromeIni *)",
        ),
    ),
    (
        "Str_FindChar__FPci",
        Ok(
            "Str_FindChar(char *, int)",
        ),
    ),
    (
        "Fire__5Leech",
        Ok(
            "Leech::Fire(void)",
        ),
    ),
    (
        "SetAdjHeight__21GameCameraPointsDeltafbf",
        Ok(
            "GameCameraPointsDelta::SetAdjHeight(float, bool, float)",
        ),
    ),
    (
        "Particle_BullSplash_Create__FPP14ParticleSystemP6VectorT1f",
        Ok(
            "Particle_BullSplash_Create(ParticleSystem **, Vector *, Vector *, float)",
        ),
    ),
    (
        "ObjectiveProp_ResetActive__Fv",
        Ok(
            "ObjectiveProp_ResetActive(void)",
        ),
    ),
    (
        "Add__12SpeedUpCrateP6Vectorff",
        Ok(
            "SpeedUpCrate::Add(Vector *, float, float)",
        ),
    ),
    (
        "_alalcFree",
        Err(
            NotMangled,
        ),
    ),
    (
        "AddPoly__17MKShadow_AnimatedP12MKShadowVertT1T1",
        Ok(
            "MKShadow_Animated::AddPoly(MKShadowVert *, MKShadowVert *, MKShadowVert *)",
        ),
    ),
    (
        "Create__9StarTrailP6VectorT1f",
        Ok(
            "StarTrail::Create(Vector *, Vector *, float)",
        ),
    ),
    (
        "InitAlert__5Rhino",
        Ok(
            "Rhino::InitAlert(void)",
        ),
    ),
    (
        "GetZone__9LevelData11LevelNumber",
        Ok(
            "LevelData::GetZone(LevelNumber)",
        ),
    ),
    (
        "_GLOBAL_$I$StalactiteTrap_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to StalactiteTrap_LoadResources(KromeIni *)",
        ),
    ),
    (
        "FireDrum_GetNearest__FP6Vector",
        Ok(
            "FireDrum_GetNearest(Vector *)",
        ),
    ),
    (
        "Update__7C3Chest",
        Ok(
            "C3Chest::Update(void)",
        ),
    ),
    (
        "Update__7Pontoon",
        Ok(
            "Pontoon::Update(void)",
        ),
    ),
    (
        "Deinit__7AntHill",
        Ok(
            "AntHill::Deinit(void)",
        ),
    ),
    (
        "bStaticSpikesLoaded",
        Err(
            NotMangled,
        ),
    ),
    (
        "TestLOD__10LODManageri",
        Ok(
            "LODManager::TestLOD(int)",
        ),
    ),
    (
        "ModelRender_CFMT_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "FileSys_DeinitModule__Fv",
        Ok(
            "FileSys_DeinitModule(void)",
        ),
    ),
    (
        "ParseSoundEvents__17SoundEventManagerP8KromeIni",
        Ok(
            "SoundEventManager::ParseSoundEvents(KromeIni *)",
        ),
    ),
    (
        "Setup__19SaveGameInfoDisplayff",
        Ok(
            "SaveGameInfoDisplay::Setup(float, float)",
        ),
    ),
    (
        "PauseScreen_GameTotals_Update__Fv",
        Ok(
            "PauseScreen_GameTotals_Update(void)",
        ),
    ),
    (
        "MakeHeroBlink__2Ty",
        Ok(
            "Ty::MakeHeroBlink(void)",
        ),
    ),
    (
        "sceInetAbort",
        Err(
            NotMangled,
        ),
    ),
    (
        "__register_frame_info",
        Err(
            InvalidSpecialMethod(
                "register_frame_info",
            ),
        ),
    ),
    (
        "Reset__22MusicalIcicleObjective",
        Ok(
            "MusicalIcicleObjective::Reset(void)",
        ),
    ),
    (
        "_$_17__array_type_info",
        Ok(
            "__array_type_info::~__array_type_info(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Gecko_LoadResources__Fv",
        Ok(
            "global constructors keyed to Gecko_LoadResources(void)",
        ),
    ),
    (
        "_sceCd_scmdrdata",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__18WaterPipeObjectiveP11GameObjDesc",
        Ok(
            "WaterPipeObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "BarbedWire_LoadResources__Fv",
        Ok(
            "BarbedWire_LoadResources(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z6Geyser",
        Ok(
            "ModuleInfo<Geyser>::Init(void)",
        ),
    ),
    (
        "InitTimeAttack__4Jeep",
        Ok(
            "Jeep::InitTimeAttack(void)",
        ),
    ),
    (
        "_copyRefImage",
        Err(
            NotMangled,
        ),
    ),
    (
        "ShatteredInit__11ThinIceProp",
        Ok(
            "ThinIceProp::ShatteredInit(void)",
        ),
    ),
    (
        "StoreCollision__FP15CollisionResult",
        Ok(
            "StoreCollision(CollisionResult *)",
        ),
    ),
    (
        "InitFromMatDefs__8MaterialPc",
        Ok(
            "Material::InitFromMatDefs(char *)",
        ),
    ),
    (
        "DefeatedInit__3Sly",
        Ok(
            "Sly::DefeatedInit(void)",
        ),
    ),
    (
        "ModelRender_F_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetDesc__19BlitterCritterField",
        Ok(
            "BlitterCritterField::GetDesc(void)",
        ),
    ),
    (
        "Hop__5Rufus",
        Ok(
            "Rufus::Hop(void)",
        ),
    ),
    (
        "Crash__9Speedboat",
        Ok(
            "Speedboat::Crash(void)",
        ),
    ),
    (
        "IdleInit__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::IdleInit(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z6AuroraPv",
        Ok(
            "ModuleInfo<Aurora>::ConstructObject(void *)",
        ),
    ),
    (
        "UpdateNodes__6Crikey",
        Ok(
            "Crikey::UpdateNodes(void)",
        ),
    ),
    (
        "Init__7WallabyP11GameObjDesc",
        Ok(
            "Wallaby::Init(GameObjDesc *)",
        ),
    ),
    (
        "_$_13bad_exception",
        Ok(
            "bad_exception::~bad_exception(void)",
        ),
    ),
    (
        "ThrowBurningJunkInit__11FrillLizard",
        Ok(
            "FrillLizard::ThrowBurningJunkInit(void)",
        ),
    ),
    (
        "TyInOkState__11ThinIceProp",
        Ok(
            "ThinIceProp::TyInOkState(void)",
        ),
    ),
    (
        "Tools_DebugDrawCoordinateSystem__FR6Matrixf",
        Ok(
            "Tools_DebugDrawCoordinateSystem(Matrix &, float)",
        ),
    ),
    (
        "Hud_Update__Fv",
        Ok(
            "Hud_Update(void)",
        ),
    ),
    (
        "Deinit__5Lasso",
        Ok(
            "Lasso::Deinit(void)",
        ),
    ),
    (
        "LoadDone__7LilyPad",
        Ok(
            "LilyPad::LoadDone(void)",
        ),
    ),
    (
        "Idle__5Rhino",
        Ok(
            "Rhino::Idle(void)",
        ),
    ),
    (
        "Reset__6Basket",
        Ok(
            "Basket::Reset(void)",
        ),
    ),
    (
        "SetPoints__9QuadraticP6VectorT1T1",
        Ok(
            "Quadratic::SetPoints(Vector *, Vector *, Vector *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z7IceRamp",
        Ok(
            "ModuleInfo<IceRamp>::Init(void)",
        ),
    ),
    (
        "ChargeTransition__7BushPig",
        Ok(
            "BushPig::ChargeTransition(void)",
        ),
    ),
    (
        "sceSifLoadElfPart",
        Err(
            NotMangled,
        ),
    ),
    (
        "_14ParticleSystem$bPaused",
        Ok(
            "ParticleSystem::bPaused",
        ),
    ),
    (
        "pCounterModelTrianglesInScene",
        Err(
            NotMangled,
        ),
    ),
    (
        "File_FileServerFilename__FPc",
        Ok(
            "File_FileServerFilename(char *)",
        ),
    ),
    (
        "File_Read__FiPvii",
        Ok(
            "File_Read(int, void *, int, int)",
        ),
    ),
    (
        "Follow__9AuroraKid",
        Ok(
            "AuroraKid::Follow(void)",
        ),
    ),
    (
        "SetTargetLinePos__24GCT_WaypointPlaneManagerP6VectoriiT1",
        Ok(
            "GCT_WaypointPlaneManager::SetTargetLinePos(Vector *, int, int, Vector *)",
        ),
    ),
    (
        "PlayerAdjust_Deinit__10GameCamera",
        Ok(
            "GameCamera::PlayerAdjust_Deinit(void)",
        ),
    ),
    (
        "Update__10LavaBurner",
        Ok(
            "LavaBurner::Update(void)",
        ),
    ),
    (
        "GetDesc__13AnimatingProp",
        Ok(
            "AnimatingProp::GetDesc(void)",
        ),
    ),
    (
        "Deinit__11ThinIceProp",
        Ok(
            "ThinIceProp::Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$_8Elevator$bStateChange",
        Ok(
            "global constructors keyed to Elevator::bStateChange",
        ),
    ),
    (
        "Reset__8SnowPile",
        Ok(
            "SnowPile::Reset(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Aurora_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Aurora_LoadResources(KromeIni *)",
        ),
    ),
    (
        "sceInetGetLog",
        Err(
            NotMangled,
        ),
    ),
    (
        "Spawn__13RainbowEffectP6VectorT1",
        Ok(
            "RainbowEffect::Spawn(Vector *, Vector *)",
        ),
    ),
    (
        "PauseScreen_OptionScreen_Deinit__Fv",
        Ok(
            "PauseScreen_OptionScreen_Deinit(void)",
        ),
    ),
    (
        "CpuConfig",
        Err(
            NotMangled,
        ),
    ),
    (
        "close",
        Err(
            NotMangled,
        ),
    ),
    (
        "LoadDone__23BlueTongueRockObjective",
        Ok(
            "BlueTongueRockObjective::LoadDone(void)",
        ),
    ),
    (
        "Assign__6CattleP13CritterField2",
        Ok(
            "Cattle::Assign(CritterField2 *)",
        ),
    ),
    (
        "IdleSwim__2Ty",
        Ok(
            "Ty::IdleSwim(void)",
        ),
    ),
    (
        "_GLOBAL_$I$LilyPad_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to LilyPad_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Input_ForceInitialise__Fv",
        Ok(
            "Input_ForceInitialise(void)",
        ),
    ),
    (
        "ModelRender_FO1T_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "DrawStaticProps__14MKSceneManageri",
        Ok(
            "MKSceneManager::DrawStaticProps(int)",
        ),
    ),
    (
        "Video_CbRestartDMA__FP7sceMpegP13sceMpegCbDataP5Video",
        Ok(
            "Video_CbRestartDMA(sceMpeg *, sceMpegCbData *, Video *)",
        ),
    ),
    (
        "_vt$3Fly",
        Ok(
            "Fly virtual table",
        ),
    ),
    (
        "GetPos__11EnemyObject",
        Ok(
            "EnemyObject::GetPos(void)",
        ),
    ),
    (
        "FrontEnd_NewGame_Update__Fv",
        Ok(
            "FrontEnd_NewGame_Update(void)",
        ),
    ),
    (
        "InitIdleSurfaceSwim__2Ty",
        Ok(
            "Ty::InitIdleSurfaceSwim(void)",
        ),
    ),
    (
        "Reset__16A1FrillObjective",
        Ok(
            "A1FrillObjective::Reset(void)",
        ),
    ),
    (
        "BushPig_Draw__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::BushPig_Draw(void)",
        ),
    ),
    (
        "MiniGame_B1_Init__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_B1_Init(void)",
        ),
    ),
    (
        "InitSlow__14WaterSlideData",
        Ok(
            "WaterSlideData::InitSlow(void)",
        ),
    ),
    (
        "SpeedLinesDraw__2Ty",
        Ok(
            "Ty::SpeedLinesDraw(void)",
        ),
    ),
    (
        "LoadDone__4Bull",
        Ok(
            "Bull::LoadDone(void)",
        ),
    ),
    (
        "LoadDone__12TyAttributes",
        Ok(
            "TyAttributes::LoadDone(void)",
        ),
    ),
    (
        "Draw__11Blitter_Trii",
        Ok(
            "Blitter_Tri::Draw(int)",
        ),
    ),
    (
        "Reset__7SnowRoo",
        Ok(
            "SnowRoo::Reset(void)",
        ),
    ),
    (
        "Init__15TurningPlatformP11GameObjDesc",
        Ok(
            "TurningPlatform::Init(GameObjDesc *)",
        ),
    ),
    (
        "SpawnBreathMist__17TyParticleManagerP6VectorT1f",
        Ok(
            "TyParticleManager::SpawnBreathMist(Vector *, Vector *, float)",
        ),
    ),
    (
        "sceSifLoadFileReset",
        Err(
            NotMangled,
        ),
    ),
    (
        "PE_BiteGlow_Update__FP14ParticleSystem",
        Ok(
            "PE_BiteGlow_Update(ParticleSystem *)",
        ),
    ),
    (
        "DeinitLassoSnapped__5Lasso",
        Ok(
            "Lasso::DeinitLassoSnapped(void)",
        ),
    ),
    (
        "MKWaterRender_WSEMTMFL2_CodeEnd",
        Err(
            NotMangled,
        ),
    ),
    (
        "Particle_Ice_Init__FPP14ParticleSystemP6Vector",
        Ok(
            "Particle_Ice_Init(ParticleSystem **, Vector *)",
        ),
    ),
    (
        "EndLife__12ThrowingStar",
        Ok(
            "ThrowingStar::EndLife(void)",
        ),
    ),
    (
        "Kin_GetAcceleration__FPfT0T0T0",
        Ok(
            "Kin_GetAcceleration(float *, float *, float *, float *)",
        ),
    ),
    (
        "Init__6SheilaP11GameObjDesc",
        Ok(
            "Sheila::Init(GameObjDesc *)",
        ),
    ),
    (
        "Retreating__8MorayEel",
        Ok(
            "MorayEel::Retreating(void)",
        ),
    ),
    (
        "RenderTexture_WaterSlideEnd__Fv",
        Ok(
            "RenderTexture_WaterSlideEnd(void)",
        ),
    ),
    (
        "AirToWaterTransition__2Ty",
        Ok(
            "Ty::AirToWaterTransition(void)",
        ),
    ),
    (
        "__ti19__builtin_type_info",
        Ok(
            "__builtin_type_info type_info node",
        ),
    ),
    (
        "Draw__14Water_TriStripi",
        Ok(
            "Water_TriStrip::Draw(int)",
        ),
    ),
    (
        "Reset__5Skink",
        Ok(
            "Skink::Reset(void)",
        ),
    ),
    (
        "SearchInit__4Bull",
        Ok(
            "Bull::SearchInit(void)",
        ),
    ),
    (
        "__eh_alloc",
        Err(
            InvalidSpecialMethod(
                "eh_alloc",
            ),
        ),
    ),
    (
        "LoadDone__9WaterPipe",
        Ok(
            "WaterPipe::LoadDone(void)",
        ),
    ),
    (
        "Translation_GetLanguageName__F19TranslationLanguage",
        Ok(
            "Translation_GetLanguageName(TranslationLanguage)",
        ),
    ),
    (
        "Bite__6TyBite",
        Ok(
            "TyBite::Bite(void)",
        ),
    ),
    (
        "_GLOBAL_$I$PickupCounter_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to PickupCounter_LoadResources(KromeIni *)",
        ),
    ),
    (
        "IdleInit__3Rex",
        Ok(
            "Rex::IdleInit(void)",
        ),
    ),
    (
        "Deinit__3Gem",
        Ok(
            "Gem::Deinit(void)",
        ),
    ),
    (
        "FlashColorInit__12DialogEffect",
        Ok(
            "DialogEffect::FlashColorInit(void)",
        ),
    ),
    (
        "ProcessCommandLine__Fv",
        Ok(
            "ProcessCommandLine(void)",
        ),
    ),
    (
        "FreeResources__2Ty",
        Ok(
            "Ty::FreeResources(void)",
        ),
    ),
    (
        "gpGrassMixTable",
        Err(
            NotMangled,
        ),
    ),
    (
        "FlyIn__6Maurie",
        Ok(
            "Maurie::FlyIn(void)",
        ),
    ),
    (
        "Init__10TumbleWeedP11GameObjDesc",
        Ok(
            "TumbleWeed::Init(GameObjDesc *)",
        ),
    ),
    (
        "_GLOBAL_$I$LoadDone__6Shazza",
        Ok(
            "global constructors keyed to Shazza::LoadDone(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z5RufusPv",
        Ok(
            "ModuleInfo<Rufus>::ConstructObject(void *)",
        ),
    ),
    (
        "Load__18MovementDescriptorP8KromeIniPc",
        Ok(
            "MovementDescriptor::Load(KromeIni *, char *)",
        ),
    ),
    (
        "Init__21WaterfallStreamStructP6VectorT1",
        Ok(
            "WaterfallStreamStruct::Init(Vector *, Vector *)",
        ),
    ),
    (
        "SpawnGhost__17TyParticleManagerP6Vector",
        Ok(
            "TyParticleManager::SpawnGhost(Vector *)",
        ),
    ),
    (
        "ResolveHit__11SnowGunAmmo",
        Ok(
            "SnowGunAmmo::ResolveHit(void)",
        ),
    ),
    (
        "DieInit__5Skink",
        Ok(
            "Skink::DieInit(void)",
        ),
    ),
    (
        "SighInit__8KoalaKid",
        Ok(
            "KoalaKid::SighInit(void)",
        ),
    ),
    (
        "LoadDone__11CrateStruct",
        Ok(
            "CrateStruct::LoadDone(void)",
        ),
    ),
    (
        "SetUVs__7UIImageffff",
        Ok(
            "UIImage::SetUVs(float, float, float, float)",
        ),
    ),
    (
        "_vt$12PlatformDesc",
        Ok(
            "PlatformDesc virtual table",
        ),
    ),
    (
        "Init__6JuliusP11GameObjDesc",
        Ok(
            "Julius::Init(GameObjDesc *)",
        ),
    ),
    (
        "Init__5GeckoP11GameObjDesc",
        Ok(
            "Gecko::Init(GameObjDesc *)",
        ),
    ),
    (
        "Friend_LoadResources__FP8KromeIni",
        Ok(
            "Friend_LoadResources(KromeIni *)",
        ),
    ),
    (
        "renderTypeStrings",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8PipePart",
        Ok(
            "ModuleInfo<PipePart>::Init(void)",
        ),
    ),
    (
        "AddGif_AD_MIPTBP2_2__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_AD_MIPTBP2_2(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "FireWorks_LoadResources__Fv",
        Ok(
            "FireWorks_LoadResources(void)",
        ),
    ),
    (
        "_GLOBAL_$I$FarLapp_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to FarLapp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "ParticleSystemRender_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "MKPackage_DeinitModule__Fv",
        Ok(
            "MKPackage_DeinitModule(void)",
        ),
    ),
    (
        "LoadDone__15KingFisherField",
        Ok(
            "KingFisherField::LoadDone(void)",
        ),
    ),
    (
        "_14YabbyObjective$bActivated",
        Ok(
            "YabbyObjective::bActivated",
        ),
    ),
    (
        "Collision_Init__Fifffffii",
        Ok(
            "Collision_Init(int, float, float, float, float, float, int, int)",
        ),
    ),
    (
        "CheckForSurfaceSwimSplashes__Fv",
        Ok(
            "CheckForSurfaceSwimSplashes(void)",
        ),
    ),
    (
        "__dynamic_cast",
        Err(
            InvalidSpecialMethod(
                "dynamic_cast",
            ),
        ),
    ),
    (
        "RunToWaypoint_Update__9BadBoonie",
        Ok(
            "BadBoonie::RunToWaypoint_Update(void)",
        ),
    ),
    (
        "Bunyip_Hide__Fv",
        Ok(
            "Bunyip_Hide(void)",
        ),
    ),
    (
        "_GLOBAL_$I$Damageable_LoadResources__FP8KromeIni",
        Ok(
            "global constructors keyed to Damageable_LoadResources(KromeIni *)",
        ),
    ),
    (
        "down_interface",
        Err(
            NotMangled,
        ),
    ),
    (
        "PauseScreen_OptionSound_Init__Fv",
        Ok(
            "PauseScreen_OptionSound_Init(void)",
        ),
    ),
    (
        "Deinit__6Spider",
        Ok(
            "Spider::Deinit(void)",
        ),
    ),
    (
        "Destroy__4Font",
        Ok(
            "Font::Destroy(void)",
        ),
    ),
    (
        "_peepBit",
        Err(
            NotMangled,
        ),
    ),
    (
        "Spin__17MiniBoulderStruct",
        Ok(
            "MiniBoulderStruct::Spin(void)",
        ),
    ),
    (
        "Update__14ShadowBatValve",
        Ok(
            "ShadowBatValve::Update(void)",
        ),
    ),
    (
        "OmniLight_UpdateParameters__FP9OmniLightP19OmniLightParameters",
        Ok(
            "OmniLight_UpdateParameters(OmniLight *, OmniLightParameters *)",
        ),
    ),
    (
        "Animate__5SkinkP6MKAnim",
        Ok(
            "Skink::Animate(MKAnim *)",
        ),
    ),
    (
        "RandomVector__FP6VectorRC6VectorT1",
        Ok(
            "RandomVector(Vector *, Vector const &, Vector const &)",
        ),
    ),
    (
        "System_DestroyZRequest__FP13ZCheckRequest",
        Ok(
            "System_DestroyZRequest(ZCheckRequest *)",
        ),
    ),
    (
        "DoJeepSounds__4Jeep",
        Ok(
            "Jeep::DoJeepSounds(void)",
        ),
    ),
    (
        "__pack_d",
        Err(
            InvalidSpecialMethod(
                "pack_d",
            ),
        ),
    ),
    (
        "Attacking__8MorayEel",
        Ok(
            "MorayEel::Attacking(void)",
        ),
    ),
    (
        "Update__7Boulder",
        Ok(
            "Boulder::Update(void)",
        ),
    ),
    (
        "MatchTargetVelocity__9FrillBike",
        Ok(
            "FrillBike::MatchTargetVelocity(void)",
        ),
    ),
    (
        "LassoInit__9FrillBike",
        Ok(
            "FrillBike::LassoInit(void)",
        ),
    ),
    (
        "UsingExactCycleValues__10GameCamera",
        Ok(
            "GameCamera::UsingExactCycleValues(void)",
        ),
    ),
    (
        "UseDoomarangCamera__10GameCamerabP6VectorT2T2f",
        Ok(
            "GameCamera::UseDoomarangCamera(bool, Vector *, Vector *, Vector *, float)",
        ),
    ),
    (
        "GetHasUnplacedTalisman__8GameData",
        Ok(
            "GameData::GetHasUnplacedTalisman(void)",
        ),
    ),
    (
        "ThrowRockDeinit__10BlueTongue",
        Ok(
            "BlueTongue::ThrowRockDeinit(void)",
        ),
    ),
    (
        "_vt$8Platform",
        Ok(
            "Platform virtual table",
        ),
    ),
    (
        "DeathDeinit__8PubeCrab",
        Ok(
            "PubeCrab::DeathDeinit(void)",
        ),
    ),
    (
        "ModelRender_AS_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "AlertInit__11RhinoGround",
        Ok(
            "RhinoGround::AlertInit(void)",
        ),
    ),
    (
        "Create__9AnimationPcP6Matrix",
        Ok(
            "Animation::Create(char *, Matrix *)",
        ),
    ),
    (
        "Bilby_Update__Fv",
        Ok(
            "Bilby_Update(void)",
        ),
    ),
    (
        "vfprintf",
        Err(
            NotMangled,
        ),
    ),
    (
        "Slide__4Bull",
        Ok(
            "Bull::Slide(void)",
        ),
    ),
    (
        "LoadDone__15TurningPlatform",
        Ok(
            "TurningPlatform::LoadDone(void)",
        ),
    ),
    (
        "IceRamp_LoadResources__FP8KromeIni",
        Ok(
            "IceRamp_LoadResources(KromeIni *)",
        ),
    ),
    (
        "BasicCollisionDetection__4JeepP15CollisionResultP6Vector",
        Ok(
            "Jeep::BasicCollisionDetection(CollisionResult *, Vector *)",
        ),
    ),
    (
        "File_FileServerOutputFilename__FPc",
        Ok(
            "File_FileServerOutputFilename(char *)",
        ),
    ),
    (
        "AutoCenter_Deinit__10GameCamera",
        Ok(
            "GameCamera::AutoCenter_Deinit(void)",
        ),
    ),
    (
        "Enable__13AnimatingPropb",
        Ok(
            "AnimatingProp::Enable(bool)",
        ),
    ),
    (
        "Enable__16BoomerangManager",
        Ok(
            "BoomerangManager::Enable(void)",
        ),
    ),
    (
        "IsAnimFinished__14SpiderTrapdoor",
        Ok(
            "SpiderTrapdoor::IsAnimFinished(void)",
        ),
    ),
    (
        "IdleInit__9FrillBike",
        Ok(
            "FrillBike::IdleInit(void)",
        ),
    ),
    (
        "DrawDebugStats__10DDASession",
        Ok(
            "DDASession::DrawDebugStats(void)",
        ),
    ),
    (
        "Message__6DennisP9MKMessage",
        Ok(
            "Dennis::Message(MKMessage *)",
        ),
    ),
    (
        "_vt$19BlitterCritterField",
        Ok(
            "BlitterCritterField virtual table",
        ),
    ),
    (
        "InitIdle__14WaterSlideData",
        Ok(
            "WaterSlideData::InitIdle(void)",
        ),
    ),
    (
        "Init__9Quadratic",
        Ok(
            "Quadratic::Init(void)",
        ),
    ),
    (
        "Cross__6VectorP6Vector",
        Ok(
            "Vector::Cross(Vector *)",
        ),
    ),
    (
        "Update__11InvisiCrate",
        Ok(
            "InvisiCrate::Update(void)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z10DamageablePv",
        Ok(
            "ModuleInfo<Damageable>::ConstructObject(void *)",
        ),
    ),
    (
        "BubbleSpawner_LoadResources__FP8KromeIni",
        Ok(
            "BubbleSpawner_LoadResources(KromeIni *)",
        ),
    ),
    (
        "AddDynamicProp__14MKSceneManagerP6MKPropi",
        Ok(
            "MKSceneManager::AddDynamicProp(MKProp *, int)",
        ),
    ),
    (
        "Jump__10SnowSpider",
        Ok(
            "SnowSpider::Jump(void)",
        ),
    ),
    (
        "RunToWaypoint_Update__11ScrubTurkey",
        Ok(
            "ScrubTurkey::RunToWaypoint_Update(void)",
        ),
    ),
    (
        "Deinit__3Eel",
        Ok(
            "Eel::Deinit(void)",
        ),
    ),
    (
        "_vt$t10ModuleInfo1Z11Grasshopper",
        Ok(
            "ModuleInfo<Grasshopper> virtual table",
        ),
    ),
    (
        "Reset__10LavaBurner",
        Ok(
            "LavaBurner::Reset(void)",
        ),
    ),
    (
        "WhiteBat_LoadResources__FP8KromeIni",
        Ok(
            "WhiteBat_LoadResources(KromeIni *)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z5Ringo",
        Ok(
            "ModuleInfo<Ringo>::Init(void)",
        ),
    ),
    (
        "Magnetised__11BonusPickup",
        Ok(
            "BonusPickup::Magnetised(void)",
        ),
    ),
    (
        "Deinit__13LODDescriptor",
        Ok(
            "LODDescriptor::Deinit(void)",
        ),
    ),
    (
        "InitFired__9Doomerang",
        Ok(
            "Doomerang::InitFired(void)",
        ),
    ),
    (
        "ExitDeleteThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsName__6Parser",
        Ok(
            "Parser::IsName(void)",
        ),
    ),
    (
        "Dying__9ShadowBat",
        Ok(
            "ShadowBat::Dying(void)",
        ),
    ),
    (
        "Message__12AquarangPropP9MKMessage",
        Ok(
            "AquarangProp::Message(MKMessage *)",
        ),
    ),
    (
        "SpeedUpCrate_Deinit__Fv",
        Ok(
            "SpeedUpCrate_Deinit(void)",
        ),
    ),
    (
        "_GLOBAL_$I$pTorchPlayingSFX",
        Ok(
            "global constructors keyed to pTorchPlayingSFX",
        ),
    ),
    (
        "sceSifRpcLoop",
        Err(
            NotMangled,
        ),
    ),
    (
        "__tiv",
        Ok(
            "void type_info node",
        ),
    ),
    (
        "LennyAnimNames",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetType__11WeatherPropi",
        Ok(
            "WeatherProp::SetType(int)",
        ),
    ),
    (
        "FinishEaten__10CrikeyChum",
        Ok(
            "CrikeyChum::FinishEaten(void)",
        ),
    ),
    (
        "pathCount",
        Err(
            NotMangled,
        ),
    ),
    (
        "Bunyip_On__Fv",
        Ok(
            "Bunyip_On(void)",
        ),
    ),
    (
        "__tir",
        Ok(
            "long double type_info node",
        ),
    ),
    (
        "_ri0_100",
        Err(
            NotMangled,
        ),
    ),
    (
        "SubObjectExists__7MKWaterPcPi",
        Ok(
            "MKWater::SubObjectExists(char *, int *)",
        ),
    ),
    (
        "FadeIn__10ScreenDataii",
        Ok(
            "ScreenData::FadeIn(int, int)",
        ),
    ),
    (
        "Deactivate__9Doomerang",
        Ok(
            "Doomerang::Deactivate(void)",
        ),
    ),
    (
        "iReleaseAlarm",
        Err(
            NotMangled,
        ),
    ),
    (
        "GenerateRandomOffsetFromTy__8WhiteBat",
        Ok(
            "WhiteBat::GenerateRandomOffsetFromTy(void)",
        ),
    ),
    (
        "pSoundProgressBar",
        Err(
            NotMangled,
        ),
    ),
    (
        "Deinit__8FILOList",
        Ok(
            "FILOList::Deinit(void)",
        ),
    ),
    (
        "Video_CbNoData__FP7sceMpegP13sceMpegCbDataP5Video",
        Ok(
            "Video_CbNoData(sceMpeg *, sceMpegCbData *, Video *)",
        ),
    ),
    (
        "AddGif_AD_TEXCLUT__3DmaUlUlUl",
        Ok(
            "Dma::AddGif_AD_TEXCLUT(unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "EnableBoss__9LevelDatab",
        Ok(
            "LevelData::EnableBoss(bool)",
        ),
    ),
    (
        "AirMediumDeinit__2Ty",
        Ok(
            "Ty::AirMediumDeinit(void)",
        ),
    ),
    (
        "SetNextPoint__17CritterCruiseMoveR6Vector",
        Ok(
            "CritterCruiseMove::SetNextPoint(Vector &)",
        ),
    ),
    (
        "raise",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__17KoalaKidObjectiveP11GameObjDesc",
        Ok(
            "KoalaKidObjective::Init(GameObjDesc *)",
        ),
    ),
    (
        "MatchVelocityTo__18BezierPathFollowerP6VectorT1",
        Ok(
            "BezierPathFollower::MatchVelocityTo(Vector *, Vector *)",
        ),
    ),
    (
        "UpdateFall__7Boulder",
        Ok(
            "Boulder::UpdateFall(void)",
        ),
    ),
    (
        "SendMessage__17GameObjectManagerP9MKMessageUiP6Vectorfb",
        Ok(
            "GameObjectManager::SendMessage(MKMessage *, unsigned int, Vector *, float, bool)",
        ),
    ),
    (
        "ConstructObject__t10ModuleInfo1Z8ElevatorPv",
        Ok(
            "ModuleInfo<Elevator>::ConstructObject(void *)",
        ),
    ),
    (
        "Reset__11Collapsible",
        Ok(
            "Collapsible::Reset(void)",
        ),
    ),
    (
        "SaveStates_GetTotalGems__Fi",
        Ok(
            "SaveStates_GetTotalGems(int)",
        ),
    ),
    (
        "UpdateModule__9AuroraKid",
        Ok(
            "AuroraKid::UpdateModule(void)",
        ),
    ),
    (
        "BeginUpdate__8Platform",
        Ok(
            "Platform::BeginUpdate(void)",
        ),
    ),
    (
        "Return__5Neddy",
        Ok(
            "Neddy::Return(void)",
        ),
    ),
    (
        "Wake_LoadResources__Fv",
        Ok(
            "Wake_LoadResources(void)",
        ),
    ),
    (
        "InitIceRunToStop__2Ty",
        Ok(
            "Ty::InitIceRunToStop(void)",
        ),
    ),
    (
        "DropEggInit__11ScrubTurkey",
        Ok(
            "ScrubTurkey::DropEggInit(void)",
        ),
    ),
    (
        "FlyToHoverPosInit__9ShadowBat",
        Ok(
            "ShadowBat::FlyToHoverPosInit(void)",
        ),
    ),
    (
        "_lshift",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__14Tools_AnimDescP15Tools_AnimEntryiP12MKAnimScript",
        Ok(
            "Tools_AnimDesc::Init(Tools_AnimEntry *, int, MKAnimScript *)",
        ),
    ),
    (
        "BackOff__5Shark",
        Ok(
            "Shark::BackOff(void)",
        ),
    ),
    (
        "Init__14CameraOverrideP16CameraDescriptor",
        Ok(
            "CameraOverride::Init(CameraDescriptor *)",
        ),
    ),
    (
        "WatchDeinit__8Sentinel",
        Ok(
            "Sentinel::WatchDeinit(void)",
        ),
    ),
    (
        "MiniGame_C2_Init__15GameSubStateFSM",
        Ok(
            "GameSubStateFSM::MiniGame_C2_Init(void)",
        ),
    ),
    (
        "sceMpegSetImageBuff",
        Err(
            NotMangled,
        ),
    ),
    (
        "free",
        Err(
            NotMangled,
        ),
    ),
    (
        "Reset__17BlueTongueThrower",
        Ok(
            "BlueTongueThrower::Reset(void)",
        ),
    ),
    (
        "Draw__5Lasso",
        Ok(
            "Lasso::Draw(void)",
        ),
    ),
    (
        "_14EnemyWaypoints$waypointLoadInfo",
        Ok(
            "EnemyWaypoints::waypointLoadInfo",
        ),
    ),
    (
        "Init__6BurnerP11GameObjDesc",
        Ok(
            "Burner::Init(GameObjDesc *)",
        ),
    ),
    (
        "Particle_BiteGlow_Create__FPP14ParticleSystemf",
        Ok(
            "Particle_BiteGlow_Create(ParticleSystem **, float)",
        ),
    ),
    (
        "GetNmbrOfMatrices__5Model",
        Ok(
            "Model::GetNmbrOfMatrices(void)",
        ),
    ),
    (
        "PauseScreen_GameInfo_Init__Fv",
        Ok(
            "PauseScreen_GameInfo_Init(void)",
        ),
    ),
    (
        "SetFindItem__7BushPigP6VectorP19SpecialPickupStruct",
        Ok(
            "BushPig::SetFindItem(Vector *, SpecialPickupStruct *)",
        ),
    ),
    (
        "debugCollision",
        Err(
            NotMangled,
        ),
    ),
    (
        "IsReady__16BoomerangManager13BoomerangSide",
        Ok(
            "BoomerangManager::IsReady(BoomerangSide)",
        ),
    ),
    (
        "_kTLBRefillHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "SpawnThunderEggParticle__9BadBoonief",
        Ok(
            "BadBoonie::SpawnThunderEggParticle(float)",
        ),
    ),
    (
        "GetSpawner__12EnemySpawnerPc",
        Ok(
            "EnemySpawner::GetSpawner(char *)",
        ),
    ),
    (
        "_11ScrubTurkey$checkToIncCatchAttemps",
        Ok(
            "ScrubTurkey::checkToIncCatchAttemps",
        ),
    ),
    (
        "PantInit__5Neddy",
        Ok(
            "Neddy::PantInit(void)",
        ),
    ),
    (
        "DoThrowRangs__3Slyb",
        Ok(
            "Sly::DoThrowRangs(bool)",
        ),
    ),
    (
        "Run__11RhinoGround",
        Ok(
            "RhinoGround::Run(void)",
        ),
    ),
    (
        "Neddy_Show__Fv",
        Ok(
            "Neddy_Show(void)",
        ),
    ),
    (
        "_vt$6Cattle",
        Ok(
            "Cattle virtual table",
        ),
    ),
    (
        "Reset__11EnemyObject",
        Ok(
            "EnemyObject::Reset(void)",
        ),
    ),
    (
        "iDisableDmacHandler",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10DialogPropP11GameObjDesc",
        Ok(
            "DialogProp::Init(GameObjDesc *)",
        ),
    ),
    (
        "_Bfree",
        Err(
            NotMangled,
        ),
    ),
    (
        "gATWinMonClientData",
        Err(
            NotMangled,
        ),
    ),
    (
        "Init__10MKWaveType",
        Ok(
            "MKWaveType::Init(void)",
        ),
    ),
    (
        "Reset__6Groper",
        Ok(
            "Groper::Reset(void)",
        ),
    ),
    (
        "Init__t10ModuleInfo1Z8MorayEel",
        Ok(
            "ModuleInfo<MorayEel>::Init(void)",
        ),
    ),
    (
        "Update__8BuzzSaw2",
        Ok(
            "BuzzSaw2::Update(void)",
        ),
    ),
    (
        "sceCdSearchFile",
        Err(
            NotMangled,
        ),
    ),
    (
        "Message__11BunyipElderP9MKMessage",
        Ok(
            "BunyipElder::Message(MKMessage *)",
        ),
    ),
    (
        "UpdateShadow__8Platform",
        Ok(
            "Platform::UpdateShadow(void)",
        ),
    ),
    (
        "Waterfall_LoadResources__Fv",
        Ok(
            "Waterfall_LoadResources(void)",
        ),
    ),
    (
        "Particle_FrostyBreath_Init__FPP14ParticleSystemP6VectorP14BoundingVolume",
        Ok(
            "Particle_FrostyBreath_Init(ParticleSystem **, Vector *, BoundingVolume *)",
        ),
    ),
    (
        "__ieee754_atan2f",
        Err(
            InvalidSpecialMethod(
                "ieee754_atan2f",
            ),
        ),
    ),
    (
        "bilbyBad",
        Err(
            NotMangled,
        ),
    ),
    (
        "sceDmaGetEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "PontoonPlayerAdjust_Update__10GameCamera",
        Ok(
            "GameCamera::PontoonPlayerAdjust_Update(void)",
        ),
    ),
    (
        "Message__27CommonGameObjFlagsComponentP9MKMessage",
        Ok(
            "CommonGameObjFlagsComponent::Message(MKMessage *)",
        ),
    ),
    (
        "PauseScreen_Draw__Fv",
        Ok(
            "PauseScreen_Draw(void)",
        ),
    ),
    (
        "AddMenuItems__6CameraP15DebugOptionMenu",
        Ok(
            "Camera::AddMenuItems(DebugOptionMenu *)",
        ),
    ),
    (
        "GetPosition__6UITextP6Vector",
        Ok(
            "UIText::GetPosition(Vector *)",
        ),
    ),
    (
        "MessageFloorObject__2TyP9MKMessage",
        Ok(
            "Ty::MessageFloorObject(MKMessage *)",
        ),
    ),
    (
        "__do_global_ctors",
        Err(
            InvalidSpecialMethod(
                "do_global_ctors",
            ),
        ),
    ),
    (
        "Init__22BaseParticleSystemTypePcP8Materialfffi",
        Ok(
            "BaseParticleSystemType::Init(char *, Material *, float, float, float, int)",
        ),
    ),
    (
        "AddGif_CLAMP_1__3DmaUlUlUlUlUlUl",
        Ok(
            "Dma::AddGif_CLAMP_1(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
        ),
    ),
    (
        "SetSubObject__4Frogi",
        Ok(
            "Frog::SetSubObject(int)",
        ),
    ),
    (
        "CheckForLedge__3Rex",
        Ok(
            "Rex::CheckForLedge(void)",
        ),
    ),
    (
        "StartThread",
        Err(
            NotMangled,
        ),
    ),
    (
        "ModelRender_ACExyTX_CodeStart",
        Err(
            NotMangled,
        ),
    ),
    (
        "Animate__9FrillBikeP6MKAnimb",
        Ok(
            "FrillBike::Animate(MKAnim *, bool)",
        ),
    ),
    (
        "SetSubState__11EnemyObjecti",
        Ok(
            "EnemyObject::SetSubState(int)",
        ),
    ),
    (
        "Deinit__9Avalanche",
        Ok(
            "Avalanche::Deinit(void)",
        ),
    ),
    (
        "BiteTrail_Update__Fv",
        Ok(
            "BiteTrail_Update(void)",
        ),
    ),
    (
        "BiteTrail_Deinit__Fv",
        Ok(
            "BiteTrail_Deinit(void)",
        ),
    ),
    (
        "_23BlueTongueRockObjective$bActivated",
        Ok(
            "BlueTongueRockObjective::bActivated",
        ),
    ),
    (
        "_GLOBAL_$I$_FindLowestPipe__Ff",
        Ok(
            "global constructors keyed to _FindLowestPipe(float)",
        ),
    ),
    (
        "Init__19DialogEffectManager",
        Ok(
            "DialogEffectManager::Init(void)",
        ),
    ),
    (
        "SoundBank_GetID__FiUi",
        Ok(
            "SoundBank_GetID(int, unsigned int)",
        ),
    ),
    (
        "UWUpdate__Fv",
        Ok(
            "UWUpdate(void)",
        ),
    ),
    (
        "GameCamera_LoadSavedData__FP19CameraDebugSaveInfo",
        Ok(
            "GameCamera_LoadSavedData(CameraDebugSaveInfo *)",
        ),
    ),
    (
        "MORAY_EEL_HOLE_BAD",
        Err(
            NotMangled,
        ),
    ),
    (
        "SetBothRangs__8GameDatab",
        Ok(
            "GameData::SetBothRangs(bool)",
        ),
    ),
    (
        "CommonPostLogicChecks__2Ty",
        Ok(
            "Ty::CommonPostLogicChecks(void)",
        ),
    ),
    (
        "Video_CbStrADPCM__FP7sceMpegP16sceMpegCbDataStrP5Video",
        Ok(
            "Video_CbStrADPCM(sceMpeg *, sceMpegCbDataStr *, Video *)",
        ),
    ),
    (
        "testEnv",
        Err(
            NotMangled,
        ),
    ),
    (
        "GetID__9LevelData",
        Ok(
            "LevelData::GetID(void)",
        ),
    ),
]
